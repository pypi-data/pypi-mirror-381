# PyPI Publishing workflow - runs on GitHub releases
name: Publish to PyPI

on:
  release:
    types: [published]  # Only runs when release is published (not draft)

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.12"

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Build package
      run: python -m build

    - name: Check package
      run: twine check dist/*

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/

  publish-pypi:
    needs: build
    runs-on: ubuntu-latest
    environment: pypi
    permissions:
      id-token: write  # REQUIRED for trusted publishing
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist/

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      # No 'with' section needed - uses trusted publishing automatically!

    - name: Update Release with PyPI link
      uses: actions/github-script@v7
      with:
        script: |
          const release = context.payload.release;
          const body = release.body + `\n\nðŸ“¦ **Published to PyPI**: https://pypi.org/project/alpacon-mcp/${release.tag_name}/`;

          await github.rest.repos.updateRelease({
            owner: context.repo.owner,
            repo: context.repo.repo,
            release_id: release.id,
            body: body
          });