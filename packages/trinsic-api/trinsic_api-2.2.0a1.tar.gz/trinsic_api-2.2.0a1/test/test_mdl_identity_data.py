# coding: utf-8

"""
    Trinsic API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from trinsic_api.models.mdl_identity_data import MdlIdentityData

class TestMdlIdentityData(unittest.TestCase):
    """MdlIdentityData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MdlIdentityData:
        """Test MdlIdentityData
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MdlIdentityData`
        """
        model = MdlIdentityData()
        if include_optional:
            return MdlIdentityData(
                iaca_root_certificate = trinsic_api.models.mdl_certificate_data.MdlCertificateData(
                    serial_number = '', 
                    common_name = '', 
                    state_or_province_name = '', 
                    not_before = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    not_after = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ),
                document_signer_certificate = trinsic_api.models.mdl_certificate_data.MdlCertificateData(
                    serial_number = '', 
                    common_name = '', 
                    state_or_province_name = '', 
                    not_before = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    not_after = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ),
                name_spaces = {"org.iso.18013.5.1":{"family_name":{"type":"String","value":"DOE"},"given_name":{"type":"String","value":"JOHN"},"birth_date":{"type":"String","value":"2000-03-27"},"age_over_21":{"type":"Boolean","value":"true"}}}
            )
        else:
            return MdlIdentityData(
                iaca_root_certificate = trinsic_api.models.mdl_certificate_data.MdlCertificateData(
                    serial_number = '', 
                    common_name = '', 
                    state_or_province_name = '', 
                    not_before = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    not_after = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ),
                document_signer_certificate = trinsic_api.models.mdl_certificate_data.MdlCertificateData(
                    serial_number = '', 
                    common_name = '', 
                    state_or_province_name = '', 
                    not_before = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    not_after = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ),
                name_spaces = {"org.iso.18013.5.1":{"family_name":{"type":"String","value":"DOE"},"given_name":{"type":"String","value":"JOHN"},"birth_date":{"type":"String","value":"2000-03-27"},"age_over_21":{"type":"Boolean","value":"true"}}},
        )
        """

    def testMdlIdentityData(self):
        """Test MdlIdentityData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
