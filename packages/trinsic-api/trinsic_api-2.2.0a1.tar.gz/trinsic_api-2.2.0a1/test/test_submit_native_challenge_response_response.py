# coding: utf-8

"""
    Trinsic API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from trinsic_api.models.submit_native_challenge_response_response import SubmitNativeChallengeResponseResponse

class TestSubmitNativeChallengeResponseResponse(unittest.TestCase):
    """SubmitNativeChallengeResponseResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> SubmitNativeChallengeResponseResponse:
        """Test SubmitNativeChallengeResponseResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `SubmitNativeChallengeResponseResponse`
        """
        model = SubmitNativeChallengeResponseResponse()
        if include_optional:
            return SubmitNativeChallengeResponseResponse(
                session = trinsic_api.models.session.Session(
                    id = '678c1ff6-2178-49e7-81d2-548afb6f85ec', 
                    done = True, 
                    success = True, 
                    error_code = null, 
                    created = 1722526411, 
                    updated = 1722526722, )
            )
        else:
            return SubmitNativeChallengeResponseResponse(
                session = trinsic_api.models.session.Session(
                    id = '678c1ff6-2178-49e7-81d2-548afb6f85ec', 
                    done = True, 
                    success = True, 
                    error_code = null, 
                    created = 1722526411, 
                    updated = 1722526722, ),
        )
        """

    def testSubmitNativeChallengeResponseResponse(self):
        """Test SubmitNativeChallengeResponseResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
