# coding: utf-8

"""
    Trinsic API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from trinsic_api.models.provider_info import ProviderInfo

class TestProviderInfo(unittest.TestCase):
    """ProviderInfo unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ProviderInfo:
        """Test ProviderInfo
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ProviderInfo`
        """
        model = ProviderInfo()
        if include_optional:
            return ProviderInfo(
                id = 'yoti | clear | ...',
                name = 'Yoti | CLEAR | ...',
                logo_url = '',
                subtext = 'dmv.ca.gov',
                description = 'dmv.ca.gov',
                health = 'online | offline',
                sub_providers = [
                    trinsic_api.models.sub_provider_metadata.SubProviderMetadata(
                        id = '', 
                        name = '', 
                        subtext = 'dmv.ca.gov', 
                        description = 'dmv.ca.gov', 
                        logo_url = '', )
                    ]
            )
        else:
            return ProviderInfo(
                id = 'yoti | clear | ...',
                name = 'Yoti | CLEAR | ...',
                logo_url = '',
                subtext = 'dmv.ca.gov',
                description = 'dmv.ca.gov',
                health = 'online | offline',
        )
        """

    def testProviderInfo(self):
        """Test ProviderInfo"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
