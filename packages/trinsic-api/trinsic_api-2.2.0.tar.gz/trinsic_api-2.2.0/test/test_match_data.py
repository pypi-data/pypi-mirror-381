# coding: utf-8

"""
    Trinsic API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from trinsic_api.models.match_data import MatchData

class TestMatchData(unittest.TestCase):
    """MatchData unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MatchData:
        """Test MatchData
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MatchData`
        """
        model = MatchData()
        if include_optional:
            return MatchData(
                national_id_number = trinsic_api.models.match.Match(
                    probability_value = 1.337, 
                    boolean_value = True, ),
                full_name = trinsic_api.models.match.Match(
                    probability_value = 1.337, 
                    boolean_value = True, ),
                given_name = trinsic_api.models.match.Match(
                    probability_value = 1.337, 
                    boolean_value = True, ),
                middle_name = trinsic_api.models.match.Match(
                    probability_value = 1.337, 
                    boolean_value = True, ),
                family_name = trinsic_api.models.match.Match(
                    probability_value = 1.337, 
                    boolean_value = True, ),
                sex = trinsic_api.models.match.Match(
                    probability_value = 1.337, 
                    boolean_value = True, ),
                date_of_birth = trinsic_api.models.match.Match(
                    probability_value = 1.337, 
                    boolean_value = True, ),
                face_match = trinsic_api.models.match.Match(
                    probability_value = 1.337, 
                    boolean_value = True, ),
                liveness = trinsic_api.models.match.Match(
                    probability_value = 1.337, 
                    boolean_value = True, ),
                image_authenticity = trinsic_api.models.match.Match(
                    probability_value = 1.337, 
                    boolean_value = True, )
            )
        else:
            return MatchData(
        )
        """

    def testMatchData(self):
        """Test MatchData"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
