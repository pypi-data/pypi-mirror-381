# coding: utf-8

"""
    Trinsic API

    No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

    The version of the OpenAPI document: v1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from trinsic_api.models.provider_input import ProviderInput

class TestProviderInput(unittest.TestCase):
    """ProviderInput unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ProviderInput:
        """Test ProviderInput
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ProviderInput`
        """
        model = ProviderInput()
        if include_optional:
            return ProviderInput(
                indonesia_nik = trinsic_api.models.indonesia_nik_input.IndonesiaNikInput(
                    full_name = '0', 
                    date_of_birth = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    nik_id_number = '48072888001528021798090123456789101112131415', ),
                indonesia_dukcapil_match = trinsic_api.models.indonesia_dukcapil_match_input.IndonesiaDukcapilMatchInput(
                    full_name = '', 
                    date_of_birth = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    nik_id_number = '', 
                    email = '', 
                    phone_number = '', 
                    selfie_image = 'YQ==', 
                    document_image = 'YQ==', 
                    consent_given_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), ),
                mexico_curp = trinsic_api.models.mexico_curp_input.MexicoCurpInput(
                    curp = '01234567891011121314151617', ),
                south_africa_nid = trinsic_api.models.south_africa_nid_input.SouthAfricaNidInput(
                    full_name = '0', 
                    date_of_birth = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    gender = '0', 
                    national_id_number = '48072888001528021798090123456789101112', ),
                kenya_nid = trinsic_api.models.kenya_nid_input.KenyaNidInput(
                    first_name = '0', 
                    middle_name = '', 
                    last_name = '0', 
                    date_of_birth = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    gender = '0', 
                    national_id_number = '480728880015280217980901234567', ),
                nigeria_nin = trinsic_api.models.nigeria_nin_input.NigeriaNinInput(
                    first_name = '0', 
                    middle_name = '', 
                    last_name = '0', 
                    phone_number = '', 
                    date_of_birth = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    gender = '', 
                    national_id_number = '4807288800152802179809012345678910', ),
                aadhaar = trinsic_api.models.aadhaar_input.AadhaarInput(
                    full_name = '', 
                    date_of_birth = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), ),
                bangladesh_national_id = trinsic_api.models.bangladesh_nid_input.BangladeshNidInput(
                    national_id_number = '0123456789', 
                    date_of_birth = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), 
                    name = '0', 
                    photo_byes = 'YQ==', 
                    photo_image_mime_type = '', ),
                brazil_cpf_check = trinsic_api.models.brazil_cpf_check_input.BrazilCpfCheckInput(
                    cpf_number = '4807288800152802179809012345678910', ),
                brazil_digital_cnh = trinsic_api.models.brazil_digital_cnh_input.BrazilDigitalCnhInput(
                    cpf_number = '4807288800152802179809012345678910', 
                    digital_cnh_file = 'YQ==', 
                    digital_cnh_file_content_type = '', 
                    facial_biometry_photo = 'YQ==', ),
                philippine_match = trinsic_api.models.philippine_match_input.PhilippineMatchInput(
                    given_name = '', 
                    middle_name = '', 
                    family_name = '', 
                    suffix = '', 
                    date_of_birth = datetime.datetime.strptime('1975-12-30', '%Y-%m-%d').date(), ),
                philippine_qr = trinsic_api.models.philippine_qr_input.PhilippineQRInput(
                    qr_code_text = '', 
                    qr_code_image = 'YQ==', ),
                smart_id = trinsic_api.models.smart_id_input.SmartIdInput(
                    smart_id_document_number = '', 
                    smart_id_number = '', ),
                mobile_id = trinsic_api.models.mobile_id_input.MobileIdInput(
                    mobile_id_phone_number = '', 
                    mobile_id_national_identity_number = '', 
                    mobile_id_language = null, ),
                idin = trinsic_api.models.idin_input.IdinInput(
                    sub_provider_id = '', ),
                spid = trinsic_api.models.spid_input.SpidInput(
                    sub_provider_id = '', ),
                google_wallet = trinsic_api.models.google_wallet_input.GoogleWalletInput(
                    exchange_mechanism = null, ),
                apple_wallet = trinsic_api.models.apple_wallet_input.AppleWalletInput(
                    exchange_mechanism = null, ),
                trinsic_test_database_lookup = trinsic_api.models.trinsic_test_database_lookup_input.TrinsicTestDatabaseLookupInput(
                    given_name = '', 
                    family_name = '', 
                    identity_code = '', 
                    selfie_base64 = '', ),
                trinsic_test_sub_providers = trinsic_api.models.trinsic_test_sub_providers_input.TrinsicTestSubProvidersInput(
                    sub_provider_id = '', )
            )
        else:
            return ProviderInput(
        )
        """

    def testProviderInput(self):
        """Test ProviderInput"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
