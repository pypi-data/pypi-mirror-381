# Documentation
*.fig
*.pstex*
docs/**/*.tex
docs/contrib/static/
docs/**/*.rst
docs/**/*.PDF
# Image  files of this specific length do not need to be
# checked in
docs/static/????????????????????????????????????????.png
docs/api/
doc/
out/
build
bin
ci/
src/emme/data
src/emme/seismic
CMakeUserPresets.json

# Editor
.vscode/
*.swp

# C extensions
*.out
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
*.whl
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# PyInstaller
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask:
instance/
.webassets-cache

# Scrapy:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# celery beat schedule file
celerybeat-schedule

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/
*.pyc
*.pyc



zeros/
zeros.txt
wheelhouse/
plantuml-images

archive/
# Prerequisites
*.d

# old text editor files
*~

# Compiled Object files
*.slo
*.lo
*.o
*.obj

# Precompiled Headers
*.gch
*.pch

# Compiled Dynamic libraries
*.so*
*.dylib
*.dll
*.pyd

# Fortran module files
*.mod
*.smod

# Compiled Static libraries
*.lai
*.la
*.a
*.lib

# Executables
*.out
*.app

# Visual Studio
*.vcxproj.user
*.bsc
*.pdb
.vs
obj
*.exp
out/

# CLion
.idea
.dropbox.attr

# VSCode
.vscode
.clang-format

# OTHER
Makefile.def
PlainConcrete.f
forumat.f
Damage2p.cpp
Damage2p.h
Damage2p3D.cpp
Damage2p3D.h
Damage2pThanh.tar
Damage2ppstress.cpp
Damage2ppstress.h
Faria1998.cpp
Faria1998.h
Faria1998PlaneStrain.cpp
Faria1998PlaneStrain.h
Faria1998PlaneStress.cpp
Faria1998PlaneStress.h
Faria1998PlaneStress2d.cpp
Faria1998PlaneStress2d.h
Faria1998ThreeDimensional.cpp
Faria1998ThreeDimensional.h
SRC/interpreter/pythonInterpreter
SRC/interpreter/tclInterpreter
SRC/interpreter/openseespy
SRC/interpreter/openseestcl
filip
PML
CPlaneStrain.h
CPlaneStress.h
CPlaneStress2d.h
CThreeDimensional.h
Concrete.h
forumat.for
