[project]
name = "deriva-ml"
dynamic = ["version"]
authors = [
    { name = "ISRD", email = "isrd-dev@isi.edu" },
]
description = "Utilities to simplify use of Dervia and Pandas to create reproducable ML pipelines"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "bump-my-version",
    "bdbag",
    "deriva~=1.7.10",
    "deepdiff",
    "nbconvert",
    "pandas",
    "regex~=2024.7.24",
    "pydantic>=2.11",
    "semver>3.0.0",
    "setuptools>=64",
    "setuptools-scm>=8.0",
    "nbstripout",
    "papermill",
    "pandas-stubs==2.2.3.250527",
    "pyyaml"
]

[project.scripts]
deriva-ml-table-comments-utils = "deriva_ml.schema_setup.table_comments_utils:main"
deriva-ml-create-schema = "deriva_ml.schema_setup.create_schema:main"
deriva-ml-alter-annotation = "deriva_ml.schema_setup.alter_annotation:main"
deriva-ml-run-notebook = "deriva_ml.run_notebook:main"
deriva-ml-install-kernel = "deriva_ml.install_kernel:main"
bump-version = "deriva_ml.bump_version:main"

deriva-ml-check-catalog-schema = "deriva_ml.schema.check_schema:main"

[project.optional-dependencies]

[build-system]
requires = ["setuptools>=45", "setuptools_scm[toml]>=6.2", "wheel"]
build-backend = "setuptools.build_meta"

[tool.uv]

[tool.uv.sources]
#bdbag = {git = "https://github.com/fair-research/bdbag", branch = "master" }
#deriva = {git = "https://github.com/informatics-isi-edu/deriva-py", branch = "master" }


[tool.setuptools.package-data]
deriva_ml = ["schema/*.json"]

[tool.setuptools_scm]
version_scheme = "post-release"

[tool.bumpversion]
parse = "(?P<major>\\d+)\\.(?P<minor>\\d+)\\.(?P<patch>\\d+)"
serialize = ["{major}.{minor}.{patch}"]
search = "{current_version}"
replace = "{new_version}"
regex = false
ignore_missing_version = false
ignore_missing_files = false
tag = true
sign_tags = false
tag_name = "v{new_version}"
tag_message = "Bump version: {current_version} → {new_version}"
allow_dirty = false
commit = false
message = "Bump version: {current_version} → {new_version}"
moveable_tags = []
commit_args = ""
setup_hooks = []
pre_commit_hooks = []
post_commit_hooks = []

[tool.pytest]
mock_use_standalone_module = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
#addopts = "-v --cov=deriva_ml --cov-report=term-missing  --import-mode=importlib"
addopts = "-v  --import-mode=importlib"


[tool.ruff]
line-length = 120
target-version = "py310"
lint.select = ["E", "F", "I", "PTH"]
lint.ignore = []

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

[tool.ruff.isort]
known-first-party = ["deriva_ml"]

[metadata]
license = "Apache 2.0"
keywords = ["deriva-ml"]

[dependency-groups]
dev = [
    "icecream>=2.1.4",
    "ipykernel",
    "jupyter>=1.1.1",
    "mkdocs-jupyter",
    "mkdocstrings[python]",
    "mkdocs-material",
    "pytest>=8.4.1",
    "pytest-mock",
    "pytest-coverage>=0.0",
    "ruff"
]
lint = [
    "ruff>=0.12.0",
]
