---
name: constitution
description: "Create and manage project governing principles and development guidelines. Establishes the project constitution as a foundational governance document."
ai_assistant: "{{ ai_assistant }}"
command_prefix: "{{ assistant_command_prefix if assistant_command_prefix else '' }}"
---

Create and manage the project constitution that establishes governing principles and development guidelines.

This command creates the foundational governance document for your SpecifyX project.

Given the constitution details provided as an argument, do this:

1. Run `specifyx run setup-constitution --json` (or `uvx specifyx run setup-constitution --json` if specifyx not found) from repo root to check for existing constitution and get project context. Parse JSON output for CONSTITUTION_FILE, PROJECT_NAME, EXISTING_CONSTITUTION, and PROJECT_CONTEXT.

   **Troubleshooting:**
   - Check current constitution status: `specifyx run setup-constitution check --json`
   - If command is unclear: `specifyx run setup-constitution --help`
   - Constitution file is typically located at `.specify/memory/constitution.md`

2. **If EXISTING_CONSTITUTION is true**: Review the existing constitution file and determine if updates are needed based on the provided arguments. Consider:
   - Whether new principles need to be added
   - If existing principles need modification
   - Whether development guidelines require updates
   - If decision framework needs enhancement

3. **If EXISTING_CONSTITUTION is false**: Create a new constitution file with the following structure:

   ```markdown
   # {{ PROJECT_NAME }} Constitution
   <!-- Generated by SpecifyX for {{ ai_assistant }} workflow -->

   ## Core Principles

   ### I. [First Principle Name]
   [Principle description and guidelines]

   ### II. [Second Principle Name]
   [Principle description and guidelines]

   ### III. [Third Principle Name]
   [Principle description and guidelines]

   ## Development Workflow

   ### [Workflow Section 1]
   [Workflow guidelines and standards]

   ### [Workflow Section 2]
   [Workflow guidelines and standards]

   ## Technology Standards

   ### [Technology Section 1]
   [Technical standards and requirements]

   ### [Technology Section 2]
   [Technical standards and requirements]

   ## Governance

   [Governance rules and amendment procedures]

   **Version**: 1.0.0 | **Ratified**: [DATE] | **Generated by**: SpecifyX {{ ai_assistant }} template
   ```

4. **Core Principles to Include** (customize based on arguments):
   - **Spec-Driven Development**: Feature lifecycle and specification requirements
   - **Template-Based Consistency**: Standardized templates and documentation
   - **Test-First Implementation**: TDD methodology and quality gates
   - **AI Assistant Integration**: Assistant-specific workflow optimizations
   - **Cross-Platform Compatibility**: Python-first implementation approach

5. **Development Workflow Standards**:
   - Branch naming conventions and patterns
   - File organization and directory structure
   - Quality gates and validation requirements
   - Code review and approval processes

6. **Technology Standards**:
   - Template processing requirements (Jinja2)
   - Script implementation standards (Python 3.11+)
   - Configuration management (TOML format)
   - Integration patterns and dependencies

7. **Governance Framework**:
   - Constitutional authority and precedence
   - Amendment procedures and approval process
   - Project-specific override mechanisms
   - Compliance and enforcement guidelines

8. **Integration with Existing Guidelines**:
   - Ensure constitution does not conflict with existing project guidelines
   - Reference existing documentation where appropriate
   - Maintain consistency with `.specify/config.toml` settings
   - Integrate with current AI assistant workflow preferences

9. **Validation and Finalization**:
   - Verify constitution file is properly formatted
   - Check that all sections are complete and actionable
   - Ensure principles are non-contradictory
   - Validate integration with existing project structure

10. Report completion with constitution file path, key principles established, and integration status with existing project guidelines.

**Constitution Purpose:**
The constitution serves as the foundational governance document that:
- Establishes non-negotiable development principles
- Defines workflow standards and quality gates
- Provides decision-making frameworks
- Ensures consistency across all project activities
- Integrates AI assistant capabilities into development processes

**Next Steps After Constitution:**
- Reference constitution principles in all feature specifications
- Use constitution guidelines during planning and implementation
- Ensure all generated templates comply with constitutional requirements
- Update constitution when project needs evolve

{% if assistant_workflow_integration -%}

**{{ ai_assistant | title }} Integration:**
{{ assistant_workflow_integration }}
{% endif %}

{% if assistant_setup_instructions -%}

**Setup Requirements:**
{{ assistant_setup_instructions }}
{% endif %}

{% if assistant_command_prefix -%}

**Command Prefix:** `{{ assistant_command_prefix }}`
{% endif %}