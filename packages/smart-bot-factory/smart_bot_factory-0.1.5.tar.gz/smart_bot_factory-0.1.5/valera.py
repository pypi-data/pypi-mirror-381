#!/usr/bin/env python3
"""
–ë–æ—Ç valera - —Å–æ–∑–¥–∞–Ω —Å –ø–æ–º–æ—â—å—é Smart Bot Factory
"""

import asyncio

from smart_bot_factory.core import Router
from smart_bot_factory.core import send_message_by_human
from smart_bot_factory.clients import supabase_client
from smart_bot_factory.creation import BotBuilder

# –°–æ–∑–¥–∞–µ–º —Ä–æ—É—Ç–µ—Ä –¥–ª—è –≤—Å–µ—Ö –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
router = Router("valera_handlers")

# =============================================================================
# –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò –°–û–ë–´–¢–ò–ô
# =============================================================================

@router.event_handler("example_event")
async def handle_example_event(user_id: int, event_data: str):
    """–ü—Ä–∏–º–µ—Ä –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ —Å–æ–±—ã—Ç–∏—è"""
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
    await send_message_by_human(
        user_id=user_id,
        message_text=f"‚úÖ –°–æ–±—ã—Ç–∏–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ! –î–∞–Ω–Ω—ã–µ: {event_data}"
    )
    
    return {
        "status": "success",
        "message": "–°–æ–±—ã—Ç–∏–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ"
    }

# =============================================================================
# –í–†–ï–ú–ï–ù–ù–´–ï –ó–ê–î–ê–ß–ò –î–õ–Ø –û–î–ù–û–ì–û –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø
# =============================================================================

@router.schedule_task("send_reminder")
async def send_user_reminder(user_id: int, reminder_text: str):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é"""
    await send_message_by_human(
        user_id=user_id,
        message_text=f"üîî –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ: {reminder_text}"
    )
    
    return {
        "status": "reminder_sent",
        "message": f"–ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}"
    }

# =============================================================================
# –ì–õ–û–ë–ê–õ–¨–ù–´–ï –û–ë–†–ê–ë–û–¢–ß–ò–ö–ò (–¥–ª—è –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π)
# =============================================================================

@router.global_handler("mass_notification", notify=True)
async def send_global_announcement(announcement_text: str):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –∞–Ω–æ–Ω—Å –≤—Å–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º –±–æ—Ç–∞"""
    import logging
    logger = logging.getLogger(__name__)
    
    logger.info(f"üöÄ –ù–∞—á–∏–Ω–∞–µ–º –≥–ª–æ–±–∞–ª—å–Ω—É—é —Ä–∞—Å—Å—ã–ª–∫—É: '{announcement_text[:50]}...'")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –∫–ª–∏–µ–Ω—Ç–∞
    if not supabase_client:
        logger.error("‚ùå Supabase –∫–ª–∏–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω –¥–ª—è –≥–ª–æ–±–∞–ª—å–Ω–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏")
        return {"status": "error", "message": "Supabase –∫–ª–∏–µ–Ω—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω"}
    
    try:
        # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –∏–∑ –ë–î —Å —É—á–µ—Ç–æ–º bot_id (–∏–∑–æ–ª—è—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö)
        users_response = supabase_client.client.table('sales_users').select(
            'telegram_id'
        ).eq('bot_id', supabase_client.bot_id).execute()
        
        if not users_response.data:
            logger.warning("‚ö†Ô∏è –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã –¥–ª—è –≥–ª–æ–±–∞–ª—å–Ω–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏")
            return {"status": "no_users", "message": "–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"}
        
        total_users = len(users_response.data)
        logger.info(f"üë• –ù–∞–π–¥–µ–Ω–æ {total_users} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–∞–∂–¥–æ–º—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
        sent_count = 0
        failed_count = 0
        
        for user in users_response.data:
            try:
                await send_message_by_human(
                    user_id=user['telegram_id'],
                    message_text=f"üì¢ {announcement_text}"
                )
                sent_count += 1
                # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –æ—Ç–ø—Ä–∞–≤–∫–∞–º–∏
                await asyncio.sleep(0.1)
                
            except Exception as e:
                logger.error(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user['telegram_id']}: {e}")
                failed_count += 1
        
        return {
            "status": "completed",
            "sent_count": sent_count,
            "failed_count": failed_count,
            "total_users": total_users,
            "message": f"–†–∞—Å—Å—ã–ª–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞: {sent_count} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ, {failed_count} –æ—à–∏–±–æ–∫"
        }
        
    except Exception as e:
        logger.error(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≥–ª–æ–±–∞–ª—å–Ω–æ–π —Ä–∞—Å—Å—ã–ª–∫–∏: {e}")
        return {"status": "error", "message": str(e)}

# =============================================================================
# –û–°–ù–û–í–ù–ê–Ø –§–£–ù–ö–¶–ò–Ø
# =============================================================================

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞"""
    try:
        # –°–æ–∑–¥–∞–µ–º –∏ —Å–æ–±–∏—Ä–∞–µ–º –±–æ—Ç–∞
        bot_builder = BotBuilder("valera")
        
        # –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º —Ä–æ—É—Ç–µ—Ä –ü–ï–†–ï–î —Å–±–æ—Ä–∫–æ–π, —á—Ç–æ–±—ã –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –±—ã–ª–∏ –¥–æ—Å—Ç—É–ø–Ω—ã
        bot_builder.register_router(router)
        
        await bot_builder.build()
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
        await bot_builder.start()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞: {e}")
        raise

if __name__ == "__main__":
    asyncio.run(main())
