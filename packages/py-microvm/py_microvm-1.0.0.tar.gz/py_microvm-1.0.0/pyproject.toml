[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "py-microvm"
version = "1.0.0"
description = "Lightweight Python client for MicroVM Sandbox with enterprise security"
readme = "README.md"
license = "MIT"
authors = [{name = "CodeDuet MicroVM Sandbox Team", email = "support@microvm-sandbox.dev"}]
maintainers = [{name = "CodeDuet MicroVM Sandbox Team", email = "support@microvm-sandbox.dev"}]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Systems Administration",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10", 
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Framework :: AsyncIO",
    "Operating System :: OS Independent",
    "Environment :: Console",
    "Typing :: Typed",
]
requires-python = ">=3.9"
dependencies = [
    "httpx>=0.25.0,<0.26.0",
    "pydantic>=2.4.0,<3.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "mypy>=1.5.0",
    "ruff>=0.1.0",
    "bandit>=1.7.0",
    "safety>=2.3.0",
]

[project.urls]
Homepage = "https://github.com/microvm-sandbox/py-microvm"
Documentation = "https://microvm-sandbox.dev/docs/sdk" 
Repository = "https://github.com/microvm-sandbox/py-microvm"
Changelog = "https://github.com/microvm-sandbox/py-microvm/blob/main/CHANGELOG.md"
"Bug Tracker" = "https://github.com/microvm-sandbox/py-microvm/issues"

[tool.hatch.build.targets.wheel]
packages = ["src/microvm_client"]

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
strict_equality = true

[tool.ruff]
target-version = "py39"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "S",  # flake8-bandit
]
ignore = [
    "S101", # Use of assert
]

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
markers = [
    "security: marks tests as security tests",
    "integration: marks tests as integration tests",
]
asyncio_mode = "auto"

[tool.coverage.run]
source = ["src"]
omit = ["tests/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
]