{
  "schema": 1,
  "id": 13023,
  "title": "Feature Discovery & Planning (Phase 1)",
  "style": "LLM",
  "placeholders": [
    {
      "name": "feature_context",
      "label": "Optional: Specific feature folder (e.g. '00_test_feature'). Leave empty for auto-discovery.",
      "multiline": false,
      "required": false,
      "default": ""
    }
  ],
  "template": [
    "# Feature Discovery & Planning Workflow - Phase 1",
    "",
    "# ⚠️ CONTEXT INSTRUCTIONS FOR AI AGENT",
    "",
    "**CRITICAL**: Do NOT search @workspace at the start of this workflow.",
    "",
    "Searching @workspace prematurely will pollute your context with irrelevant files, feature specs, and code. This document contains structured instructions with explicit steps that tell you WHEN to search.",
    "",
    "**When you need workspace context**: Specific steps below will say \"Search @workspace for X\". Only search at those explicit checkpoints.",
    "",
    "---",
    "",
    "**Your Task**: Discover the next feature, analyze it, assess risks, generate approval spec, and **create a state file**.",
    "",
    "**Output Goal**: State file at `~/.prompt-automation/workflow-state/{feature_id}_phase1.json`",
    "",
    "---",
    "",
    "## Context",
    "",
    "- **Phase 1** (NOW): Discovery → Analysis → Risks → Approval → State File",
    "- **Phase 2** (NEXT): Implementation using state file context",
    "- **Phase 3** (FINAL): Archive + documentation updates",
    "",
    "**Input**: `{{feature_context}}`",
    "- If provided → analyze that specific feature",
    "- If empty → auto-discover next feature",
    "",
    "**Constraints**:",
    "- Follow AGENTS.md (≤400 LOC/file, ≤75 LOC/function, ≥85% coverage, TDD)",
    "- Feature flags default OFF",
    "- No breaking changes without approval",
    "",
    "---",
    "",
    "## Step 1: Discover Feature",
    "",
    "**Search** `@workspace` for features:",
    "",
    "1. **Location**: `docs/agentic_feature_implementation/`",
    "2. **Pattern**: `{NN}_{feature_name}/feature_spec.md`",
    "3. **Exclude**: `_archive/` folder",
    "",
    "**Selection Logic**:",
    "- If `{{feature_context}}` provided → use that folder",
    "- Else → find folders NOT in `_archive/`, pick by:",
    "  - Lowest folder number with met dependencies",
    "  - OR most recently modified (fallback)",
    "",
    "**Read** the `feature_spec.md` and extract:",
    "- Feature ID (from metadata)",
    "- Title",
    "- Dependencies (check if each exists in `_archive/`)",
    "",
    "**Output**:",
    "",
    "```markdown",
    "## Discovery Results",
    "",
    "**Selected Feature**: `{NN}_{feature_name}`",
    "**Title**: {title}",
    "**Path**: `docs/agentic_feature_implementation/{NN}_{feature_name}/feature_spec.md`",
    "**Dependencies**: ",
    "  - {dep1}: ✅ implemented (in _archive/)",
    "  - {dep2}: ❌ missing (blocks implementation)",
    "**Status**: {READY or BLOCKED}",
    "",
    "**Proceed with this feature?** (Y/n)",
    "```",
    "",
    "**⏸️ STOP**: Wait for user confirmation before continuing to Step 2.",
    "",
    "---",
    "",
    "## Step 2: Extract Definition of Done",
    "",
    "**Read** the complete `feature_spec.md` and extract:",
    "",
    "1. **Acceptance Criteria** (from spec)",
    "2. **Files to Create** (from Implementation Plan)",
    "3. **Files to Modify** (from Implementation Plan)",
    "4. **Documentation to Update** (from spec)",
    "",
    "**Derive DoD**:",
    "- Map each acceptance criterion → test case",
    "- Add standard checks (coverage ≥85%, existing tests pass, docs updated)",
    "",
    "**Output**:",
    "",
    "```markdown",
    "## Scope & Definition of Done",
    "",
    "**Purpose**: {1-2 sentence summary}",
    "",
    "**Deliverables**:",
    "- Create: `{file1.py}` - {purpose}",
    "- Modify: `{file2.py}` - {changes}",
    "- Update: `README.md`, `CHANGELOG.md`",
    "",
    "**Definition of Done**:",
    "- [ ] {Acceptance criterion 1} → Test: `tests/{path}/test_{name}.py::{test_fn}`",
    "- [ ] {Acceptance criterion 2} → Test: `tests/{path}/test_{name}.py::{test_fn}`",
    "- [ ] Coverage ≥85% for new modules",
    "- [ ] All existing tests pass",
    "- [ ] Documentation updated",
    "- [ ] Feature flag implemented (default OFF)",
    "",
    "**Non-Goals** (Out of Scope):",
    "- {Item 1}",
    "- {Item 2}",
    "```",
    "",
    "---",
    "",
    "## Step 3: Assess Risks",
    "",
    "**Analyze** impact:",
    "",
    "1. **Public API changes?** → HIGH RISK",
    "2. **Core flow changes?** → HIGH RISK  ",
    "3. **New dependencies?** → MEDIUM RISK",
    "4. **Data/schema changes?** → MEDIUM RISK",
    "",
    "**Check** spec for \"Critical Questions & Risks\" section.",
    "",
    "**Output**:",
    "",
    "```markdown",
    "## Risk Assessment",
    "",
    "**Risk Level**: {HIGH / MEDIUM / LOW}",
    "",
    "**High Risks**:",
    "1. {Risk title}",
    "   - Issue: {description}",
    "   - Impact: {what breaks}",
    "   - Mitigation: {specific action}",
    "",
    "**Medium Risks**:",
    "{same format}",
    "",
    "**Unknowns**:",
    "- {Question} → Assume: {assumption} → Validate: {how}",
    "```",
    "",
    "---",
    "",
    "## Step 4: Generate Approval Spec",
    "",
    "**Summarize** Steps 2-3 for stakeholder review.",
    "",
    "**Output**:",
    "",
    "```markdown",
    "## Approval Spec",
    "",
    "**Feature**: {title}",
    "**Estimated Effort**: {hours from spec}",
    "**Risk Level**: {HIGH/MEDIUM/LOW}",
    "",
    "**Summary**: {2-3 sentences describing what will change}",
    "",
    "**Impact**:",
    "- Files: {N files created, M modified}",
    "- Public APIs: {yes/no - details}",
    "- Dependencies: {yes/no - list}",
    "- Breaking changes: {yes/no - details}",
    "",
    "**High-Risk Items**: {list from Step 3}",
    "",
    "---",
    "",
    "**Approval Options**:",
    "",
    "1. **Approve - Direct Implementation** (Phase 2a)",
    "   - AI implements code using TDD",
    "   - Timeline: {estimate}",
    "   - Next: Run Phase 2a (Template 13024)",
    "",
    "2. **Approve - Generate Meta-Prompt** (Phase 2b)",
    "   - AI generates implementation guide",
    "   - You implement manually or with external LLM",
    "   - Next: Run Phase 2b (Template 13016)",
    "",
    "3. **Request Changes**",
    "   - Specify edits → regenerate this approval spec",
    "",
    "4. **Defer Feature**",
    "   - Move to `_archive/deferred/`",
    "",
    "**Your decision**: {1, 2, 3, or 4}",
    "```",
    "",
    "**⏸️ STOP HERE - BRANCH DECISION REQUIRED**",
    "",
    "Wait for user's approval decision. If they choose Option 1 or 2, proceed to Step 5 to create the state file.",
    "",
    "---",
    "",
    "## Step 5: Create State File",
    "",
    "**After approval**, create the state file for Phase 2 handoff.",
    "",
    "**File Path**: `~/.prompt-automation/workflow-state/{feature_id}_phase1.json`",
    "",
    "**JSON Structure**:",
    "",
    "```json",
    "{",
    "  \"phase\": 1,",
    "  \"feature_id\": \"{feature_id_from_spec}\",",
    "  \"feature_folder\": \"{NN}_{feature_name}\",",
    "  \"feature_title\": \"{title}\",",
    "  \"spec_path\": \"docs/agentic_feature_implementation/{NN}_{feature_name}/feature_spec.md\",",
    "  \"timestamp\": \"{ISO 8601 timestamp}\",",
    "  \"approval_decision\": {1 or 2},",
    "  \"scope\": {",
    "    \"purpose\": \"{brief summary}\",",
    "    \"files_to_create\": [\"{file1}\", \"{file2}\"],",
    "    \"files_to_modify\": [",
    "      {\"path\": \"{file}\", \"changes\": \"{description}\"}",
    "    ],",
    "    \"docs_to_update\": [\"README.md\", \"CHANGELOG.md\"]",
    "  },",
    "  \"dod\": [",
    "    {\"criterion\": \"{description}\", \"test\": \"{test_path}\", \"met\": false}",
    "  ],",
    "  \"risks\": {",
    "    \"level\": \"{HIGH/MEDIUM/LOW}\",",
    "    \"high\": [{\"title\": \"...\", \"mitigation\": \"...\"}],",
    "    \"medium\": [],",
    "    \"unknowns\": []",
    "  },",
    "  \"estimate_hours\": {N}",
    "}",
    "```",
    "",
    "**ACTION**: Use a tool or write command to create this file.",
    "",
    "**Confirmation**:",
    "",
    "```markdown",
    "## ✅ Phase 1 Complete",
    "",
    "**State File Created**: `~/.prompt-automation/workflow-state/{feature_id}_phase1.json`",
    "",
    "**Next Steps - BRANCH DECISION**:",
    "",
    "You chose: **Option {1 or 2}**",
    "",
    "### Path A: Direct AI Implementation (Template 13024)",
    "",
    "AI will implement using TDD cycle. Run:",
    "",
    "```bash",
    "# Generate Phase 2a instructions",
    "./scripts/feature_workflow_copilot.sh --phase 2 {feature_id}",
    "",
    "# OR directly with prompt-automation CLI",
    "prompt-automation --template 13024 --var \"feature_id={feature_id}\"",
    "```",
    "",
    "### Path B: Meta-Prompt Generation (Template 13016)",
    "",
    "AI generates detailed guide, you implement manually. Run:",
    "",
    "```bash",
    "prompt-automation --template 13016 --var \"feature_id={feature_id}\"",
    "```",
    "",
    "**⚠️ STOP HERE**: Choose your path (A or B) and run the appropriate command above.",
    "```",
    "",
    "---",
    "",
    "## Quality Checklist",
    "",
    "Before finalizing, verify:",
    "- [ ] Feature discovered and dependencies validated",
    "- [ ] DoD is measurable (each criterion has a test)",
    "- [ ] All HIGH and MEDIUM risks have mitigations",
    "- [ ] Approval spec is concise (<500 words)",
    "- [ ] State file JSON is valid and complete",
    "- [ ] User has confirmed approval decision"
  ],
  "metadata": {
    "path": "LLM/Code/Feature/feature_discovery_planner.json",
    "tags": ["feature", "planning", "discovery", "workflow", "phase1"],
    "version": 2.0,
    "render": "markdown",
    "share_this_file_openly": true,
    "last_edited": "2025-10-02T00:00:00Z",
    "workflow_phase": 1,
    "depends_on_templates": [],
    "produces_state_for": [13024, 13016]
  }
}
