"""
    EMIL Tenant Service

    The EMIL TenantService API description  # noqa: E501

    The version of the OpenAPI document: 1.0
    Contact: kontakt@emil.de
    Generated by: https://openapi-generator.tech
"""


import unittest

import eis.tenant
from eis.tenant.api.dashboard_api import DashboardApi  # noqa: E501


class TestDashboardApi(unittest.TestCase):
    """DashboardApi unit test stubs"""

    def setUp(self):
        self.api = DashboardApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_create_dashboard(self):
        """Test case for create_dashboard

        Creates a new dashboard  # noqa: E501
        """
        pass

    def test_create_dashboard_legacy(self):
        """Test case for create_dashboard_legacy

        Creates a new dashboard (DEPRECATED)  # noqa: E501
        """
        pass

    def test_delete_dashboard(self):
        """Test case for delete_dashboard

        Deletes an existing dashboard  # noqa: E501
        """
        pass

    def test_duplicate_dashboard(self):
        """Test case for duplicate_dashboard

        Creates a duplicate of an existing dashboard  # noqa: E501
        """
        pass

    def test_get_analysis_embedded_url(self):
        """Test case for get_analysis_embedded_url

        Generates an embedded URL for dashboard editing  # noqa: E501
        """
        pass

    def test_get_dashboard(self):
        """Test case for get_dashboard

        Retrieves a specific dashboard  # noqa: E501
        """
        pass

    def test_get_dashboard_embedded_url(self):
        """Test case for get_dashboard_embedded_url

        Generates an embedded URL for dashboard viewing  # noqa: E501
        """
        pass

    def test_list_dashboards(self):
        """Test case for list_dashboards

        Retrieves a list of dashboards  # noqa: E501
        """
        pass

    def test_publish_dashboard(self):
        """Test case for publish_dashboard

        Publishes a dashboard for general access  # noqa: E501
        """
        pass

    def test_revert_analysis(self):
        """Test case for revert_analysis

        Reverts dashboard analysis to previous state  # noqa: E501
        """
        pass

    def test_update_dashboard(self):
        """Test case for update_dashboard

        Updates an existing dashboard  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
