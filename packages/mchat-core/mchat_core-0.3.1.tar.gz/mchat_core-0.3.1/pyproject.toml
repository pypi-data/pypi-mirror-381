[project]
dependencies = [
    "autogen-core>=0.7.5",
    "autogen-agentchat>=0.7.5",
    "autogen-ext[azure,mcp,openai]>=0.7.5",
    "dynaconf>=3.2.11",
    "playwright>=1.52.0",
    "pyyaml>=6.0.2",
    "rich>=14.0.0",
    # needed for gpt-5, remove once autogen gets updated
    "tiktoken>=0.11.0",
    "aiohttp>=3.12.15",
]
name = "mchat-core"
version = "0.3.1"
description = "Framework for building multi-agent chat applications with autogen"
authors = [{ name = "jspv", email = "jspvgithub@twinleaf.xyz" }]
readme = "README.md"
requires-python = ">=3.11"
keywords = ["llm", "agents", "autogen", "chat", "tools"]

classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Operating System :: OS Independent",
]

license = { text = "MIT" }

[project.urls]
Homepage = "https://github.com/jspv/mchat_core"
Repository = "https://github.com/jspv/mchat_core"
Issues = "https://github.com/jspv/mchat_core/issues"

# >>> pip / PyPI extras (PEP 621) <<<
[project.optional-dependencies]
dev = [
    "pytest>=8.4.0",
    "pytest-asyncio>=1.0.0",
    "pytest-forked>=1.6.0",
    "mypy>=1.11.2",
    "ruff>=0.8.4",
    "toml>=0.10.2",
    "ipykernel>=6.30.1",
]
tools = [
    "bs4>=0.0.2",
    "chromadb>=1.0.12",
    "fredapi>=0.5.2",
    "pypdf>=5.6.0",
    "tzlocal>=5.3.1",
]

[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"


[dependency-groups]
dev = [
    "pytest>=8.4.0",
    "pytest-asyncio>=1.0.0",
    "pytest-forked>=1.6.0",
    "mypy>=1.11.2",
    "ruff>=0.8.4",
    "toml>=0.10.2",
]
tools = [
    "bs4>=0.0.2",
    "chromadb>=1.0.12",
    "fredapi>=0.5.2",
    "pypdf>=5.6.0",
    "tzlocal>=5.3.1",
]

[tool.uv]


[tool.setuptools]
packages = ["mchat_core", "mchat_core.tools"]

[tool.pytest.ini_options]
asyncio_mode = "strict"
asyncio_default_fixture_loop_scope = "function"
asyncio_default_test_loop_scope = "function"
markers = [
    "tools: tests that require optional tool dependencies",
    "integration: slow/integration tests",
]

[tool.ruff]
line-length = 88
indent-width = 4
fix = true
target-version = "py310"
exclude = ["tests", "docs", "build", "dist", ".venv", ".vscode", ".git"]


[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
# select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

select = ["E", "F", "W", "B", "Q", "I", "ASYNC", "T20", "UP"]
# ignore = ["F401", "E501"]

[tool.ruff.lint.flake8-tidy-imports]
[tool.ruff.lint.flake8-tidy-imports.banned-api]
"unittest".msg = "Use `pytest` instead."

[tool.mypy]
python_version = "3.11"
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_return_any = true
warn_unreachable = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
no_site_packages = true
exclude = ["^tests/", "^docs/", "^build/", "^dist/", "^\\.venv/"]
