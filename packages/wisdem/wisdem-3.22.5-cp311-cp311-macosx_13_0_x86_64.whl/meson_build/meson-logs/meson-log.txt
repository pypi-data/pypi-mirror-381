Build started at 2025-10-02T22:20:35.377201
Main binary: /private/var/folders/vk/nx37ffx50hv5djclhltc26vw0000gn/T/cibw-run-ezmlygx7/cp311-macosx_x86_64/build/venv/bin/python
Build Options: -Dpython.purelibdir=. -Dpython.platlibdir=. -Dprefix=/Users/runner/work/WISDEM/WISDEM/meson_build
Python system: Darwin
The Meson build system
Version: 1.9.1
Source dir: /Users/runner/work/WISDEM/WISDEM
Build dir: /Users/runner/work/WISDEM/WISDEM/meson_build
Build type: native build
Project name: wisdem
Project version: undefined
-----------
Detecting compiler via: `clang --version` -> 0
stdout:
Apple clang version 15.0.0 (clang-1500.1.0.2.5)
Target: x86_64-apple-darwin22.6.0
Thread model: posix
InstalledDir: /Applications/Xcode_15.2.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin
-----------
Running command: -x c -E -dM -
-----
-----------
Detecting linker via: `clang -Wl,--version` -> 1
stderr:
ld: unknown options: --version 
clang: error: linker command failed with exit code 1 (use -v to see invocation)
-----------
-----------
Detecting Apple linker via: `clang -Wl,-v` -> 1
stderr:
@(#)PROGRAM:ld  PROJECT:dyld-1022.1
BUILD 05:26:33 Dec  7 2023
configured to support archs: armv6 armv7 armv7s arm64 arm64e arm64_32 i386 x86_64 x86_64h
will use ld-classic for: armv6 armv7 armv7s arm64_32 i386 armv6m armv7k armv7m armv7em
LTO support using: LLVM version 15.0.0 (static support for 29, runtime is 29)
TAPI support using: Apple TAPI version 15.0.0 (tapi-1500.0.12.8)
Library search paths:
	/usr/local/lib
Framework search paths:
ld: Undefined symbols:
  _main, referenced from:
      <initial-undefines>
clang: error: linker command failed with exit code 1 (use -v to see invocation)
-----------
Sanity testing C compiler: clang
Is cross compiler: False.
Sanity check compiler command line: clang sanitycheckc.c -o sanitycheckc.exe
Sanity check compile stdout:

-----
Sanity check compile stderr:

-----
Running test binary command:  /Users/runner/work/WISDEM/WISDEM/meson_build/meson-private/sanitycheckc.exe
-----------
Sanity check: `/Users/runner/work/WISDEM/WISDEM/meson_build/meson-private/sanitycheckc.exe` -> 0
C compiler for the host machine: clang (clang 15.0.0 "Apple clang version 15.0.0 (clang-1500.1.0.2.5)")
C linker for the host machine: clang ld64 1022.1
-----------
Detecting archiver via: `llvm-ar-15 --version` -> [Errno 2] No such file or directory: 'llvm-ar-15'
-----------
Detecting archiver via: `llvm-ar --version` -> [Errno 2] No such file or directory: 'llvm-ar'
-----------
Detecting archiver via: `ar --version` -> 1
stderr:
usage:  ar -d [-TLsv] archive file ...
	ar -m [-TLsv] archive file ...
	ar -m [-abiTLsv] position archive file ...
	ar -p [-TLsv] archive [file ...]
	ar -q [-cTLsv] archive file ...
	ar -r [-cuTLsv] archive file ...
	ar -r [-abciuTLsv] position archive file ...
	ar -t [-TLsv] archive [file ...]
	ar -x [-ouTLsv] archive [file ...]
-----------
-----------
Detecting compiler via: `clang --version` -> 0
stdout:
Apple clang version 15.0.0 (clang-1500.1.0.2.5)
Target: x86_64-apple-darwin22.6.0
Thread model: posix
InstalledDir: /Applications/Xcode_15.2.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin
-----------
Running command: -x c -E -dM -
-----
-----------
Detecting linker via: `clang -Wl,--version` -> 1
stderr:
ld: unknown options: --version 
clang: error: linker command failed with exit code 1 (use -v to see invocation)
-----------
-----------
Detecting Apple linker via: `clang -Wl,-v` -> 1
stderr:
@(#)PROGRAM:ld  PROJECT:dyld-1022.1
BUILD 05:26:33 Dec  7 2023
configured to support archs: armv6 armv7 armv7s arm64 arm64e arm64_32 i386 x86_64 x86_64h
will use ld-classic for: armv6 armv7 armv7s arm64_32 i386 armv6m armv7k armv7m armv7em
LTO support using: LLVM version 15.0.0 (static support for 29, runtime is 29)
TAPI support using: Apple TAPI version 15.0.0 (tapi-1500.0.12.8)
Library search paths:
	/usr/local/lib
Framework search paths:
ld: Undefined symbols:
  _main, referenced from:
      <initial-undefines>
clang: error: linker command failed with exit code 1 (use -v to see invocation)
-----------
Sanity testing C compiler: clang
Is cross compiler: False.
Sanity check compiler command line: clang sanitycheckc.c -o sanitycheckc.exe
Sanity check compile stdout:

-----
Sanity check compile stderr:

-----
Running test binary command:  /Users/runner/work/WISDEM/WISDEM/meson_build/meson-private/sanitycheckc.exe
-----------
Sanity check: `/Users/runner/work/WISDEM/WISDEM/meson_build/meson-private/sanitycheckc.exe` -> 0
C compiler for the build machine: clang (clang 15.0.0 "Apple clang version 15.0.0 (clang-1500.1.0.2.5)")
C linker for the build machine: clang ld64 1022.1
-----------
Detecting archiver via: `llvm-ar-15 --version` -> [Errno 2] No such file or directory: 'llvm-ar-15'
-----------
Detecting archiver via: `llvm-ar --version` -> [Errno 2] No such file or directory: 'llvm-ar'
-----------
Detecting archiver via: `ar --version` -> 1
stderr:
usage:  ar -d [-TLsv] archive file ...
	ar -m [-TLsv] archive file ...
	ar -m [-abiTLsv] position archive file ...
	ar -p [-TLsv] archive [file ...]
	ar -q [-cTLsv] archive file ...
	ar -r [-cuTLsv] archive file ...
	ar -r [-abciuTLsv] position archive file ...
	ar -t [-TLsv] archive [file ...]
	ar -x [-ouTLsv] archive [file ...]
-----------
Build machine cpu family: x86_64
Build machine cpu: x86_64
Host machine cpu family: x86_64
Host machine cpu: x86_64
Target machine cpu family: x86_64
Target machine cpu: x86_64
-----------
Detecting compiler via: `gfortran --help` -> 0
stdout:
Usage: gfortran [options] file...
Options:
  -pass-exit-codes         Exit with highest error code from a phase.
  --help                   Display this information.
  --target-help            Display target specific command line options (including assembler and linker options).
  --help={common|optimizers|params|target|warnings|[^]{joined|separate|undocumented}}[,...].
                           Display specific types of command line options.
  (Use '-v --help' to display command line options of sub-processes).
  --version                Display compiler version information.
  -dumpspecs               Display all of the built in spec strings.
  -dumpversion             Display the version of the compiler.
  -dumpmachine             Display the compiler's target processor.
  -foffload=<targets>      Specify offloading targets.
  -print-search-dirs       Display the directories in the compiler's search path.
  -print-libgcc-file-name  Display the name of the compiler's companion library.
  -print-file-name=<lib>   Display the full path to library <lib>.
  -print-prog-name=<prog>  Display the full path to compiler component <prog>.
  -print-multiarch         Display the target's normalized GNU triplet, used as
                           a component in the library path.
  -print-multi-directory   Display the root directory for versions of libgcc.
  -print-multi-lib         Display the mapping between command line options and
                           multiple library search directories.
  -print-multi-os-directory Display the relative path to OS libraries.
  -print-sysroot           Display the target libraries directory.
  -print-sysroot-headers-suffix Display the sysroot suffix used to find headers.
  -Wa,<options>            Pass comma-separated <options> on to the assembler.
  -Wp,<options>            Pass comma-separated <options> on to the preprocessor.
  -Wl,<options>            Pass comma-separated <options> on to the linker.
  -Xassembler <arg>        Pass <arg> on to the assembler.
  -Xpreprocessor <arg>     Pass <arg> on to the preprocessor.
  -Xlinker <arg>           Pass <arg> on to the linker.
  -save-temps              Do not delete intermediate files.
  -save-temps=<arg>        Do not delete intermediate files.
  -no-canonical-prefixes   Do not canonicalize paths when building relative
                           prefixes to other gcc components.
  -pipe                    Use pipes rather than intermediate files.
  -time                    Time the execution of each subprocess.
  -specs=<file>            Override built-in specs with the contents of <file>.
  -std=<standard>          Assume that the input sources are for <standard>.
  --sysroot=<directory>    Use <directory> as the root directory for headers
                           and libraries.
  -B <directory>           Add <directory> to the compiler's search paths.
  -v                       Display the programs invoked by the compiler.
  -###                     Like -v but options quoted and commands not executed.
  -E                       Preprocess only; do not compile, assemble or link.
  -S                       Compile only; do not assemble or link.
  -c                       Compile and assemble, but do not link.
  -o <file>                Place the output into <file>.
  -pie                     Create a dynamically linked position independent
                           executable.
  -shared                  Create a shared library.
  -x <language>            Specify the language of the following input files.
                           Permissible languages include: c c++ assembler none
                           'none' means revert to the default behavior of
                           guessing the language based on the file's extension.

Options starting with -g, -f, -m, -O, -W, or --param are automatically
 passed on to the various sub-processes invoked by gfortran.  In order to pass
 other options on to these processes the -W<letter> options must be used.

For bug reporting instructions, please see:
<https://github.com/Homebrew/homebrew-core/issues>.
-----------
-----------
Detecting compiler via: `gfortran --version` -> 0
stdout:
GNU Fortran (Homebrew GCC 15.1.0) 15.1.0
Copyright (C) 2025 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
-----------
pre-processor extraction using -cpp -x fortran failed, falling back w/o lang
Running command: -E -dM -
-----
-----------
Detecting linker via: `gfortran -Wl,--version` -> 1
stderr:
collect2 version 15.1.0
/usr/bin/ld -demangle -syslibroot /Library/Developer/CommandLineTools/SDKs/MacOSX13.sdk/ -dynamic -arch x86_64 -macos_version_min 13.0 -o a.out -L/usr/local/Cellar/gcc/15.1.0/bin/../lib/gcc/current/gcc/x86_64-apple-darwin22/15 -L/usr/local/Cellar/gcc/15.1.0/bin/../lib/gcc/current/gcc -L/usr/local/Cellar/gcc/15.1.0/bin/../lib/gcc/current/gcc/x86_64-apple-darwin22/15/../../.. -lemutls_w -lheapt_w --version -lgcc -lSystem -no_compact_unwind -rpath @loader_path -rpath /usr/local/Cellar/gcc/15.1.0/lib/gcc/current/gcc/x86_64-apple-darwin22/15 -rpath /usr/local/Cellar/gcc/15.1.0/lib/gcc/current/gcc -rpath /usr/local/Cellar/gcc/15.1.0/lib/gcc/current
ld: unknown options: --version 
collect2: error: ld returned 1 exit status
-----------
-----------
Detecting Apple linker via: `gfortran -Wl,-v` -> 0
stderr:
collect2 version 15.1.0
/usr/bin/ld -demangle -syslibroot /Library/Developer/CommandLineTools/SDKs/MacOSX13.sdk/ -dynamic -arch x86_64 -macos_version_min 13.0 -o a.out -L/usr/local/Cellar/gcc/15.1.0/bin/../lib/gcc/current/gcc/x86_64-apple-darwin22/15 -L/usr/local/Cellar/gcc/15.1.0/bin/../lib/gcc/current/gcc -L/usr/local/Cellar/gcc/15.1.0/bin/../lib/gcc/current/gcc/x86_64-apple-darwin22/15/../../.. -lemutls_w -lheapt_w -v -lgcc -lSystem -no_compact_unwind -rpath @loader_path -rpath /usr/local/Cellar/gcc/15.1.0/lib/gcc/current/gcc/x86_64-apple-darwin22/15 -rpath /usr/local/Cellar/gcc/15.1.0/lib/gcc/current/gcc -rpath /usr/local/Cellar/gcc/15.1.0/lib/gcc/current
@(#)PROGRAM:ld  PROJECT:dyld-1022.1
BUILD 05:26:33 Dec  7 2023
configured to support archs: armv6 armv7 armv7s arm64 arm64e arm64_32 i386 x86_64 x86_64h
will use ld-classic for: armv6 armv7 armv7s arm64_32 i386 armv6m armv7k armv7m armv7em
LTO support using: LLVM version 15.0.0 (static support for 29, runtime is 29)
TAPI support using: Apple TAPI version 15.0.0 (tapi-1500.0.12.8)
Library search paths:
	/usr/local/Cellar/gcc/15.1.0/bin/../lib/gcc/current/gcc/x86_64-apple-darwin22/15
	/usr/local/Cellar/gcc/15.1.0/bin/../lib/gcc/current/gcc
	/usr/local/Cellar/gcc/15.1.0/bin/../lib/gcc/current/gcc/x86_64-apple-darwin22/15/../../..
Framework search paths:
-----------
Sanity testing Fortran compiler: gfortran
Is cross compiler: False.
Sanity check compiler command line: gfortran sanitycheckf.f -o sanitycheckf.exe
Sanity check compile stdout:

-----
Sanity check compile stderr:

-----
Running test binary command:  /Users/runner/work/WISDEM/WISDEM/meson_build/meson-private/sanitycheckf.exe
-----------
Sanity check: `/Users/runner/work/WISDEM/WISDEM/meson_build/meson-private/sanitycheckf.exe` -> 0
stdout:
Fortran compilation is working.
-----------
Fortran compiler for the host machine: gfortran (gcc 15.1.0 "GNU Fortran (Homebrew GCC 15.1.0) 15.1.0")
Fortran linker for the host machine: gfortran ld64 1022.1
Running compile:
Working directory:  /Users/runner/work/WISDEM/WISDEM/meson_build/meson-private/tmpdg1lv_f9
Code:
int main(void) { return 0; }

-----------
Command line: `clang /Users/runner/work/WISDEM/WISDEM/meson_build/meson-private/tmpdg1lv_f9/testfile.c -o /Users/runner/work/WISDEM/WISDEM/meson_build/meson-private/tmpdg1lv_f9/output.exe -O0 -Werror=implicit-function-declaration -lm -Wl,-undefined,dynamic_lookup` -> 0
Library m found: YES
Program python found: YES (/private/var/folders/vk/nx37ffx50hv5djclhltc26vw0000gn/T/cibw-run-ezmlygx7/cp311-macosx_x86_64/build/venv/bin/python)
Searching for 'python-3.11' via pkgconfig lookup in LIBPC
Pkg-config binary missing from cross or native file, or env var undefined.
Trying a default Pkg-config fallback at pkg-config
Found pkg-config: YES (/usr/local/bin/pkg-config) 2.5.1
Determining dependency 'python-3.11' with pkg-config executable '/usr/local/bin/pkg-config'
env[PKG_CONFIG_LIBDIR]: /Library/Frameworks/Python.framework/Versions/3.11/lib/pkgconfig
env[PKG_CONFIG_PATH]: 
env[PKG_CONFIG]: /usr/local/bin/pkg-config
-----------
Called: `/usr/local/bin/pkg-config --modversion python-3.11` -> 0
stdout:
3.11
-----------
env[PKG_CONFIG_LIBDIR]: /Library/Frameworks/Python.framework/Versions/3.11/lib/pkgconfig
env[PKG_CONFIG_PATH]: 
env[PKG_CONFIG]: /usr/local/bin/pkg-config
-----------
Called: `/usr/local/bin/pkg-config --cflags python-3.11` -> 0
stdout:
-I/Library/Frameworks/Python.framework/Versions/3.11/include/python3.11
-----------
env[PKG_CONFIG_LIBDIR]: /Library/Frameworks/Python.framework/Versions/3.11/lib/pkgconfig
env[PKG_CONFIG_ALLOW_SYSTEM_LIBS]: 1
env[PKG_CONFIG_PATH]: 
env[PKG_CONFIG]: /usr/local/bin/pkg-config
-----------
Called: `/usr/local/bin/pkg-config --libs python-3.11` -> 0
env[PKG_CONFIG_LIBDIR]: /Library/Frameworks/Python.framework/Versions/3.11/lib/pkgconfig
env[PKG_CONFIG_PATH]: 
env[PKG_CONFIG]: /usr/local/bin/pkg-config
-----------
Called: `/usr/local/bin/pkg-config --libs python-3.11` -> 0
Run-time dependency python found: YES 3.11
meson.build:40: WARNING: Project targets '>= 0.60' but uses feature deprecated since '0.55.0': ExternalProgram.path. use ExternalProgram.full_path() instead
Message: /private/var/folders/vk/nx37ffx50hv5djclhltc26vw0000gn/T/cibw-run-ezmlygx7/cp311-macosx_x86_64/build/venv/bin/python
Message: /Users/runner/work/WISDEM/WISDEM/meson_build/./
Running command: /private/var/folders/vk/nx37ffx50hv5djclhltc26vw0000gn/T/cibw-run-ezmlygx7/cp311-macosx_x86_64/build/venv/bin/python -c 'import os; os.chdir(".."); import numpy; print(numpy.get_include())'
--- stdout ---
/private/var/folders/vk/nx37ffx50hv5djclhltc26vw0000gn/T/cibw-run-ezmlygx7/cp311-macosx_x86_64/build/venv/lib/python3.11/site-packages/numpy/_core/include

--- stderr ---


wisdem/ccblade/meson.build:8: WARNING: Project targets '>= 0.60' but uses feature introduced in '0.63.0': python_installation.extension_module with implicit dependency on python. use python_installation.dependency()
Build targets in project: 4
WARNING: Project specifies a minimum meson_version '>= 0.60' but uses features which were added in newer versions:
 * 0.63.0: {'python_installation.extension_module with implicit dependency on python'}
WARNING: Deprecated features used:
 * 0.55.0: {'ExternalProgram.path'}

wisdem undefined

  User defined options
    prefix           : /Users/runner/work/WISDEM/WISDEM/meson_build
    python.platlibdir: .
    python.purelibdir: .

Found ninja-1.13.0.git.kitware.jobserver-pipe-1 at /private/var/folders/vk/nx37ffx50hv5djclhltc26vw0000gn/T/cibw-run-ezmlygx7/cp311-macosx_x86_64/build/venv/bin/ninja
Running compile:
Working directory:  /Users/runner/work/WISDEM/WISDEM/meson_build/meson-private/tmpbxy8dmt7
Code:

-----------
Command line: `gfortran /Users/runner/work/WISDEM/WISDEM/meson_build/meson-private/tmpbxy8dmt7/testfile.f90 -o /Users/runner/work/WISDEM/WISDEM/meson_build/meson-private/tmpbxy8dmt7/output.obj -c -O0 --print-search-dirs` -> 0
stdout:
install: /usr/local/Cellar/gcc/15.1.0/bin/../lib/gcc/current/gcc/x86_64-apple-darwin22/15/
programs: =/usr/local/Cellar/gcc/15.1.0/bin/../libexec/gcc/x86_64-apple-darwin22/15/:/usr/local/Cellar/gcc/15.1.0/bin/../libexec/gcc/:/usr/local/Cellar/gcc/15.1.0/bin/../lib/gcc/current/gcc/x86_64-apple-darwin22/15/../../../../../../x86_64-apple-darwin22/bin/x86_64-apple-darwin22/15/:/usr/local/Cellar/gcc/15.1.0/bin/../lib/gcc/current/gcc/x86_64-apple-darwin22/15/../../../../../../x86_64-apple-darwin22/bin/
libraries: =/usr/local/Cellar/gcc/15.1.0/bin/../lib/gcc/current/gcc/x86_64-apple-darwin22/15/:/usr/local/Cellar/gcc/15.1.0/bin/../lib/gcc/current/gcc/:/usr/local/Cellar/gcc/15.1.0/bin/../lib/gcc/current/gcc/x86_64-apple-darwin22/15/../../../../../../x86_64-apple-darwin22/lib/x86_64-apple-darwin22/15/:/usr/local/Cellar/gcc/15.1.0/bin/../lib/gcc/current/gcc/x86_64-apple-darwin22/15/../../../../../../x86_64-apple-darwin22/lib/:/usr/local/Cellar/gcc/15.1.0/bin/../lib/gcc/current/gcc/x86_64-apple-darwin22/15/../../../x86_64-apple-darwin22/15/:/usr/local/Cellar/gcc/15.1.0/bin/../lib/gcc/current/gcc/x86_64-apple-darwin22/15/../../../
-----------
Running compile:
Working directory:  /Users/runner/work/WISDEM/WISDEM/meson_build/meson-private/tmpz7p74dp4
Code:

-----------
Command line: `clang /Users/runner/work/WISDEM/WISDEM/meson_build/meson-private/tmpz7p74dp4/testfile.c -o /Users/runner/work/WISDEM/WISDEM/meson_build/meson-private/tmpz7p74dp4/output.obj -c -O0 -Werror=implicit-function-declaration -Werror=unknown-warning-option -Werror=unused-command-line-argument -Werror=ignored-optimization-argument --print-search-dirs` -> 0
stdout:
programs: =/Applications/Xcode_15.2.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin
libraries: =/Applications/Xcode_15.2.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/lib/clang/15.0.0
-----------
!meson_ci!/ci_include "/Users/runner/work/WISDEM/WISDEM/meson_build/build.ninja"
