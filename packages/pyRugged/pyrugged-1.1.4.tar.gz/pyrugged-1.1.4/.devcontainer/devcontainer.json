// To use podamn instead of docker, you will need to run:
// PATH=$PATH:/usr/libexec podman machine init && podman machine start
// And add the following lines in your ~/.config/Code/User/settings.json
// "dev.containers.dockerComposePath": "podman-compose",
// "dev.containers.dockerPath": "podman",
// "dev.containers.dockerSocketPath": "/run/user/1000/podman/podman-machine-default-api.sock",
// https://code.visualstudio.com/remote/advancedcontainers/docker-options#_podman
{
	"name": "Existing Dockerfile",
	"build": {
		// Sets the run context to one level up instead of the .devcontainer folder.
		"context": "..",
		// The image to consider as a cache. Use an array to specify multiple images.
		"cacheFrom": ["asgard-devcontainer", "asgard-legacy-devcontainer"],
		// Build arguments, podman comply to OCI spec. if you need docker spec, you can use:
		// "args": {"--format": "docker"},
		// Update the 'dockerFile' property if you aren't using the standard 'Dockerfile' filename.
		"dockerfile": "Dockerfile"
	},

	// The user the container will be started with. The default is the user on the Docker image.
	"containerUser": "vscode",

	// The arguments required when starting in the container.
	// userns=keep-id needed with podman, else unable to write
	"runArgs": ["--userns=keep-id"], // COMMENT on docker, UNCOMMENT on podman

	// Mount points to set up when creating the container. See Docker's documentation for the --mount option for the supported syntax.
	"mounts": [
		"source=/DATA,target=/DATA,type=bind,consistency=cached",
		"source=${localEnv:HOME}/.cache/pip,target=/home/vscode/.cache/pip,type=bind,consistency=cached"
	],

	// Configure tool-specific properties.
	"customizations": {
		"vscode": {
			"settings": {
				"python.testing.pytestArgs": [
					"tests"
				],
				"python.testing.unittestEnabled": false,
				"python.testing.pytestEnabled": true
			},
			"extensions": [
				"ms-python.python",
				"ms-python.pylint",
				"ms-python.flake8",
				"ms-python.isort",
				"ms-python.black-formatter",
				"ms-python.mypy-type-checker"
			]
		}
	},

	// Run commands after the container is created.
	"postCreateCommand": "sh -ex .devcontainer/setup.sh"
}
