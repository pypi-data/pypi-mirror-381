name: Python
concurrency:
  cancel-in-progress: true
  group: ${{ github.workflow }}-${{ github.head_ref }}
env:
    CARGO_TERM_COLOR: always
on:
  pull_request:
    branches: main
  release:
    types: published
permissions: {}
jobs:
  Test:
    if: github.event_name != 'release'
    strategy:
      fail-fast: true
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        python-version: ['3.10', '3.11', '3.12', '3.13']
        toolchain: [beta, stable]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout
      uses: actions/checkout@v5
    - name: Toolchain
      uses: actions-rs/toolchain@88dc2356392166efad76775c878094f4e83ff746
      with:
        components: clippy
        toolchain: ${{ matrix.toolchain }}
    - name: Python
      uses: actions/setup-python@v6
      with:
        python-version: ${{ matrix.python-version }}
    - name: Clippy
      run: cargo clippy --features python -- -D warnings
    - name: Install
      run: pip install .[dev]
    - name: Check
      run: ruff check
    - name: Format
      run: ruff format --check
    - name: Test
      run: pytest --verbose
  Source:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v5
      - name: Toolchain
        uses: actions-rs/toolchain@88dc2356392166efad76775c878094f4e83ff746
        with:
          toolchain: stable
      - name: Python
        uses: actions/setup-python@v6
        with:
          python-version: 3.13
      - name: Dependencies
        run: pip install build maturin twine
      - name: Source
        run: python -m build . --sdist
      - name: Check
        run: twine check dist/*
      - name: Dist
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist
  Wheel:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os: [macos-latest, ubuntu-latest, windows-latest]
        python-version: ['3.10', '3.11', '3.12', '3.13']
    steps:
    - name: Checkout
      uses: actions/checkout@v5
    - name: Toolchain
      uses: actions-rs/toolchain@88dc2356392166efad76775c878094f4e83ff746
      with:
        toolchain: stable
    - name: Python
      uses: actions/setup-python@v6
      with:
        python-version: ${{ matrix.python-version }}
    - name: Dependencies
      run: pip install build maturin twine
    - name: Hack
      if: matrix.os == 'macos-latest'
      run: brew uninstall --ignore-dependencies xz
    - name: Wheel
      run: maturin build --release --features python
    - name: Check
      run: twine check target/wheels/*
    - name: Upload
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.os }}-${{ matrix.python-version }}-dist
        path: target/wheels
  Twine:
    needs: [Source, Wheel]
    runs-on: ubuntu-latest
    steps:
    - name: Download
      uses: actions/download-artifact@v5
    - name: Python
      uses: actions/setup-python@v6
      with:
        check-latest: true
        python-version: 3.13
    - name: Dependencies
      run: pip install twine
    - name: Wheels
      run: mv ./*-dist*/*.whl dist/
    - name: Upload
      if: github.event_name == 'release'
      run: twine upload -u __token__ -p ${{ secrets.PYPI_TOKEN }} dist/*
