#------------------------------------------------------------------------------
# Copyright (c) 2021-2025, Nucleic Development Team.
#
# Distributed under the terms of the Modified BSD License.
#
# The full license is in the file LICENSE, distributed with this software.
#------------------------------------------------------------------------------
- case: coerced_no_coercer
  parametrized:
    - member: Coerced
      member_instance: Coerced(int)
      member_type: atom.coerced.Coerced[builtins.int, builtins.int]
      member_value_type: builtins.int
    - member: Coerced
      member_instance: Coerced(int, ())
      member_type: atom.coerced.Coerced[builtins.int, builtins.int]
      member_value_type: builtins.int
    - member: Coerced
      member_instance: Coerced(_io.StringIO, None, dict(initial_value=str(1)))
      member_type: atom.coerced.Coerced[_io.StringIO, _io.StringIO]
      member_value_type: _io.StringIO
    - member: Coerced
      member_instance: Coerced(_io.StringIO, kwargs=dict(initial_value=str(1)))
      member_type: atom.coerced.Coerced[_io.StringIO, _io.StringIO]
      member_value_type: _io.StringIO
    - member: Coerced
      member_instance: Coerced(_io.StringIO, factory=g)
      member_type: atom.coerced.Coerced[_io.StringIO, _io.StringIO]
      member_value_type: _io.StringIO
  main: |
    import _io
    from typing import Type
    from atom.api import Atom, {{ member }}

    def g() -> _io.StringIO:
      return _io.StringIO()

    class A(Atom):
      m = {{ member_instance }}

    reveal_type(A.m)  # N: Revealed type is "{{ member_type }}"
    reveal_type(A().m)  # N: Revealed type is "{{ member_value_type }}"

# FIXME Those are broken on mypy 1.17 and it is unclear why
# - case: coerced_coercer
#   parametrized:
#     - member: Coerced
#       member_instance: Coerced(_io.StringIO, coercer=coercer)
#       member_type: atom.coerced.Coerced[_io.StringIO, _io.StringIO | builtins.str]
#       member_value_type: _io.StringIO
#     - member: Coerced
#       member_instance: Coerced(_io.StringIO, (), coercer=coercer)
#       member_type: atom.coerced.Coerced[_io.StringIO, _io.StringIO | builtins.str]
#       member_value_type: _io.StringIO
#     - member: Coerced
#       member_instance: Coerced(_io.StringIO, None, dict(initial_value=str(1)), coercer=coercer)
#       member_type: atom.coerced.Coerced[_io.StringIO, _io.StringIO | builtins.str]
#       member_value_type: _io.StringIO
#     - member: Coerced
#       member_instance: Coerced(_io.StringIO, kwargs=dict(initial_value=str(1)), coercer=coercer)
#       member_type: atom.coerced.Coerced[_io.StringIO, _io.StringIO | builtins.str]
#       member_value_type: _io.StringIO
#     - member: Coerced
#       member_instance: Coerced(_io.StringIO, factory=g, coercer=coercer)
#       member_type: atom.coerced.Coerced[_io.StringIO, _io.StringIO | builtins.str]
#       member_value_type: _io.StringIO
#   main: |
#     import _io
#     from typing import Type
#     from atom.api import Atom, {{ member }}

#     def coercer(x: str) -> _io.StringIO:
#       return _io.StringIO(x)

#     def g() -> _io.StringIO:
#       return _io.StringIO()

#     class A(Atom):
#       m = {{ member_instance }}

#     reveal_type(A.m)  # N: Revealed type is "{{ member_type }}"
#     reveal_type(A().m)  # N: Revealed type is "{{ member_value_type }}"