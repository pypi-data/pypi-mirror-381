[project]
name = "tetromino"
version = "0.0.0.dev0"
description = ''
readme = "README.md"
requires-python = ">=3.12"
license = "GPL-3.0-or-later"
keywords = []
authors = [
  { name = "D. Danchev", email = "12420863+danchev@users.noreply.github.com" },
]
classifiers = [
  "License :: OSI Approved :: MIT License",
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = []

[dependency-groups]
dev = [
  "ruff>=0.13.2",
  "ty>=0.0.1a21",
  {include-group = "commit"},
  {include-group = "test"},
]
commit = [
    "commitizen>=4.9.1",
    "pre-commit>=4.3.0",
]
test = [
    "pytest>=8.4.2",
    "pytest-memray>=1.8.0",
    "pytest-benchmark>=5.1.0",
    "pytest-cov>=7.0.0",
    "coverage[toml]>=7.10.7",
]

[project.urls]
Documentation = "https://github.com/danchev/tetromino#readme"
Issues = "https://github.com/danchev/tetromino/issues"
Source = "https://github.com/danchev/tetromino"

[project.scripts]
tetris = "tetris.cli:main"

[build-system]
requires = ["uv_build>=0.8.17,<0.9.0"]
build-backend = "uv_build"

[tool.uv.build-backend]
module-name = "tetris"
module-root = "."
source-include = [
    "tests/*.py",
    "tests/resources/*.txt",
]

[tool.pytest.ini_options]
addopts = "-s --strict-markers --cov=tetris --cov=tests --cov-report=term-missing --cov-report=xml:coverage.xml --cov-report=html -q -m \"not slow\""
testpaths = [
    "tests",
    "src/tetris/tests",
]
pythonpath = [
    ".",
    "src",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "benchmark: marks tests as benchmark (deselect with '-m \"not benchmark\"')",
]

[tool.coverage.run]
source_pkgs = ["tetris", "tests"]
branch = true
parallel = true
omit = [
  "tetris/__about__.py",
]

[tool.coverage.paths]
tetris = ["tetris", "*/tetris/tetris"]
tests = ["tests", "*/tetris/tests"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
]

[tool.commitizen]
name = "cz_conventional_commits"
version = "0.0.1"
tag_format = "$version"
version_files = [
    "pyproject.toml:version"
]
update_changelog_on_bump = true
