# Default values for wms.
# These default values are currently the ones
# used for local development and testing, they are NOT INTENDED FOR PRODUCTION.
#
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.
nameOverride: ""
fullnameOverride: ""

# -- Image settings.
image:
  # -- Prefix of the repository, pods will use <repository_prefix>-{server,client,ce}
  repository_prefix: "harbor.cta-observatory.org/dpps/wms"
  # -- Image tag, if not set, the chart's appVersion will be used
  tag:
  pullPolicy: IfNotPresent

global:
  storageClassName: standard
  registry: harbor.cta-observatory.org/proxy_cache
  dockerRegistry: harbor.cta-observatory.org/proxy_cache
  # diracx chart
  images:
    busybox:
      repository: harbor.cta-observatory.org/proxy_cache/busybox

# -- Settings for local development
dev:
  # -- run tests in the container
  run_tests: true
  # -- sleep after test to allow interactive development
  sleep: false
  # -- mount the repo volume to test the code as it is being developed
  mount_repo: true

  # -- tag of the image used to run helm tests
  client_image_tag:


# -- Setting for the main DIRAC server pod
dirac_server:
  # -- Recreates some DIRAC databases from scratch. Useful at first installation, but destructive on update: should be changed immediately after the first installation.
  # This list might overlap with list of of DBs in chart/templates/configmap.yaml
  resetDatabasesOnStart:
  - ResourceStatusDB
  - ProxyDB
  - JobDB
  - SandboxMetadataDB
  - TaskQueueDB
  - JobLoggingDB
  - PilotAgentsDB
  - ReqDB
  - AccountingDB
  - FileCatalogDB


  podAnnotations: {}
  podLabels: {}
  podSecurityContext: {}
  securityContext: {}

  webApp:
    enabled: true

  configmap:
    create: true
    name:

# Create client and users in IndigoIAM and in DiracX/DIRAC:

# -- Configuration for the bitnami mariadb subchart. Disable if DIRAC database is provided externally.
mariadb:
  global:
    security:
      # needed to override bitnami image; see also https://gitlab.cta-observatory.org/cta-computing/dpps/aiv/mariadb-chart/-/issues/1
      allowInsecureImages: true
  enabled: true
  image:
    registry: harbor.cta-observatory.org/proxy_cache
    repository: bitnamilegacy/mariadb
  auth:
    rootPassword: "dirac-db-root"
  initdbScripts:
    create-user.sql: |
      CREATE USER IF NOT EXISTS 'Dirac'@'%' IDENTIFIED BY 'dirac-db';
      CREATE USER IF NOT EXISTS 'indigo-iam'@'%' IDENTIFIED BY 'PassW0rd';
      CREATE DATABASE IF NOT EXISTS `indigo-iam`;
      GRANT ALL PRIVILEGES ON `indigo-iam`.* TO `indigo-iam`@`%`;
      FLUSH PRIVILEGES;

# -- Settings for the certificate generator
cert-generator-grid:
  enabled: true
  generatePreHooks: true

  extra_server_names:
  - iam.test.example
  - voms.test.example
  - fts
  - dirac-server

  # List of users to create certificates for
  users:
  - name: DPPS User
    suffix: ""
  - name: DPPS User Unprivileged
    suffix: "-unprivileged"
  - name: Non-DPPS User
    suffix: "-non-dpps"

# TODO: temporary configuration while
# redirect_uris and groups are not managed by dpps-iam
iamConfig:
  issuer: http://wms-dpps-iam-login-service:8080
  clients:
    - client_id: dpps-test-client
      client_secret: secret
      client_name: WMS Test Client
      scopes:
        - scim:write
        - scim:read
        - offline_access
        - openid
        - profile
        - iam:admin.write
        - iam:admin.read
      grant_types:
        - authorization_code
        - password
        - client_credentials
        - urn:ietf:params:oauth:grant_type:redelegate
        - refresh_token
      redirect_uris:
        - http://wms-diracx:8000/api/auth/device/complete
        - http://wms-diracx:8000/api/auth/authorize/complete

  users:
    - username: dpps_user
      password: dpps-password
      given_name: DPPS
      family_name: User
      role: ROLE_USER
      groups:
      - ctao.dpps.test
      - dpps_group
      - dpps_genpilot
      - dirac_admin
      - dirac_user
      email: dpps@test.example
      subject_dn: "DPPS User"
      cert:
        kind: env_var_file
        env_var: X509_USER_CERT
        default_path: /tmp/usercert.pem

    - username: test_user
      password: test-password
      given_name: TestDpps
      family_name: User
      role: ROLE_USER
      groups:
      - ctao.dpps.test
      - dpps_group
      - dirac_user
      email: dpps@test.example
      subject_dn: "DPPS User"
      cert:
        kind: env_var_file
        env_var: X509_USER_CERT
        default_path: /tmp/usercert.pem

    - username: admin-user
      password: test-password
      given_name: TestAdmin
      family_name: User
      role: ROLE_ADMIN
      groups:
      - ctao.dpps.test
      email: dpps@test.example

  groups:
    dpps_group:
      user: [dpps_user, test_user]
    dpps_genpilot:
      user: [dpps_user]
    dirac_admin:
      user: [dpps_user]
    dirac_user:
      user: [test_user]


# -- A simple SSH compute element for testing
test_ce:
  enabled: true
  resources: {}

rucio:
  enabled: false
  rucioConfig:

# -- Configuration for the cvmfs subchart, included for testing
cvmfs:
  enabled: true
  publish_docker_images:
    - "harbor.cta-observatory.org/proxy_cache/library/python:3.12-slim"

  publisher:
    image:
      repository_prefix: harbor.cta-observatory.org/proxy_cache/bitnamilegacy/kubectl
      tag: 1.31.1


# -- Secrets needed to access image registries
imagePullSecrets:
  - name: harbor-pull-secret

serviceAccount:
  # -- Specifies whether a service account should be created
  create: true
  # -- Automatically mount a ServiceAccount's API credentials?
  automount: true
  # -- Annotations to add to the service account
  annotations: {}
  # -- The name of the service account to use.
  # -- If not set and create is true, a name is generated using the fullname template
  name: ""

service:
  type: ClusterIP
  port: 8080


resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# Additional volumes on the output Deployment definition.
volumes: []
# - name: foo
#   secret:
#     secretName: mysecret
#     optional: false

# Additional volumeMounts on the output Deployment definition.
volumeMounts: []
# - name: foo
#   mountPath: "/etc/foo"
#   readOnly: true

nodeSelector: {}

tolerations: []

affinity: {}

waitForLoginService:
  image:
      repository: almalinux
      tag: 9
      pullPolicy: IfNotPresent

iam_external:
  enabled: false

iam:
  nameOverride: "dpps-iam"
  enabled: true
  dev:
    mount_repo: false

  iam:
    fullnameOverride: "wms-dpps-iam"
    mysql:
      enabled: false

    mariadb:
      enabled: false

    database:
      external:
        host: wms-mariadb
        port: 3306
        name: indigo-iam
        username: indigo-iam
        password: PassW0rd
        existingSecret: ""

    loginService:
      config:
        java:
          opts: >-
            -Xms512m -Xmx512m
            -Djava.security.egd=file:/dev/./urandom
            -Dspring.profiles.active=prod
            -Dlogging.level.org.springframework.web=DEBUG
            -Dlogging.level.com.indigo=DEBUG

    ingress:
      enabled: true
      className: nginx
      annotations:
        nginx.ingress.kubernetes.io/ssl-redirect: 'true'
        nginx.ingress.kubernetes.io/ssl-passthrough: 'true'
      tls:
        enabled: true
        secretName: wms-tls


  cert-generator-grid:
    enabled: false

  bootstrap:
    extraVolumeMounts:
    - name: dppsuser-certkey-400
      mountPath: /tmp/userkey.pem
      subPath: dppsuser.key.pem
    - name: dppsuser-certkey-600
      mountPath: /tmp/usercert.pem
      subPath: dppsuser.pem

    extraVolumes:
    - name: dppsuser-certkey
      secret:
        defaultMode: 0420
        secretName: wms-dppsuser-certkey
    - name: dppsuser-certkey-600
      secret:
        defaultMode: 0600
        secretName: wms-dppsuser-certkey
    - name: dppsuser-certkey-400
      secret:
        defaultMode: 0400
        secretName: wms-dppsuser-certkey

    config:
      issuer: http://wms-dpps-iam-login-service:8080
      clients:
        - client_id: dpps-test-client
          client_secret: secret
          client_name: WMS Test Client
          scopes:
            - scim:write
            - scim:read
            - offline_access
            - openid
            - profile
            - iam:admin.write
            - iam:admin.read
          grant_types:
            - authorization_code
            - password
            - client_credentials
            - urn:ietf:params:oauth:grant_type:redelegate
            - refresh_token
          # TODO: support that in dpps-iam bootstrap
          # redirect_uris:
          #   - http://wms-diracx:8000/api/auth/device/complete
          #   - http://wms-diracx:8000/api/auth/authorize/complete

      users:
        - username: dpps_user
          password: dpps-password
          given_name: DPPS
          family_name: User
          role: ROLE_USER
          groups:
          - ctao.dpps.test
          - dpps_group
          - dpps_genpilot
          - dirac_admin
          - dirac_user
          email: dpps@test.example
          subject_dn: "DPPS User"
          cert:
            kind: env_var_file
            env_var: X509_USER_CERT
            default_path: /tmp/usercert.pem

        - username: test_user
          password: test-password
          given_name: TestDpps
          family_name: User
          role: ROLE_USER
          groups:
          - ctao.dpps.test
          - dpps_group
          - dirac_user
          email: dpps@test.example
          subject_dn: "DPPS User"
          cert:
            kind: env_var_file
            env_var: X509_USER_CERT
            default_path: /tmp/usercert.pem

        - username: admin-user
          password: test-password
          given_name: TestAdmin
          family_name: User
          role: ROLE_ADMIN
          groups:
          - ctao.dpps.test
          email: dpps@test.example

    image:
      repository: harbor.cta-observatory.org/dpps/dpps-iam-client
      tag:
      pullPolicy: IfNotPresent
    env:
      - name: X509_NON_DPPS_USER_CERT
        value: /tmp/user-non-dpps-cert.pem
      - name: X509_UNPRIVILEGED_DPPS_USER_CERT
        value: /tmp/user-unprivileged-cert.pem
    tag:

  vomsAA:
    enabled: true
    config:
      host: voms.test.example
      # this needs to match the group in IAM (TBC)
      voName: ctao.dpps.test
    deployment:
      replicas: 1
    ingress:
      enabled: true
      className: nginx
      tls:
        enabled: true
    # LSC entries for test environment
    lsc:
      entries:
        - "/CN=voms.test.example"
        - "/CN=DPPS Development CA"

    # Use smaller resources for testing
    resources:
      requests:
        cpu: 200m
        memory: 512Mi
      limits:
        cpu: 500m
        memory: 1Gi
    nginxVoms:
      resources:
        requests:
          cpu: 100m
          memory: 128Mi
        limits:
          memory: 256Mi


# ========= diracx =============
diracx:
  enabled: true
  global:
    # Override the imagePullPolicy to always so we can using latest image tags
    # without risking them being outdated.
    imagePullPolicy: Always
    # Keep the job log for 1h for investigations
    batchJobTTL: 3600
    activeDeadlineSeconds: 900
    images:
      tag: "v0.0.1a50"
      services: ghcr.io/diracgrid/diracx/services
      client: ghcr.io/diracgrid/diracx/client

  initSql:
    # Should DiracX include an init container which manages the SQL DB schema?
    # Since we use the DIRAC DBs, we don't need this
    enabled: false
    env: {}

  mysql:
    enabled: false

  opensearch:
    enabled: true

  minio:
    environment:
      MINIO_BROWSER_REDIRECT_URL: http://wms-minio:32001/
    rootUser: rootuser
    rootPassword: rootpass123

  developer:
    # we are not developing diracx in WMS, but this is needed to run the tests
    enabled: true
    localCSPath: /local_cs_store
    urls:
      diracx: http://wms-diracx:8000
      minio: http://wms-minio:32000
      #dex: http://wms-dex:32002 # disabled
      iam: http://dpps-iam:8080
      #grafana: http://localhost:32004
    # demoDir: {{ demo_dir }}
    # mountedPythonModulesToInstall: {{ mounted_python_modules }}
    # editableMountedPythonModules: {{ editable_mounted_modules }}
    # mountedNodeModuleToInstall: {{ node_module_to_mount }}
    # nodeWorkspacesDirectories: {{ node_module_workspaces }}

  diracx:
    hostname: wms-diracx
    settings:
      DIRACX_CONFIG_BACKEND_URL: "git+file:///cs_store/initialRepo"
      DIRACX_SERVICE_AUTH_TOKEN_ISSUER: "http://wms-diracx:8000"
      DIRACX_SERVICE_AUTH_ALLOWED_REDIRECTS: '["http://wms-diracx:8000/api/docs/oauth2-redirect", "http://wms-diracx:8000/#authentication-callback"]'
      DIRACX_SANDBOX_STORE_BUCKET_NAME: sandboxes
      DIRACX_SANDBOX_STORE_S3_CLIENT_KWARGS: '{"endpoint_url": "http://wms-minio:9000", "aws_access_key_id": "rootuser", "aws_secret_access_key": "rootpass123"}'
      DIRACX_SANDBOX_STORE_AUTO_CREATE_BUCKET: "true"
      DIRACX_SERVICE_AUTH_ACCESS_TOKEN_EXPIRE_MINUTES: "120"
      DIRACX_SERVICE_AUTH_REFRESH_TOKEN_EXPIRE_MINUTES: "360"
      DIRACX_SERVICE_AUTH_TOKEN_KEYSTORE: "file:///keystore/jwks.json"
      DIRACX_LEGACY_EXCHANGE_HASHED_API_KEY: "19628aa0cb14b69f75b2164f7fda40215be289f6e903d1acf77b54caed61a720"
    sqlDbs:
      default:
        rootUser: root
        rootPassword: dirac-db-root
        user: Dirac
        password: dirac-db
        host: dirac-db:3306
      dbs:
        AuthDB:
         internalName: DiracXAuthDB
        JobDB:
        JobLoggingDB:
        SandboxMetadataDB:
        TaskQueueDB:
    osDbs:
      dbs:
        JobParametersDB:

    # Increase diracx startup probe while draic server is starting
    startupProbe:
      timeoutSeconds: 5
      periodSeconds: 15
      failureThreshold: 60 # 15 × 60 = 900s = 15 minutes

  rabbitmq:
    enabled: true
    image:
      registry: harbor.cta-observatory.org/proxy_cache
      repository: bitnamilegacy/rabbitmq
    podSecurityContext:
      enabled: false
    containerSecurityContext:
      enabled: false
    auth:
      existingPasswordSecret: rabbitmq-secret
      existingErlangSecret: rabbitmq-secret


  dex:
    enabled: false

  indigoiam:
    image:
      repository: indigoiam/iam-login-service
      tag: v1.13.0-rc2
    enabled: false


  ## Open telemetry

  opentelemetry-collector:
    enabled: false

  elasticsearch:
    enabled: false

  jaeger:
    enabled: false

  grafana:
    enabled: false

  prometheus:
    enabled: false
