[project]
name = "chatlas"
description = "A simple and consistent interface for chatting with LLMs"
license = "MIT"
dynamic = ["version"]
readme = "README.md"
requires-python = ">=3.9"
dependencies = [
  "requests",
  "pydantic>=2.0",
  "jinja2",
  "orjson",
  "rich",
  "openai"
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
]
authors = [
  {name = "Carson Sievert", email = "carson@posit.co"}
]


[project.urls]
Homepage = "https://posit-dev.github.io/chatlas"
Documentation = "https://posit-dev.github.io/chatlas"
Repository = "https://github.com/posit-dev/chatlas"
Issues = "https://github.com/posit-dev/chatlas/issues/"
Changelog = "https://github.com/posit-dev/chatlas/blob/main/CHANGELOG.md"

[project.optional-dependencies]
test = [
    "pyright>=1.1.379",
    "pytest>=8.3.2",
    "pytest-asyncio",
    "syrupy>=4"
]
dev = [
    "ruff>=0.6.5",
    "python-dotenv",
    "matplotlib",
    "Pillow",
    "shiny",
    "htmltools",
    "shinychat",
    "narwhals",
    "pandas",
    "polars",
    "openai",
    "anthropic[bedrock]",
    "google-genai>=1.14.0",
    "numpy>1.24.4",
    "tiktoken",
    "databricks-sdk",
    "snowflake-ml-python>=1.8.4",
    # torch (a dependency of snowflake-ml-python) is not yet compatible with Python >3.11
    "torch;python_version<='3.11'",
    "tenacity"
]
docs = [
    "griffe>=1",
    "quartodoc>=0.7",
    # Quarto requires...
    "ipykernel",
    "nbclient",
    "nbformat",
    "pyyaml",
    # Articles require
    "ipywidgets",
    "pandas",
    "sentence-transformers",
    "numpy",
]
mcp = [
    "mcp>=1.4.0;python_version>='3.10'"
]
# Provider extras ----
anthropic = ["anthropic"]
bedrock-anthropic = ["anthropic[bedrock]"]
databricks = ["databricks-sdk"]
# Intentionally empty since these providers used to require 
# an additional openai install, but that's now included 
github = []
google = ["google-genai>=1.14.0"]
groq = []
ollama = []
openai = []
azure-openai = []
perplexity = []
# Version requirement avoids an install issue with recent Python versions.
# Remove it when snowflake-ml-python can be installed without a requirement.
snowflake = ["snowflake-ml-python<=1.9.0"]
vertex = ["google-genai>=1.14.0"]

[tool.uv]
dev-dependencies = [
    "ruff>=0.6.5",
    "tox-uv>=1.11.4",
]

[build-system]
requires = ["hatchling", "hatch-vcs"]
build-backend = "hatchling.build"

[tool.hatch.version]
source = "vcs"

# Need this to have github refs in dependencies
# [tool.hatch.metadata]
# allow-direct-references = true

[tool.hatch.build]
skip-excluded-dirs = true

[tool.hatch.build.hooks.vcs]
version-file = "chatlas/_version.py"

[tool.hatch.build.targets.wheel]
packages = ["chatlas"]
include = ["py.typed"]

[tool.pyright]
include = ["chatlas"]
exclude = ["_dev", ".venv"]

[tool.tox]
legacy_tox_ini = """
[tox]
env_list = type-py3{9,10,11,12}, py3{9,10,11,12}
isolated_build = True

[testenv]
package = wheel
wheel_build_env = .pkg
commands = pytest

[testenv:type]
deps = 
  pyright
  pytest
  syrupy
commands = pyright
"""

[tool.ruff]
src = ["chatlas"]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

line-length = 88
indent-width = 4

target-version = "py39"

[tool.ruff.lint]
select = ['E', 'F', 'W', 'A', 'PLC', 'PLE', 'PLW', 'I']
ignore = ["E501", "PLC0415"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = true
docstring-code-line-length = "dynamic"
