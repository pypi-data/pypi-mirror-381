import{s as b,n as i,d as l,i as x,a as d,c as w,h as S,e as v,o as C,m as T}from"./Cl1o3nVP.js";import{S as k,i as A}from"./nb9JOxVX.js";import{p as E}from"./B7v8dEzq.js";import{p as u,H as m,a as Q}from"./BMsvdb2i.js";const H=o=>{const e=atob(o),t=e.length,r=new Uint8Array(t);for(let s=0;s<t;s++)r[s]=e.charCodeAt(s);return u.inflate(r,{to:"string"})};function R(o){let e;return{c(){e=v("div"),this.h()},l(t){e=w(t,"DIV",{monitor:!0,id:!0,style:!0}),S(e).forEach(l),this.h()},h(){d(e,"monitor","barcode vision"),d(e,"id","barcode_vision"),d(e,"style",o[0])},m(t,r){x(t,e,r)},p:i,i,o:i,d(t){t&&l(e)}}}function D(o,e,t){let{found:r=()=>{}}=e,{styles:c={}}=e,s=E(Object.assign({},{height:"400px",width:"100%","max-width":"600px",margin:"0 auto"},c));const _=async(n,y)=>{const g=H(n);r({hexadecimal_string:g,decodedText:n,decodedResult:y})},h=function(){if(arguments[0]==="QR code parse error, error = NotFoundException: No MultiFormat Readers were able to detect the code."){console.info("The code was not visualized.");return}console.log("on_error",arguments)};let a;const f=()=>{const n={fps:10,qrbox:{width:500,height:500},formatsToSupport:[m.QR_CODE,m.AZTEC]};a=new Q("barcode_vision",n),a.render(_,h)},p=()=>{a&&a.pause()};return C(async()=>{f()}),T(async()=>{if(a)try{a.clear()}catch(n){console.error(n)}}),o.$$set=n=>{"found"in n&&t(1,r=n.found),"styles"in n&&t(2,c=n.styles)},[s,r,c,p]}class L extends k{constructor(e){super(),A(this,e,D,R,b,{found:1,styles:2,stop_the_scan:3})}get stop_the_scan(){return this.$$.ctx[3]}}const N=o=>{const e=new TextEncoder().encode(o),t=u.deflate(e);return btoa(String.fromCharCode(...new Uint8Array(t)))};export{L as T,N as p,H as u};
//# sourceMappingURL=Bj_oeoxi.js.map
