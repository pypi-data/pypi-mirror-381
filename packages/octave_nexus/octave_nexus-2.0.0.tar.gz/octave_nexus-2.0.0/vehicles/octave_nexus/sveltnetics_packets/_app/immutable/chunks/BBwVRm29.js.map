{"version":3,"file":"BBwVRm29.js","sources":["../../../../../../src/lib/trinkets/Barcode/Visual/make_with_zxing.js","../../../../../../src/lib/trinkets/Barcode/Visual/make.js","../../../../../../src/lib/trinkets/Barcode/Visual/Trinket.svelte"],"sourcesContent":["\n\n/*\n\tmake_with_zxing ({\n\t\tbarcode_element, \n\t\tpacked_hexadecimal_string,\n\t\tsize\n\t})\n*/\n\nimport { BrowserQRCodeSvgWriter } from '@zxing/browser';\n\n\n/*\n\t<pre\n\t\tstyle=\"\n\t\t\tdisplay: flex;\n\t\t\tjustify-content: center;\n\t\t\"\n\t>\n\t\t<code \n\t\t\tid=\"result\" \n\t\t\tbind:this={ barcode_element }\n\t\t></code>\n\t</pre>\n*/\nexport const make_with_zxing = ({\n\tbarcode_element,\n\tpacked_hexadecimal_string,\n\tsize\n}) => {\n\tconst code_writer = new BrowserQRCodeSvgWriter ()\n\tcode_writer.writeToDom (\n\t\tbarcode_element, \n\t\t// hexadecimal_string,\n\t\tpacked_hexadecimal_string,\n\n\t\tsize, \n\t\tsize\n\t)\n}","\n\n\n\n\n/*\n\timport { make_barcode } from '$lib/Barcode/make'\n\tmake_barcode ({\n\t\tbarcode_element,\n\t\thexadecimal_string: \"\"\n\t})\n*/\n\n/*\n\thttps://www.npmjs.com/package/pako\n*/\n\n\nimport { BrowserQRCodeSvgWriter } from '@zxing/browser';\nimport pako from 'pako';\n\nimport { pack_string } from '../_Screenplays/pack'\nimport { unpack_string } from '../_Screenplays/unpack'\n\nimport { make_with_zxing } from './make_with_zxing'\n// import { make_with_bwip } from './make_with_bwip'\n\n\nexport const make_barcode = ({\n\tbarcode_element, \n\thexadecimal_string,\n\tsize = 500\n}) => {\n\tconst packed_hexadecimal_string = pack_string (hexadecimal_string)\n\tconst unpacked_hexadecimal_string = unpack_string (packed_hexadecimal_string)\n\tconst equal = unpacked_hexadecimal_string === hexadecimal_string;\n\t\n\tif (equal !== true) {\n\t\tconsole.error ({\n\t\t\tequal,\n\t\t\tunpacked_hexadecimal_string,\n\t\t\thexadecimal_string,\n\t\t\tpacked_hexadecimal_string,\n\t\t\t\"packed_hexadecimal_string length\": packed_hexadecimal_string.length,\n\t\t\t\"hexadecimal_string length\": hexadecimal_string.length\n\t\t})\n\t\t\n\t\tthrow new Error (\"The bytecode packing failed.\")\n\t}\n\t\n\t/*\n\tmake_with_bwip ({\n\t\tbarcode_element, \n\t\tpacked_hexadecimal_string,\n\t\tsize\n\t})\n\t*/\n\t\n\tmake_with_zxing ({\n\t\tbarcode_element, \n\t\tpacked_hexadecimal_string,\n\t\tsize\n\t})\n\t\n\treturn;\n}\n\n","\n\n\n\n\n\n\n\n\n<script>\n\n/*\n\timport Barcode_Visual from '$lib/trinkets/Barcode/Visual/Trinket.svelte'\n\t<Barcode_Visual \n\t\thexadecimal_string={ }\n\t/>\n*/\n\n/*\n\thttps://www.npmjs.com/package/html5-qrcode\n*/\n\n///\n//\nimport { make_barcode } from './make'\nimport { loop } from '$lib/taverns/loop'\n//\nimport { onMount, onDestroy } from 'svelte';\n//\n//\\\nimport Alert_Info from '$lib/trinkets/Alerts/Info.svelte'\n\n//\n//\nlet use_zxing = \"yes\"\nlet use_bwip = \"no\"\n//\n//\nexport let hexadecimal_string = \"\"\n//\n//\nlet barcode_element = \"\"\nlet prepared = \"no\"\nlet make_queue = []\n//\n//\n\n$: {\n\tlet _hexadecimal_string = hexadecimal_string;\n\t\n\tmake_queue.push ({\n\t\thexadecimal_string\n\t})\n}\n\n\n\nconst make = ({\n\tthe_hexadecimal_string\n}) => {\n\tbarcode_element.innerHTML = '';\n\tprepared = \"no\"\n\t\n\tif (\n\t\ttypeof the_hexadecimal_string === 'string' && \n\t\tthe_hexadecimal_string.length >= 1\n\t) {\n\t\tmake_barcode ({\n\t\t\tbarcode_element,\n\t\t\thexadecimal_string: the_hexadecimal_string,\n\t\t\tsize: 400\n\t\t})\n\t\t\n\t\tprepared = \"yes\"\n\t}\n}\n\n\n/*\n\tMaybe there's better than a queue, but \n\tnot sure how to stop the barcode render function \n\tin the middle.\n*/\nconst loop_1 = loop ({\n\twait: 200,\n\twait_for_response: \"yes\",\n\taction: () => {\n\t\t// console.log ({ make_queue })\n\t\t\n\t\tif (make_queue.length >= 1) {\n\t\t\tconst entry = make_queue.shift ();\n\t\t\tmake ({\n\t\t\t\tthe_hexadecimal_string: entry.hexadecimal_string\n\t\t\t})\n\t\t}\n\t}\n})\n\n\n\n\nonMount (() => {\n\tloop_1.play ()\n\t\n\tmake_queue.push ({\n\t\thexadecimal_string\n\t})\n});\n\nonDestroy (() => {\n\tloop_1.stop ()\n})\n\n\n</script>\n\n\n<div \n\tmonitor=\"barcode visual\"\n\tclass=\"card variant-filled-surface\"\n>\t\t\n\t<div\n\t\tstyle=\"\n\t\t\tmax-width: 500px;\n\t\t\tmargin: 0 auto;\n\t\t\tpadding: 20px;\n\t\t\"\n\t>\n\t\t{#if prepared !== \"yes\"}\n\t\t<Alert_Info \n\t\t\ttext={ \"preparing barcode\" }\n\t\t\tprogress={{\n\t\t\t\tshow: \"yes\"\n\t\t\t}}\n\t\t/>\n\t\t{/if}\n\t\n\t\t{#if use_bwip === \"yes\"}\n\t\t<div \n\t\t\tbind:this={ barcode_element }\n\t\t\tstyle=\"\"\n\t\t></div>\n\t\t{/if}\n\t\t\n\t\t{#if use_zxing === \"yes\"}\n\t\t<pre\n\t\t\tstyle=\"\n\t\t\t\tdisplay: flex;\n\t\t\t\tjustify-content: center;\n\t\t\t\"\n\t\t>\n\t\t\t<code \n\t\t\t\tmonitor=\"zxing barcode\"\n\t\t\t\tbind:this={ barcode_element }\n\t\t\t></code>\n\t\t</pre>\n\t\t{/if}\n\t</div>\n</div>"],"names":["make_with_zxing","barcode_element","packed_hexadecimal_string","size","BrowserQRCodeSvgWriter","make_barcode","hexadecimal_string","pack_string","unpacked_hexadecimal_string","unpack_string","equal","insert_hydration","target","pre","anchor","append_hydration","code","if_block0","ctx","create_if_block_2","if_block2","create_if_block","div1","div0","dirty","$$props","prepared","make_queue","make","the_hexadecimal_string","$$invalidate","loop_1","loop","entry","onMount","onDestroy","$$value"],"mappings":"kYA0BO,MAAMA,EAAkB,CAAC,CAC/B,gBAAAC,EACA,0BAAAC,EACA,KAAAC,CACD,IAAM,CACe,IAAIC,EAAsB,EAClC,WACXH,EAEAC,EAEAC,EACAA,CACF,CACA,ECZaE,EAAe,CAAC,CAC5B,gBAAAJ,EACA,mBAAAK,EACA,KAAAH,EAAO,GACR,IAAM,CACL,MAAMD,EAA4BK,EAAaD,CAAkB,EAC3DE,EAA8BC,EAAeP,CAAyB,EACtEQ,EAAQF,IAAgCF,EAE9C,GAAII,IAAU,GACb,cAAQ,MAAO,CACd,MAAAA,EACA,4BAAAF,EACA,mBAAAF,EACA,0BAAAJ,EACA,mCAAoCA,EAA0B,OAC9D,4BAA6BI,EAAmB,MAChD,CAAA,EAEK,IAAI,MAAO,8BAA8B,EAWhDN,EAAiB,CAChB,gBAAAC,EACA,0BAAAC,EACA,KAAAC,CACA,CAAA,CAGF,oDCiEU,oBAEN,SAAA,CAAA,KAAM,KAAI,8MAkBZ,KACC,kBAGO;AAAA,GACR,0DALA,KACC,mDAGO;AAAA,GACR,0HAVAQ,EAUKC,EAAAC,EAAAC,CAAA,SAJJC,EAGOF,EAAAG,CAAA,4EA1BHC,EAAAC,OAAa,OAAKC,EAAA,EAgBlBC,EAAmBC,EAAAH,CAAA,oYA3B1BP,EAyCKC,EAAAU,EAAAR,CAAA,EArCJC,EAoCKO,EAAAC,CAAA,6DA7BCL,OAAa,qFAgBME,EAAA,EAAAF,EAAAM,CAAA,2FA1Gf,GAAA,CAAA,mBAAAlB,EAAqB,EAAC,EAAAmB,EAG7BxB,EAAkB,GAClByB,EAAW,KACXC,EAAU,CAAA,EAcR,MAAAC,EACL,CAAA,CAAA,uBAAAC,KAAA,KAEA5B,EAAgB,UAAY,GAAEA,CAAA,EAC9B6B,EAAA,EAAAJ,EAAW,IAAG,EAGN,OAAAG,GAA2B,UAClCA,EAAuB,QAAU,IAEjCxB,EAAY,CACX,gBAAAJ,EACA,mBAAoB4B,EACpB,KAAM,MAGPC,EAAA,EAAAJ,EAAW,KAAI,IAUXK,EAASC,EAAI,CAClB,KAAM,IACN,kBAAmB,MACnB,OAAM,IAAA,IAGDL,EAAW,QAAU,EAAC,OACnBM,EAAQN,EAAW,MAAK,EAC9BC,EAAI,CACH,uBAAwBK,EAAM,yBASlCC,EAAO,IAAA,CACNH,EAAO,KAAI,EAEXJ,EAAW,KACV,CAAA,mBAAArB,EAAA,IAIF6B,EAAS,IAAA,CACRJ,EAAO,KAAI,6CA6BG9B,EAAemC,oDAcdnC,EAAemC,oHAvG9BT,EAAW,KACV,CAAA,mBAAArB,EAAA"}