[build-system]
requires = [
    "hatchling",
    "hatch-gradle-version>=0.9.8",
]
build-backend = "hatchling.build"

# project metadata

[project]
name = "hexdoc-hexdebug"
description = "Python web book docgen and hexdoc plugin for HexDebug."
readme = "doc/README.md"
authors = [
    { name="object-Object" },
]
keywords = ["hexdoc"]
requires-python = ">=3.11"
dynamic = ["version", "dependencies", "optional-dependencies"]

[project.urls]
Homepage = "https://hexdebug.hexxy.media"
Source = "https://github.com/object-Object/HexDebug"

# Gradle version/deps

[tool.hatch.version]
scheme = "gradle"
source = "gradle-properties"
py-path = "doc/src/hexdoc_hexdebug/__version__.py"
key = "modVersion"
gradle-version-regex = { regex='^(.+?)(-.+)?$', repl='\1.{minecraftVersion}\2' }

[tool.hatch.metadata.hooks.version-catalog]
dependencies = [
    "hexdoc>=1!0.1.0a16",
    { package="hexdoc-hexcasting", op="~=", py-version="1.0", key="hexcasting" },
    { package="hexdoc-ioticblocks", op=">=", py-version="1.0", key="ioticblocks" },
]

[tool.hatch.metadata.hooks.version-catalog.optional-dependencies]
dev = [
    "ruff~=0.13.1",
]

# directory inclusion

[tool.hatch.build]
only-include = [
    "doc/src/hexdoc_hexdebug",
    "gradle.properties",
]
artifacts = [
    "/doc/src/hexdoc_hexdebug/_export/generated",
    "/doc/src/hexdoc_hexdebug/__gradle_version__.py",
]

[tool.hatch.build.targets.wheel]
sources = ["doc/src"]

# hexdoc entry points

[project.entry-points.hexdoc]
hexdebug = "hexdoc_hexdebug._hooks:HexDebugPlugin"

# linting/formatting

[tool.ruff]
extend-exclude = [
    "venv",
    "**/.*",
    "**/node_modules",
    "**/__pycache__",
]

[tool.ruff.lint]
preview = true
extend-select = [
    "I", # import sorting
    "RUF022", # __all__ sorting
]
extend-ignore = [
    # covered by Pyright
    "F821", # undefined variable
    "F401", # imported but unused
    "F841", # unused variable
]

[tool.ruff.lint.isort]
combine-as-imports = true

[tool.pyright]
pythonVersion = "3.11"
pythonPlatform = "All"

include = ["doc/src"]
extraPaths = ["doc/src"]
exclude = [
    "noxfile.py",
    "**/venv",
    "**/.*",
    "**/node_modules",
    "**/__pycache__",
]

typeCheckingMode = "standard"

strictDictionaryInference = true
strictListInference = true
strictSetInference = true

reportAssertAlwaysTrue = "error"
reportConstantRedefinition = "error"
reportDeprecated = "error"
reportDuplicateImport = "error"
reportFunctionMemberAccess = "error"
reportIncompatibleMethodOverride = "error"
reportIncompatibleVariableOverride = "error"
reportIncompleteStub = "error"
reportInconsistentConstructor = "error"
reportInvalidStringEscapeSequence = "error"
reportInvalidStubStatement = "error"
reportInvalidTypeVarUse = "error"
reportMatchNotExhaustive = "error"
reportMissingParameterType = "error"
reportMissingTypeStubs = "error"
reportOverlappingOverload = "error"
reportSelfClsParameterName = "error"
reportTypeCommentUsage = "error"
reportUnknownParameterType = "error"
reportUnnecessaryCast = "error"
reportUnnecessaryContains = "error"
reportUnsupportedDunderAll = "error"
reportUntypedBaseClass = "error"
reportUntypedClassDecorator = "error"
reportUntypedFunctionDecorator = "error"
reportUntypedNamedTuple = "error"
reportWildcardImportFromLibrary = "error"

reportMissingTypeArgument = "warning"
reportPrivateUsage = "warning"
reportUnknownArgumentType = "warning"
reportUnknownLambdaType = "warning"
reportUnknownMemberType = "warning"
reportUnknownVariableType = "warning"
reportUnnecessaryComparison = "warning"
reportUnnecessaryIsInstance = "warning"
reportUnusedClass = "warning"
reportUnusedExpression = "warning"
reportUnusedFunction = "warning"
reportUnusedImport = "warning"
reportUnusedVariable = "warning"
