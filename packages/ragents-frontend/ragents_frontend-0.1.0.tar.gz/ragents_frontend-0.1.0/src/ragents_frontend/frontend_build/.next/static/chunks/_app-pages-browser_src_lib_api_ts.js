"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(self["webpackChunk_N_E"] = self["webpackChunk_N_E"] || []).push([["_app-pages-browser_src_lib_api_ts"],{

/***/ "(app-pages-browser)/./src/lib/api.ts":
/*!************************!*\
  !*** ./src/lib/api.ts ***!
  \************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   apiClient: function() { return /* binding */ apiClient; },\n/* harmony export */   checkBackendAvailability: function() { return /* binding */ checkBackendAvailability; }\n/* harmony export */ });\n/**\n * API client for RAGents backend\n */ const API_BASE_URL = \"http://localhost:8000\" || 0;\nclass ApiClient {\n    async sendChatMessage(request) {\n        // Create an AbortController for manual timeout control\n        const controller = new AbortController();\n        const timeoutId = setTimeout(()=>controller.abort(), 120000); // 2 minutes timeout\n        try {\n            const response = await fetch(\"\".concat(this.baseUrl, \"/chat\"), {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(request),\n                signal: controller.signal\n            });\n            clearTimeout(timeoutId);\n            if (!response.ok) {\n                throw new Error(\"Chat API error: \".concat(response.statusText));\n            }\n            return response.json();\n        } catch (error) {\n            clearTimeout(timeoutId);\n            if (error instanceof Error && error.name === \"AbortError\") {\n                throw new Error(\"Request timed out - agent response took too long\");\n            }\n            throw error;\n        }\n    }\n    async uploadDocument(file, userId) {\n        const formData = new FormData();\n        formData.append(\"file\", file);\n        formData.append(\"user_id\", userId);\n        const response = await fetch(\"\".concat(this.baseUrl, \"/upload\"), {\n            method: \"POST\",\n            body: formData\n        });\n        if (!response.ok) {\n            throw new Error(\"Upload API error: \".concat(response.statusText));\n        }\n        return response.json();\n    }\n    async getDocuments(userId) {\n        const response = await fetch(\"\".concat(this.baseUrl, \"/documents?user_id=\").concat(userId));\n        if (!response.ok) {\n            throw new Error(\"Documents API error: \".concat(response.statusText));\n        }\n        return response.json();\n    }\n    async deleteDocument(documentId) {\n        const response = await fetch(\"\".concat(this.baseUrl, \"/documents/\").concat(documentId), {\n            method: \"DELETE\"\n        });\n        if (!response.ok) {\n            throw new Error(\"Delete API error: \".concat(response.statusText));\n        }\n    }\n    async healthCheck() {\n        try {\n            const response = await fetch(\"\".concat(this.baseUrl, \"/health\"));\n            return response.json();\n        } catch (error) {\n            throw new Error(\"Backend is not available\");\n        }\n    }\n    constructor(baseUrl = API_BASE_URL){\n        this.baseUrl = baseUrl;\n    }\n}\nconst apiClient = new ApiClient();\n// Helper function to check if backend is available\nasync function checkBackendAvailability() {\n    try {\n        await apiClient.healthCheck();\n        return true;\n    } catch (e) {\n        return false;\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LFVBQU07UUFDTixPQUFPO0lBQ1Q7QUFDRiIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvbGliL2FwaS50cz8yZmFiIl0sInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQVBJIGNsaWVudCBmb3IgUkFHZW50cyBiYWNrZW5kXG4gKi9cblxuaW1wb3J0IHsgQ2hhdE1lc3NhZ2UsIERvY3VtZW50LCBBZ2VudENvbmZpZyB9IGZyb20gJ0AvdHlwZXMnO1xuXG5jb25zdCBBUElfQkFTRV9VUkwgPSBwcm9jZXNzLmVudi5ORVhUX1BVQkxJQ19BUElfVVJMIHx8ICdodHRwOi8vbG9jYWxob3N0OjgwMDAnO1xuXG5leHBvcnQgaW50ZXJmYWNlIENoYXRSZXF1ZXN0IHtcbiAgbWVzc2FnZTogc3RyaW5nO1xuICBhZ2VudF90eXBlOiBzdHJpbmc7XG4gIHNlc3Npb25faWQ/OiBzdHJpbmc7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgQ2hhdFJlc3BvbnNlIHtcbiAgcmVzcG9uc2U6IHN0cmluZztcbiAgc2Vzc2lvbl9pZDogc3RyaW5nO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIERvY3VtZW50VXBsb2FkUmVzcG9uc2Uge1xuICBpZDogc3RyaW5nO1xuICBmaWxlbmFtZTogc3RyaW5nO1xuICBzdGF0dXM6IHN0cmluZztcbiAgbWVzc2FnZTogc3RyaW5nO1xufVxuXG5jbGFzcyBBcGlDbGllbnQge1xuICBwcml2YXRlIGJhc2VVcmw6IHN0cmluZztcblxuICBjb25zdHJ1Y3RvcihiYXNlVXJsOiBzdHJpbmcgPSBBUElfQkFTRV9VUkwpIHtcbiAgICB0aGlzLmJhc2VVcmwgPSBiYXNlVXJsO1xuICB9XG5cbiAgYXN5bmMgc2VuZENoYXRNZXNzYWdlKHJlcXVlc3Q6IENoYXRSZXF1ZXN0KTogUHJvbWlzZTxDaGF0UmVzcG9uc2U+IHtcbiAgICAvLyBDcmVhdGUgYW4gQWJvcnRDb250cm9sbGVyIGZvciBtYW51YWwgdGltZW91dCBjb250cm9sXG4gICAgY29uc3QgY29udHJvbGxlciA9IG5ldyBBYm9ydENvbnRyb2xsZXIoKTtcbiAgICBjb25zdCB0aW1lb3V0SWQgPSBzZXRUaW1lb3V0KCgpID0+IGNvbnRyb2xsZXIuYWJvcnQoKSwgMTIwMDAwKTsgLy8gMiBtaW51dGVzIHRpbWVvdXRcblxuICAgIHRyeSB7XG4gICAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKGAke3RoaXMuYmFzZVVybH0vY2hhdGAsIHtcbiAgICAgICAgbWV0aG9kOiAnUE9TVCcsXG4gICAgICAgIGhlYWRlcnM6IHtcbiAgICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgICB9LFxuICAgICAgICBib2R5OiBKU09OLnN0cmluZ2lmeShyZXF1ZXN0KSxcbiAgICAgICAgc2lnbmFsOiBjb250cm9sbGVyLnNpZ25hbCxcbiAgICAgIH0pO1xuXG4gICAgICBjbGVhclRpbWVvdXQodGltZW91dElkKTtcblxuICAgICAgaWYgKCFyZXNwb25zZS5vaykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYENoYXQgQVBJIGVycm9yOiAke3Jlc3BvbnNlLnN0YXR1c1RleHR9YCk7XG4gICAgICB9XG5cbiAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7XG4gICAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICAgIGNsZWFyVGltZW91dCh0aW1lb3V0SWQpO1xuICAgICAgaWYgKGVycm9yIGluc3RhbmNlb2YgRXJyb3IgJiYgZXJyb3IubmFtZSA9PT0gJ0Fib3J0RXJyb3InKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignUmVxdWVzdCB0aW1lZCBvdXQgLSBhZ2VudCByZXNwb25zZSB0b29rIHRvbyBsb25nJyk7XG4gICAgICB9XG4gICAgICB0aHJvdyBlcnJvcjtcbiAgICB9XG4gIH1cblxuICBhc3luYyB1cGxvYWREb2N1bWVudChmaWxlOiBGaWxlLCB1c2VySWQ6IHN0cmluZyk6IFByb21pc2U8RG9jdW1lbnRVcGxvYWRSZXNwb25zZT4ge1xuICAgIGNvbnN0IGZvcm1EYXRhID0gbmV3IEZvcm1EYXRhKCk7XG4gICAgZm9ybURhdGEuYXBwZW5kKCdmaWxlJywgZmlsZSk7XG4gICAgZm9ybURhdGEuYXBwZW5kKCd1c2VyX2lkJywgdXNlcklkKTtcblxuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goYCR7dGhpcy5iYXNlVXJsfS91cGxvYWRgLCB7XG4gICAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICAgIGJvZHk6IGZvcm1EYXRhLFxuICAgIH0pO1xuXG4gICAgaWYgKCFyZXNwb25zZS5vaykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBVcGxvYWQgQVBJIGVycm9yOiAke3Jlc3BvbnNlLnN0YXR1c1RleHR9YCk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTtcbiAgfVxuXG4gIGFzeW5jIGdldERvY3VtZW50cyh1c2VySWQ6IHN0cmluZyk6IFByb21pc2U8RG9jdW1lbnRbXT4ge1xuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goYCR7dGhpcy5iYXNlVXJsfS9kb2N1bWVudHM/dXNlcl9pZD0ke3VzZXJJZH1gKTtcblxuICAgIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihgRG9jdW1lbnRzIEFQSSBlcnJvcjogJHtyZXNwb25zZS5zdGF0dXNUZXh0fWApO1xuICAgIH1cblxuICAgIHJldHVybiByZXNwb25zZS5qc29uKCk7XG4gIH1cblxuICBhc3luYyBkZWxldGVEb2N1bWVudChkb2N1bWVudElkOiBzdHJpbmcpOiBQcm9taXNlPHZvaWQ+IHtcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKGAke3RoaXMuYmFzZVVybH0vZG9jdW1lbnRzLyR7ZG9jdW1lbnRJZH1gLCB7XG4gICAgICBtZXRob2Q6ICdERUxFVEUnLFxuICAgIH0pO1xuXG4gICAgaWYgKCFyZXNwb25zZS5vaykge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBEZWxldGUgQVBJIGVycm9yOiAke3Jlc3BvbnNlLnN0YXR1c1RleHR9YCk7XG4gICAgfVxuICB9XG5cbiAgYXN5bmMgaGVhbHRoQ2hlY2soKTogUHJvbWlzZTx7IHN0YXR1czogc3RyaW5nIH0+IHtcbiAgICB0cnkge1xuICAgICAgY29uc3QgcmVzcG9uc2UgPSBhd2FpdCBmZXRjaChgJHt0aGlzLmJhc2VVcmx9L2hlYWx0aGApO1xuICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKTtcbiAgICB9IGNhdGNoIChlcnJvcikge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKCdCYWNrZW5kIGlzIG5vdCBhdmFpbGFibGUnKTtcbiAgICB9XG4gIH1cbn1cblxuZXhwb3J0IGNvbnN0IGFwaUNsaWVudCA9IG5ldyBBcGlDbGllbnQoKTtcblxuLy8gSGVscGVyIGZ1bmN0aW9uIHRvIGNoZWNrIGlmIGJhY2tlbmQgaXMgYXZhaWxhYmxlXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gY2hlY2tCYWNrZW5kQXZhaWxhYmlsaXR5KCk6IFByb21pc2U8Ym9vbGVhbj4ge1xuICB0cnkge1xuICAgIGF3YWl0IGFwaUNsaWVudC5oZWFsdGhDaGVjaygpO1xuICAgIHJldHVybiB0cnVlO1xuICB9IGNhdGNoIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbn0iXSwibmFtZXMiOlsiQVBJX0JBU0VfVVJMIiwicHJvY2VzcyIsImVudiIsIk5FWFRfUFVCTElDX0FQSV9VUkwiLCJBcGlDbGllbnQiLCJzZW5kQ2hhdE1lc3NhZ2UiLCJyZXF1ZXN0IiwiY29udHJvbGxlciIsIkFib3J0Q29udHJvbGxlciIsInRpbWVvdXRJZCIsInNldFRpbWVvdXQiLCJhYm9ydCIsInJlc3BvbnNlIiwiZmV0Y2giLCJiYXNlVXJsIiwibWV0aG9kIiwiaGVhZGVycyIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5Iiwic2lnbmFsIiwiY2xlYXJUaW1lb3V0Iiwib2siLCJFcnJvciIsInN0YXR1c1RleHQiLCJqc29uIiwiZXJyb3IiLCJuYW1lIiwidXBsb2FkRG9jdW1lbnQiLCJmaWxlIiwidXNlcklkIiwiZm9ybURhdGEiLCJGb3JtRGF0YSIsImFwcGVuZCIsImdldERvY3VtZW50cyIsImRlbGV0ZURvY3VtZW50IiwiZG9jdW1lbnRJZCIsImhlYWx0aENoZWNrIiwiY29uc3RydWN0b3IiLCJhcGlDbGllbnQiLCJjaGVja0JhY2tlbmRBdmFpbGFiaWxpdHkiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/lib/api.ts\n"));

/***/ })

}]);