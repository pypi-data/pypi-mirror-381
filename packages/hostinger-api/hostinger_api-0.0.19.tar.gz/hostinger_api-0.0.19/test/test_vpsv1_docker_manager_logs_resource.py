# coding: utf-8

"""
    Hostinger API Python SDK

    API Version: 0.1.16

    NOTE: This file is auto-generated, DO NOT EDIT THIS FILE MANUALLY!
    If you want to contribute or request a new feature, please create an issue or pull request on https://github.com/hostinger/api
"""  # noqa: E501


import unittest

from hostinger_api.models.vpsv1_docker_manager_logs_resource import VPSV1DockerManagerLogsResource

class TestVPSV1DockerManagerLogsResource(unittest.TestCase):
    """VPSV1DockerManagerLogsResource unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> VPSV1DockerManagerLogsResource:
        """Test VPSV1DockerManagerLogsResource
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `VPSV1DockerManagerLogsResource`
        """
        model = VPSV1DockerManagerLogsResource()
        if include_optional:
            return VPSV1DockerManagerLogsResource(
                service = 'web',
                entries = [
                    hostinger_api.models.vps/v1/docker_manager/log_entry_resource.VPS.V1.DockerManager.LogEntryResource(
                        timestamp = '2024-01-15T10:30:45.123456Z', 
                        line = '127.0.0.1 - - [15/Jan/2024:10:30:45 +0000] "GET / HTTP/1.1" 200 612', )
                    ]
            )
        else:
            return VPSV1DockerManagerLogsResource(
        )
        """

    def testVPSV1DockerManagerLogsResource(self):
        """Test VPSV1DockerManagerLogsResource"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
