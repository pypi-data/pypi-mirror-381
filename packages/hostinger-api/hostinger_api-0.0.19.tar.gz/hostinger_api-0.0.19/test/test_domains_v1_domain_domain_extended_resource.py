# coding: utf-8

"""
    Hostinger API Python SDK

    API Version: 0.1.16

    NOTE: This file is auto-generated, DO NOT EDIT THIS FILE MANUALLY!
    If you want to contribute or request a new feature, please create an issue or pull request on https://github.com/hostinger/api
"""  # noqa: E501


import unittest

from hostinger_api.models.domains_v1_domain_domain_extended_resource import DomainsV1DomainDomainExtendedResource

class TestDomainsV1DomainDomainExtendedResource(unittest.TestCase):
    """DomainsV1DomainDomainExtendedResource unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> DomainsV1DomainDomainExtendedResource:
        """Test DomainsV1DomainDomainExtendedResource
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `DomainsV1DomainDomainExtendedResource`
        """
        model = DomainsV1DomainDomainExtendedResource()
        if include_optional:
            return DomainsV1DomainDomainExtendedResource(
                domain = 'mydomain.tld',
                status = 'active',
                message = '',
                is_privacy_protection_allowed = True,
                is_privacy_protected = False,
                is_lockable = True,
                is_locked = True,
                name_servers = {"ns1":"ns1.example.tld","ns2":"ns2.example.tld"},
                child_name_servers = {"ns1.example.tld":["258.231.55.321","258.231.55.322"]},
                domain_contacts = hostinger_api.models.domains_v1_domain_domain_extended_resource_domain_contacts.Domains_V1_Domain_DomainExtendedResource_domain_contacts(
                    admin_id = 114698, 
                    owner_id = 614698, 
                    billing_id = 154698, 
                    tech_id = 524248, ),
                created_at = '2025-02-27T11:54:22Z',
                updated_at = '2025-02-27T11:54:22Z',
                var_60_days_lock_expires_at = '2025-04-27T11:54:22Z',
                registered_at = '2025-02-27T12:54:22Z',
                expires_at = '2025-03-27T11:54:22Z'
            )
        else:
            return DomainsV1DomainDomainExtendedResource(
        )
        """

    def testDomainsV1DomainDomainExtendedResource(self):
        """Test DomainsV1DomainDomainExtendedResource"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
