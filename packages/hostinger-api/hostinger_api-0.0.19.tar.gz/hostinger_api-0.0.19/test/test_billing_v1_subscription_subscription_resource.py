# coding: utf-8

"""
    Hostinger API Python SDK

    API Version: 0.1.16

    NOTE: This file is auto-generated, DO NOT EDIT THIS FILE MANUALLY!
    If you want to contribute or request a new feature, please create an issue or pull request on https://github.com/hostinger/api
"""  # noqa: E501


import unittest

from hostinger_api.models.billing_v1_subscription_subscription_resource import BillingV1SubscriptionSubscriptionResource

class TestBillingV1SubscriptionSubscriptionResource(unittest.TestCase):
    """BillingV1SubscriptionSubscriptionResource unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BillingV1SubscriptionSubscriptionResource:
        """Test BillingV1SubscriptionSubscriptionResource
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BillingV1SubscriptionSubscriptionResource`
        """
        model = BillingV1SubscriptionSubscriptionResource()
        if include_optional:
            return BillingV1SubscriptionSubscriptionResource(
                id = 'Azz36nUfKX1S1MSF',
                name = 'KVM 1',
                status = 'active',
                billing_period = 1,
                billing_period_unit = 'day',
                currency_code = 'USD',
                total_price = 1799,
                renewal_price = 1799,
                is_auto_renewed = True,
                created_at = '2025-02-27T11:54:22Z',
                expires_at = '2025-03-27T11:54:22Z',
                next_billing_at = '2025-02-28T11:54:22Z'
            )
        else:
            return BillingV1SubscriptionSubscriptionResource(
        )
        """

    def testBillingV1SubscriptionSubscriptionResource(self):
        """Test BillingV1SubscriptionSubscriptionResource"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
