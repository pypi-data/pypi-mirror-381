# coding: utf-8

"""
    Hostinger API Python SDK

    API Version: 0.1.16

    NOTE: This file is auto-generated, DO NOT EDIT THIS FILE MANUALLY!
    If you want to contribute or request a new feature, please create an issue or pull request on https://github.com/hostinger/api
"""  # noqa: E501


import unittest

from hostinger_api.models.vpsv1_virtual_machine_purchase_request import VPSV1VirtualMachinePurchaseRequest

class TestVPSV1VirtualMachinePurchaseRequest(unittest.TestCase):
    """VPSV1VirtualMachinePurchaseRequest unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> VPSV1VirtualMachinePurchaseRequest:
        """Test VPSV1VirtualMachinePurchaseRequest
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `VPSV1VirtualMachinePurchaseRequest`
        """
        model = VPSV1VirtualMachinePurchaseRequest()
        if include_optional:
            return VPSV1VirtualMachinePurchaseRequest(
                item_id = 'hostingercom-vps-kvm2-usd-1m',
                payment_method_id = 1327362,
                setup = hostinger_api.models.vps/v1/virtual_machine/setup_request.VPS.V1.VirtualMachine.SetupRequest(
                    template_id = 1130, 
                    data_center_id = 19, 
                    post_install_script_id = 6324, 
                    password = 'oMeNRustosIO', 
                    hostname = 'my.server.tld', 
                    install_monarx = False, 
                    enable_backups = True, 
                    ns1 = '4.3.2.1', 
                    ns2 = '1.2.3.4', 
                    public_key = hostinger_api.models.vps_v1_virtual_machine_setup_request_public_key.VPS_V1_VirtualMachine_SetupRequest_public_key(
                        name = 'my-key', 
                        key = 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC2X...', ), ),
                coupons = [
                    ["Coupon 3"]
                    ]
            )
        else:
            return VPSV1VirtualMachinePurchaseRequest(
                item_id = 'hostingercom-vps-kvm2-usd-1m',
                setup = hostinger_api.models.vps/v1/virtual_machine/setup_request.VPS.V1.VirtualMachine.SetupRequest(
                    template_id = 1130, 
                    data_center_id = 19, 
                    post_install_script_id = 6324, 
                    password = 'oMeNRustosIO', 
                    hostname = 'my.server.tld', 
                    install_monarx = False, 
                    enable_backups = True, 
                    ns1 = '4.3.2.1', 
                    ns2 = '1.2.3.4', 
                    public_key = hostinger_api.models.vps_v1_virtual_machine_setup_request_public_key.VPS_V1_VirtualMachine_SetupRequest_public_key(
                        name = 'my-key', 
                        key = 'ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC2X...', ), ),
        )
        """

    def testVPSV1VirtualMachinePurchaseRequest(self):
        """Test VPSV1VirtualMachinePurchaseRequest"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
