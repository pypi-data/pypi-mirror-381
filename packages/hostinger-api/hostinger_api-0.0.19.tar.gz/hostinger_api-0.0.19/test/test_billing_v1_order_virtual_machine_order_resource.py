# coding: utf-8

"""
    Hostinger API Python SDK

    API Version: 0.1.16

    NOTE: This file is auto-generated, DO NOT EDIT THIS FILE MANUALLY!
    If you want to contribute or request a new feature, please create an issue or pull request on https://github.com/hostinger/api
"""  # noqa: E501


import unittest

from hostinger_api.models.billing_v1_order_virtual_machine_order_resource import BillingV1OrderVirtualMachineOrderResource

class TestBillingV1OrderVirtualMachineOrderResource(unittest.TestCase):
    """BillingV1OrderVirtualMachineOrderResource unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> BillingV1OrderVirtualMachineOrderResource:
        """Test BillingV1OrderVirtualMachineOrderResource
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `BillingV1OrderVirtualMachineOrderResource`
        """
        model = BillingV1OrderVirtualMachineOrderResource()
        if include_optional:
            return BillingV1OrderVirtualMachineOrderResource(
                order = hostinger_api.models.billing/v1/order/order_resource.Billing.V1.Order.OrderResource(
                    id = 2957086, 
                    subscription_id = 'Azz353Uhl1xC54pR0', 
                    status = 'completed', 
                    currency = 'USD', 
                    subtotal = 899, 
                    total = 1088, 
                    billing_address = hostinger_api.models.billing/v1/order/order_billing_address_resource.Billing.V1.Order.OrderBillingAddressResource(
                        first_name = 'John', 
                        last_name = 'Doe', 
                        company = '', 
                        address_1 = '', 
                        address_2 = '', 
                        city = '', 
                        state = '', 
                        zip = '', 
                        country = 'NL', 
                        phone = '', 
                        email = 'john@doe.tld', ), 
                    created_at = '2025-02-27T11:54:22Z', 
                    updated_at = '2025-03-27T11:54:22Z', ),
                virtual_machine = hostinger_api.models.vps/v1/virtual_machine/virtual_machine_resource.VPS.V1.VirtualMachine.VirtualMachineResource(
                    id = 17923, 
                    firewall_group_id = 56, 
                    subscription_id = 'Azz353Uhl1xC54pR0', 
                    data_center_id = 521, 
                    plan = 'KVM 4', 
                    hostname = 'srv17923.hstgr.cloud', 
                    state = 'running', 
                    actions_lock = 'unlocked', 
                    cpus = 4, 
                    memory = 8192, 
                    disk = 51200, 
                    bandwidth = 1073741824, 
                    ns1 = '1.1.1.1', 
                    ns2 = '8.8.8.8', 
                    ipv4 = [
                        hostinger_api.models.vps/v1/ip_address/ip_address_resource.VPS.V1.IPAddress.IPAddressResource(
                            id = 52347, 
                            address = '213.331.273.15', 
                            ptr = 'something.domain.tld', )
                        ], 
                    ipv6 = [
                        hostinger_api.models.vps/v1/ip_address/ip_address_resource.VPS.V1.IPAddress.IPAddressResource(
                            id = 52347, 
                            address = '213.331.273.15', 
                            ptr = 'something.domain.tld', )
                        ], 
                    template = hostinger_api.models.vps/v1/template/template_resource.VPS.V1.Template.TemplateResource(
                        id = 6523, 
                        name = 'Ubuntu 20.04 LTS', 
                        description = 'Ubuntu 20.04 LTS', 
                        documentation = 'https://docs.ubuntu.com', ), 
                    created_at = '2024-09-05T07:25:36Z', )
            )
        else:
            return BillingV1OrderVirtualMachineOrderResource(
        )
        """

    def testBillingV1OrderVirtualMachineOrderResource(self):
        """Test BillingV1OrderVirtualMachineOrderResource"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
