# coding: utf-8

"""
    Hostinger API Python SDK

    API Version: 0.1.16

    NOTE: This file is auto-generated, DO NOT EDIT THIS FILE MANUALLY!
    If you want to contribute or request a new feature, please create an issue or pull request on https://github.com/hostinger/api
"""  # noqa: E501


import unittest

from hostinger_api.models.vps_get_actions_v1200_response import VPSGetActionsV1200Response

class TestVPSGetActionsV1200Response(unittest.TestCase):
    """VPSGetActionsV1200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> VPSGetActionsV1200Response:
        """Test VPSGetActionsV1200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `VPSGetActionsV1200Response`
        """
        model = VPSGetActionsV1200Response()
        if include_optional:
            return VPSGetActionsV1200Response(
                data = [
                    hostinger_api.models.vps/v1/action/action_resource.VPS.V1.Action.ActionResource(
                        id = 8123712, 
                        name = 'action_name', 
                        state = 'success', 
                        created_at = '2025-02-27T11:54Z', 
                        updated_at = '2025-02-27T11:58Z', )
                    ],
                meta = hostinger_api.models.common/schema/pagination_meta_schema.Common.Schema.PaginationMetaSchema(
                    current_page = 1, 
                    per_page = 15, 
                    total = 100, )
            )
        else:
            return VPSGetActionsV1200Response(
        )
        """

    def testVPSGetActionsV1200Response(self):
        """Test VPSGetActionsV1200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
