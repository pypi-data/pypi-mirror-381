
[tool.ruff]
target-version = "py313"
line-length = 81
respect-gitignore = true   # Буде враховувати правила з gitignore
exclude = [
    ".git",
    ".venv",
    "venv",
    "__pycache__",
    ".mypy_cache",
    ".pytest_cache",
    ".idea",
    "docker",
    "tests",
]
force-exclude = true

[tool.ruff.format]
preview = true

[tool.ruff.lint]
preview = true
select = [
    "E",     # pycodestyle errors
    "W",     # pycodestyle warnings
    "F",     # Pyflakes
    "N",     # pep8-naming
    "UP",    # pyupgrade
    "ASYNC", # flake8-async
    "ANN",   # flake8-annotations
    "A",     # flake8-builtins
    "I",     # isort
    "YTT",   # flake8-2020
    "C4",    # flake8-comprehensions
    "T10",   # flake8-debugger
    "T20",   # flake8-print
    "SIM",   # flake8-simplify
    "ICN",   # flake8-import-conventions
    "B",     # flake8-bugbear
    "PIE",   # flake8-pie
    "PYI",   # flake8-pyi
    "PT",    # flake8-pytest-style
    "Q",     # flake8-quotes
    "RSE",   # flake8-raise
    "RET",   # flake8-return
    "SLOT",  # flake8-slots
    "TC",    # flake8-type-checking
    "PTH",   # flake8-pathlib
    "FLY",   # flake8-flynt
    "PERF",  # Perflint
    "PL",    # Pylint
    "RUF",   # ruff-specific
    "TID252",
    "TID251",
]
#extend-select = ["SIM300", "SIM210"]
ignore = [
    "ANN401",  # typing.Any are disallowed
    "ANN002",  # Missing type annotation for `*args`
    "ANN003",  # Missing type annotation for `**kwargs`
    "B018",
    "B023",
    "B904",
    "B905",
    "B026",
    "E203",
    "N806",    # lowcase in var
    "N818",    # Exception name `AnalyticResultException` should be named with an Error suffix
    "PLR2004",
    "PLR2044",
    "PLR0904",  # Too many public methods
    "PLR0912",
    "PLR0913",  # Too many arguments in function definition
    "PLR0914",
    "PLR0915",
    "PLR0917",  # Too many positional argument
    "PLR1702",
    "PLR6301",
    "PLW0120",
    "PLW0129",
    "RET503",
    "RUF001",
    "RUF002",
    "RUF003",
    "RUF010",  # new rules with str
    "RUF012",
    "RUF013",  # PEP 484 prohibits implicit `Optional`
    "RUF015",
    "RUF022",
    "RUF023",
    "RUF034",
    "RUF052",
    "RUF100",  # skip noqa
    "RUF101",
    "SIM102",
    "SIM108",
    "SIM113",  # Use `enumerate()` for index
    "SIM114",
    "SIM118",
    "N812",    # imported as non-lowercase
]

# skip rules in:
[tool.ruff.lint.per-file-ignores]
"tests/*" = ["ANN", "PT011"]

[tool.ruff.lint.isort.sections]
STDLIB = ["STDLIB"]
THIRDPARTY = [
    "pytest",
    "selenium",
    "allure",
    "urllib3",
    "bs4",
    "json_checker",
]

LOCALFOLDER = ["promium"]
TESTSFOLDER = ["tests"]


[tool.ruff.lint.isort]
split-on-trailing-comma = true
combine-as-imports = true
lines-after-imports = 2
default-section = "STDLIB"

section-order = [
    "STDLIB",
    "THIRDPARTY",
    "LOCALFOLDER",
    "TESTSFOLDER",
]
relative-imports-order = "closest-to-furthest"

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"  # заборонити відносний імпорт

[tool.ruff.lint.flake8-tidy-imports.banned-api]
"requests".msg = "❌використовуй 'urllib3'"
