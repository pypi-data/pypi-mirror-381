[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "h2integrate"
dynamic = ["version"]
authors = [
  {name = "Kaitlin Brunik"},
  {name = "Elenya Grant"},
  {name = "Jared Thomas"},
  {name = "Genevieve Starke"},
  {name = "Jonathan Martin"},
  {name = "Dakota Ramos"},
  {name = "Mariya Koleva"},
  {name = "Evan Reznicek"},
  {name = "Rob Hammond"},
  {name = "Brooke Stanislawski"},
  {name = "Charlie Kiefer"},
  {name = "Cameron Irmas"},
  {name = "Sanjana Vijayshankar"},
  {name = "Nicholas Riccobono"},
  {name = "Corey Frontin"},
  {name = "Caitlyn Clark"},
  {name = "Aaron Barker"},
  {name = "Abhineet Gupta"},
  {name = "Benjamin Kee"},
  {name = "Jennifer King"},
]
maintainers = [
  {name = "John Jasa", email = "john.jasa@nrel.gov"},
  {name = "Christopher Bay", email = "christopher.bay@nrel.gov"},
]
readme = {file = "README.md", content-type = "text/markdown"}
description = "Holistic Hybrids Optimization and Design Tool"
requires-python = ">=3.11, <3.14"
license = {file = "LICENSE"}
dependencies = [
    "attrs",
    "CoolProp<7.0.0",
    "floris==4.3",
    "geopy",
    "hopp>=3.3.0",
    "jsonschema",
    "matplotlib",
    "multiprocessing-on-dill",
    "numpy",
    "numpy-financial",
    "openmdao>=3.40.0",
    "openpyxl",
    "orbit-nrel",
    "pandas>=2.0.3",
    "ProFAST",
    "Pyomo>=6.1.2",
    "rainflow",
    "ruamel.yaml",
    "scipy",
    "wombat>=0.11",
]
keywords = [
    "python3",
    "hybrid-energy",
    "wind-energy",
    "solar-energy",
    "layout-optimization",
]
classifiers = [  # https://pypi.org/classifiers/
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Other Audience",
    "License :: OSI Approved :: BSD License",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

[project.urls]
source = "https://github.com/NREL/H2Integrate"
documentation = "https://h2integrate.readthedocs.io/"
issues = "https://github.com/NREL/H2Integrate/issues"
changelog = "https://github.com/NREL/H2Integrate/blob/main/CHANGELOG.md"

[project.optional-dependencies]
develop = [
    "pre-commit",
    "isort",
    "ruff",
    "pytest",
    "pytest-subtests",
    "responses",
    "Plotly",
    "jupyter-book",
    "sphinxcontrib-napoleon"
]
examples = ["jupyterlab"]
all = ["h2integrate[develop,examples]"]

[tool.setuptools]
include-package-data = true

[tool.setuptools.packages]
find = {}

[tool.setuptools.dynamic]
version = {attr = "h2integrate.__version__"}

[tool.coverage.report]
exclude_lines = ["# pragma: no cover"]

[tool.coverage.run]
# Coverage.py configuration file
# https://coverage.readthedocs.io/en/latest/config.html
branch = true
source = ["h2integrate/*"]
omit = [
  "tests/*"
]

[tool.isort]
src_paths = ["h2integrate", "tests"]
skip = ["__init__.py"]
multi_line_output = 3
sections = [
  "FUTURE",
  "STDLIB",
  "THIRDPARTY",
  "FIRSTPARTY",
  "LOCALFOLDER",
]
known_first_party = "h2integrate"
known_local_folder = "tests"
combine_as_imports = true
force_grid_wrap = 0
include_trailing_comma = true
use_parentheses = true
length_sort = true
lines_after_imports = 2
line_length = 100

[tool.ruff]
src = ["h2integrate", "tests"]
line-length = 100
target-version = "py310"
fix = true
exclude = [
  ".git",
  "__pycache__",
  "docs/source/conf.py",
  "old",
  "build",
  "dist",
  "^tests/",
  ".ruff_cache",
]

[tool.ruff.lint]
fixable = ["ALL"]
unfixable = []

# https://docs.astral.sh/ruff/rules/
select = [
  "F",
  "E",
  "W",
  # "N",  # TODO: renaming needs to be seriously cleaned up prior to using
  "C4",
  # "D",  # leave out until rebrand/refactor
  "UP",
  "BLE",
  # "FBT",  # TODO: consider alongside rebrand/refactor
  "B",
  "A",
  "LOG",
  "G",
  # "PT",  # TODO: very tedious for now
  "NPY",
  "PD",
  "PTH",
  "PERF",
  "Q",
  "FURB",
  "RUF",
]

ignore = [
  "E731",
  "E402",
  "D202",
  "D212",
  "C901",
  "D205",
  "D401",
  "PD901",
  "PERF203",
  "PD011",
  "RUF015",
  "UP038",  # NOTE: integrate with Python >= 3.10
  "N806",  # NOTE: many variable names use an uppercase for legitimate reasons
  "N802",  # NOTE: many function names use an uppercase for legitimate reasons
  "B905",

  # TODO: People who wrote warnings should decide on the appropriate stacklevel
  "B028",

  # TODO: People responsible for these errors will need to fix them accordingly as they are bugs
  "B006",
  "B008",
  "B023",
]

[tool.ruff.lint.per-file-ignores]
"*/__init__.py" = ["E501", "D104", "F401", "F403"]  # NOTE: F403 discouraged
"tests/*" = ["D100", "D101", "D102", "D103"]
"h2integrate/to_organize/gradient_free.py" = ["NPY002"]  # TODO: new NumPy needs to be addressed
"h2integrate/to_organize/inputs_py.py" = ["F821"]  # TODO: there are zero inputs, but many vars

[tool.ruff.lint.pycodestyle]
ignore-overlong-task-comments = true

[tool.ruff.lint.pydocstyle]
convention = "google"


[tool.ruff.format]
quote-style = "double"
indent-style = "space"
docstring-code-format = true
