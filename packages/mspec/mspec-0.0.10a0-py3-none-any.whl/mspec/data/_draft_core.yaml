types:
    cid:
        type: str

    tags:
        type: list
        element_type: string

    hierarchy:
        type: list
        element_type: string

    meta:
        type: object
        fields:
            data:
                type: object
            tags:
                type: tags
            loc:
                type: hierarchy

    context:
        type: object
        fields:
            id:
                type: str
            source:
                type: str
            meta:
                type: meta

    entity:
        type: object
        fields:
            id:
                type: cid
            type:
                type: str
                enum:
                    - user
                    - profile
                    - group_profile

    permissions:
        type: object
        fields:
            read:
                type: str
                help: "public, private, inherit, or cid of acl"
            write:
                type: str
                help: "public, private, inherit, or cid of acl"
            delete:
                type: str
                help: "public, private, inherit, or cid of acl"

models:
    user:
        fields:
            name:
                type: str
            email:
                type: str
            profile:
                type: cid

    user_session:
        fields:
            user:
                type: cid
            token:
                type: str
            expires:
                type: datetime

    user_password_hash:
        fields:
            user:
                type: cid
            hash:
                type: str
            salt:
                type: str

    profile:
        fields:
            name:
                type: str
            bio:
                type: str
            meta:
                type: meta

    acl:
        fields:
            name:
                type: str
            admin:
                type: entity
                
    acl_entry:
        fields:
            acl:
                type: cid
            entity:
                type: entity

    attachment:
        fields:
            item:
                type: cid
                help: "reference cid to the item being attached"
            to:
                type: cid
                help: "reference cid that `item` is being attached to"

    reference:
        fields:
            cid:
                type: cid
            name:
                type: str
            meta:
                type: meta
            perms:
                type: permissions
        
        ops:
            current:
                help: db query for version.ref == self.cid, sort by time and take most recent
            versions:
                help: db query returning version where version.ref == self.cid

    version:
        fields:
            name:
                type: str
            meta:
                type: meta
            perms:
                type: permissions

            type:
                type: str
                help: "file, image, video, audio, text, etc"

            ref:
                type: cid
                help: reference to the item this version is for
            hash:
                type: str
            size:
                type: int
            datetime:
                type: datetime
        
            cid:
                help: generated from hash/size/etc on this object

        ops:
            previous:
                type: str
                help: previous version cid for reference, if empty string this is first version in series
            next:
                help: db query to return version where previous == self.cid
