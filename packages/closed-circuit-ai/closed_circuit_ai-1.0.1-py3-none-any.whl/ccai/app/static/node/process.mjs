var v=function(){};function u(e,t={}){v.prototype.name=e;let r={};return new Proxy(v,{get(n,a){return a==="caller"?null:a==="__createMock__"?u:a==="__unenv__"?!0:a in t?t[a]:r[a]=r[a]||u(`${e}.${a.toString()}`)},apply(n,a,o){return u(`${e}()`)},construct(n,a,o){return u(`[${e}]`)},enumerate(){return[]}})}var d=u("mock");function m(e){return new Error(`[unenv] ${e} is not implemented yet!`)}function s(e){return Object.assign(()=>{throw m(e)},{__unenv__:!0})}var b=Object.freeze(Object.create(null,{__unenv__:{get:()=>!0}})),p=Object.create(null),h=globalThis.process?.env,l=e=>h||globalThis.__env__||(e?p:globalThis),x=new Proxy(p,{get(e,t){return l()[t]??p[t]},has(e,t){let r=l();return t in r||t in p},set(e,t,r){let n=l(!0);return n[t]=r,!0},deleteProperty(e,t){let r=l(!0);return delete r[t],!0},ownKeys(){let e=l();return Object.keys(e)}}),k=Object.assign(function(e){let t=Date.now(),r=Math.trunc(t/1e3),n=t%1e3*1e6;if(e){let a=r-e[0],o=n-e[0];return o<0&&(a=a-1,o=1e9+o),[a,o]}return[r,n]},{bigint:function(){return BigInt(Date.now()*1e6)}}),E=globalThis.queueMicrotask?(e,...t)=>{globalThis.queueMicrotask(e.bind(void 0,...t))}:M();function M(){let e=[],t=!1,r,n=-1;function a(){!t||!r||(t=!1,r.length>0?e=[...r,...e]:n=-1,e.length>0&&o())}function o(){if(t)return;let g=setTimeout(a);t=!0;let c=e.length;for(;c;){for(r=e,e=[];++n<c;)r&&r[n]();n=-1,c=e.length}r=void 0,t=!1,clearTimeout(g)}return(g,...c)=>{e.push(g.bind(void 0,...c)),e.length===1&&!t&&setTimeout(o)}}var w="unenv",L=[],y="",C={ares:"",http_parser:"",icu:"",modules:"",node:"",openssl:"",uv:"",v8:"",zlib:""};function i(){return _}var P=i,U=i,O=i,A=i,j=i,N=i,T=function(e){return e==="message"||e==="multipleResolves"?_:!1},R=i,I=i,S=function(e){return[]},B=()=>0,D=function(e){throw new Error("[unenv] process.binding is not supported")},f="/",F=function(){return f},$=function(e){f=e},q=function(){return 0},z=function(){return 1e3},H=function(){return 1e3},W=function(){return 1e3},K=function(){return 1e3},G=function(){return[]},J=e=>{},Q=s("process.abort"),V=new Set,X="",Y="",Z=b,ee=!1,se=()=>0,te=()=>0,re=s("process.cpuUsage"),ae=0,ne=s("process.dlopen"),ie=i,oe=i,ce=s("process.eventNames"),ue=[],le="",de=s("process.exit"),pe=Object.create({inspector:void 0,debug:void 0,uv:void 0,ipv6:void 0,tls_alpn:void 0,tls_sni:void 0,tls_ocsp:void 0,tls:void 0,cached_builtins:void 0}),ge=()=>[],_e=s("process.getMaxListeners"),ve=s("process.kill"),fe=Object.assign(()=>({arrayBuffers:0,rss:0,external:0,heapTotal:0,heapUsed:0}),{rss:()=>0}),me=1e3,be="",he=1e3,xe=s("process.rawListeners"),ke=Object.create({name:"",lts:"",sourceUrl:void 0,headersUrl:void 0}),Ee=Object.create({compact:void 0,directory:void 0,filename:void 0,getReport:s("process.report.getReport"),reportOnFatalError:void 0,reportOnSignal:void 0,reportOnUncaughtException:void 0,signal:void 0,writeReport:s("process.report.writeReport")}),Me=s("process.resourceUsage"),we=s("process.setegid"),Le=s("process.seteuid"),ye=s("process.setgid"),Ce=s("process.setgroups"),Pe=s("process.setuid"),Ue=s("process.setMaxListeners"),Oe=s("process.setSourceMapsEnabled"),Ae=d.__createMock__("process.stdout"),je=d.__createMock__("process.stderr"),Ne=d.__createMock__("process.stdin"),Te=!1,Re=()=>0,Ie=0,Se=s("process.setUncaughtExceptionCaptureCallback"),Be=()=>!1,De=!1,Fe=s("process.loadEnvFile"),$e=void 0,qe={has:()=>!1},ze={ref(){},unref(){}},He=!1,We={register(){},unregister(){},registerBeforeExit(){}},Ke=s("process.assert"),Ge=s("process.openStdin"),Je=s("process._debugEnd"),Qe=s("process._debugProcess"),Ve=s("process._fatalException"),Xe=s("process._getActiveHandles"),Ye=s("process._getActiveRequests"),Ze=s("process._kill"),es=[],ss=s("process._rawDebug"),ts=s("process._startProfilerIdleNotifier"),rs=s("process.__stopProfilerIdleNotifier"),as=s("process._tickCallback"),hs=s("process._linkedBinding"),ns=void 0,is=s("process.initgroups"),os=[],cs=i,us=!1,ls=[],ds=0,ps=0,_={_events:ls,_eventsCount:ds,_exiting:us,_maxListeners:ps,_debugEnd:Je,_debugProcess:Qe,_fatalException:Ve,_getActiveHandles:Xe,_getActiveRequests:Ye,_kill:Ze,_preload_modules:es,_rawDebug:ss,_startProfilerIdleNotifier:ts,_stopProfilerIdleNotifier:rs,_tickCallback:as,domain:ns,initgroups:is,moduleLoadList:os,reallyExit:cs,exitCode:Ie,abort:Q,addListener:U,allowedNodeEnvironmentFlags:V,hasUncaughtExceptionCaptureCallback:Be,setUncaughtExceptionCaptureCallback:Se,loadEnvFile:Fe,sourceMapsEnabled:De,throwDeprecation:He,mainModule:$e,permission:qe,channel:ze,arch:X,argv:L,argv0:Y,assert:Ke,binding:D,chdir:$,config:Z,connected:ee,constrainedMemory:se,availableMemory:te,cpuUsage:re,cwd:F,debugPort:ae,dlopen:ne,disconnect:ie,emit:T,emitWarning:oe,env:x,eventNames:ce,execArgv:ue,execPath:le,exit:de,finalization:We,features:pe,getBuiltinModule:J,getegid:z,geteuid:H,getgid:W,getgroups:G,getuid:K,getActiveResourcesInfo:ge,getMaxListeners:_e,hrtime:k,kill:ve,listeners:S,listenerCount:B,memoryUsage:fe,nextTick:E,on:P,off:A,once:O,openStdin:Ge,pid:me,platform:be,ppid:he,prependListener:R,prependOnceListener:I,rawListeners:xe,release:ke,removeAllListeners:N,removeListener:j,report:Ee,resourceUsage:Me,setegid:we,seteuid:Le,setgid:ye,setgroups:Ce,setuid:Pe,setMaxListeners:Ue,setSourceMapsEnabled:Oe,stderr:je,stdin:Ne,stdout:Ae,title:w,traceDeprecation:Te,umask:q,uptime:Re,version:y,versions:C},xs=_;export{Je as _debugEnd,Qe as _debugProcess,ls as _events,ds as _eventsCount,us as _exiting,Ve as _fatalException,Xe as _getActiveHandles,Ye as _getActiveRequests,Ze as _kill,hs as _linkedBinding,ps as _maxListeners,es as _preload_modules,ss as _rawDebug,ts as _startProfilerIdleNotifier,rs as _stopProfilerIdleNotifier,as as _tickCallback,Q as abort,U as addListener,V as allowedNodeEnvironmentFlags,X as arch,L as argv,Y as argv0,Ke as assert,te as availableMemory,D as binding,$ as chdir,Z as config,se as constrainedMemory,re as cpuUsage,F as cwd,ae as debugPort,xs as default,ne as dlopen,ns as domain,T as emit,oe as emitWarning,x as env,ce as eventNames,ue as execArgv,le as execPath,de as exit,Ie as exitCode,pe as features,We as finalization,ge as getActiveResourcesInfo,J as getBuiltinModule,_e as getMaxListeners,z as getegid,H as geteuid,W as getgid,G as getgroups,K as getuid,Be as hasUncaughtExceptionCaptureCallback,k as hrtime,is as initgroups,ve as kill,B as listenerCount,S as listeners,Fe as loadEnvFile,fe as memoryUsage,os as moduleLoadList,E as nextTick,A as off,P as on,O as once,Ge as openStdin,me as pid,be as platform,he as ppid,R as prependListener,I as prependOnceListener,_ as process,xe as rawListeners,cs as reallyExit,ke as release,N as removeAllListeners,j as removeListener,Ee as report,Me as resourceUsage,Ue as setMaxListeners,Oe as setSourceMapsEnabled,Se as setUncaughtExceptionCaptureCallback,we as setegid,Le as seteuid,ye as setgid,Ce as setgroups,Pe as setuid,De as sourceMapsEnabled,je as stderr,Ne as stdin,Ae as stdout,w as title,q as umask,Re as uptime,y as version,C as versions};
