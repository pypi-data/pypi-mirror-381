from __future__ import annotations

"""Public helpers to clear bec_qthemes icon/template caches (in-memory and on-disk).

This clears:
- On-disk SVG caches generated by filters:
  - <repo>/.cache/bec_qthemes/v<version>/<theme_key>/svg_cache
  - <repo>/.cache/bec_qthemes/v<version>/<theme_key>/material_icons_svg
- In-memory memo tables and lru_caches used by:
  - bec_qthemes._template.filter
  - bec_qthemes._icon.material_icons
  - bec_qthemes._icon.svg_util

New options:
- purge=True will remove entire theme cache folders (when a theme_key is provided) or the
  entire version cache root when theme_key is None.
- Without purge, empty directories left behind are cleaned up automatically.
"""

from pathlib import Path
import re
import shutil

from bec_qthemes._util import get_cash_root_path, get_project_version_from_pyproject


def _sanitize_key(name: str) -> str:
    """Return a filesystem-safe key (lowercase, spaces -> -, strip invalid).

    Duplicated here to avoid importing the heavy template filter module just for this.
    """
    name = name.strip().lower()
    name = name.replace(" ", "-")
    name = re.sub(r"[^a-z0-9._-]", "_", name)
    name = re.sub(r"_+", "_", name).strip("_.-")
    return name or "default"


def _rmdir_if_empty(path: Path) -> None:
    """Remove directory if empty, walking up while parents become empty under cache root."""
    try:
        if not path.exists() or not path.is_dir():
            return
        # Only remove leaf if empty
        try:
            next(path.iterdir())
            return  # not empty
        except StopIteration:
            pass
        path.rmdir()
    except Exception:
        pass


def _clear_disk(theme_key: str | None = None, purge: bool = False) -> None:
    """Remove cached SVG files on disk.

    If theme_key is None, clears all theme subdirectories under the versioned cache root.
    When purge=True, remove entire theme folders (or the whole version cache root if theme_key is None).
    """
    version = get_project_version_from_pyproject()
    root = get_cash_root_path(version)
    if not root.exists():
        return

    def _clear_under(base: Path) -> None:
        if purge:
            try:
                if base.exists():
                    shutil.rmtree(base, ignore_errors=True)
                return
            except Exception:
                return
        # Non-purge: remove known subfolders, then clean empty dirs
        for name in ("svg_cache", "material_icons_svg"):
            p = base / name
            try:
                if p.exists():
                    shutil.rmtree(p, ignore_errors=True)
            except Exception:
                pass
        # Cleanup empty theme folder
        _rmdir_if_empty(base)

    if theme_key:
        sanitized = _sanitize_key(theme_key)
        _clear_under(root / sanitized)
        # After removing theme folder, try to cleanup empty version root if no themes remain
        try:
            _rmdir_if_empty(root)
        except Exception:
            pass
    else:
        if purge:
            try:
                shutil.rmtree(root, ignore_errors=True)
            except Exception:
                pass
        else:
            # Clear all known theme subfolders
            for child in list(root.iterdir()):
                if child.is_dir():
                    _clear_under(child)
            # Cleanup empty version root
            _rmdir_if_empty(root)


def _clear_memory() -> None:
    """Clear in-memory caches and memoization structures."""
    # Template filter memo/path caches
    try:
        from bec_qthemes._template import filter as template_filter

        try:
            template_filter._PATH_MEMO.clear()
        except Exception:
            pass
        # Reset JSON icon caches so they reload if needed
        try:
            template_filter._ICONS_DATA = None  # type: ignore[attr-defined]
            template_filter._ICONS_FILLED_DATA = None  # type: ignore[attr-defined]
        except Exception:
            pass
    except Exception:
        pass

    # Material icons JSON lru_caches
    try:
        from bec_qthemes._icon import material_icons as mi

        try:
            mi._material_icons.cache_clear()  # type: ignore[attr-defined]
        except Exception:
            pass
        try:
            mi._material_icons_filled.cache_clear()  # type: ignore[attr-defined]
        except Exception:
            pass
    except Exception:
        pass

    # SVG resources lru_cache
    try:
        from bec_qthemes._icon import svg_util as su

        try:
            su._svg_resources.cache_clear()  # type: ignore[attr-defined]
        except Exception:
            pass
    except Exception:
        pass


def clear_svg_cache(theme_key: str | None = None, purge: bool = False) -> None:
    """Clear SVG icon caches (disk + memory).

    Args:
        theme_key: Optional theme cache key or theme name to clear only that theme's cache
                   directory. When None (default), clears all theme caches for the current
                   project version.
        purge: When True, remove the entire theme folder (if theme_key is set) or the entire
               version cache root (if theme_key is None). When False (default), only the known
               cache subfolders are removed and empty directories are cleaned up.

    Safe to call at any time; missing paths are ignored and failures are best-effort.
    """
    _clear_disk(theme_key, purge=purge)
    _clear_memory()
