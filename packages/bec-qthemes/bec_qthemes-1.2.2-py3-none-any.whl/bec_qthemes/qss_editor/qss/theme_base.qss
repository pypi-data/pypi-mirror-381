
/* --------------------------------------------------------------------- */
/* Main App native Components ------------------------------------------ */
/* --------------------------------------------------------------------- */
QMenuBar {
    background-color: %%CARD_BG%%;
    border-bottom: 1px solid %%BORDER%%;
}

QStatusBar{
    background-color: %%CARD_BG%%;
    border-top: 1px solid %%BORDER%%;
}
/* --------------------------------------------------------------------- */
/* Buttons ------------------------------------------------------------- */
/* --------------------------------------------------------------------- */

/* QPushButton â€” transparent with border, PRIMARY for interactions */
QPushButton {
  background: %%FIELD_BG%%; /* to discuss */
/*  color: %%FG%%;*/
  border: 1px solid %%BORDER%%;
  border-radius: %%RADIUS_SMALL%%;
  padding: 4px 6px;
}
QPushButton:hover {
  border-color: {{ PRIMARY_LIGHT }};
  background: {{ PRIMARY_LIGHT }};
  color: {{ BG }}; /* reverse to increase contrast */
}
QPushButton:focus { border-color: {{ PRIMARY }}; }
QPushButton:pressed {
  background: %%PRIMARY_DARK%% ;
  border-color: %%PRIMARY_DARK%% ;
  color: %%ON_PRIMARY%% ;
}
QPushButton:disabled {
  color: %%DISABLED_FG%%;
  background: %%DISABLED_BG%%;
  border-color: %%DISABLED_BORDER%%;
}

/* Default and toggled states use PRIMARY */
QPushButton:default,
QPushButton:checked {
  background: %%PRIMARY%%;
  color: %%ON_PRIMARY%%;
  border: 1px solid %%PRIMARY%%;
}
QPushButton:default:hover,
QPushButton:checked:hover { background: {{ PRIMARY_LIGHT }}; }
QPushButton:default:pressed,
QPushButton:checked:pressed { background: {{ PRIMARY_DARK }}; }

/* Variants via dynamic property `variant` */
QPushButton[variant="primary"] {
  background: {{ PRIMARY }};
  color: {{ ON_PRIMARY }};
  border: 1px solid {{ PRIMARY }};
}
QPushButton[variant="primary"]:hover { background: {{ PRIMARY_LIGHT }}; }
QPushButton[variant="primary"]:pressed { background: {{ PRIMARY_DARK }}; }

QPushButton[variant="outline"] {
  background: transparent;
  color: %%FG%%;
  border: 1px solid %%BORDER%%;
}
QPushButton[variant="outline"]:hover {
  background: {{ PRIMARY_LIGHT }};
  border-color: {{ PRIMARY_LIGHT }};
  color: {{ ON_PRIMARY }};
}
QPushButton[variant="outline"]:pressed {
  background: {{ PRIMARY_DARK }};
  border-color: {{ PRIMARY_DARK }};
  color: {{ ON_PRIMARY }};
}

QPushButton[variant="ghost"] {
  background: transparent;
  color: %%FG%%;
  border: 1px solid transparent;
}
QPushButton[variant="ghost"]:hover {
  background: {{ PRIMARY_LIGHT }};
  color: {{ ON_PRIMARY }};
}

/* Semantic variants using accents */
QPushButton[variant="danger"] {
  background: {{ ACCENT_EMERGENCY }};
  color: {{ ON_PRIMARY }};
  border: 1px solid {{ ACCENT_EMERGENCY }};
}
QPushButton[variant="success"] {
  background: {{ ACCENT_SUCCESS }};
  color: {{ ON_PRIMARY }};
  border: 1px solid {{ ACCENT_SUCCESS }};
}

/* --------------------------------------------------------------------- */
/* ComboBox ----------------------------------------------------------- */
/* --------------------------------------------------------------------- */

QComboBox {
  background: %%FIELD_BG%%;
  color: %%FG%%;
  border: 1px solid %%BORDER%%;
  border-radius: %%RADIUS_SMALL%%;
  padding: 4px 6px;
}
QComboBox:hover {
  border-color: {{ PRIMARY_LIGHT }};
}
QComboBox:focus { border-color: {{ PRIMARY }}; }
QComboBox:on { border-color: {{ PRIMARY }}; }

/* Editable variant keeps inner editor clean */
QComboBox:editable { background: %%FIELD_BG%%; }
QComboBox:editable QLineEdit {
  background: transparent;
  border: none;
  padding: 0;
  margin: 0;
  color: %%FG%%;
  selection-background-color: {{ PRIMARY }};
  selection-color: {{ ON_PRIMARY }};
}

/* Drop-down button area */
QComboBox::drop-down {
  subcontrol-origin: padding;
  subcontrol-position: bottom right;
  width: 24px;
  border-left: 1px solid %%BORDER%%;
  margin: 2px 2px 2px 0;
  border-top-right-radius: %%RADIUS_SMALL%%;
  border-bottom-right-radius: %%RADIUS_SMALL%%;
  background: transparent;
}

/* Arrow icons (Material) */
QComboBox::down-arrow {
  image: {{ "arrow_drop_down" | material_icon_url(size="20,20", color=FG) }};
  width: 20px;
  height: 20px;
}
QComboBox::down-arrow:on {
  image: {{ "arrow_drop_up" | material_icon_url(size="20,20", color=FG) }};
}
QComboBox::down-arrow:hover{
  background: {{ PRIMARY_LIGHT }};
  border-radius: %%RADIUS_SMALL%%;
}
QComboBox::down-arrow:pressed {
  background: {{ PRIMARY_DARK }};
  border-radius: %%RADIUS_SMALL%%;
}

/* Disabled state */
QComboBox:disabled {
  color: %%DISABLED_FG%%;
  background: %%DISABLED_BG%%;
  border-color: %%DISABLED_BORDER%%;
}

/* --------------------------------------------------------------------- */
/* Line edits & text edits --------------------------------------------- */
/* --------------------------------------------------------------------- */

/* QLineEdit */
QLineEdit {
  background: %%FIELD_BG%%;
  color: %%FG%%;
  border: 1px solid %%BORDER%%;
  border-radius: %%RADIUS_SMALL%%;
  padding: 6px 10px;
  selection-background-color: {{ PRIMARY }};
  selection-color: {{ ON_PRIMARY }};
}
QLineEdit:hover {
  border-color: {{ PRIMARY_LIGHT }};
}
QLineEdit:focus { border-color: {{ PRIMARY }}; }
QLineEdit:disabled {
  color: %%DISABLED_FG%%;
  background: %%DISABLED_BG%%;
  border-color: %%DISABLED_BORDER%%;
}
QLineEdit[readOnly="true"] {
  background: %%CARD_BG%%;
  color: %%FG%%;
  border-color: %%BORDER%%;
}

/* Clear button (shown only when clearButtonEnabled) */
QLineEdit { padding-right: 28px; }
QLineEdit::clear-button {
  image: {{ "close" | material_icon_url(size="16,16", color=FG) }};
}
QLineEdit::clear-button:hover { background: {{ PRIMARY_LIGHT }}; }

/* State accents via dynamic property */
QLineEdit[state="error"]   { border-color: {{ ACCENT_EMERGENCY }}; }
QLineEdit[state="warning"] { border-color: {{ ACCENT_WARNING }}; }
QLineEdit[state="success"] { border-color: {{ ACCENT_SUCCESS }}; }

/* QPlainTextEdit & QTextEdit */
QPlainTextEdit, QTextEdit {
  background: %%FIELD_BG%%;
  color: %%FG%%;
  border: 1px solid %%BORDER%%;
  border-radius: %%RADIUS_SMALL%%;
  padding: 6px 10px;
  selection-background-color: {{ PRIMARY }};
  selection-color: {{ ON_PRIMARY }};
}
QPlainTextEdit:hover, QTextEdit:hover {
  border-color: {{ PRIMARY_LIGHT }};
}
QPlainTextEdit:focus, QTextEdit:focus { border-color: {{ PRIMARY }}; }
QPlainTextEdit:disabled, QTextEdit:disabled {
  color: %%DISABLED_FG%%;
  background: %%DISABLED_BG%%;
  border-color: %%DISABLED_BORDER%%;
}
QPlainTextEdit[readOnly="true"], QTextEdit[readOnly="true"] {
  background: %%CARD_BG%%;
  color: %%FG%%;
  border-color: %%BORDER%%;
}
QPlainTextEdit[state="error"], QTextEdit[state="error"]     { border-color: {{ ACCENT_EMERGENCY }}; }
QPlainTextEdit[state="warning"], QTextEdit[state="warning"] { border-color: {{ ACCENT_WARNING }}; }
QPlainTextEdit[state="success"], QTextEdit[state="success"] { border-color: {{ ACCENT_SUCCESS }}; }

/* Completer & generic popup lists (QCompleter uses QListView/QTreeView) */
/*QListView, QTreeView {*/
/*  background: %%BG%%;*/
/*  color: %%FG%%;*/
/*  border: 1px solid %%BORDER%%;*/
/*  outline: none;*/
/*}*/
/*QListView::item, QTreeView::item {*/
/*  background: transparent;*/
/*}*/
/*QListView::item:hover, QTreeView::item:hover { background: {{ PRIMARY_LIGHT }}; color: {{ FG }}; }*/
/*QListView::item:selected, QTreeView::item:selected { background: {{ PRIMARY }}; color: {{ FG }}; }*/

/* --------------------------------------------------------------------- */
/* Spin boxes (QAbstractSpinBox base: QSpinBox, QDoubleSpinBox, Date/Time) */
/* --------------------------------------------------------------------- */
QAbstractSpinBox {
  background: %%FIELD_BG%%;
  color: %%FG%%;
  border: 1px solid %%BORDER%%;
  border-radius: %%RADIUS_SMALL%%;
  padding: 4px 2px;
  selection-background-color: {{ PRIMARY }};
  selection-color: {{ ON_PRIMARY }};
}
QAbstractSpinBox:hover {
  border-color: {{ PRIMARY_LIGHT }};
}
QAbstractSpinBox:focus { border-color: {{ PRIMARY }}; }
QAbstractSpinBox:disabled {
  color: %%DISABLED_FG%%;
  background: %%DISABLED_BG%%;
  border-color: %%DISABLED_BORDER%%;
}
QAbstractSpinBox[readOnly="true"] {
  background: %%CARD_BG%%;
  color: %%FG%%;
  border-color: %%BORDER%%;
}

/* Step buttons (right gutter, borderless like combobox; only separators) */
QAbstractSpinBox::up-button,
QAbstractSpinBox::down-button {
  width: 14px;
  background: transparent;
  margin: 2px 2px 2px 0;
  border: none;
}
QAbstractSpinBox::up-button:hover,
QAbstractSpinBox::down-button:hover { background: {{ PRIMARY_LIGHT }}; border-radius: %%RADIUS_SMALL%%; }
QAbstractSpinBox::up-button:pressed,
QAbstractSpinBox::down-button:pressed { background: {{ PRIMARY_DARK }}; border-radius: %%RADIUS_SMALL%%; }
QAbstractSpinBox::up-button:disabled,
QAbstractSpinBox::down-button:disabled { background: transparent; }

/* Arrow glyphs */
QAbstractSpinBox::up-arrow   { image: {{ "keyboard_arrow_up"   | material_icon_url(size="12,12", color=FG) }};   width: 12px; height: 12px; }
QAbstractSpinBox::down-arrow { image: {{ "keyboard_arrow_down" | material_icon_url(size="12,12", color=FG) }};   width: 12px; height: 12px; }
QAbstractSpinBox::up-arrow:disabled,
QAbstractSpinBox::down-arrow:disabled { image: {{ "keyboard_arrow_down" | material_icon_url(size="12,12", color=FG) }}; }

/* Modern CheckBox */
QCheckBox {
  color: %%FG%%;
  spacing: 6px;
}
QCheckBox:disabled { color: %%FG%% ;}

QCheckBox::indicator {
  width: 18px;
  height: 18px;
  border-radius: %%RADIUS_SMALL%%;
  border: 1px solid %%BORDER%%;
  background: transparent;
background:%%FIELD_BG%%;
  margin-right: 6px;
}
QCheckBox::indicator:hover { border-color: {{ PRIMARY_LIGHT }}; }
QCheckBox::indicator:focus { border-color: {{ PRIMARY }}; }
QCheckBox::indicator:pressed { background: transparent; }

/* Checked */
QCheckBox::indicator:checked {
  background: {{ PRIMARY }};
  border-color: {{ PRIMARY }};
  image: {{ "check" | material_icon_url(size="14,14", color=ON_PRIMARY) }};
}
QCheckBox::indicator:checked:hover { background: {{ PRIMARY_LIGHT }}; border-color: {{ PRIMARY_LIGHT }}; }
QCheckBox::indicator:checked:pressed { background: {{ PRIMARY_DARK }}; border-color: {{ PRIMARY_DARK }}; }

/* Indeterminate */
QCheckBox::indicator:indeterminate {
  background: {{ PRIMARY }};
  border-color: {{ PRIMARY }};
  image: {{ "remove" | material_icon_url(size="14,14", color=FG) }};
}
QCheckBox::indicator:indeterminate:hover { background: {{ PRIMARY_LIGHT }}; border-color: {{ PRIMARY_LIGHT }}; }
QCheckBox::indicator:indeterminate:pressed { background: {{ PRIMARY_DARK }}; border-color: {{ PRIMARY_DARK }}; }

/* Disabled indicator */
QCheckBox::indicator:disabled {
  background: transparent;
  border-color: %%BORDER%%;
}
QCheckBox::indicator:disabled:checked {
  background: {{ PRIMARY }};
  border-color: {{ PRIMARY }};
  image: {{ "check" | material_icon_url(size="14,14", color=ON_PRIMARY) }};
}
QCheckBox::indicator:disabled:indeterminate {
  background: {{ PRIMARY }};
  border-color: {{ PRIMARY }};
  image: {{ "remove" | material_icon_url(size="14,14", color=ON_PRIMARY) }};
}

/* --------------------------------------------------------------------- */
/* ToolButton â€” transparent with borders, PRIMARY highlights */
/* --------------------------------------------------------------------- */
QToolButton {
  background: transparent;
  color: %%FG%%;
/*  border: 1px solid %%BORDER%%;*/
  border-radius: %%RADIUS_SMALL%%;
  padding: 4px 4px;
}
/* Extra right gutter only for menu-bearing toolbuttons */
QToolButton[popupMode="1"]{
    padding-right: 28px;
    }
QToolButton[popupMode="2"] {
  padding: 10px;
}
/*LongPressToolButton{*/
/*  padding-right: 28px;*/
/*}*/
QToolButton:hover {
  border-color: {{ PRIMARY}};
  background: {{ PRIMARY_LIGHT }};
  color: {{ ON_PRIMARY }};
}
QToolButton:focus { border-color: {{ PRIMARY_LIGHT }}; }
QToolButton:pressed {
  background: {{ PRIMARY_DARK }};
  border-color: {{ PRIMARY_DARK }};
  color: {{ ON_PRIMARY }};
}
QToolButton:disabled {
  color: %%DISABLED_FG%%;
  background: %%DISABLED_BG%%;
  border-color: %%DISABLED_BORDER%%;
}

/* Checked / toggled behaves like primary */
QToolButton:checked {
  background: %%TOGGLE_BG%%;
  color: %%FG%%;
/*  border: 1px solid %%TOGGLE_BORDER%%;*/
  border-radius: %%RADIUS_SMALL%%;
}
QToolButton:checked:hover { background: {{ PRIMARY_LIGHT }}; }
QToolButton:checked:pressed { background: {{ PRIMARY_DARK }}; }

/* Auto-raise (common on toolbars): flatter until hover/checked */
/*QToolButton[autoRaise="true"] {*/
/*  background: transparent;*/
/*  border-color: transparent;*/
/*}*/
/*QToolButton[autoRaise="true"]:hover {*/
/*  background: {{ PRIMARY_LIGHT }};*/
/*  border-color: {{ PRIMARY_LIGHT }};*/
/*  color: {{ ON_PRIMARY }};*/
/*}*/
/*QToolButton[autoRaise="true"]:checked {*/
/*  background: {{ PRIMARY_LIGHT }};*/
/*  color: {{ ON_PRIMARY }};*/
/*  border-color: {{ PRIMARY }};*/
/*}*/
/*QToolButton[autoRaise="true"][popupMode="1"],*/
/*QToolButton[autoRaise="true"][popupMode="2"] {*/
/*  padding-right: 28px;*/
/*}*/

/* Variants (match QPushButton) */
QToolButton[variant="primary"] { background: {{ PRIMARY_LIGHT }}; color: {{ ON_PRIMARY }}; border: 1px solid {{ PRIMARY }}; }
QToolButton[variant="primary"]:hover { background: {{ PRIMARY_LIGHT }}; }
QToolButton[variant="primary"]:pressed { background: {{ PRIMARY_DARK }}; }

QToolButton[variant="outline"] { background: transparent; color: %%FG%%; border: 1px solid %%BORDER%%; }
QToolButton[variant="outline"]:hover {
  background: {{ PRIMARY_LIGHT }};
  border-color: {{ PRIMARY_LIGHT }};
  color: {{ ON_PRIMARY }};
}
QToolButton[variant="outline"]:pressed {
  background: {{ PRIMARY_DARK }};
  border-color: {{ PRIMARY_DARK }};
  color: {{ ON_PRIMARY }};
}

QToolButton[variant="ghost"] { background: transparent; color: %%FG%%; border: 1px solid transparent; }
QToolButton[variant="ghost"]:hover {
  background: {{ PRIMARY_LIGHT }};
  color: {{ ON_PRIMARY }};
}

QToolButton[variant="danger"] { background: {{ ACCENT_EMERGENCY }}; color: {{ ON_PRIMARY }}; border: 1px solid {{ ACCENT_EMERGENCY }}; }
QToolButton[variant="success"] { background: {{ ACCENT_SUCCESS }}; color: {{ ON_PRIMARY }}; border: 1px solid {{ ACCENT_SUCCESS }}; }

/* Size variants via dynamic property `size` */
QToolButton[size="sm"] { padding: 2px 6px; qproperty-iconSize: 14px 14px; }
QToolButton[size="lg"] { padding: 6px 12px; qproperty-iconSize: 20px 20px; }

/* Menu button and arrow for popup toolbuttons */
QToolButton::menu-button {
  subcontrol-origin: padding;
  subcontrol-position: right center;
  width: 20px;
  border-left: 1px solid %%BORDER%%;
  margin: 2px 2px 2px 0;
  border-top-right-radius: %%RADIUS_SMALL%%;
  border-bottom-right-radius: %%RADIUS_SMALL%%;
  background: transparent;
}
QToolButton::menu-button:hover { border-color: {{ PRIMARY_LIGHT }}; }
QToolButton::menu-arrow {
  image: {{ "arrow_drop_down" | material_icon_url(size="16,16", color=FG) }};
  width: 16px;
  height: 16px;
}
QToolButton::menu-arrow:open {
  image: {{ "arrow_drop_up" | material_icon_url(size="16,16", color=FG) }};
}

/* InstantPopup menu toolbutton (opens menu immediately) */
QToolButton[popupMode="2"] {
  background: transparent;
  color: %%FG%%;
  border-radius: %%RADIUS_SMALL%%;
  padding-right: 15px; /* room for indicator */
}
QToolButton[popupMode="2"]::menu-indicator {
  subcontrol-origin: padding;
  subcontrol-position: right center;
  image: {{ "arrow_drop_down" | material_icon_url(size="16,16", color=FG) }};
  width: 16px;
  height: 16px;
  margin: 0 6px 0 6px;
}
QToolButton[popupMode="2"]:hover {
  background: {{ PRIMARY_LIGHT }};
  border-color: {{ PRIMARY_LIGHT }};
  color: {{ ON_PRIMARY }};
}
QToolButton[popupMode="2"]:pressed {
  background: {{ PRIMARY_DARK }};
  border-color: {{ PRIMARY_DARK }};
  color: {{ ON_PRIMARY }};
}
QToolButton[popupMode="2"]:disabled {
  color: %%DISABLED_FG%%;
  background: %%DISABLED_BG%%;
  border-color: %%DISABLED_BORDER%%;
}
QToolButton[popupMode="2"]::menu-indicator:disabled {
  image: {{ "arrow_drop_down" | material_icon_url(size="16,16", color=BORDER) }};
}

/* Modern RadioButton */
/*QRadioButton {*/
/*  color: %%FG%%;*/
/*  spacing: 6px; *//* space between indicator and label */
/*}*/
/*QRadioButton:disabled { color: %%FG%%; }*/

/*QRadioButton::indicator {*/
/*  width: 14px;*/
/*  height: 14px;*/
/*  border-radius: 7px;  *//* circular */
/*  border: 1px solid %%BORDER%%;*/
/*  background: transparent;*/
/*  margin-right: 6px;*/
/*  image: {{ "radio_button_unchecked" | material_icon_url(size="10,10", color=ON_PRIMARY) }};*/
/*}*/
/*QRadioButton::indicator:hover   { border-color: {{ PRIMARY_LIGHT }}; }*/
/*QRadioButton::indicator:focus   { border-color: {{ PRIMARY }}; }*/
/*QRadioButton::indicator:pressed { background: transparent; }*/

/* Checked */
/*QRadioButton::indicator:checked {*/
/*  background: {{ PRIMARY }};*/
/*  border-color: {{ PRIMARY }};*/
/*  image: {{ "radio_button_checked" | material_icon_url(size="10,10", color=ON_PRIMARY) }};*/
/*}*/
/*QRadioButton::indicator:checked:hover   { background: {{ PRIMARY_LIGHT }}; }*/
/*QRadioButton::indicator:checked:pressed { background: {{ PRIMARY_DARK }}; }*/

/* Disabled indicator */
/*QRadioButton::indicator:disabled {*/
/*  background: transparent;*/
/*  border-color: %%BORDER%%;*/
/*}*/
/*QRadioButton::indicator:disabled:checked {*/
/*  background: {{ PRIMARY }};*/
/*  border-color: {{ PRIMARY }};*/
/*  image: {{ "lens" | material_icon_url(size="10,10", color=ON_PRIMARY) }};*/
/*}*/
/* --------------------------------------------------------------------- */
/* Contatiner widget ---------------------------------------------------- */
/* --------------------------------------------------------------------- */

/* TabWidget â€” JetBrains-like tabs (left aligned, underlined, gapped pane) */
QTabWidget { background: transparent; }

/*QTabWidget::pane {*/
/*  background: %%CARD_BG%%;*/
/*}*/

QTabWidget>QWidget#qt_tabwidget_stackedwidget {
  background: transparent;
  border: 1px solid %%BORDER%%;
}

QTabWidget[tabPosition="North"]>QWidget#qt_tabwidget_stackedwidget {
  border-bottom-left-radius: %%RADIUS_MEDIUM%%;
  border-bottom-right-radius: %%RADIUS_MEDIUM%%;
  border-top: none;
}
QTabWidget[tabPosition="West"]>QWidget#qt_tabwidget_stackedwidget {
  border-top-right-radius: %%RADIUS_MEDIUM%%;
  border-bottom-right-radius: %%RADIUS_MEDIUM%%;
  border-left: none;
}
QTabWidget[tabPosition="East"]>QWidget#qt_tabwidget_stackedwidget {
  border-top-left-radius: %%RADIUS_MEDIUM%%;
  border-bottom-left-radius: %%RADIUS_MEDIUM%%;
  border-right: none;
}
QTabWidget[tabPosition="South"]>QWidget#qt_tabwidget_stackedwidget {
  border-top-left-radius: %%RADIUS_MEDIUM%%;
  border-top-right-radius: %%RADIUS_MEDIUM%%;
  border-bottom: none;
}

QTabBar {
  qproperty-expanding: true;
  qproperty-movable: false;
  qproperty-usesScrollButtons: true;
  qproperty-documentMode: true;
  background: transparent;
  border: 1px solid %%BORDER%%;
  padding: 2px 6px;
  margin: 0 0 0 0;
}
/* Remove the border on the side adjacent to the pane, keep rounded corners accordingly */
QTabWidget[tabPosition="North"] QTabBar {
  border-bottom: none;
  border-top-left-radius: %%RADIUS_MEDIUM%%;
  border-top-right-radius: %%RADIUS_MEDIUM%%;
}
QTabWidget[tabPosition="South"] QTabBar {
  border-top: none;
  border-bottom-left-radius: %%RADIUS_MEDIUM%%;
  border-bottom-right-radius: %%RADIUS_MEDIUM%%;
}
QTabWidget[tabPosition="West"] QTabBar {
  border-right: none;
  border-top-left-radius: %%RADIUS_MEDIUM%%;
  border-bottom-left-radius: %%RADIUS_MEDIUM%%;
}
QTabWidget[tabPosition="East"] QTabBar {
  border-left: none;
  border-top-right-radius: %%RADIUS_MEDIUM%%;
  border-bottom-right-radius: %%RADIUS_MEDIUM%%;
}

QTabBar::tab {
  background: transparent;
  color: %%FG%%;
  border: none;
  padding: 8px 10px;
}
/* Underline side per orientation */
QTabBar::tab:top {
  border-bottom: 2px solid %%BORDER%%;
  margin-right: 12px;
}
QTabBar::tab:bottom {
  border-top: 2px solid %%BORDER%%;
  margin-right: 12px;
}
QTabBar::tab:left {
  border-right: 2px solid %%BORDER%%;
  margin-bottom: 12px;
}
QTabBar::tab:right {
  border-left: 2px solid %%BORDER%%;
  margin-bottom: 12px;
}

/* Edge gutters so first tab isn't flush with the bar edge */
QTabBar::tab:first:top,
QTabBar::tab:first:bottom {
  margin-left: 12px;
}
QTabBar::tab:first:left,
QTabBar::tab:first:right {
  margin-top: 12px;
}

/* Hover/selected colorization per orientation */
QTabBar::tab:hover:top { border-bottom-color: {{ PRIMARY_LIGHT }}; color: %%FG%%; }
QTabBar::tab:selected:top { border-bottom-color: {{ PRIMARY }}; color: %%FG%%; }

QTabBar::tab:hover:bottom { border-top-color: {{ PRIMARY_LIGHT }}; color: %%FG%%; }
QTabBar::tab:selected:bottom { border-top-color: {{ PRIMARY }}; color: %%FG%%; }

QTabBar::tab:hover:left { border-right-color: {{ PRIMARY_LIGHT }}; color: %%FG%%; }
QTabBar::tab:selected:left { border-right-color: {{ PRIMARY }}; color: %%FG%%; }

QTabBar::tab:hover:right { border-left-color: {{ PRIMARY_LIGHT }}; color: %%FG%%; }
QTabBar::tab:selected:right { border-left-color: {{ PRIMARY }}; color: %%FG%%; }

/* Disabled tabs */
QTabBar::tab:disabled:top { border-bottom-color: transparent; color: %%FG%%; }
QTabBar::tab:disabled:bottom { border-top-color: transparent; color: %%FG%%; }
QTabBar::tab:disabled:left { border-right-color: transparent; color: %%FG%%; }
QTabBar::tab:disabled:right { border-left-color: transparent; color: %%FG%%; }

/* Other orientations (keeps underline logic if you ever use bottom tabs) */
/*QTabBar::tab:bottom { border-top: 2px solid transparent; border-bottom: none; }*/
/*QTabBar::tab:bottom:selected { border-top-color: {{ PRIMARY }}; }*/
/*QTabBar::tab:bottom:hover    { border-top-color: {{ PRIMARY_LIGHT }}; }*/

/* --------------------------------------------------------------------- */
/* GroupBox â€” simple, classic card ------------------------------------ */
/* --------------------------------------------------------------------- */
QGroupBox {
    font-weight: bold;
    background: transparent;
    border: 1px solid %%BORDER%%;
    border-radius: %%RADIUS_MEDIUM%%;
    margin-top: 8px;
    padding: 2px 1px 1px 1px;
}
QGroupBox::title {
    subcontrol-origin: margin;
    subcontrol-position: top left;
    left: 7px;
    margin: 0 2px 0 3px;
    background-color: %%BG%%;
}
QGroupBox:flat {
    border-color: transparent;
}

/* --------------------------------------------------------------------- */
/* QToolBox â€” simple, no background ------------------------------------ */
/* --------------------------------------------------------------------- */
/* QToolBox container and pages: transparent content area */
QToolBox {
  background: transparent;
  border: none;
}
/* Direct page widgets */
QToolBox > QWidget {
  background: transparent;
  border: none;
}
/* If a page is implemented as a scroll area */
QToolBox > QScrollArea {
  background: transparent;
  border: none;
}
QToolBox > QScrollArea > QWidget#qt_scrollarea_viewport {
  background: transparent;
  border: none;
}
QToolBox::tab {
  background: %%CARD_BG%%;
  color: %%FG%%;
 }
QToolBox::tab {
  background: %%CARD_BG%%;
  color: %%FG%%;
  border: 1px solid %%BORDER%%;
  border-radius: %%RADIUS_SMALL%%;
  padding: 6px 15px;
  text-transform: uppercase;
}
QToolBox::tab:hover {
  border-color: {{ PRIMARY_LIGHT }};
}
QToolBox::tab:selected {
  background: %%FIELD_BG%%;
  color: %%FG%%;
  border-color: {{ PRIMARY }};
}

/* --------------------------------------------------------------------- */
/* Sliders â€” prominent states, clear limits #TODO has to be finished later------------ */
/* --------------------------------------------------------------------- */
/*QSlider { background: transparent; }*/

/* Track (groove) â€” leave transparent; use add-page as the unfilled track */
/*QSlider::groove:horizontal {*/
/*  height: 1px;*/
/*  background: transparent;*/
/*  border-radius: 1px;*/
/*  margin: 2px;*/
/*}*/
/*QSlider::groove:vertical {*/
/*  width: 1px;*/
/*  background: transparent;*/
/*  border-radius: 1px;*/
/*  margin: 2px;*/
/*}*/

/* Unselected portion (limits) â€” higher contrast using BORDER */
/*QSlider::add-page:horizontal { background: %%BORDER%%; border-radius: 2px; }*/
/*QSlider::add-page:vertical   { background: %%BORDER%%; border-radius: 2px; }*/

/* Selected portion â€” stateful colors */
/* Not selected (no focus) */
/*QSlider::sub-page:horizontal { background: {{ PRIMARY }}; border-radius: 2px; }*/
/*QSlider::sub-page:vertical   { background: {{ PRIMARY }}; border-radius: 2px; }*/

/* Handle */
/*QSlider::handle:horizontal {*/
/*  background: %%BG%%;*/
/*  border: 2px solid {{ PRIMARY_LIGHT }};*/
/*  width: 8px;*/
/*  height: 8px;*/
/*  margin: -8px 0;    vertically center over 4px track*/
/*  border-radius: 8px;*/
/*}*/
/*QSlider::handle:vertical {*/
/*  background: %%BG%%;*/
/*  border: 2px solid {{ PRIMARY_LIGHT }};*/
/*  width: 16px;*/
/*  height: 16px;*/
/*  margin: 0 -8px;   *//* horizontally center over 4px track */
/*  border-radius: 8px;*/
/*}*/
/*QSlider::handle:hover { border-color: {{ PRIMARY }}; }*/
/*QSlider::handle:pressed {*/
/*  border-color: {{ PRIMARY_DARK }};*/
/*  background: {{ PRIMARY_DARK }};*/
/*}*/

/* Disabled */
/*QSlider::sub-page:disabled { background: %%BORDER%%; }*/
/*QSlider::handle:disabled { border-color: %%BORDER%%; background: %%CARD_BG%%; }*/

/* Ticks use BORDER for subtle contrast */
/*QSlider::tick:horizontal { background: %%BORDER%%; height: 4px; }*/
/*QSlider::tick:vertical   { background: %%BORDER%%; width: 4px; }*/

/* --------------------------------------------------------------------- */
/* ScrollArea & ScrollBars - modern minimal ---------------------------- */
/* --------------------------------------------------------------------- */

/* ScrollArea container THIS IS MESSING ELIDE ON ADS !!!!!!! */
/*QScrollArea {*/
/*  background: %%CARD_BG%%;*/
/*  color: %%FG%%;*/
/*  border: 1px solid %%BORDER%%;*/
/*  border-radius: %%RADIUS_SMALL%%;*/
/*}*/

/* Make the viewport transparent so content decides its own bg */
QScrollArea > QWidget#qt_scrollarea_viewport {
  background: transparent;
}

/* Optional frameless variant */
QScrollArea[frameless="true"] {
  background: transparent;
  border: none;
}

/* Scrollbars (shared across scroll areas, tables, editors) */
QScrollBar {
  background: transparent;
  border-radius: 2px;
}

QScrollBar:vertical {
  width: 10px;
  margin: 4px 2px 4px 2px;
  border-radius: 1px;
}
QScrollBar:horizontal {
  height: 10px;
  margin: 2px 4px 2px 4px;
  border-radius: 1px;
}

/* Hide the track (groove) entirely so only the handle is visible */
QScrollBar::groove:vertical,
QScrollBar::groove:horizontal {
  background: transparent;
  border: none;
}

/* Handles â€” rounded, subtle, colorize on hover/active */
QScrollBar::handle:vertical {
  background: %%BORDER%%;
  min-height: 24px;
  border-radius: 3px;
}
QScrollBar::handle:vertical:hover   { background: %%PRIMARY_LIGHT%%; }
QScrollBar::handle:vertical:pressed { background: %%PRIMARY%%; }

QScrollBar::handle:horizontal {
  background: %%BORDER%%;
  min-width: 24px;
  border-radius: 3px;
}
QScrollBar::handle:horizontal:hover   { background: %%PRIMARY_LIGHT%%; }
QScrollBar::handle:horizontal:pressed { background: %%PRIMARY%%; }

/* No arrows, no boxed buttons */
QScrollBar::add-line, QScrollBar::sub-line {
  background: transparent;
  border: none;
  width: 0; height: 0;
}

/* Track pages are transparent so only handle is visible */
QScrollBar::add-page, QScrollBar::sub-page {
  background: transparent;
}

/* Corner where both scrollbars meet */
QAbstractScrollArea::corner {
  background: transparent;
  border: none;
  border-bottom-right-radius: 0;
}

/* --------------------------------------------------------------------- */
/* TreeView & TreeWidget â€” elegant minimal ----------------------------- */
/* --------------------------------------------------------------------- */
QTreeView, QTreeWidget {
  background: transparent;
  color: %%FG%%;
  border: 1px solid %%BORDER%%;
  border-radius: %%RADIUS_MEDIUM%%;
  outline: 0;
  qproperty-alternatingRowColors: true;
  alternate-background-color: %%CARD_BG%%;
  show-decoration-selected: 1; /* keep item icons visible when selected */
  indentation: 18px;
}

QTreeView::item, QTreeWidget::item {
  background: transparent;
  margin: 0;
  border: none;
}

QTreeView::item:hover, QTreeWidget::item:hover {
  background: {{ PRIMARY_LIGHT }};
  color: %%FG%%;
}

QTreeView::item:selected, QTreeWidget::item:selected {
  background: {{ PRIMARY }};
  color: {{ ON_PRIMARY }};
}
QTreeView::item:selected:!active, QTreeWidget::item:selected:!active {
  background: {{ PRIMARY }};
  color: {{ ON_PRIMARY }};
}

/* Header */
QTreeView QHeaderView::section,
QTreeWidget QHeaderView::section {
  background: transparent;
  color: %%FG%%;
  border: none;
  border-bottom: 1px solid %%BORDER%%;
  padding-left: 4px;
  padding-right: 4px;
  font-weight: 600;
}
QTreeView QHeaderView::section:hover,
QTreeWidget QHeaderView::section:hover {
  border-bottom-color: {{ PRIMARY_LIGHT }};
}
QTreeView QHeaderView::section:pressed,
QTreeWidget QHeaderView::section:pressed {
  border-bottom-color: {{ PRIMARY }};
}

/* Branch (expand/collapse) */
QTreeView::branch,
QTreeWidget::branch {
  background: transparent;
  border: none;
}
QTreeView::branch:closed:has-children,
QTreeWidget::branch:closed:has-children {
  image: {{ "chevron_right" | material_icon_url(size="14,14", color=FG) }};
}
QTreeView::branch:open:has-children,
QTreeWidget::branch:open:has-children {
  image: {{ "expand_more" | material_icon_url(size="14,14", color=FG) }};
}
QTreeView::branch:closed:has-children:hover,
QTreeWidget::branch:closed:has-children:hover {
  image: {{ "chevron_right" | material_icon_url(size="14,14", color=ON_PRIMARY) }};
}
QTreeView::branch:open:has-children:hover,
QTreeWidget::branch:open:has-children:hover {
  image: {{ "expand_more" | material_icon_url(size="14,14", color=ON_PRIMARY) }};
}

/* Selected row: recolor branch chevrons to ON_PRIMARY */
QTreeView::branch:selected:closed:has-children,
QTreeWidget::branch:selected:closed:has-children {
  image: {{ "chevron_right" | material_icon_url(size="14,14", color=ON_PRIMARY) }};
}
QTreeView::branch:selected:open:has-children,
QTreeWidget::branch:selected:open:has-children {
  image: {{ "expand_more" | material_icon_url(size="14,14", color=ON_PRIMARY) }};
}
/* Inactive selection should match the same color */
QTreeView::branch:selected:!active:closed:has-children,
QTreeWidget::branch:selected:!active:closed:has-children {
  image: {{ "chevron_right" | material_icon_url(size="14,14", color=ON_PRIMARY) }};
}
QTreeView::branch:selected:!active:open:has-children,
QTreeWidget::branch:selected:!active:open:has-children {
  image: {{ "expand_more" | material_icon_url(size="14,14", color=ON_PRIMARY) }};
}

/* Frameless variant for embedded trees */
QTreeView[frameless="true"], QTreeWidget[frameless="true"] {
  border: none;
  border-radius: 0;
}


/* --------------------------------------------------------------------- */
/* TableView & TableWidget â€” elegant minimal --------------------------- */
/* --------------------------------------------------------------------- */
QTableView, QTableWidget {
  background: transparent;
  color: %%FG%%;
  border: 1px solid %%BORDER%%;
  border-radius: %%RADIUS_MEDIUM%%;
  outline: 0;
  qproperty-alternatingRowColors: true;
  alternate-background-color: %%CARD_BG%%;
  qproperty-showGrid: 0;
  gridline-color: transparent;
  selection-background-color: {{ PRIMARY }};
  selection-color: {{ ON_PRIMARY }};
}

QTableView::item, QTableWidget::item {
  background: transparent;
  border: none;
  border-bottom: 1px solid %%BORDER%%; /* subtle row separators */
}

QTableView::item:hover, QTableWidget::item:hover {
  background: {{ PRIMARY_LIGHT }};
  color: %%FG%%;
}

QTableView::item:selected, QTableWidget::item:selected {
  background: {{ PRIMARY }};
  color: {{ ON_PRIMARY }};
  border-bottom-color: {{ PRIMARY }};
}
QTableView::item:selected:!active, QTableWidget::item:selected:!active {
  background: {{ PRIMARY }};
  color: {{ ON_PRIMARY }};
  border-bottom-color: {{ PRIMARY }};
}

/* Headers */
QTableView QHeaderView, QTableWidget QHeaderView { background: transparent; }

QTableView QHeaderView::section:horizontal,
QTableWidget QHeaderView::section:horizontal {
  background: transparent;
  color: %%FG%%;
  border: none;
  border-bottom: 1px solid %%BORDER%%;
  font-weight: 600;
}
QTableView QHeaderView::section:vertical,
QTableWidget QHeaderView::section:vertical {
  background: transparent;
  color: %%FG%%;
  border: none;
  border-right: 1px solid %%BORDER%%;
  padding: 6px 8px;
  font-weight: 600;
}
QTableView QHeaderView::section:hover,
QTableWidget QHeaderView::section:hover {
  border-color: {{ PRIMARY_LIGHT }};
}
QTableView QHeaderView::section:pressed,
QTableWidget QHeaderView::section:pressed {
  border-color: {{ PRIMARY }};
}

/* Sort indicator arrows */
QTableView QHeaderView::down-arrow,
QTableWidget QHeaderView::down-arrow {
  image: {{ "arrow_drop_down" | material_icon_url(size="14,14", color=FG) }};
  width: 14px; height: 14px;
}
QTableView QHeaderView::up-arrow,
QTableWidget QHeaderView::up-arrow {
  image: {{ "arrow_drop_up" | material_icon_url(size="14,14", color=FG) }};
  width: 14px; height: 14px;
}
QTableView QHeaderView::down-arrow:hover,
QTableWidget QHeaderView::down-arrow:hover {
  image: {{ "arrow_drop_down" | material_icon_url(size="14,14", color=PRIMARY_LIGHT) }};
}
QTableView QHeaderView::up-arrow:hover,
QTableWidget QHeaderView::up-arrow:hover {
  image: {{ "arrow_drop_up" | material_icon_url(size="14,14", color=PRIMARY_LIGHT) }};
}

/* Corner button to match header lines */
QTableCornerButton::section {
  background: transparent;
  border: none;
  border-bottom: 1px solid %%BORDER%%;
  border-right: 1px solid %%BORDER%%;
}

/* Frameless variant for embedded tables */
QTableView[frameless="true"], QTableWidget[frameless="true"] {
  border: none;
  border-radius: 0;
}

/* --------------------------------------------------------------------- */
/* ToolBar ------------------------------------------------------------- */
/* --------------------------------------------------------------------- */

QToolBar {
    background-color: %%BG%%;
    color: %%FG%%;
    border: 1px solid %%BORDER%%;
    margin: 2px;
}
QToolBar::handle:horizontal {
   image: {{ "drag_indicator" | material_icon_url(size="14,14", color=FG) }};
}
/*SVG rotation is bugged, it do not turns around center*/
QToolBar::handle:vertical {
    background: %%PRIMARY%%;
    width: 6px;
    height: 2px;
    margin: 2px;
    border-radius: 1px;
}
QToolBar::separator { background: %%BORDER%%; }
QToolBar::separator:horizontal { width: 2px; margin: 2px 6px; }
QToolBar::separator:vertical   { height: 2px; margin: 6px 2px; }

/* Extension button: ensure size, border, and icon are present */
QToolBarExtension,
QToolButton#qt_toolbar_ext_button {
    background: transparent;
/*    border: 1px solid %%BORDER%%;*/
    border-radius: %%RADIUS_SMALL%%;
    padding: 2px;
    margin: 2px;
    min-width: 22px;
    min-height: 22px;
}

QToolBarExtension#qt_toolbar_ext_button,
QToolButton#qt_toolbar_ext_button {
    qproperty-icon: {{ "double_arrow" | material_icon_url(size="16,16", color=FG) }},
                     {{ "double_arrow" | material_icon_url(size="16,16", color=BORDER) }} disabled;
    qproperty-iconSize: 16px;
}

QToolBarExtension:hover,
QToolButton#qt_toolbar_ext_button:hover {
    background: {{ PRIMARY_LIGHT }};
    border-color: {{ PRIMARY_LIGHT }};
}
QToolBarExtension:pressed,
QToolButton#qt_toolbar_ext_button:pressed {
    background: {{ PRIMARY_DARK }};
    border-color: {{ PRIMARY_DARK }};
}
/* --------------------------------------------------------------------- */
/* Native Qt Dock Widgets (QDockWidget) â€” modern rounded design */
/* --------------------------------------------------------------------- */
QDockWidget {
    titlebar-close-icon: {{ "close" | material_icon_url(size="14,14", color=FG) }};
    titlebar-normal-icon: {{ "ad_group" | material_icon_url(size="14,14", color=FG) }};
}



/*QScrollArea#dockWidgetScrollArea {*/
/*    padding: 0px;*/
/*    border: none;*/
/*}*/
/*QDockWidget::title {*/
/*    background: %%BG%%;*/
/*    color: %%FG%%;*/
/*    padding: 4px 8px;*/
/*    border-bottom: 1px solid %%BORDER%%;*/
/*}*/
/*QDockWidget::title:hover {*/
/*    background: %%FIELD_BG%%;*/
/*    border-color: {{ PRIMARY_LIGHT }};*/
/*}*/
/* Close and Float buttons with Material icons */
/*QDockWidget::close-button,*/
/*QDockWidget::float-button {*/
/*    width: 18px;*/
/*    height: 18px;*/
/*    padding: 2px;*/
/*    margin: 2px;*/
/*    border: none;*/
/*    border-radius: %%RADIUS_SMALL%%;*/
/*    background: transparent;*/
/*}*/
/*QDockWidget::close-button:hover {*/
/*    background: {{ PRIMARY }};*/
/*}*/
/*QDockWidget::float-button:hover {*/
/*    background: {{ PRIMARY }};*/
/*}*/

/* Dock separators (between dock areas) */
/*QMainWindow::separator {*/
/*    background: %%BORDER%%;*/
/*    width: 1px;*/
/*}*/
/*QMainWindow::separator:hover {*/
/*    background: {{ PRIMARY }};*/
/*}*/

/* --------------------------------------------------------------------- */
/* Advanced Docking System (ADS) â€” transparent with borders and PRIMARY highlights */
/* --------------------------------------------------------------------- */

/******************************************************************************/
/* * CDockManager*/
/* *****************************************************************************/
/*ads--CDockManager {*/
/*    background: transparent;*/
/*    border: none;*/
/*}*/

/******************************************************************************/
/* * CDockContainerWidget*/
/* *****************************************************************************/
/*ads--CDockContainerWidget {*/
/*    background: %%BG%%;*/
/*    padding: 2px;*/
/*    border-radius: %%RADIUS_MEDIUM%%;*/
/*    border: none;*/
/*}*/
/******************************************************************************/
/* * CDockWidget*/
/* *****************************************************************************/

CDockWidget[index="0"] {
    border:none;
    padding: 2px;
}
/******************************************************************************/
/* * CDockAreaWidget*/
/* *****************************************************************************/
ads--CDockAreaWidget {
    border: 1px solid %%BORDER%%;
    border-radius: %%RADIUS_MEDIUM%%;
    padding: 2px;
}

QScrollArea {
    border: 0px solid transparent;
    background: transparent;

}
ads--CDockAreaTitleBar {
    background: transparent;
    padding-bottom: 0px;
    padding-left: 12px;
    padding-right: 12px;
    border-bottom: 1px solid %%BORDER%%;
}

ads--CTitleBarButton {
    padding: 0px 0px;
    background: transparent;
    border: 1px solid transparent;
    border-radius: %%RADIUS_SMALL%%;
}
ads--CTitleBarButton[focused=true] {
    background: {{ PRIMARY }};
    border-color: {{ PRIMARY }};
    color: {{ ON_PRIMARY }};
}
ads--CTitleBarButton:hover {
    background: {{ PRIMARY_LIGHT }};
    border-color: {{ PRIMARY_LIGHT }};
    color: {{ ON_PRIMARY }};
}
ads--CTitleBarButton:pressed {
    background: {{ PRIMARY_DARK }};
    border-color: {{ PRIMARY_DARK }};
    color: {{ ON_PRIMARY }};
}

#dockAreaCloseButton {
    qproperty-icon: {{ "close" | material_icon_url(size="16,16", color=FG) }},
       {{ "close" | material_icon_url(size="16,16", color=BORDER) }} disabled;
    qproperty-iconSize: 16px;
}

#detachGroupButton {
    qproperty-icon: {{ "ad_group" | material_icon_url(size="16,16", color=FG) }},
       {{ "ad_group" | material_icon_url(size="16,16", color=BORDER) }} disabled;
    qproperty-iconSize: 16px;
}

#tabsMenuButton {
    qproperty-icon: {{ "arrow_drop_down" | material_icon_url(size="16,16", color=FG) }},
       {{ "menu" | material_icon_url(size="16,16", color=BORDER) }} disabled;
    qproperty-iconSize: 16px;
    padding: 0px;
}

/* Getting rid of tear button under the tabs menu button */
#tabsMenuButton::menu-indicator,
#tabsMenuButton::tear {
    image: none;
    width: 0; height: 0;
    margin: 0; padding: 0;
}

#dockSettingsAction {
    padding: 0px;
}

ads--CDockAreaWidget ads--CDockAreaTitleBar {
    border-bottom: 1px solid transparent;
}

/******************************************************************************/
/* * CDockWidgetTab*/
/* *****************************************************************************/
ads--CDockWidgetTab {
    background:transparent;
    border: none;
    border-bottom: 2px solid transparent;
    padding-bottom: 2px;
    margin-bottom: 4px;
    margin-right: 12px;
    qproperty-iconSize: 16px 16px;
}
ads--CDockWidgetTab:hover {
    border-bottom-color: {{ PRIMARY_LIGHT }};
}
ads--CDockWidgetTab[activeTab="true"] {
    border-bottom-color: {{ BORDER }};
}
ads--CDockWidgetTab[focused="true"] {
    border-bottom-color: %%PRIMARY%%;
}

ads--CDockWidgetTab QLabel {
    color: %%FG%%;
}

#tabCloseButton {
    margin-top: 2px;
    background: transparent;
    border: 1px solid transparent;
    border-radius: %%RADIUS_SMALL%%;
    padding: 0px 0px;
    qproperty-icon: {{ "close" | material_icon_url(size="16,16", color=FG) }},
       {{ "close" | material_icon_url(size="16,16", color=BORDER) }} disabled;
    qproperty-iconSize: 16px;
}

#tabCloseButton:hover {
    background: {{ PRIMARY_LIGHT }};
    border-color: {{ PRIMARY_LIGHT }};
    color: {{ FG }};
}

#tabCloseButton:pressed {
    background: {{ PRIMARY_DARK }};
    border-color: {{ PRIMARY_DARK }};
    color: {{ FG }};
}

/******************************************************************************/
/* * CDockWidget*/
/* *****************************************************************************/
/*ads--CDockWidget {*/
/*    background: transparent;*/
/*    border: 1px solid %%BORDER%%;*/
/*    border-radius: %%RADIUS_MEDIUM%%;*/
/*}*/

/* --------------------------------------------------------------------- */
/* ADS Splitters and Resize Handles â€” simplified with PRIMARY highlights */
/* --------------------------------------------------------------------- */
/* Horizontal handle (between top/bottom panes) */
ads--CResizeHandle:horizontal {
    height: 4px;
    margin: 4px 0;
}
ads--CResizeHandle:horizontal:hover { background: {{ PRIMARY_LIGHT }}; }
ads--CResizeHandle:horizontal:pressed { background: {{ PRIMARY }}; }

/* Vertical handle (between left/right panes) */
ads--CResizeHandle:vertical {
    width: 4px;
    margin: 0 4px;
}
ads--CResizeHandle:vertical:hover { background: {{ PRIMARY_LIGHT }}; }
ads--CResizeHandle:vertical:pressed { background: {{ PRIMARY }}; }

/* Optional: also style the QSplitter handle within ADS containers for consistency */
ads--CDockContainerWidget QSplitter::handle:horizontal {
    background: transparent;
    height: 8px;
    margin: 0;
    border-radius: 2px;
}
ads--CDockContainerWidget QSplitter::handle:horizontal:hover { background: {{ PRIMARY_LIGHT }}; }
ads--CDockContainerWidget QSplitter::handle:horizontal:pressed { background: {{ PRIMARY }}; }

ads--CDockContainerWidget QSplitter::handle:vertical {
    background: transparent;
    height: 8px;
    margin: 0 ;
    border-radius: 2px;
}
ads--CDockContainerWidget QSplitter::handle:vertical:hover { background: {{ PRIMARY_LIGHT }}; }
ads--CDockContainerWidget QSplitter::handle:vertical:pressed { background: {{ PRIMARY }}; }

/* --------------------------------------------------------------------- */
/* PyQtGraph widgets â€” styled without wrappers                           */
/* --------------------------------------------------------------------- */
/* Card-like outline; background comes from pyqtgraph (setConfigOptions) */
GraphicsLayoutWidget, PlotWidget {
  background: transparent;                 /* let pg draw background */
  border: 1px solid %%BORDER%%;
  border-radius: %%RADIUS_MEDIUM%%;
}

/* Optional: let QSS paint the background when needed */
GraphicsLayoutWidget[drawBg="true"], PlotWidget[drawBg="true"] {
  background: %%PLOT_BG%%;
}

/* Frameless variant if you need plots to blend into backgrounds */
GraphicsLayoutWidget[frameless="true"], PlotWidget[frameless="true"] {
  border: none;
  border-radius: 0;
}

/* Remove any accidental inner frames on the viewport */
GraphicsView, QGraphicsView {
  background: transparent;                 /* avoid double background */
  border: none;                            /* no inner frame */
}

/* Themed plot background wrapper; wrap PlotWidget inside this frame */
QFrame[variant="plot_background"] {
  background: %%PLOT_BG%%;
  border: 1px solid %%BORDER%%;
  border-radius: %%RADIUS_MEDIUM%%;
}
QFrame[variant="plot_background"][frameless="true"] {
  border: none;
}
QFrame[variant="plot_background"] > * {
  border-radius: %%RADIUS_MEDIUM%%; /* prevent inner corners from peeking */
}



SideBar {
    background-color: %%CARD_BG%%;
}

SideBar QWidget {
    background-color: transparent;
}

NavigationItem {
    border-radius: %%RADIUS_SMALL%%;
    margin: 1px 1px;
}
NavigationItem:hover {
    background-color: %%PRIMARY_LIGHT%%;
}

NavigationItem[toggled="true"] {
    background-color:  %%PRIMARY_DARK%%;
    border-radius: %%RADIUS_SMALL%%;
}
NavigationItem[toggled="true"] QLabel  {
    color: %%ON_PRIMARY%%;
}

QFrame[variant="separator"] {
  background: %%BORDER%%;
}
