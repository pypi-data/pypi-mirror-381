# This file is a template, and might need editing before it works on your project.
# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: $CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX/python:3.11
#commands to run in the Docker container before starting each job.
variables:
  DOCKER_TLS_CERTDIR: ""
  BEC_CORE_BRANCH: "main"
  OPHYD_DEVICES_BRANCH: "main"
  CHILD_PIPELINE_BRANCH: $CI_DEFAULT_BRANCH

workflow:
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"
    - if: $CI_PIPELINE_SOURCE == "web"
    - if: $CI_PIPELINE_SOURCE == "pipeline"
    - if: $CI_PIPELINE_SOURCE == "parent_pipeline"
    - if: $CI_PIPELINE_SOURCE == "merge_request_event"
    - if: $CI_COMMIT_BRANCH && $CI_OPEN_MERGE_REQUESTS
      when: never
    - if: $CI_COMMIT_BRANCH

include:
  - template: Security/Secret-Detection.gitlab-ci.yml
  - project: "bec/awi_utils"
    file: "/templates/check-packages-job.yml"
    inputs:
      stage: test
      path: "."
      pytest_args: "-v --random-order tests/"
      exclude_packages: ""

# different stages in the pipeline
stages:
  - Formatter
  - test
  - AdditionalTests
  - End2End
  - Deploy

.clone-repos: &clone-repos
  - git clone --branch $BEC_CORE_BRANCH https://gitlab.psi.ch/bec/bec.git
  - git clone --branch $OPHYD_DEVICES_BRANCH https://gitlab.psi.ch/bec/ophyd_devices.git
  - export OHPYD_DEVICES_PATH=$PWD/ophyd_devices

.install-os-packages: &install-os-packages
  - apt-get update
  - apt-get install -y libgl1-mesa-glx libegl1-mesa x11-utils libxkbcommon-x11-0 libdbus-1-3

before_script:
  - if [[ "$CI_PROJECT_PATH" != "bec/bec_qthemes" ]]; then
    echo -e "\033[35;1m Using branch $CHILD_PIPELINE_BRANCH of BEC QThemes \033[0;m";
    test -d bec_qthemes || git clone --branch $CHILD_PIPELINE_BRANCH https://gitlab.psi.ch/bec/bec_qthemes.git; cd bec_qthemes;
    fi

formatter:
  stage: Formatter
  needs: []
  script:
    - pip install black isort
    - isort --check --diff ./
    - black --check --diff --color ./
  rules:
    - if: $CI_PROJECT_PATH == "bec/bec_qthemes"

tests:
  parallel:
    matrix:
      - PYTHON_VERSION:
          - "3.10"
          - "3.11"
          - "3.12"
        QT_PCKG:
          - "pyside6"
          - "pyqt6"

  stage: test
  needs: []
  variables:
    QT_QPA_PLATFORM: "offscreen"
    PYTHON_VERSION: ""
    QT_PCKG: ""
  image: $CI_DEPENDENCY_PROXY_GROUP_IMAGE_PREFIX/python:$PYTHON_VERSION
  script:
    - *clone-repos
    - *install-os-packages
    - pip install $QT_PCKG
    - pip install -e .[dev]
    - pytest -v --junitxml=report.xml --random-order ./tests
  allow_failure: false

semver:
  stage: Deploy
  needs: ["tests"]
  script:
    - git config --global user.name "ci_update_bot"
    - git config --global user.email "ci_update_bot@bec.ch"
    - git checkout "$CI_COMMIT_REF_NAME"
    - git reset --hard origin/"$CI_COMMIT_REF_NAME"

    # delete all local tags
    - git tag -l | xargs git tag -d
    - git fetch --tags
    - git tag

    # build and publish package
    - pip install python-semantic-release==9.* wheel build twine
    - export GL_TOKEN=$CI_UPDATES
    - semantic-release -vv version

    # check if any artifacts were created
    - if [ ! -d dist ]; then echo No release will be made; exit 0; fi
    - twine upload dist/* -u __token__ -p $CI_PYPI_TOKEN --skip-existing
    - semantic-release publish

  allow_failure: false
  rules:
    - if: '$CI_COMMIT_REF_NAME == "main" && $CI_PROJECT_PATH == "bec/bec_qthemes"'
