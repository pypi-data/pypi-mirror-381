[project]
name = "django-mediastorage"
description = "A library that allows to protect media files that are served via nginx or traefik to be authenticated"
authors = [
  { name = "Jonas und der Wolf GmbH", email = "opensource@jonasundderwolf.de" },
  { name = "Alissa Gerhard", email = "alissa.gerhard@jonasundderwolf.de" },
]
requires-python = ">=3.12"
readme = "README.md"
keywords = [
    "django",
    "mediastorage",
]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Environment :: Web Environment",
    "Framework :: Django",
    "Intended Audience :: Developers",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Operating System :: OS Independent",
    "Framework :: Django :: 4.2",
    "Framework :: Django :: 5",
    "Framework :: Django :: 5.0",
    "Framework :: Django :: 5.1",
    "Framework :: Django :: 5.2",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
dependencies = [
    "django>=4.2",
    "djangorestframework>=3.15",
]
dynamic = ["version"]
license = "LGPL-2.1-or-later"


[build-system]
requires = ["setuptools", "setuptools_scm[toml]"]
build-backend = "setuptools.build_meta"

[dependency-groups]
test = [
    "pytest",
    "pytest-factoryboy",
    "pytest-django",
]
dev = ["pre-commit"]

[tool.uv]
default-groups = [
    "test",
    "dev",
]

[tool.ruff]
line-length = 90

[tool.ruff.lint]
ignore = [
    "E501", # pycodestyle: line-too-long
    "T201", # flake8-print: print statement found
]
select = [
    "B0",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "E",   # pycodestyle (Error)
    "F",   # Pyflakes
    "I",   # isort
    "T20", # flake8-print
    "W",   # pycodestyle (Warning)
]

[tool.ruff.lint.isort]
section-order = [
    "future",
    "standard-library",
    "third-party",
    "first-party",
    "project",
    "local-folder",
]

[tool.ruff.lint.isort.sections]
"project" = ["django_mediastorage"]

[tool.ruff.lint.mccabe]
max-complexity = 9

[tool.setuptools.packages.find]
include = ["django_mediastorage*"]
exclude = [".venv", "tests/*", "*/tests/*"]

[tool.setuptools_scm]
tag_regex = "^v(?P<version>.*)$"        # 1
write_to = "django_mediastorage/_version.py"  # 2
local_scheme = "no-local-version"

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py{312,313}-django{42,50,51,52}-drf{315,316}
requires = tox-uv

[gh-actions]
python =
    3.12: py312
    3.13: py313

[testenv]
deps =
    pytest
    pytest-django
    pytest-factoryboy

    django42: Django>=4.2,<4.3
    django50: Django>=5.0,<5.1
    django51: Django>=5.1,<5.2
    django52: Django>=5.2,<5.3

    drf315: djangorestframework>=3.15,<3.16
    drf316: djangorestframework>=3.16,<3.17

commands = python -m pytest tests
"""
