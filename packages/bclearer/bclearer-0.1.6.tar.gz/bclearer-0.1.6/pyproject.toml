[build-system]
requires = ["setuptools>=75.1.0"]
build-backend = "setuptools.build_meta"

[project]
name = "bclearer"
version = "0.1.6"
description = "A collection of interop, core, and orchestration services for the bclearer framework"
readme = "README.md"
requires-python = ">=3.12,<4.0"
authors = [{ name = "Mesbah Khan", email = "khanm@ontoledgy.io" }]
dependencies = [
  "setuptools>=75.1.0,<76.0.0",
  "pandas>=2.2.3,<3.0.0",
  "gitpython>=3.1.43,<4.0.0",
  "xlsxwriter>=3.2.0,<4.0.0",
  "xlrd>=2.0.1,<3.0.0",
  "chardet>=5.2.0,<6.0.0",
  "h5py>=3.11.0,<4.0.0",
  "tables>=3.10.1,<4.0.0",
  "radon>=6.0.1,<7.0.0",
  "numpy>=2.1.1,<3.0.0",
  "pyodbc>=5.1.0,<6.0.0",
  "pylint>=3.3.0,<4.0.0",
  "kafka-python-ng>=2.2.2,<3.0.0",
  "psutil>=6.0.0,<7.0.0",
  "networkx>=3.3,<4.0",
  "msaccessdb>=1.0.0,<2.0.0",
  "lxml>=5.3.0,<6.0.0",
  "pyspark>=3.5.2,<4.0.0",
  "delta-spark>=3.2.0,<4.0.0",
  "deltalake>=0.20.0,<1.0.0",
  "fastparquet>=2024.5.0,<2025.0.0",
  "basexclient>=8.4.4,<9.0.0",
  "pytest>=8.3.3,<9.0.0",
  "openpyxl>=3.1.5,<4.0.0",
  "neo4j>=5.24.0,<6.0.0",
  "pycozo==0.7.6",
  "cozo-embedded==0.7.6",
  "graphviz>=0.20.3,<0.21.0",
  "psycopg2-binary>=2.9.9,<3.0.0",
  "ruff>=0.6.8,<0.7.0",
  "black>=24.8.0,<25.0.0",
  "pre-commit>=3.8.0,<4.0.0",
  "isort>=5.13.2,<6.0.0",
  "pymongo>=4.10.0,<5.0.0",
  "docker>=7.1.0,<8.0.0",
  "faker>=30.1.0,<31.0.0",
  "filelock>=3.19.1,<4.0.0",
  "pyyaml>=6.0.2,<7.0.0",
  "pyshacl>=0.30.1,<0.31.0",
  "tqdm>=4.66.5,<5.0.0",
  "untangle>=1.2.1,<2.0.0",
  "sqlalchemy>=2.0.35,<3.0.0",
  "influxdb-client==1.49.0",
  "fastapi>=0.104.0,<1.0.0",
  "uvicorn[standard]>=0.24.0,<1.0.0",
  "bclearer-interop-services",
  "bclearer-core",
  "bclearer-orchestration-services",
  "bnop",
]

[project.scripts]
bclearer-pipeline-builder = "bclearer_core.pipeline_builder.cli:run_cli"

[tool.uv]
dev-dependencies = [
  "bclearer-core>=0.1.7,<0.2.0",
  "bclearer-interop-services>=0.4.0,<0.5.0",
  "bclearer-orchestration-services>=0.2.4,<0.3.0",
  "bnop>=0.2.3,<0.3.0",
]

[tool.uv.workspace]
members = [
  "libraries/core",
  "libraries/interop_services",
  "libraries/orchestration_services",
  "libraries/ontology",
]

[tool.uv.sources]
"bclearer-core" = { workspace = true }
"bclearer-interop-services" = { workspace = true }
"bclearer-orchestration-services" = { workspace = true }
"bnop" = { workspace = true }

[tool.setuptools]
packages = []

[tool.ruff]
fix = false
select = [ "ALL",]
exclude = [ "build", "dist",]
ignore = [ "E501", "ANN001", "ANN101", "D100", "D103", "ANN201", "RET504", "W191", "D102", "D104", "T201", "ANN204", "D101", "F405", "ANN202", "N806", "D107", "ERA001", "C408", "D105", "ICN001", "PTH118", "FIX002", "TD002", "TD003", "N803", "N802", "FBT001", "PTH123", "PLR0913", "PD002", "W291", "N999", "S101", "RUF013", "B007", "F821", "FBT002", "FA100", "PTH110", "TRY003", "BLE001", "F403", "PERF401", "N816", "ANN205", "PERF102", "PTH113", "F841", "EM102", "SIM118", "C901", "PD901", "TD004", "E712", "SIM115", "ARG002", "PD011", "PLR0912", "PLR0915", "EM101", "PTH103", "D205", "D400", "D415", "PLR2004", "ANN003", "B008", "A002", "G004", "RET503", "PTH207", "PERF403", "W293", "D401", "TRY300", "S608", "SLF001", "SIM102", "SIM103", "ARG001", "PTH102", "PTH112", "RUF005", "B026", "ANN002", "S307", "B006", "SIM112", "E101", "UP031", "RUF012", "A001", "C416", "ISC003", "INP001", "PTH119", "PTH202", "PD008", "PERF203", "D404", "PLR1714", "ANN206", "S603", "PYI024", "PT009", "SIM117", "PTH100", "PTH107", "PTH120", "PTH122", "FLY002", "E721", "E722", "D200", "PLR0911", "PLW2901", "TRY401", "S105", "S110", "S320", "S324", "S607", "B026", "ISC002", "G003", "PIE810", "SIM101", "SIM105", "SIM108", "TCH002", "ARG005", "PTH101", "PTH104", "PTH108", "PTH203", "PTH204", "PTH205", "PTH206", "N805", "PD003", "PERF402", "E711", "F401", "F811", "PLE0704", "PLR1722", "RUF001", "RUF015", "TRY002", "S307", "TCH003", "PT004", "TCH001", "ANN102", "E999", "B905", "E402", "A003", "RET505", "FA102", "PD004",]

[tool.black]
line-length = 40

[tool.mypy]
exclude = "^(tests|build|dist|.venv|pipelines)/.*$"

[tool.isort]
profile = "black"
known_third_party = [ "pandas", "numpy", "pytest",]
src_paths = [ "libraries",]
line_length = 40
multi_line_output = 3

[tool.pytest.ini_options]
pythonpath = [ "libraries", "./libraries/core/tests/", "./libraries/interop_services/tests/", "./libraries/orchestration_services/tests/", "./libraries/orchestration_services",]
testpaths = "./libraries/interop_services/tests"
python_files = "test_*.py"
addopts = "--import-mode=importlib"
