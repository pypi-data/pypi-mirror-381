# pyproject.toml

[project]
name = "file_conversor"
version = "0.6.1"
description = "Universal file conversor for multimedia files (audio, video, pdf, docs, etc)"
authors = [{ name = "Andre Luiz Romano Madureira", email = "andre@domain.com" }]
dependencies = [
    "typer>=0.16.0",
    "rich>=14.0.0",
    "Babel>=2.17.0",
    "pypdf>=5.8.0",
    "cryptography>=45.0.5",
    "pillow>=11.3.0",
    "img2pdf>=0.6.1",
    "pywin32>=311; sys_platform == 'win32'",
    "pymupdf>=1.26.3",
    "pyyaml>=6.0.2",
    "xmltodict>=0.14.2",
    "toml>=0.10.2",
    "concurrent-log-handler>=0.9.28",
    "portalocker>=3.2.0",
    "ocrmypdf>=16.11.0",
    "requests>=2.32.5",
]
requires-python = "==3.13.*"
readme = "README.md"
license-files = ["LICEN[CS]E*", "AUTHORS.md","README.md"]
classifiers = [
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.13",
    "Operating System :: OS Independent", 
] 
keywords = ["file", "conversion", "multimedia", "docs", "video", "audio", "image", "converter"]

[project.urls]
Homepage = "https://github.com/andre-romano/file_conversor"

[project.scripts]
# CLI command =  module:entry_point
file_conversor = "file_conversor.__main__:main"  

[tool.pdm] 
distribution = true

[tool.pdm.build]
package-dir = "src"

[tool.setuptools.package-data]
file_conversor = [
    "*", # package src/file_conversor/*
]

[tool.myproject]
title = "File Conversor"
data_path = "src/file_conversor/.data"
icons_path = "src/file_conversor/.icons"
locales_path = "src/file_conversor/.locales"

[tool.git-changelog]
# bump = "auto"
convention = "angular"
template = "keepachangelog"
versioning = "semver"
zerover = true
output = "CHANGELOG.md"
provider = "github"

[tool.pytest.ini_options]
testpaths = ["tests"]
addopts = "--cache-clear --ff --cov=src --cov-report=html"
filterwarnings = [
    "ignore:The 'is_flag' and 'flag_value' parameters are not supported by Typer",
    # supress pymupdf warnings
    "ignore:builtin type SwigPyPacked has no __module__ attribute:DeprecationWarning",
    "ignore:builtin type swigvarlink has no __module__ attribute",
    "ignore:builtin type SwigPyObject has no __module__ attribute",
]

[tool.pyright]
# Specify the language server (Pylance should be set by default if using Pyright)
languageServer = "Pylance"
typeCheckingMode = "basic"      # Type checking mode (options: "off", "basic", "strict")
diagnosticMode = "workspace"    # Diagnostic mode (options: "workspace", "openFiles")

extraPaths = ["src"]            # Extra search path
autoSearchPaths = true          # Automatically adds paths to the environment
indexing = true                 # Enable indexing for better suggestions
useLibraryCodeForTypes = true   # Use type stubs from libraries for better error detection

# Report all types of issues including circular imports AND
reportImportCycles = true 
# Duplicate imports, deprecated features, unused functions and classes
reportDuplicateImport = "warning"
reportDeprecated = "warning"
reportUnusedFunction = "warning"
reportUnusedClass = "warning"

# INHERITANCE ISSUES
reportMissingSuperCall = "error"           # missing super() call in a constructor
reportInconsistentConstructor = "error"    # inconsistent constructor signatures
reportIncompatibleMethodOverride = "error" # incompatible method overrides (base class)
reportOverlappingOverload = "error"        # overlapping overloads

# TYPE ISSUES
reportIncompleteStub = "error" # Incomplete stub files
reportInvalidStubStatement = "error" # Invalid statements in stub files
reportPropertyTypeMismatch = "error" # Property type mismatch

# Exclude files from analysis
ignore = [
    "**/__pycache__/**",
    "**/build/**",
    "**/dist/**",
    "**/docs/**",
    "**/node_modules/**",
    "**/venv/**",
    "**/.venv/**",    
    "**/.tox/**",
    "**/.nox/**",
    "**/.coverage/**",
    "**/.mypy_cache/**",
    "**/.pytest_cache/**",
    "**/*.egg-info",
    "**/*.bak",
    "**/*.egg",
    "**/*.pyc",
]
exclude = [
    "**/__pycache__/**",
    "**/build/**",
    "**/dist/**",
    "**/docs/**",
    "**/node_modules/**",
    "**/venv/**",
    "**/.venv/**",    
    "**/.tox/**",
    "**/.nox/**",
    "**/.coverage/**",
    "**/.mypy_cache/**",
    "**/.pytest_cache/**",
    "**/*.egg-info",
    "**/*.bak",
    "**/*.egg",
    "**/*.pyc",
]

[dependency-groups]
dev = [
    "pytest>=8.4.1",
    "pytest-cov>=6.2.1",
    "pydeps>=3.0.1",
    "pylint>=3.3.7",
    "invoke>=2.2.0",
    "git-changelog>=2.5.3",
    "twine>=6.1.0",
    "polib>=1.2.0",
    "deep-translator>=1.11.4",
    "requests>=2.32.5",
    "pyinstaller>=6.16.0",
]
