Metadata-Version: 2.4
Name: ngff-zarr
Version: 0.18.0
Summary: A lean and kind Open Microscopy Environment (OME) Next Generation File Format (NGFF) Zarr implementation.
Project-URL: Documentation, https://github.com/thewtex/ngff-zarr#readme
Project-URL: Issues, https://github.com/thewtex/ngff-zarr/issues
Project-URL: Source, https://github.com/thewtex/ngff-zarr
Project-URL: Changelog, https://github.com/thewtex/ngff-zarr/releases
Author-email: Matt McCormick <matt@fideus.io>
License-Expression: MIT
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3 :: Only
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Topic :: Scientific/Engineering
Requires-Python: >=3.9
Requires-Dist: dask[array]
Requires-Dist: importlib-resources
Requires-Dist: itkwasm-downsample>=1.7.1
Requires-Dist: itkwasm>=1.0b183
Requires-Dist: numpy
Requires-Dist: platformdirs
Requires-Dist: psutil; sys_platform != 'emscripten'
Requires-Dist: rich
Requires-Dist: rich-argparse
Requires-Dist: typing-extensions
Requires-Dist: zarr
Provides-Extra: all
Requires-Dist: dask-image; extra == 'all'
Requires-Dist: dask[distributed]; extra == 'all'
Requires-Dist: deepdiff; extra == 'all'
Requires-Dist: furo<2025,>=2024.7.18; extra == 'all'
Requires-Dist: imagecodecs; extra == 'all'
Requires-Dist: imageio; extra == 'all'
Requires-Dist: itk-filtering>=5.3.0; extra == 'all'
Requires-Dist: itk-io>=5.3.0; extra == 'all'
Requires-Dist: itkwasm-image-io; extra == 'all'
Requires-Dist: jsonschema; extra == 'all'
Requires-Dist: myst-parser<4,>=3.0.1; extra == 'all'
Requires-Dist: nibabel; extra == 'all'
Requires-Dist: pooch; extra == 'all'
Requires-Dist: pytest>=6; extra == 'all'
Requires-Dist: sphinx-autobuild<2025,>=2024.4.16; extra == 'all'
Requires-Dist: sphinx-autodoc2<0.6,>=0.5.0; extra == 'all'
Requires-Dist: sphinx-copybutton<0.6,>=0.5.2; extra == 'all'
Requires-Dist: sphinx-design<0.7,>=0.6.0; extra == 'all'
Requires-Dist: sphinx<8,>=7.4.7; extra == 'all'
Requires-Dist: sphinxext-opengraph<0.10,>=0.9.1; extra == 'all'
Requires-Dist: tensorstore; extra == 'all'
Requires-Dist: tifffile>=2024.7.24; extra == 'all'
Provides-Extra: cli
Requires-Dist: dask-image; extra == 'cli'
Requires-Dist: dask[distributed]; extra == 'cli'
Requires-Dist: imagecodecs; extra == 'cli'
Requires-Dist: imageio; extra == 'cli'
Requires-Dist: itk-filtering>=5.3.0; extra == 'cli'
Requires-Dist: itk-io>=5.3.0; extra == 'cli'
Requires-Dist: itkwasm-image-io; extra == 'cli'
Requires-Dist: nibabel; extra == 'cli'
Requires-Dist: tifffile>=2024.7.24; extra == 'cli'
Provides-Extra: dask-image
Requires-Dist: dask-image; extra == 'dask-image'
Provides-Extra: docs
Requires-Dist: furo<2025,>=2024.7.18; extra == 'docs'
Requires-Dist: myst-parser<4,>=3.0.1; extra == 'docs'
Requires-Dist: sphinx-autobuild<2025,>=2024.4.16; extra == 'docs'
Requires-Dist: sphinx-autodoc2<0.6,>=0.5.0; extra == 'docs'
Requires-Dist: sphinx-copybutton<0.6,>=0.5.2; extra == 'docs'
Requires-Dist: sphinx-design<0.7,>=0.6.0; extra == 'docs'
Requires-Dist: sphinx<8,>=7.4.7; extra == 'docs'
Requires-Dist: sphinxext-opengraph<0.10,>=0.9.1; extra == 'docs'
Provides-Extra: itk
Requires-Dist: itk-filtering>=5.3.0; extra == 'itk'
Provides-Extra: tensorstore
Requires-Dist: tensorstore; extra == 'tensorstore'
Provides-Extra: test
Requires-Dist: deepdiff; extra == 'test'
Requires-Dist: pooch; extra == 'test'
Requires-Dist: pytest>=6; extra == 'test'
Provides-Extra: validate
Requires-Dist: jsonschema; extra == 'validate'
Description-Content-Type: text/markdown

<!-- SPDX-FileCopyrightText: Copyright (c) Fideus Labs LLC -->
<!-- SPDX-License-Identifier: MIT -->
# ngff-zarr

[![PyPI - Version](https://img.shields.io/pypi/v/ngff-zarr.svg)](https://pypi.org/project/ngff-zarr)
[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/ngff-zarr.svg)](https://pypi.org/project/ngff-zarr)
[![Test](https://github.com/thewtex/ngff-zarr/actions/workflows/pixi-test.yml/badge.svg)](https://github.com/thewtex/ngff-zarr/actions/workflows/pixi-test.yml)
[![DOI](https://zenodo.org/badge/541840158.svg)](https://zenodo.org/badge/latestdoi/541840158)
[![Documentation Status](https://readthedocs.org/projects/ngff-zarr/badge/?version=latest)](https://ngff-zarr.readthedocs.io/en/latest/?badge=latest)

---

A lean and kind
[Open Microscopy Environment (OME) Next Generation File Format (NGFF) Zarr](https://ngff.openmicroscopy.org)
implementation.

## âœ¨ Features

- Minimal dependencies
- Work with arbitrary Zarr store types
- Lazy, parallel, and web ready -- no local filesystem required
- Process extremely large datasets
- Conversion of most bioimaging file formats
- Multiple downscaling methods
- Supports Python>=3.9
- Reads OME-Zarr v0.1 to v0.5 into simple Python data classes with Dask arrays
- Optional OME-Zarr data model validation during reading
- Writes OME-Zarr v0.4 to v0.5
- [Sharded Zarr] stores
- Optional writing via [tensorstore]

## Documentation

More information on command line usage, the Python API, library features, and
how to contribute can be found in
[our documentation](https://ngff-zarr.readthedocs.io/).

## See also

- [ome-zarr-py](https://github.com/ome/ome-zarr-py)
- [multiscale-spatial-image](https://github.com/spatial-image/multiscale-spatial-image)
- [itk-ioomezarrngff](https://github.com/InsightSoftwareConsortium/ITKIOOMEZarrNGFF)
- [iohub](https://czbiohub-sf.github.io/iohub/)
- [pydantic-ome-ngff](https://janeliascicomp.github.io/pydantic-ome-ngff/)
- [aicsimageio](https://allencellmodeling.github.io/aicsimageio/)
- [bfio](https://bfio.readthedocs.io/)

## License

`ngff-zarr` is distributed under the terms of the
[MIT](https://spdx.org/licenses/MIT.html) license.

[Sharded Zarr]: https://zarr.dev/zeps/accepted/ZEP0002.html
[tensorstore]: https://google.github.io/tensorstore/
