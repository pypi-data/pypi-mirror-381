# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from th2_grpc_sim import sim_pb2 as th2__grpc__sim_dot_sim__pb2
from th2_grpc_sim_template import sim_template_pb2 as th2__grpc__sim__template_dot_sim__template__pb2

GRPC_GENERATED_VERSION = '1.75.1'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in th2_grpc_sim_template/sim_template_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class SimTemplateStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.createRuleFixSecurity = channel.unary_unary(
                '/SimTemplate/createRuleFixSecurity',
                request_serializer=th2__grpc__sim__template_dot_sim__template__pb2.TemplateFixRuleCreate.SerializeToString,
                response_deserializer=th2__grpc__sim_dot_sim__pb2.RuleID.FromString,
                _registered_method=True)
        self.createDemoRule = channel.unary_unary(
                '/SimTemplate/createDemoRule',
                request_serializer=th2__grpc__sim__template_dot_sim__template__pb2.TemplateFixRuleCreate.SerializeToString,
                response_deserializer=th2__grpc__sim_dot_sim__pb2.RuleID.FromString,
                _registered_method=True)
        self.createRuleFix = channel.unary_unary(
                '/SimTemplate/createRuleFix',
                request_serializer=th2__grpc__sim__template_dot_sim__template__pb2.TemplateFixRuleCreate.SerializeToString,
                response_deserializer=th2__grpc__sim_dot_sim__pb2.RuleID.FromString,
                _registered_method=True)
        self.createDemoRuleCancelReplace = channel.unary_unary(
                '/SimTemplate/createDemoRuleCancelReplace',
                request_serializer=th2__grpc__sim__template_dot_sim__template__pb2.TemplateFixRuleCreate.SerializeToString,
                response_deserializer=th2__grpc__sim_dot_sim__pb2.RuleID.FromString,
                _registered_method=True)


class SimTemplateServicer(object):
    """Missing associated documentation comment in .proto file."""

    def createRuleFixSecurity(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createDemoRule(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createRuleFix(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def createDemoRuleCancelReplace(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SimTemplateServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'createRuleFixSecurity': grpc.unary_unary_rpc_method_handler(
                    servicer.createRuleFixSecurity,
                    request_deserializer=th2__grpc__sim__template_dot_sim__template__pb2.TemplateFixRuleCreate.FromString,
                    response_serializer=th2__grpc__sim_dot_sim__pb2.RuleID.SerializeToString,
            ),
            'createDemoRule': grpc.unary_unary_rpc_method_handler(
                    servicer.createDemoRule,
                    request_deserializer=th2__grpc__sim__template_dot_sim__template__pb2.TemplateFixRuleCreate.FromString,
                    response_serializer=th2__grpc__sim_dot_sim__pb2.RuleID.SerializeToString,
            ),
            'createRuleFix': grpc.unary_unary_rpc_method_handler(
                    servicer.createRuleFix,
                    request_deserializer=th2__grpc__sim__template_dot_sim__template__pb2.TemplateFixRuleCreate.FromString,
                    response_serializer=th2__grpc__sim_dot_sim__pb2.RuleID.SerializeToString,
            ),
            'createDemoRuleCancelReplace': grpc.unary_unary_rpc_method_handler(
                    servicer.createDemoRuleCancelReplace,
                    request_deserializer=th2__grpc__sim__template_dot_sim__template__pb2.TemplateFixRuleCreate.FromString,
                    response_serializer=th2__grpc__sim_dot_sim__pb2.RuleID.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'SimTemplate', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('SimTemplate', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class SimTemplate(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def createRuleFixSecurity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/SimTemplate/createRuleFixSecurity',
            th2__grpc__sim__template_dot_sim__template__pb2.TemplateFixRuleCreate.SerializeToString,
            th2__grpc__sim_dot_sim__pb2.RuleID.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def createDemoRule(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/SimTemplate/createDemoRule',
            th2__grpc__sim__template_dot_sim__template__pb2.TemplateFixRuleCreate.SerializeToString,
            th2__grpc__sim_dot_sim__pb2.RuleID.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def createRuleFix(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/SimTemplate/createRuleFix',
            th2__grpc__sim__template_dot_sim__template__pb2.TemplateFixRuleCreate.SerializeToString,
            th2__grpc__sim_dot_sim__pb2.RuleID.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def createDemoRuleCancelReplace(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/SimTemplate/createDemoRuleCancelReplace',
            th2__grpc__sim__template_dot_sim__template__pb2.TemplateFixRuleCreate.SerializeToString,
            th2__grpc__sim_dot_sim__pb2.RuleID.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
