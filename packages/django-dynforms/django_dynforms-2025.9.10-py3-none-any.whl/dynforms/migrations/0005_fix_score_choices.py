# Generated by Django 5.2.4 on 2025-09-06 19:44

from django.db import migrations


def fix_choice(field):
    if field.get('field_type') == 'scorechoices' and 'rubrics' not in field:
        choices = field.pop('choices', [])
        values = field.pop('values', [])
        field['rubrics'] = [f'{choice}: {value}' for choice, value in zip(choices, values)]
        field['scores'] = [i + 1 for i in range(len(field['rubrics']))]
    return field


def fix_score_choices(apps, schema_editor):
    FormType = apps.get_model('dynforms', 'FormType')
    db_alias = schema_editor.connection.alias

    to_update = FormType.objects.using(db_alias).all()
    for form_type in to_update:
        for page in form_type.pages:
            page['fields'] = [fix_choice(field) for field in page.get('fields', [])]
    FormType.objects.using(db_alias).bulk_update(to_update, ['pages'])


class Migration(migrations.Migration):

    dependencies = [
        ('dynforms', '0004_formtype_wizard'),
    ]

    operations = [
        migrations.RunPython(fix_score_choices, reverse_code=migrations.RunPython.noop),
    ]
