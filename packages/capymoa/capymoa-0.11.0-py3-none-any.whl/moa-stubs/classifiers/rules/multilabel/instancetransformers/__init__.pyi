
import sys
if sys.version_info >= (3, 8):
    from typing import Protocol
else:
    from typing_extensions import Protocol

import com.yahoo.labs.samoa.instances
import java.lang
import jpype
import moa
import typing



class InstanceTransformer(moa.MOAObject):
    def sourceInstanceToTarget(self, instance: com.yahoo.labs.samoa.instances.Instance) -> com.yahoo.labs.samoa.instances.Instance: ...
    def targetPredictionToSource(self, prediction: com.yahoo.labs.samoa.instances.Prediction) -> com.yahoo.labs.samoa.instances.Prediction: ...

class InstanceOutputAttributesSelector(moa.AbstractMOAObject, InstanceTransformer):
    targetInstances: com.yahoo.labs.samoa.instances.InstancesHeader = ...
    targetOutputIndices: typing.MutableSequence[int] = ...
    numSourceInstancesOutputs: int = ...
    @typing.overload
    def __init__(self): ...
    @typing.overload
    def __init__(self, instancesHeader: com.yahoo.labs.samoa.instances.InstancesHeader, intArray: typing.Union[typing.List[int], jpype.JArray]): ...
    def getDescription(self, stringBuilder: java.lang.StringBuilder, int: int) -> None: ...
    def sourceInstanceToTarget(self, instance: com.yahoo.labs.samoa.instances.Instance) -> com.yahoo.labs.samoa.instances.Instance: ...
    def targetPredictionToSource(self, prediction: com.yahoo.labs.samoa.instances.Prediction) -> com.yahoo.labs.samoa.instances.Prediction: ...

class NoInstanceTransformation(moa.AbstractMOAObject, InstanceTransformer):
    def __init__(self): ...
    def getDescription(self, stringBuilder: java.lang.StringBuilder, int: int) -> None: ...
    def sourceInstanceToTarget(self, instance: com.yahoo.labs.samoa.instances.Instance) -> com.yahoo.labs.samoa.instances.Instance: ...
    def targetPredictionToSource(self, prediction: com.yahoo.labs.samoa.instances.Prediction) -> com.yahoo.labs.samoa.instances.Prediction: ...

class InstanceAttributesSelector(InstanceOutputAttributesSelector, InstanceTransformer):
    targetInstances: com.yahoo.labs.samoa.instances.InstancesHeader = ...
    targetInputIndices: typing.MutableSequence[int] = ...
    targetOutputIndices: typing.MutableSequence[int] = ...
    numSourceInstancesOutputs: int = ...
    def __init__(self, instancesHeader: com.yahoo.labs.samoa.instances.InstancesHeader, intArray: typing.Union[typing.List[int], jpype.JArray], intArray2: typing.Union[typing.List[int], jpype.JArray]): ...
    def getDescription(self, stringBuilder: java.lang.StringBuilder, int: int) -> None: ...
    def sourceInstanceToTarget(self, instance: com.yahoo.labs.samoa.instances.Instance) -> com.yahoo.labs.samoa.instances.Instance: ...


class __module_protocol__(Protocol):
    # A module protocol which reflects the result of ``jp.JPackage("moa.classifiers.rules.multilabel.instancetransformers")``.

    InstanceAttributesSelector: typing.Type[InstanceAttributesSelector]
    InstanceOutputAttributesSelector: typing.Type[InstanceOutputAttributesSelector]
    InstanceTransformer: typing.Type[InstanceTransformer]
    NoInstanceTransformation: typing.Type[NoInstanceTransformation]
