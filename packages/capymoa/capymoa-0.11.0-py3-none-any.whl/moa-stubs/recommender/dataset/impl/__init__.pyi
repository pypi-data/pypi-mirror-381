
import sys
if sys.version_info >= (3, 8):
    from typing import Protocol
else:
    from typing_extensions import Protocol

import com.github.javacliparser
import java.lang
import moa.options
import moa.recommender.dataset
import typing



class FlixsterDataset(moa.options.AbstractOptionHandler, moa.recommender.dataset.Dataset):
    fileOption: com.github.javacliparser.FileOption = ...
    def __init__(self): ...
    def curItemID(self) -> int: ...
    def curRating(self) -> float: ...
    def curUserID(self) -> int: ...
    def getDescription(self, stringBuilder: java.lang.StringBuilder, int: int) -> None: ...
    def getPurposeString(self) -> str: ...
    def init(self) -> None: ...
    def next(self) -> bool: ...
    def reset(self) -> None: ...
    def toString(self) -> str: ...

class JesterDataset(moa.options.AbstractOptionHandler, moa.recommender.dataset.Dataset):
    fileOption: com.github.javacliparser.FileOption = ...
    def __init__(self): ...
    def curItemID(self) -> int: ...
    def curRating(self) -> float: ...
    def curUserID(self) -> int: ...
    def getDescription(self, stringBuilder: java.lang.StringBuilder, int: int) -> None: ...
    def getPurposeString(self) -> str: ...
    def init(self) -> None: ...
    def next(self) -> bool: ...
    def reset(self) -> None: ...
    def toString(self) -> str: ...

class MovielensDataset(moa.options.AbstractOptionHandler, moa.recommender.dataset.Dataset):
    fileOption: com.github.javacliparser.FileOption = ...
    def __init__(self): ...
    def curItemID(self) -> int: ...
    def curRating(self) -> float: ...
    def curUserID(self) -> int: ...
    def getDescription(self, stringBuilder: java.lang.StringBuilder, int: int) -> None: ...
    def getPurposeString(self) -> str: ...
    def init(self) -> None: ...
    def next(self) -> bool: ...
    def reset(self) -> None: ...
    def toString(self) -> str: ...


class __module_protocol__(Protocol):
    # A module protocol which reflects the result of ``jp.JPackage("moa.recommender.dataset.impl")``.

    FlixsterDataset: typing.Type[FlixsterDataset]
    JesterDataset: typing.Type[JesterDataset]
    MovielensDataset: typing.Type[MovielensDataset]
