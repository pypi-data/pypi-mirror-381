
import sys
if sys.version_info >= (3, 8):
    from typing import Protocol
else:
    from typing_extensions import Protocol

import com.yahoo.labs.samoa.instances
import typing



class AttributeSimilarityCalculator:
    @typing.overload
    def __init__(self): ...
    @typing.overload
    def __init__(self, int: int): ...
    def computePerAttributeSimilarity(self, attribute: com.yahoo.labs.samoa.instances.Attribute, double: float, double2: float) -> float: ...
    def computeSimilarityOfInstance(self, instance: com.yahoo.labs.samoa.instances.Instance, instance2: com.yahoo.labs.samoa.instances.Instance) -> float: ...
    def computeWeightOfAttribute(self, attribute: com.yahoo.labs.samoa.instances.Attribute, instance: com.yahoo.labs.samoa.instances.Instance, instance2: com.yahoo.labs.samoa.instances.Instance) -> float: ...
    def getDimension(self) -> int: ...
    def getFrequencyOfValueByAttribute(self, attribute: com.yahoo.labs.samoa.instances.Attribute, int: int) -> float: ...
    def getNumberOfAttributes(self, attribute: com.yahoo.labs.samoa.instances.Attribute) -> int: ...
    def getProbabilityEstimateOfAttributeByValue(self, attribute: com.yahoo.labs.samoa.instances.Attribute, int: int) -> float: ...
    def getSampleProbabilityOfAttributeByValue(self, attribute: com.yahoo.labs.samoa.instances.Attribute, int: int) -> float: ...
    def getSize(self) -> int: ...
    def increaseSize(self, int: int) -> None: ...
    def setDimension(self, int: int) -> None: ...
    def updateAttributeStatistics(self, int: int, attribute: com.yahoo.labs.samoa.instances.Attribute, int2: int) -> None: ...

class EuclideanDistanceSimilarityCalculator(AttributeSimilarityCalculator):
    def __init__(self): ...
    def computePerAttributeSimilarity(self, attribute: com.yahoo.labs.samoa.instances.Attribute, double: float, double2: float) -> float: ...
    def computeWeightOfAttribute(self, attribute: com.yahoo.labs.samoa.instances.Attribute, instance: com.yahoo.labs.samoa.instances.Instance, instance2: com.yahoo.labs.samoa.instances.Instance) -> float: ...

class GoodAll3SimilarityCalculator(AttributeSimilarityCalculator):
    def __init__(self): ...
    def computePerAttributeSimilarity(self, attribute: com.yahoo.labs.samoa.instances.Attribute, double: float, double2: float) -> float: ...
    def computeWeightOfAttribute(self, attribute: com.yahoo.labs.samoa.instances.Attribute, instance: com.yahoo.labs.samoa.instances.Instance, instance2: com.yahoo.labs.samoa.instances.Instance) -> float: ...

class IgnoreSimilarityCalculator(AttributeSimilarityCalculator):
    def __init__(self): ...
    def computePerAttributeSimilarity(self, attribute: com.yahoo.labs.samoa.instances.Attribute, double: float, double2: float) -> float: ...
    def computeWeightOfAttribute(self, attribute: com.yahoo.labs.samoa.instances.Attribute, instance: com.yahoo.labs.samoa.instances.Instance, instance2: com.yahoo.labs.samoa.instances.Instance) -> float: ...

class InverseOccurrenceFrequencySimilarityCalculator(AttributeSimilarityCalculator):
    def __init__(self): ...
    def computePerAttributeSimilarity(self, attribute: com.yahoo.labs.samoa.instances.Attribute, double: float, double2: float) -> float: ...
    def computeWeightOfAttribute(self, attribute: com.yahoo.labs.samoa.instances.Attribute, instance: com.yahoo.labs.samoa.instances.Instance, instance2: com.yahoo.labs.samoa.instances.Instance) -> float: ...

class LinSimilarityCalculator(AttributeSimilarityCalculator):
    def __init__(self): ...
    def computePerAttributeSimilarity(self, attribute: com.yahoo.labs.samoa.instances.Attribute, double: float, double2: float) -> float: ...
    def computeWeightOfAttribute(self, attribute: com.yahoo.labs.samoa.instances.Attribute, instance: com.yahoo.labs.samoa.instances.Instance, instance2: com.yahoo.labs.samoa.instances.Instance) -> float: ...

class OccurrenceFrequencySimilarityCalculator(AttributeSimilarityCalculator):
    def __init__(self): ...
    def computePerAttributeSimilarity(self, attribute: com.yahoo.labs.samoa.instances.Attribute, double: float, double2: float) -> float: ...
    def computeWeightOfAttribute(self, attribute: com.yahoo.labs.samoa.instances.Attribute, instance: com.yahoo.labs.samoa.instances.Instance, instance2: com.yahoo.labs.samoa.instances.Instance) -> float: ...


class __module_protocol__(Protocol):
    # A module protocol which reflects the result of ``jp.JPackage("moa.classifiers.semisupervised.attributeSimilarity")``.

    AttributeSimilarityCalculator: typing.Type[AttributeSimilarityCalculator]
    EuclideanDistanceSimilarityCalculator: typing.Type[EuclideanDistanceSimilarityCalculator]
    GoodAll3SimilarityCalculator: typing.Type[GoodAll3SimilarityCalculator]
    IgnoreSimilarityCalculator: typing.Type[IgnoreSimilarityCalculator]
    InverseOccurrenceFrequencySimilarityCalculator: typing.Type[InverseOccurrenceFrequencySimilarityCalculator]
    LinSimilarityCalculator: typing.Type[LinSimilarityCalculator]
    OccurrenceFrequencySimilarityCalculator: typing.Type[OccurrenceFrequencySimilarityCalculator]
