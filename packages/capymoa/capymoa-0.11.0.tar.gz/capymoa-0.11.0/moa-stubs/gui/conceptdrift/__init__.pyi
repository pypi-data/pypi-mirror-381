
import sys
if sys.version_info >= (3, 8):
    from typing import Protocol
else:
    from typing_extensions import Protocol

import java.awt
import javax.swing
import javax.swing.table
import jpype
import moa.gui
import moa.tasks
import typing



class CDTaskManagerPanel(javax.swing.JPanel):
    MILLISECS_BETWEEN_REFRESH: typing.ClassVar[int] = ...
    exportFileExtension: typing.ClassVar[str] = ...
    def __init__(self): ...
    def cancelSelectedTasks(self) -> None: ...
    def copyClipBoardConfiguration(self) -> None: ...
    def deleteSelectedTasks(self) -> None: ...
    def getCurrenTask(self) -> moa.tasks.ConceptDriftMainTask: ...
    def getSelectedCurrenTask(self) -> moa.tasks.ConceptDriftMainTask: ...
    def getSelectedTasks(self) -> typing.MutableSequence[moa.tasks.TaskThread]: ...
    @staticmethod
    def main(stringArray: typing.Union[typing.List[str], jpype.JArray]) -> None: ...
    def pauseSelectedTasks(self) -> None: ...
    def resumeSelectedTasks(self) -> None: ...
    def runTask(self, task: moa.tasks.Task) -> None: ...
    def saveLogSelectedTasks(self) -> None: ...
    def setPreviewPanel(self, previewPanel: moa.gui.PreviewPanel) -> None: ...
    @typing.overload
    def setTaskString(self, string: str) -> None: ...
    @typing.overload
    def setTaskString(self, string: str, boolean: bool) -> None: ...
    def taskSelectionChanged(self) -> None: ...
    class ProgressCellRenderer(javax.swing.JProgressBar, javax.swing.table.TableCellRenderer):
        def __init__(self, cDTaskManagerPanel: 'CDTaskManagerPanel'): ...
        @typing.overload
        def firePropertyChange(self, string: str, byte: int, byte2: int) -> None: ...
        @typing.overload
        def firePropertyChange(self, string: str, double: float, double2: float) -> None: ...
        @typing.overload
        def firePropertyChange(self, string: str, float: float, float2: float) -> None: ...
        @typing.overload
        def firePropertyChange(self, string: str, long: int, long2: int) -> None: ...
        @typing.overload
        def firePropertyChange(self, string: str, short: int, short2: int) -> None: ...
        @typing.overload
        def firePropertyChange(self, string: str, char: str, char2: str) -> None: ...
        @typing.overload
        def firePropertyChange(self, string: str, int: int, int2: int) -> None: ...
        @typing.overload
        def firePropertyChange(self, string: str, boolean: bool, boolean2: bool) -> None: ...
        def getTableCellRendererComponent(self, jTable: javax.swing.JTable, object: typing.Any, boolean: bool, boolean2: bool, int: int, int2: int) -> java.awt.Component: ...
        def revalidate(self) -> None: ...
        def validate(self) -> None: ...
    class TaskTableModel(javax.swing.table.AbstractTableModel):
        def __init__(self, cDTaskManagerPanel: 'CDTaskManagerPanel'): ...
        def getColumnCount(self) -> int: ...
        def getColumnName(self, int: int) -> str: ...
        def getRowCount(self) -> int: ...
        def getValueAt(self, int: int, int2: int) -> typing.Any: ...
        def isCellEditable(self, int: int, int2: int) -> bool: ...


class __module_protocol__(Protocol):
    # A module protocol which reflects the result of ``jp.JPackage("moa.gui.conceptdrift")``.

    CDTaskManagerPanel: typing.Type[CDTaskManagerPanel]
