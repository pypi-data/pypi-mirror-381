
import sys
if sys.version_info >= (3, 8):
    from typing import Protocol
else:
    from typing_extensions import Protocol

import com.github.javacliparser
import com.yahoo.labs.samoa.instances
import java.lang
import java.util
import moa.core
import moa.options
import moa.streams
import moa.streams.clustering
import typing



class ConceptDriftGenerator(moa.streams.InstanceStream):
    def getEventsList(self) -> java.util.ArrayList[moa.streams.clustering.ClusterEvent]: ...

class AbstractConceptDriftGenerator(moa.options.AbstractOptionHandler, ConceptDriftGenerator):
    instanceRandomSeedOption: com.github.javacliparser.IntOption = ...
    notBinaryStreamOption: com.github.javacliparser.FlagOption = ...
    numInstancesConceptOption: com.github.javacliparser.IntOption = ...
    def __init__(self): ...
    def estimatedRemainingInstances(self) -> int: ...
    def getChange(self) -> bool: ...
    def getDescription(self, stringBuilder: java.lang.StringBuilder, int: int) -> None: ...
    def getEventsList(self) -> java.util.ArrayList[moa.streams.clustering.ClusterEvent]: ...
    def getHeader(self) -> com.yahoo.labs.samoa.instances.InstancesHeader: ...
    def getPurposeString(self) -> str: ...
    def hasMoreInstances(self) -> bool: ...
    def isRestartable(self) -> bool: ...
    def nextInstance(self) -> moa.core.InstanceExample: ...
    def restart(self) -> None: ...

class AbruptChangeGenerator(AbstractConceptDriftGenerator):
    def __init__(self): ...

class GradualChangeGenerator(AbstractConceptDriftGenerator):
    changeDriftOption: com.github.javacliparser.FloatOption = ...
    def __init__(self): ...

class NoChangeGenerator(AbstractConceptDriftGenerator):
    def __init__(self): ...


class __module_protocol__(Protocol):
    # A module protocol which reflects the result of ``jp.JPackage("moa.streams.generators.cd")``.

    AbruptChangeGenerator: typing.Type[AbruptChangeGenerator]
    AbstractConceptDriftGenerator: typing.Type[AbstractConceptDriftGenerator]
    ConceptDriftGenerator: typing.Type[ConceptDriftGenerator]
    GradualChangeGenerator: typing.Type[GradualChangeGenerator]
    NoChangeGenerator: typing.Type[NoChangeGenerator]
