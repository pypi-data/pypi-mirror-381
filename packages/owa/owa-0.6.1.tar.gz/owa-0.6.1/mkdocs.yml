site_name: Open World Agents
site_description: Everything you need to build state-of-the-art foundation multimodal desktop agent, end-to-end.
repo_url: https://github.com/open-world-agents/open-world-agents
repo_name: open-world-agents

theme:
  name: material
  logo: images/owa-logo.jpg
  favicon: images/owa-logo.jpg
  features:
    # - navigation.tabs # I think omitting this is better to show Awesome Examples
    - navigation.sections
    - navigation.top
    - search.suggest
    - search.highlight
    - content.tabs.link
    - content.code.annotation
    - content.code.copy
  language: en
  palette:
    - scheme: default
      toggle:
        icon: material/toggle-switch-off-outline
        name: Switch to dark mode
      primary: teal
      accent: purple
    - scheme: slate
      toggle:
        icon: material/toggle-switch
        name: Switch to light mode
      primary: teal
      accent: lime

plugins:
  - search
  - termynal:
      prompt_literal_start:
        - "$"
        - ">"
  - mkdocstrings:
      handlers:
        owa:
          # Current owa handler assumes packages to be installed, so path setting is not required (and not compatible with owa.core.plugin_discovery implementation)
          # paths:
          #   - projects/owa-core
          #   - projects/owa-env-desktop
          #   - projects/owa-env-gst
          #   - projects/owa-env-example
          options:
            members_order: source
            separate_signature: true
            docstring_options:
              ignore_init_summary: true
            merge_init_into_class: true
            show_signature_annotations: true
            signature_crossrefs: true
          import:
            - url: https://docs.python.org/3/objects.inv
              domains: [py, std]
            - url: https://typing-extensions.readthedocs.io/en/latest/objects.inv
  - git-revision-date-localized:
      type: datetime
  - mermaid2
  # - redirects:
  #     redirect_maps:
  #       'data/index.md': 'data/owamcap_format_guide.md'

markdown_extensions:
  - toc:
      permalink: true
  - pymdownx.highlight:
      anchor_linenums: true
  - pymdownx.inlinehilite
  - pymdownx.snippets
  - admonition
  - pymdownx.arithmatex:
      generic: true
  - footnotes
  - pymdownx.details
  - pymdownx.superfences:
      custom_fences:
        - name: mermaid
          class: mermaid
          format: !!python/name:pymdownx.superfences.fence_code_format
  - pymdownx.mark
  - pymdownx.tabbed:
      alternate_style: true
  - attr_list
  - mkdocs-click
  - pymdownx.emoji:
      emoji_index: !!python/name:material.extensions.emoji.twemoji
      emoji_generator: !!python/name:material.extensions.emoji.to_svg

nav:
  - Get Started:
    - Welcome to OWA: index.md
    - ðŸš€ Quick Start Guide: quick-start.md
    - Help with OWA: help_with_owa.md
    - Installation: install.md
    - Contributing: contributing.md
    # - Changelog: changelog.md # Later
  - Env in OWA:
    - env/index.md
    - env/guide.md
    - env/custom_plugins.md
    - Lists of EnvPlugins:
      - Standard Environment: env/plugins/std.md
      - Desktop Environment: env/plugins/desktop.md
      - Gstreamer Environment: env/plugins/gst.md
  - Data in OWA:
    - Overview: data/index.md
    - Getting Started:
      - Why OWAMcap?: data/getting-started/why-owamcap.md
      - Recording Data: data/getting-started/recording-data.md
      - Exploring Data: data/getting-started/exploring-data.md
    - Technical Reference:
      - OWAMcap Format Guide: data/technical-reference/format-guide.md
      - Custom Message Types: data/technical-reference/custom-messages.md
      - ðŸš€ Data Pipeline (MCAP â†’ VLA Training): data/technical-reference/data-pipeline.md
    - Tools & Comparison:
      - Data Viewer: data/tools/viewer.md
      - Comparison with LeRobot: data/tools/comparison-with-lerobot.md
    - Examples:
      - Data Conversions: data/examples/conversions.md
  - CLI Tools:
    - cli/index.md
    - Command Groups:
      - MCAP Commands: cli/mcap.md
      - Environment Commands: cli/env.md
      - Message Commands: cli/messages.md
      - Video Commands: cli/video.md
  - ðŸš€ Awesome Examples (WIP):
    - Multimodal Game Agent: examples/multimodal_game_agent.md
    - Omniparse + InternLM GUI Agent: examples/gui_agent.md
    - Interactve World Model: examples/interactive_world_model.md
    - Usage with transformers: examples/usage_with_transformers.md
    - Usage with LLM Inference Engines(ollama, ...): examples/usage_with_llm.md
  # - API Reference: api_reference.md # Later
