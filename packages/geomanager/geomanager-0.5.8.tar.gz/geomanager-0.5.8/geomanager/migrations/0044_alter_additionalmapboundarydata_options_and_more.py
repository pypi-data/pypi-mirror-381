# Generated by Django 4.2.10 on 2024-02-28 14:25

import django.core.validators
from django.db import migrations
import wagtail.blocks
import wagtail.fields
import wagtail_color_panel.blocks


class Migration(migrations.Migration):

    dependencies = [
        ('geomanager', '0043_additionalmapboundarydata'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='additionalmapboundarydata',
            options={'verbose_name': 'Additional Map Boundary Dataset', 'verbose_name_plural': 'Additional Map Boundary Datasets'},
        ),
        migrations.AddField(
            model_name='additionalmapboundarydata',
            name='render_layers',
            field=wagtail.fields.StreamField([('fill', wagtail.blocks.StructBlock([('paint', wagtail.blocks.StructBlock([('fill_color', wagtail_color_panel.blocks.NativeColorBlock(default='#000000', required=False)), ('fill_opacity', wagtail.blocks.FloatBlock(default=1.0, required=False, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])), ('fill_outline_color', wagtail_color_panel.blocks.NativeColorBlock(default='#000000', required=False)), ('fill_antialias', wagtail.blocks.BooleanBlock(default=True, required=False))], label='Mapbox GL Paint Properties')), ('filter', wagtail.blocks.CharBlock(required=False)), ('maxzoom', wagtail.blocks.IntegerBlock(required=False)), ('minzoom', wagtail.blocks.IntegerBlock(required=False))], label='Polygon Layer')), ('line', wagtail.blocks.StructBlock([('paint', wagtail.blocks.StructBlock([('line_color', wagtail_color_panel.blocks.NativeColorBlock(default='#000000', required=False)), ('line_dasharray', wagtail.blocks.CharBlock(required=False)), ('line_gap_width', wagtail.blocks.FloatBlock(default=0.0, required=False, validators=[django.core.validators.MinValueValidator(0)])), ('line_opacity', wagtail.blocks.FloatBlock(default=1.0, required=False, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(1)])), ('line_width', wagtail.blocks.FloatBlock(default=1.0, required=False, validators=[django.core.validators.MinValueValidator(0)])), ('line_offset', wagtail.blocks.FloatBlock(default=0, required=False, validators=[django.core.validators.MinValueValidator(0)]))], label='Mapbox GL Paint Properties')), ('layout', wagtail.blocks.StructBlock([('line_cap', wagtail.blocks.ChoiceBlock(choices=[('butt', 'Butt'), ('round', 'Round'), ('square', 'Square')], required=False)), ('line_join', wagtail.blocks.ChoiceBlock(choices=[('miter', 'Miter'), ('bevel', 'Bevel'), ('round', 'Round')], required=False)), ('line_miter_limit', wagtail.blocks.FloatBlock(default=2.0, required=False, validators=[django.core.validators.MinValueValidator(0)])), ('line_round_limit', wagtail.blocks.FloatBlock(default=1.05, required=False, validators=[django.core.validators.MinValueValidator(0)]))], label='Mapbox GL Layout Properties')), ('filter', wagtail.blocks.CharBlock(required=False)), ('maxzoom', wagtail.blocks.IntegerBlock(required=False)), ('minzoom', wagtail.blocks.IntegerBlock(required=False))], label='Line Layer'))], blank=True, null=True, use_json_field=True, verbose_name='Map Layers'),
        ),
    ]
