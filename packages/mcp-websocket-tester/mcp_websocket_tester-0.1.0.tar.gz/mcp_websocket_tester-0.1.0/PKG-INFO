Metadata-Version: 2.4
Name: mcp-websocket-tester
Version: 0.1.0
Summary: Advanced WebSocket Testing MCP Server for AI assistants
Project-URL: Homepage, https://github.com/Kabir08/mcp-websocket-tester
Project-URL: Repository, https://github.com/Kabir08/mcp-websocket-tester
Project-URL: Issues, https://github.com/Kabir08/mcp-websocket-tester/issues
Author-email: Kabir Potdar <kabirpotdar7@gmail.com>
License: MIT
License-File: LICENSE
Keywords: ai,claude,mcp,testing,websocket
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Programming Language :: Python :: 3.13
Requires-Python: >=3.8
Requires-Dist: mcp[cli]>=1.15.0
Requires-Dist: websockets>=12.0
Provides-Extra: dev
Requires-Dist: black>=23.0.0; extra == 'dev'
Requires-Dist: isort>=5.12.0; extra == 'dev'
Requires-Dist: pytest-asyncio>=0.21.0; extra == 'dev'
Requires-Dist: pytest>=7.0.0; extra == 'dev'
Description-Content-Type: text/markdown

# MCP WebSocket Testing Server

A powerful Model Context Protocol (MCP) server for testing WebSocket applications. Provides AI assistants with comprehensive WebSocket testing capabilities including connection management, message sending/receiving, and automated test scenarios.

## üöÄ Features

- **Multiple Protocol Support**: WS and WSS protocols
- **Message Format Support**: Text, JSON, and Binary message formats
- **Real-time Monitoring**: Background message listeners and connection diagnostics
- **Automated Testing**: Run complex test scenarios with multiple steps
- **Queue Management**: Handle incoming messages with proper queuing system
- **Comprehensive Diagnostics**: Monitor connection health and performance

## üì¶ Installation

### Prerequisites
- Python 3.13 or higher
- [UV package manager](https://github.com/astral-sh/uv) (recommended) or pip

### Quick Start
```bash
# Clone the repository
git clone <https://github.com/Kabir08/WebsocketMcp>
cd mcp-websocket-tester

# Install dependencies
uv sync

# Or with pip
pip install -e .


## ‚öôÔ∏è MCP Client Configuration

### Claude Desktop Configuration

Add this to your Claude Desktop configuration file:

**macOS**: `~/Library/Application Support/Claude/claude_desktop_config.json`  
**Windows**: `%APPDATA%/Claude/claude_desktop_config.json`  
**Linux**: `~/.config/Claude/claude_desktop_config.json`

```json
{
  "mcpServers": {
    "websocket-tester": {
      "command": "uvx",
      "args": ["mcp-websocket-tester"]
    }
  }
}