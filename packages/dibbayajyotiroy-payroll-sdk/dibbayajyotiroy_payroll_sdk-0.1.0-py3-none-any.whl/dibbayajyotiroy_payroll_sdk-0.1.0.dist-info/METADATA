Metadata-Version: 2.4
Name: dibbayajyotiroy-payroll-sdk
Version: 0.1.0
Summary: A client SDK for the Rust Payroll System API.
Home-page: https://github.com/DibbayajyotiRoy/Payroll-Management-System
Author: Dibbayajyoti Roy
Author-email: Your Name <your.email@example.com>
License: MIT
Project-URL: Homepage, https://github.com/your-username/your-repo
Project-URL: Bug Tracker, https://github.com/your-username/your-repo/issues
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.7
Description-Content-Type: text/markdown
Dynamic: author
Dynamic: home-page

# openapi-client
A high-performance, next-generation payroll management system API.
This documentation provides detailed information on all available endpoints for managing employees, configuring payroll rules, and automating payroll runs.


This Python package is automatically generated by the [OpenAPI Generator](https://openapi-generator.tech) project:

- API version: 1.0.0
- Package version: 1.0.0
- Generator version: 7.14.0
- Build package: org.openapitools.codegen.languages.PythonClientCodegen

## Requirements.

Python 3.9+

## Installation & Usage
### pip install

If the python package is hosted on a repository, you can install directly using:

```sh
pip install git+https://github.com/GIT_USER_ID/GIT_REPO_ID.git
```
(you may need to run `pip` with root permission: `sudo pip install git+https://github.com/GIT_USER_ID/GIT_REPO_ID.git`)

Then import the package:
```python
import openapi_client
```

### Setuptools

Install via [Setuptools](http://pypi.python.org/pypi/setuptools).

```sh
python setup.py install --user
```
(or `sudo python setup.py install` to install the package for all users)

Then import the package:
```python
import openapi_client
```

### Tests

Execute `pytest` to run the tests.

## Getting Started

Please follow the [installation procedure](#installation--usage) and then run the following:

```python

import openapi_client
from openapi_client.rest import ApiException
from pprint import pprint

# Defining the host is optional and defaults to http://127.0.0.1:8080
# See configuration.py for a list of all supported configuration parameters.
configuration = openapi_client.Configuration(
    host = "http://127.0.0.1:8080"
)



# Enter a context with an instance of the API client
with openapi_client.ApiClient(configuration) as api_client:
    # Create an instance of the API class
    api_instance = openapi_client.EmployeesApi(api_client)

    try:
        # List All Employees
        api_response = api_instance.employees_get()
        print("The response of EmployeesApi->employees_get:\n")
        pprint(api_response)
    except ApiException as e:
        print("Exception when calling EmployeesApi->employees_get: %s\n" % e)

```

## Documentation for API Endpoints

All URIs are relative to *http://127.0.0.1:8080*

Class | Method | HTTP request | Description
------------ | ------------- | ------------- | -------------
*EmployeesApi* | [**employees_get**](docs/EmployeesApi.md#employees_get) | **GET** /employees | List All Employees
*EmployeesApi* | [**employees_id_get**](docs/EmployeesApi.md#employees_id_get) | **GET** /employees/{id} | Get Employee by ID
*EmployeesApi* | [**employees_post**](docs/EmployeesApi.md#employees_post) | **POST** /employees | Create a New Employee
*PayrollAutomationApi* | [**payroll_runs_run_id_get**](docs/PayrollAutomationApi.md#payroll_runs_run_id_get) | **GET** /payroll/runs/{run_id} | Get Payroll Run Status
*RolesConfigurationApi* | [**roles_get**](docs/RolesConfigurationApi.md#roles_get) | **GET** /roles | List All Roles
*RolesConfigurationApi* | [**roles_post**](docs/RolesConfigurationApi.md#roles_post) | **POST** /roles | Create a New Role
*RolesConfigurationApi* | [**roles_role_id_delete**](docs/RolesConfigurationApi.md#roles_role_id_delete) | **DELETE** /roles/{role_id} | Delete a Role
*RolesConfigurationApi* | [**roles_role_id_get**](docs/RolesConfigurationApi.md#roles_role_id_get) | **GET** /roles/{role_id} | Get Role by ID
*RolesConfigurationApi* | [**roles_role_id_put**](docs/RolesConfigurationApi.md#roles_role_id_put) | **PUT** /roles/{role_id} | Update a Role
*PlaceholdersFutureFeaturesApi* | [**analytics_reports_get**](docs/PlaceholdersFutureFeaturesApi.md#analytics_reports_get) | **GET** /analytics/reports | Get Analytics Reports
*PlaceholdersFutureFeaturesApi* | [**payroll_run_post**](docs/PlaceholdersFutureFeaturesApi.md#payroll_run_post) | **POST** /payroll/run | Manually Trigger a Payroll Run


## Documentation For Models

 - [CreateEmployee](docs/CreateEmployee.md)
 - [CreateRoleRequest](docs/CreateRoleRequest.md)
 - [Employee](docs/Employee.md)
 - [LeavePolicy](docs/LeavePolicy.md)
 - [LeavePolicyDeduction](docs/LeavePolicyDeduction.md)
 - [OvertimePolicy](docs/OvertimePolicy.md)
 - [PayrollCalculationResult](docs/PayrollCalculationResult.md)
 - [RoleConfiguration](docs/RoleConfiguration.md)
 - [SalaryInfo](docs/SalaryInfo.md)


<a id="documentation-for-authorization"></a>
## Documentation For Authorization

Endpoints do not require authorization.


## Author




