# coding: utf-8

"""
    Rust Payroll System API  v1.0

    A high-performance, next-generation payroll management system API. This documentation provides detailed information on all available endpoints for managing employees, configuring payroll rules, and automating payroll runs. 

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from openapi_client.models.create_employee import CreateEmployee

class TestCreateEmployee(unittest.TestCase):
    """CreateEmployee unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> CreateEmployee:
        """Test CreateEmployee
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `CreateEmployee`
        """
        model = CreateEmployee()
        if include_optional:
            return CreateEmployee(
                first_name = 'Jane',
                last_name = 'Doe',
                email = 'jane.doe@example.com',
                department = 'Engineering',
                position = 'Senior Software Developer',
                salary_info = openapi_client.models.salary_info.SalaryInfo(
                    base_salary = 120000, 
                    currency = 'USD', 
                    pay_frequency = 'BiWeekly', 
                    overtime_rate = 55.0, )
            )
        else:
            return CreateEmployee(
                first_name = 'Jane',
                last_name = 'Doe',
                email = 'jane.doe@example.com',
                department = 'Engineering',
                position = 'Senior Software Developer',
                salary_info = openapi_client.models.salary_info.SalaryInfo(
                    base_salary = 120000, 
                    currency = 'USD', 
                    pay_frequency = 'BiWeekly', 
                    overtime_rate = 55.0, ),
        )
        """

    def testCreateEmployee(self):
        """Test CreateEmployee"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
