[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "mongodb-query-builder"
version = "1.0.0"
description = "A fluent, type-safe query builder for MongoDB with support for aggregations and Atlas Search"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "MIT"}
keywords = ["mongodb", "query-builder", "aggregation", "atlas-search", "database", "fluent-api"]
authors = [
    {name = "Christian De Asis", email = "cdeasis923@gmail.comm"}
]
maintainers = [
    {name = "Christian De Asis", email = "cdeasis923@gmail.comm"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Database",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Typing :: Typed",
]

dependencies = []

[project.optional-dependencies]
mongodb = ["pymongo>=4.0.0"]
async = ["motor>=3.0.0"]
dev = [
    "black>=25.9.0",
    "flake8>=7.3.0",
    "isort>=6.1.0",
    "mypy>=1.18.2",
    "pre-commit>=4.3.0",
    "pylint>=3.3.8",
]
test = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "pytest-asyncio>=0.21.0",
    "mongomock>=4.1.0",
]
docs = []
all = [
    "mongodb-query-builder[mongodb,async,dev,test,docs]"
]

[project.urls]
Homepage = "https://github.com/ch-dev401/mongodb-query-builder"
Documentation = "https://mongodb-query-builder.readthedocs.io"
Repository = "https://github.com/ch-dev401/mongodb-query-builder"
"Bug Tracker" = "https://github.com/ch-dev401/mongodb-query-builder/issues"
Changelog = "https://github.com/ch-dev401/mongodb-query-builder/blob/main/CHANGELOG.md"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]
include = ["mongodb_query_builder*"]
exclude = ["tests*"]

[tool.setuptools.package-data]
mongodb_query_builder = ["py.typed"]

# Black configuration
[tool.black]
line-length = 100
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

# pytest configuration
[tool.pytest.ini_options]
minversion = "7.0"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=mongodb_query_builder",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]

# Coverage configuration
[tool.coverage.run]
source = ["src"]
branch = true
omit = [
    "*/tests/*",
    "*/__pycache__/*",
    "*/site-packages/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# MyPy configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
disallow_untyped_decorators = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
follow_imports = "normal"
ignore_missing_imports = true
strict_equality = true

# Pylint configuration
[tool.pylint.messages_control]
disable = [
    "C0103",  # Invalid name
    "C0114",  # Missing module docstring
    "C0115",  # Missing class docstring
    "C0116",  # Missing function docstring
    "R0903",  # Too few public methods
    "R0913",  # Too many arguments
]

[tool.pylint.format]
max-line-length = 100