[build-system]
build-backend = "poetry_dynamic_versioning.backend"
requires = [ "poetry-core>=1", "poetry-dynamic-versioning>=1,<2" ]

[tool.poetry]
name = "CytoDataFrame"
version = "0.0.28"
description = "An in-memory data analysis format for single-cell profiles alongside their corresponding images and segmentation masks."
authors = [ "Way Science Community" ]
license = "BSD-3-Clause"
readme = "README.md"
packages = [ { include = "cytodataframe", from = "src" } ]

[tool.poetry.requires-plugins]
poetry-dynamic-versioning = { version = ">=1.0.0,<2.0.0", extras = [ "plugin" ] }

[tool.poetry.dependencies]
python = ">=3.10,<3.14"
# used for data management
pandas = [
  { version = "<2.2.2", python = "<3.9" },
  { version = "^2.2.2", python = ">=3.9" },
]
# used for data ingest and export
pyarrow = ">=16,<21"
# used for environment detection
ipython = "^8.12.3"
# used for image processing
scikit-image = [
  { version = "^0.19.3", python = "<3.9" },
  { version = ">0.19.3", python = ">=3.9" },
]
# dependency of scikit-image
pywavelets = [
  { version = "^1.4.1", python = "<3.9" },
  { version = ">1.4.1", python = ">=3.9" },
]
# used for image modifications in cytodataframe
opencv-python = "^4.10.0.84"
imagecodecs = "^2024.9.22"
matplotlib = "^3.9.3"
ipywidgets = "^8.1.7"
imageio = "^2.37.0"

[tool.poetry.group.dev.dependencies]
# provides testing capabilities for project
pytest = "^8.3.3"
# used for test data generation
sqlalchemy = ">=1.3.6,<3"
# added to generate test coverage reports
coverage = "^7.6.0"
jupyterlab = "^4.3.0"
jupytext = "^1.16.4"
black = ">=24.10,<26.0"
isort = ">=5.13.2,<7.0.0"
jupyterlab-code-formatter = "^3.0.2"
duckdb = "^1.1.3"
# version specifications below used to help surpass 3.13-based installations
cosmicqc = { version = "^0.1.4", markers = "python_version < '3.13' and python_version >= '3.10'" }

[tool.poetry.group.docs.dependencies]
# used for rendering docs into docsite
sphinx = "^7.0.0"
# used for rendering markdown through sphinx
myst-parser = "^3.0.0"
# used for rendering notebooks through myst parser
myst-nb = "^1.1.2"
# used for extension sphinx-multiversion and to fix git-based challenges with default branch handling
sphinx-multiversion = { git = "https://github.com/J-RN/sphinx-multiversion", rev = "a77f0c862dace3a62c18fc866da60ef7dde3873d" }
# used for gathering version data for docsite
dunamai = "^1.22.0"
# used for theming the docsite
pydata-sphinx-theme = "^0.16.0"

[tool.poetry-dynamic-versioning]
enable = false
style = "pep440"
vcs = "git"

[tool.poetry-dynamic-versioning.substitution]
files = [ "src/cytodataframe/__init__.py" ]

# defines various development tasks

[tool.setuptools_scm]
root = "."

[tool.ruff]
target-version = "py38"
line-length = 88
fix = true

lint.select = [
  # flake8-builtins
  "A",
  # flake8-annotations
  "ANN",
  # flake8-comprehensions
  "C4",
  # mccabe
  "C90",
  # pycodestyle
  "E",
  # pyflakes
  "F",
  # isort
  "I",
  # pylint
  "PL",
  # ruff
  "RUF",
  # flake8-simplify
  "SIM",
  "W",
]
# Ignore `E402` and `F401` (unused imports) in all `__init__.py` files
lint.per-file-ignores."__init__.py" = [ "E402", "F401" ]
# ignore typing rules for tests
lint.per-file-ignores."tests/*" = [ "ANN201", "PLR0913", "PLR2004" ]

[tool.coverage.run]
# settings to avoid errors with cv2 and coverage
# see here for more: https://github.com/nedbat/coveragepy/issues/1653
omit = [
  "config.py",
  "config-3.py",
]

[tool.jupytext]
formats = "ipynb,py:light"

# specify where version replacement is performed

[tool.bandit]
exclude_dirs = [ "tests" ]
