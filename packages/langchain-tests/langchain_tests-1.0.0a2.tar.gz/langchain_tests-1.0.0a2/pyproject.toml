[build-system]
requires = [
    "pdm-backend",
]
build-backend = "pdm.backend"

[project]
authors = [
    { name = "Erick Friis", email = "erick@langchain.dev" },
]
requires-python = ">=3.10.0,<4.0.0"
dependencies = [
    "langchain-core>=1.0.0a6,<2.0.0",
    "pytest>=7.0.0,<9.0.0",
    "pytest-asyncio>=0.20.0,<2.0.0",
    "httpx>=0.28.1,<1.0.0",
    "syrupy>=4.0.0,<5.0.0",
    "pytest-socket>=0.7.0,<1.0.0",
    "pytest-benchmark",
    "pytest-codspeed",
    "pytest-recording",
    "vcrpy>=7.0.0,<8.0.0",
    "numpy>=1.26.2; python_version<'3.13'",
    "numpy>=2.1.0; python_version>='3.13'",
]
name = "langchain-tests"
version = "1.0.0a2"
description = "Standard tests for LangChain implementations"
readme = "README.md"

[project.license]
text = "MIT"

[project.urls]
"Source Code" = "https://github.com/langchain-ai/langchain/tree/master/libs/standard-tests"
repository = "https://github.com/langchain-ai/langchain"

[dependency-groups]
test = [
    "langchain-core",
]
test_integration = []
lint = [
    "ruff>=0.13.1,<0.14.0",
]
typing = [
    "mypy>=1.18.1,<1.19.0",
    "types-pyyaml>=6.0.12.2,<7.0.0.0",
    "langchain-core",
]

[tool.uv.sources.langchain-core]
path = "../core"
editable = true

[tool.mypy]
plugins = [
    "pydantic.mypy",
]
strict = true
enable_error_code = "deprecated"
warn_unreachable = true
disallow_any_generics = false

[[tool.mypy.overrides]]
module = [
    "vcr.*",
]
ignore_missing_imports = true

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
select = [
    "ALL",
]
ignore = [
    "C90",
    "COM812",
    "FIX002",
    "ISC001",
    "PERF203",
    "PLR2004",
    "PLR09",
    "RUF012",
    "S101",
    "S311",
    "SLF001",
    "TC001",
    "TC002",
    "TC003",
    "TD002",
    "TD003",
    "ANN401",
    "BLE",
]
unfixable = [
    "B028",
    "PLW1510",
]

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true
mypy-init-return = true

[tool.ruff.lint.flake8-type-checking]
runtime-evaluated-base-classes = [
    "pydantic.BaseModel",
    "langchain_core.load.serializable.Serializable",
    "langchain_core.runnables.base.RunnableSerializable",
]

[tool.ruff.lint.pep8-naming]
classmethod-decorators = [
    "classmethod",
    "langchain_core.utils.pydantic.pre_init",
    "pydantic.field_validator",
    "pydantic.v1.root_validator",
]

[tool.ruff.lint.pyupgrade]
keep-runtime-typing = true

[tool.ruff.lint.pydocstyle]
convention = "google"
ignore-var-parameters = true

[tool.ruff.lint.per-file-ignores]
"tests/**" = [
    "D1",
]
"scripts/**" = [
    "INP",
]

[tool.coverage.run]
omit = [
    "tests/*",
]

[tool.pytest.ini_options]
addopts = "--strict-markers --strict-config --durations=5 -vv"
markers = [
    "requires: mark tests as requiring a specific library",
    "scheduled: mark tests to run in scheduled testing",
    "compile: mark placeholder test used to compile integration tests without running them",
]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"
