# Generated by go2rpm {{ generator_version }}
%bcond check 1
{% if detector == "scancode" %}

# scancode has a lot of dependencies, so it can be disabled for a faster build
# or when its deps are unavailable.
%if %{defined rhel} || "%{_arch}" == "i386"
%global go_vendor_license_check_disable 1
%endif
{% endif %}

# {{ forge }}
%global goipath         {{ goipath }}
{% if not 'github.com' in goipath %}
%global forgeurl        {{ forge }}
{% endif %}
{% if version is not none or tag is not none %}
Version:                {{ version if version is not none else tag }}
{% endif %}
{% if tag is not none %}
%global tag             {{ tag }}
{% endif %}
{% if commit is not none %}
%global commit          {{ commit }}
{% if commitdate is defined %}
%global date            {{ commitdate }}
{% endif %}
{% endif %}

{% if use_new_versioning %}
%gometa -L -f
{% else %}
%gometa -f
{% endif %}

{% if altipaths is not none %}
%global goaltipaths     {{ altipaths|join(' ') }}

{% endif %}

Name:           {{ name }}
{% if version is none and tag is none %}
Version:        0
{% endif %}
{% if rpmautospec %}
Release:        {{ pkg_autorelease }}
{% else %}
Release:        {{ pkg_release }}%{?dist}
{% endif %}
Summary:        {{ summary|default("# FIXME") }}

# Generated by go-vendor-tools
License:        {{ license | default('TODO: %{warn:Please fill in the License tag!}') }}
URL:            %{gourl}
Source0:        %{gosource}
# Generated by go-vendor-tools
Source1:        {{ vendor_archive_name }}
Source2:        go-vendor-tools.toml

BuildRequires:  go-vendor-tools

%description
{{ description|default("# FIXME", true)|wordwrap(wrapstring="\n")|trim }}

%prep
%goprep -A
%setup -q -T -D -a1 %{forgesetupargs}
%autopatch -p1

%generate_buildrequires
%go_vendor_license_buildrequires -c %{S:2}

{% if has_cmd or main_cmd is not none or other_cmd|length > 0 %}
%build
%global gomodulesmode GO111MODULE=on
{% if has_cmd %}
for cmd in cmd/* ; do
  %gobuild -o %{gobuilddir}/bin/$(basename $cmd) %{goipath}/$cmd
done
{% endif %}
{% if main_cmd is not none %}
%gobuild -o %{gobuilddir}/bin/{{ main_cmd }} %{goipath}
{% endif %}
{% if other_cmd|length > 0 %}
for cmd in {{ other_cmd|sort|join(' ') }}; do
  %gobuild -o %{gobuilddir}/bin/$(basename $cmd) %{goipath}/$cmd
done
{% endif %}

{% endif %}
%install
%go_vendor_license_install -c %{S:2}
{% if has_cmd or main_cmd is not none or other_cmd|length > 0 %}
install -m 0755 -vd                     %{buildroot}%{_bindir}
install -m 0755 -vp %{gobuilddir}/bin/* %{buildroot}%{_bindir}/
{% endif %}

%check
%go_vendor_license_check -c %{S:2}
%if %{with check}
%gotest ./...
%endif

{% if has_cmd or main_cmd is not none or other_cmd|length > 0 %}
%files -f %{go_vendor_license_filelist}
%license vendor/modules.txt
{% if doc_files|length > 0 %}
%doc {{ doc_files|join(' ')|customwordwrap(width=75, wrapstring="\n%doc ", break_long_words=False, break_on_hyphens=False)|trim }}
{% endif %}
{% if main_cmd is not none %}
%{_bindir}/{{ main_cmd }}
{% elif command_list|length > 0 %}
{% for cmd in command_list %}
%{_bindir}/{{ cmd }}
{% endfor %}
{% endif %}

{% endif %}

%changelog
{% if rpmautospec %}
%autochangelog
{% else %}
{% if auto_changelog_entry %}
{% if version is none and tag is none and commit is not none %}
* {{ date }} {{ packager|default("go2rpm <nobody@fedoraproject.org>") }} - 0-{{ pkg_release }}.{{ shortdate }}git{{ shortcommit }}
{% elif version is none and tag is not none and commit is none %}
* {{ date }} {{ packager|default("go2rpm <nobody@fedoraproject.org>") }} - {{ tag }}-{{ pkg_release }}
{% elif version is none and tag is not none and commit is not none %}
* {{ date }} {{ packager|default("go2rpm <nobody@fedoraproject.org>") }} - {{ tag }}-{{ pkg_release }}.{{ shortdate }}git{{ shortcommit }}
{% elif version is not none and tag is none and commit is none %}
* {{ date }} {{ packager|default("go2rpm <nobody@fedoraproject.org>") }} - {{ version }}-{{ pkg_release }}
{% elif version is not none and tag is none and commit is not none %}
* {{ date }} {{ packager|default("go2rpm <nobody@fedoraproject.org>") }} - {{ version }}-{{ pkg_release }}.{{ shortdate }}git{{ shortcommit }}
{% endif %}
- Initial package
{% endif %}
{% endif %}
