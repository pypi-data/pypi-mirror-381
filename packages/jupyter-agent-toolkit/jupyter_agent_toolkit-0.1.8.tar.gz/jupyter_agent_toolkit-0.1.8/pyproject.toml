[build-system]
requires = ["setuptools>=68", "setuptools_scm[toml]>=8", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "jupyter-agent-toolkit"
dynamic = ["version"]
description = "A toolkit for building, managing, and extending Jupyter agent workflows, including kernel and notebook utilities."
readme = "README.md"
requires-python = ">=3.10"
license = { text = "MIT" }
authors = [{ name = "Roberto Rodriguez", email = "9653181+Cyb3rWard0g@users.noreply.github.com" }]
classifiers = [
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
]
dependencies = [
  "jupyter-client>=8.6.3",
  "numpy<2",
  "nbformat>=5.10.4",
  "pandas>=2.3.1",
  "pyarrow>=21.0.0",
  "aiohttp>=3.9",
  "yarl>=1.9",
  "pycrdt>=0.12.27",
  "jupyter-core>=5.8.1",
  "jupyter-ydoc>=3.1.0",
]

[project.optional-dependencies]
# Dev you already have
dev = [
  "pytest>=8",
  "pytest-asyncio>=0.23",
  "anyio>=4",
  "ipykernel"
]

# Database extras (install these IN THE KERNEL when you want DB helpers)
postgresql = [
  "psycopg[binary]>=3.1",
  "psycopg_pool>=3.2",
]

elasticsearch = [
  "elasticsearch>=8.14"
]

splunk = [
  "splunk-sdk>=2.0"
]

# Convenience bundle for all DB helpers
all = [
  "jupyter-agent-toolkit[postgresql,elasticsearch,splunk]"
]

[project.urls]
Homepage = "https://github.com/Cyb3rWard0g/jupyter-agent-toolkit"
Repository = "https://github.com/Cyb3rWard0g/jupyter-agent-toolkit"
Issues = "https://github.com/Cyb3rWard0g/jupyter-agent-toolkit/issues"

# src/ layout
[tool.setuptools]
package-dir = { "" = "src" }
include-package-data = true

[tool.setuptools.packages.find]
where = ["src"]
# exclude = ["tests*"]

# Versioning from Git tags (minimal style)
[tool.setuptools_scm]
version_scheme = "guess-next-dev"
local_scheme   = "node-and-date"
# (no write_to -> no __version__ file generated)

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
addopts = "-ra"
pythonpath = ["src"]   # lets you run `pytest` without installing

[dependency-groups]
dev = [
    "pytest>=8.4.1",
]
