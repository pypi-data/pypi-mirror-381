[build-system]
requires = ["setuptools"]
build-backend = "setuptools.build_meta"


[project]
name = "wulfric"
license = { text = "GPL-3.0 license" }
dynamic = ["version"]
description = "Cell, Atoms, K-path."
dependencies = ["numpy", "spglib>=0.1.15"]
authors = [{ name = "Andrey Rybakov", email = "rybakov.ad@icloud.com" }]
requires-python = ">=3.9"
readme = "README.rst"
classifiers = [
    'Development Status :: 4 - Beta',
    'Intended Audience :: Science/Research',
    'Intended Audience :: Developers',
    'Programming Language :: Python',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3.12',
    'Programming Language :: Python :: 3.13',
    'Programming Language :: Python :: 3 :: Only',
    'Topic :: Software Development',
    'Topic :: Scientific/Engineering',
    "Operating System :: OS Independent",
]

[project.scripts]
wulfric = "wulfric.__main__:main"

[project.urls]
Homepage = "https://wulfric.org"
Documentation = "https://wulfric.org"
Repository = "https://github.com/adrybakov/wulfric.git"
Issues = "https://github.com/adrybakov/wulfric/issues"
Changelog = "https://wulfric.org/en/latest/release-notes/index.html"

[project.optional-dependencies]
visual = ["plotly", "scipy"]

[tool.setuptools.dynamic]
version = { attr = "wulfric.__version__" }

[tool.setuptools.package-data]
wulfric = ["crystal/_hpkot_examples/POSCAR-files/*/POSCAR_inversion", "crystal/_hpkot_examples/POSCAR-files/*/POSCAR_noinversion"]


[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]

# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.9
target-version = "py39"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`) codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = true

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

# Ignore `E402` (import violations) in all `__init__.py` files, and in selected subdirectories.
[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401", "F403"]
"docs/source/conf.py" = ["F401"]
