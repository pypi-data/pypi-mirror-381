<?xml version="1.0" encoding="utf-8"?><testsuites name="pytest tests"><testsuite name="pytest" errors="0" failures="0" skipped="0" tests="157" time="1.807" timestamp="2025-10-04T06:55:06.495022+00:00" hostname="runnervmwhb2z"><testcase classname="tests.test_caching" name="test_cache__getitem_throws_keyerror[cache0]" file="tests/test_caching.py" line="7" time="0.002" /><testcase classname="tests.test_caching" name="test_cache__getitem_throws_keyerror[cache1]" file="tests/test_caching.py" line="7" time="0.001" /><testcase classname="tests.test_caching" name="test_cache__setitem__getitem[cache0]" file="tests/test_caching.py" line="13" time="0.001" /><testcase classname="tests.test_caching" name="test_cache__setitem__getitem[cache1]" file="tests/test_caching.py" line="13" time="0.001" /><testcase classname="tests.test_caching" name="test_cache_item[cache0]" file="tests/test_caching.py" line="21" time="0.001" /><testcase classname="tests.test_caching" name="test_cache_item[cache1]" file="tests/test_caching.py" line="21" time="0.001" /><testcase classname="tests.test_caching" name="test_reset_existing_item[cache0]" file="tests/test_caching.py" line="29" time="0.001" /><testcase classname="tests.test_caching" name="test_reset_existing_item[cache1]" file="tests/test_caching.py" line="29" time="0.001" /><testcase classname="tests.test_caching" name="test_cache_max_size[cache0]" file="tests/test_caching.py" line="54" time="0.001" /><testcase classname="tests.test_caching" name="test_cache_max_size[cache1]" file="tests/test_caching.py" line="54" time="0.001" /><testcase classname="tests.test_caching" name="test_cache_keys_and_values" file="tests/test_caching.py" line="68" time="0.001" /><testcase classname="tests.test_caching" name="test_cache_len[cache0]" file="tests/test_caching.py" line="81" time="0.001" /><testcase classname="tests.test_caching" name="test_cache_len[cache1]" file="tests/test_caching.py" line="81" time="0.001" /><testcase classname="tests.test_caching" name="test_cache_iterable[cache0]" file="tests/test_caching.py" line="91" time="0.001" /><testcase classname="tests.test_caching" name="test_cache_iterable[cache1]" file="tests/test_caching.py" line="91" time="0.001" /><testcase classname="tests.test_caching" name="test_expiration_policy_with_max_age" file="tests/test_caching.py" line="103" time="0.401" /><testcase classname="tests.test_caching" name="test_expiration_policy" file="tests/test_caching.py" line="118" time="0.001" /><testcase classname="tests.test_caching" name="test_expiration_policy_when_full" file="tests/test_caching.py" line="127" time="0.001" /><testcase classname="tests.test_caching" name="test_cache_clear_is_empty[cache0]" file="tests/test_caching.py" line="137" time="0.001" /><testcase classname="tests.test_caching" name="test_cache_clear_is_empty[cache1]" file="tests/test_caching.py" line="137" time="0.001" /><testcase classname="tests.test_caching" name="test_expiring_cache_checks_expiration_when_iterating" file="tests/test_caching.py" line="148" time="0.001" /><testcase classname="tests.test_caching" name="test_cache_repr" file="tests/test_caching.py" line="166" time="0.000" /><testcase classname="tests.test_caching" name="test_lazy_method" file="tests/test_caching.py" line="173" time="0.201" /><testcase classname="tests.test_caching" name="test_lazy_method_support_dict_cache" file="tests/test_caching.py" line="196" time="0.001" /><testcase classname="tests.test_caching" name="test_lazy_method_cache_depends_on_input_arguments" file="tests/test_caching.py" line="215" time="0.001" /><testcase classname="tests.test_caching" name="test_lazy_method_cache_depends_on_input_arguments_args" file="tests/test_caching.py" line="231" time="0.001" /><testcase classname="tests.test_datetime_utils" name="test_parse_with_rx_raises_for_empty_value" file="tests/test_datetime_utils.py" line="9" time="0.001" /><testcase classname="tests.test_datetime_utils" name="test_parse_datetime[2008-09-03-expected_result0]" file="tests/test_datetime_utils.py" line="14" time="0.001" /><testcase classname="tests.test_datetime_utils" name="test_parse_datetime[2018-09-03-expected_result1]" file="tests/test_datetime_utils.py" line="14" time="0.001" /><testcase classname="tests.test_datetime_utils" name="test_parse_datetime[2008-09-03 20:56:35.450686-expected_result2]" file="tests/test_datetime_utils.py" line="14" time="0.001" /><testcase classname="tests.test_datetime_utils" name="test_parse_datetime[2008-09-03T20:56:35.450686-expected_result3]" file="tests/test_datetime_utils.py" line="14" time="0.001" /><testcase classname="tests.test_datetime_utils" name="test_parse_datetime[2008-09-03T20:56:35.450686Z-expected_result4]" file="tests/test_datetime_utils.py" line="14" time="0.001" /><testcase classname="tests.test_datetime_utils" name="test_parse_date[2008-09-03-expected_result0]" file="tests/test_datetime_utils.py" line="29" time="0.001" /><testcase classname="tests.test_datetime_utils" name="test_parse_date[2018-09-03-expected_result1]" file="tests/test_datetime_utils.py" line="29" time="0.001" /><testcase classname="tests.test_datetime_utils" name="test_parse_date[2018/09/03-expected_result2]" file="tests/test_datetime_utils.py" line="29" time="0.001" /><testcase classname="tests.test_datetime_utils" name="test_parse_time[10:20:15-expected_result0]" file="tests/test_datetime_utils.py" line="42" time="0.001" /><testcase classname="tests.test_datetime_utils" name="test_parse_time[03:00:00-expected_result1]" file="tests/test_datetime_utils.py" line="42" time="0.001" /><testcase classname="tests.test_datetime_utils" name="test_parse_time[23:15:59-expected_result2]" file="tests/test_datetime_utils.py" line="42" time="0.001" /><testcase classname="tests.test_datetime_utils" name="test_parse[10:20:15-time-expected_result0]" file="tests/test_datetime_utils.py" line="55" time="0.001" /><testcase classname="tests.test_datetime_utils" name="test_parse[2018/09/03-date-expected_result1]" file="tests/test_datetime_utils.py" line="55" time="0.001" /><testcase classname="tests.test_datetime_utils" name="test_parse[2018-09-03-datetime-expected_result2]" file="tests/test_datetime_utils.py" line="55" time="0.001" /><testcase classname="tests.test_datetime_utils" name="test_parse_raises_for_unsupported_type" file="tests/test_datetime_utils.py" line="68" time="0.000" /><testcase classname="tests.test_datetime_utils" name="test_parse_raises_for_invalid_value" file="tests/test_datetime_utils.py" line="73" time="0.000" /><testcase classname="tests.test_decorators" name="test_exception_handle" file="tests/test_decorators.py" line="12" time="0.001" /><testcase classname="tests.test_decorators" name="test_exception_handle_async" file="tests/test_decorators.py" line="23" time="0.004" /><testcase classname="tests.test_decorators_logs" name="test_log_decorator" file="tests/test_decorators_logs.py" line="11" time="0.001" /><testcase classname="tests.test_decorators_logs" name="test_log_decorator_async" file="tests/test_decorators_logs.py" line="34" time="0.001" /><testcase classname="tests.test_decorators_logs" name="test_log_decorator_exceptions_handling" file="tests/test_decorators_logs.py" line="58" time="0.002" /><testcase classname="tests.test_decorators_logs" name="test_log_decorator_async_exceptions_handling" file="tests/test_decorators_logs.py" line="82" time="0.002" /><testcase classname="tests.test_decorators_logs" name="test_log_decorator_with_arguments_and_return_value[Burtleby-5]" file="tests/test_decorators_logs.py" line="107" time="0.001" /><testcase classname="tests.test_decorators_logs" name="test_log_decorator_with_arguments_and_return_value[True-2]" file="tests/test_decorators_logs.py" line="107" time="0.001" /><testcase classname="tests.test_decorators_retry" name="test_retry_decorator" file="tests/test_decorators_retry.py" line="10" time="0.021" /><testcase classname="tests.test_decorators_retry" name="test_retry_decorator_async" file="tests/test_decorators_retry.py" line="27" time="0.022" /><testcase classname="tests.test_decorators_retry" name="test_retry_decorator_no_delay" file="tests/test_decorators_retry.py" line="45" time="0.001" /><testcase classname="tests.test_decorators_retry" name="test_retry_decorator_exact_exceptions" file="tests/test_decorators_retry.py" line="62" time="0.001" /><testcase classname="tests.test_decorators_retry" name="test_retry_decorator_exact_exceptions_async" file="tests/test_decorators_retry.py" line="71" time="0.001" /><testcase classname="tests.test_decorators_retry" name="test_retry_decorator_exceeding_attempts_raises" file="tests/test_decorators_retry.py" line="81" time="0.031" /><testcase classname="tests.test_decorators_retry" name="test_retry_decorator_exceeding_attempts_raises_async" file="tests/test_decorators_retry.py" line="98" time="0.032" /><testcase classname="tests.test_decorators_retry" name="test_retry_decorator_callback" file="tests/test_decorators_retry.py" line="116" time="0.021" /><testcase classname="tests.test_decorators_retry" name="test_retry_decorator_callback_async" file="tests/test_decorators_retry.py" line="139" time="0.022" /><testcase classname="tests.test_decorators_retry" name="test_retry_decorator_callback_async_callback" file="tests/test_decorators_retry.py" line="163" time="0.021" /><testcase classname="tests.test_diagnostics" name="test_stopwatch" file="tests/test_diagnostics.py" line="10" time="0.011" /><testcase classname="tests.test_diagnostics" name="test_stopwatch_with_context_manager" file="tests/test_diagnostics.py" line="21" time="0.011" /><testcase classname="tests.test_diagnostics" name="test_stopwatch_raises_for_start_twice" file="tests/test_diagnostics.py" line="29" time="0.002" /><testcase classname="tests.test_diagnostics" name="test_stopwatch_raises_for_stop_when_not_running" file="tests/test_diagnostics.py" line="37" time="0.001" /><testcase classname="tests.test_diagnostics" name="test_stopwatch_reset" file="tests/test_diagnostics.py" line="44" time="0.011" /><testcase classname="tests.test_diagnostics" name="test_stopwatch_repr" file="tests/test_diagnostics.py" line="59" time="0.001" /><testcase classname="tests.test_exceptions" name="test_object_not_found_default_message" file="tests/test_exceptions.py" line="5" time="0.001" /><testcase classname="tests.test_exceptions" name="test_object_not_found_message[Product]" file="tests/test_exceptions.py" line="9" time="0.001" /><testcase classname="tests.test_exceptions" name="test_object_not_found_message[Product not found]" file="tests/test_exceptions.py" line="9" time="0.001" /><testcase classname="tests.test_exceptions" name="test_object_not_found_message[Cat not found]" file="tests/test_exceptions.py" line="9" time="0.001" /><testcase classname="tests.test_exceptions" name="test_accepted_exception_default_message" file="tests/test_exceptions.py" line="15" time="0.000" /><testcase classname="tests.test_exceptions" name="test_accepted_exception_message[Lorem ipsum dolor sit amet]" file="tests/test_exceptions.py" line="21" time="0.001" /><testcase classname="tests.test_exceptions" name="test_accepted_exception_message[Email sent, but its delivery is not guaranteed]" file="tests/test_exceptions.py" line="21" time="0.001" /><testcase classname="tests.test_folders" name="test_get_file_extension[hello.jpg-.jpg]" file="tests/test_folders.py" line="14" time="0.001" /><testcase classname="tests.test_folders" name="test_get_file_extension[hello.txt-.txt]" file="tests/test_folders.py" line="14" time="0.001" /><testcase classname="tests.test_folders" name="test_get_file_extension[hello.TXT-.TXT]" file="tests/test_folders.py" line="14" time="0.001" /><testcase classname="tests.test_folders" name="test_get_file_extension[C:\\root\\hello.jpg-.jpg]" file="tests/test_folders.py" line="14" time="0.001" /><testcase classname="tests.test_folders" name="test_get_file_extension[/home/foo/hello.jpg-.jpg]" file="tests/test_folders.py" line="14" time="0.001" /><testcase classname="tests.test_folders" name="test_get_path_leaf[C:\\root\\hello.jpg-hello.jpg]" file="tests/test_folders.py" line="28" time="0.001" /><testcase classname="tests.test_folders" name="test_get_path_leaf[/home/foo/hello.jpg-hello.jpg]" file="tests/test_folders.py" line="28" time="0.001" /><testcase classname="tests.test_folders" name="test_get_path_leaf[/home/foo/-foo]" file="tests/test_folders.py" line="28" time="0.001" /><testcase classname="tests.test_folders" name="test_get_path_leaf[/home/foo-foo]" file="tests/test_folders.py" line="28" time="0.001" /><testcase classname="tests.test_folders" name="test_get_path_leaf[C:\\root\\\\-root]" file="tests/test_folders.py" line="28" time="0.001" /><testcase classname="tests.test_folders" name="test_split_path[C:\\root\\hello.jpg-expected_value0]" file="tests/test_folders.py" line="42" time="0.001" /><testcase classname="tests.test_folders" name="test_split_path[/home/foo/hello.jpg-expected_value1]" file="tests/test_folders.py" line="42" time="0.001" /><testcase classname="tests.test_folders" name="test_ensure_folder" file="tests/test_folders.py" line="53" time="0.001" /><testcase classname="tests.test_folders" name="test_ensure_folder_deep" file="tests/test_folders.py" line="62" time="0.001" /><testcase classname="tests.test_json" name="test_datetime_serialization[value0-{&quot;value&quot;: &quot;10:30:15&quot;}]" file="tests/test_json.py" line="50" time="0.001" /><testcase classname="tests.test_json" name="test_datetime_serialization[value1-{&quot;value&quot;: &quot;2016-03-26&quot;}]" file="tests/test_json.py" line="50" time="0.001" /><testcase classname="tests.test_json" name="test_datetime_serialization[value2-{&quot;value&quot;: &quot;2016-03-26T03:00:00&quot;}]" file="tests/test_json.py" line="50" time="0.001" /><testcase classname="tests.test_json" name="test_datetime_serialization[value3-{&quot;value&quot;: &quot;10.5&quot;}]" file="tests/test_json.py" line="50" time="0.001" /><testcase classname="tests.test_json" name="test_datetime_serialization[value4-{&quot;value&quot;: &quot;e56fddfc-f85b-4178-869f-a218278a639e&quot;}]" file="tests/test_json.py" line="50" time="0.001" /><testcase classname="tests.test_json" name="test_datetime_serialization[value5-{&quot;value&quot;: &quot;TG9yZW0gaXBzdW0gZG9sb3Igc2l0IGFtZXQ=&quot;}]" file="tests/test_json.py" line="50" time="0.001" /><testcase classname="tests.test_json" name="test_class_with_to_dict_method" file="tests/test_json.py" line="72" time="0.001" /><testcase classname="tests.test_json" name="test_raises_for_unhandled_class" file="tests/test_json.py" line="93" time="0.001" /><testcase classname="tests.test_json" name="test_enum_to_json" file="tests/test_json.py" line="103" time="0.001" /><testcase classname="tests.test_json" name="test_int_enum_to_json" file="tests/test_json.py" line="115" time="0.000" /><testcase classname="tests.test_json" name="test_intflag_enum_to_json" file="tests/test_json.py" line="122" time="0.001" /><testcase classname="tests.test_json" name="test_flag_enum_to_json" file="tests/test_json.py" line="134" time="0.001" /><testcase classname="tests.test_json" name="test_serialize_dataclass" file="tests/test_json.py" line="146" time="0.001" /><testcase classname="tests.test_json" name="test_serialize_dataclass_no_spaces" file="tests/test_json.py" line="153" time="0.001" /><testcase classname="tests.test_meta" name="test_class_deprecated_method" file="tests/test_meta.py" line="28" time="0.003" /><testcase classname="tests.test_meta" name="test_deprecated_method" file="tests/test_meta.py" line="37" time="0.002" /><testcase classname="tests.test_meta" name="test_deprecated_async_method" file="tests/test_meta.py" line="42" time="0.002" /><testcase classname="tests.test_meta" name="test_deprecated_async_method_exc" file="tests/test_meta.py" line="47" time="0.002" /><testcase classname="tests.test_registry" name="test_registry_type" file="tests/test_registry.py" line="6" time="0.001" /><testcase classname="tests.test_registry" name="test_registry_type_with_name" file="tests/test_registry.py" line="33" time="0.001" /><testcase classname="tests.test_registry" name="test_registry_type_with_full_class_name" file="tests/test_registry.py" line="64" time="0.001" /><testcase classname="tests.test_registry" name="test_registry_type_subclass" file="tests/test_registry.py" line="80" time="0.001" /><testcase classname="tests.test_registry" name="test_registry_type_parameterless" file="tests/test_registry.py" line="102" time="0.001" /><testcase classname="tests.test_registry" name="test_registry_type_raises_for_invalid_configuration" file="tests/test_registry.py" line="115" time="0.001" /><testcase classname="tests.test_registry" name="test_registry_type_raises_for_invalid_configuration_without_type" file="tests/test_registry.py" line="126" time="0.003" /><testcase classname="tests.test_registry" name="test_registry_raises_for_ambiguous_names" file="tests/test_registry.py" line="137" time="0.001" /><testcase classname="tests.test_registry" name="test_registry_raises_for_not_found_type" file="tests/test_registry.py" line="152" time="0.001" /><testcase classname="tests.test_registry" name="test_get_class_raises_on_registry" file="tests/test_registry.py" line="163" time="0.001" /><testcase classname="tests.test_registry" name="test_from_configuration_on_registry_raises" file="tests/test_registry.py" line="169" time="0.002" /><testcase classname="tests.test_registry" name="test_from_configuration_raises_with_invalid_input" file="tests/test_registry.py" line="177" time="0.001" /><testcase classname="tests.test_registry" name="test_from_configuration_raises_with_invalid_input_for_class" file="tests/test_registry.py" line="188" time="0.004" /><testcase classname="tests.test_secrets" name="test_from_env_success" file="tests/test_secrets.py" line="6" time="0.001" /><testcase classname="tests.test_secrets" name="test_from_env_missing_raises_exception" file="tests/test_secrets.py" line="13" time="0.001" /><testcase classname="tests.test_secrets" name="test_from_plain_text_success" file="tests/test_secrets.py" line="19" time="0.001" /><testcase classname="tests.test_secrets" name="test_direct_constructor_with_env_var" file="tests/test_secrets.py" line="25" time="0.001" /><testcase classname="tests.test_secrets" name="test_direct_constructor_with_direct_value" file="tests/test_secrets.py" line="32" time="0.001" /><testcase classname="tests.test_secrets" name="test_hardcoded_secret_without_permission_raises_error" file="tests/test_secrets.py" line="38" time="0.002" /><testcase classname="tests.test_secrets" name="test_empty_secret_raises_error" file="tests/test_secrets.py" line="44" time="0.002" /><testcase classname="tests.test_secrets" name="test_str_representation_hides_value" file="tests/test_secrets.py" line="51" time="0.001" /><testcase classname="tests.test_secrets" name="test_repr_shows_env_var_name" file="tests/test_secrets.py" line="58" time="0.001" /><testcase classname="tests.test_secrets" name="test_repr_hides_hardcoded_value" file="tests/test_secrets.py" line="65" time="0.001" /><testcase classname="tests.test_secrets" name="test_equality_with_string" file="tests/test_secrets.py" line="71" time="0.001" /><testcase classname="tests.test_secrets" name="test_equality_with_another_secret" file="tests/test_secrets.py" line="79" time="0.001" /><testcase classname="tests.test_secrets" name="test_equality_with_incompatible_type" file="tests/test_secrets.py" line="93" time="0.001" /><testcase classname="tests.test_secrets" name="test_mixed_secret_sources_comparison" file="tests/test_secrets.py" line="101" time="0.001" /><testcase classname="tests.test_secrets" name="test_get_value_called_multiple_times" file="tests/test_secrets.py" line="110" time="0.001" /><testcase classname="tests.test_secrets" name="test_env_var_change_at_runtime" file="tests/test_secrets.py" line="119" time="0.001" /><testcase classname="tests.test_secrets" name="test_constructor_validation_with_empty_env_var" file="tests/test_secrets.py" line="129" time="0.001" /><testcase classname="tests.test_secrets" name="test_from_plain_text_with_empty_string" file="tests/test_secrets.py" line="136" time="0.001" /><testcase classname="tests.test_secrets" name="test_secrets_support_utf8_chars" file="tests/test_secrets.py" line="142" time="0.001" /><testcase classname="tests.test_secrets" name="test_secrets_work_with_invalid_unicode" file="tests/test_secrets.py" line="147" time="0.000" /><testcase classname="tests.test_secrets" name="test_secrets_with_special_characters" file="tests/test_secrets.py" line="152" time="0.001" /><testcase classname="tests.test_time_utils" name="test_time_to_seconds[value0-60]" file="tests/test_time_utils.py" line="14" time="0.001" /><testcase classname="tests.test_time_utils" name="test_time_to_seconds[value1-60]" file="tests/test_time_utils.py" line="14" time="0.001" /><testcase classname="tests.test_time_utils" name="test_time_to_seconds[value2-300]" file="tests/test_time_utils.py" line="14" time="0.001" /><testcase classname="tests.test_time_utils" name="test_time_to_seconds[value3-320]" file="tests/test_time_utils.py" line="14" time="0.001" /><testcase classname="tests.test_time_utils" name="test_time_to_seconds[value4-7520]" file="tests/test_time_utils.py" line="14" time="0.001" /><testcase classname="tests.test_time_utils" name="test_time_from_seconds[expected_time0-60]" file="tests/test_time_utils.py" line="28" time="0.001" /><testcase classname="tests.test_time_utils" name="test_time_from_seconds[expected_time1-300]" file="tests/test_time_utils.py" line="28" time="0.001" /><testcase classname="tests.test_time_utils" name="test_time_from_seconds[expected_time2-320]" file="tests/test_time_utils.py" line="28" time="0.001" /><testcase classname="tests.test_time_utils" name="test_time_from_seconds[expected_time3-7520]" file="tests/test_time_utils.py" line="28" time="0.001" /><testcase classname="tests.test_time_utils" name="test_time_from_microseconds[expected_time0-60000020.0]" file="tests/test_time_utils.py" line="41" time="0.001" /><testcase classname="tests.test_time_utils" name="test_time_from_microseconds[expected_time1-300000333.0]" file="tests/test_time_utils.py" line="41" time="0.001" /><testcase classname="tests.test_time_utils" name="test_time_to_microseconds[value0-60000020.0]" file="tests/test_time_utils.py" line="49" time="0.001" /><testcase classname="tests.test_time_utils" name="test_time_to_microseconds[value1-300000333.0]" file="tests/test_time_utils.py" line="49" time="0.001" /><testcase classname="tests.test_time_utils" name="test_get_time_precision[value0-TimePrecision.HOUR]" file="tests/test_time_utils.py" line="57" time="0.001" /><testcase classname="tests.test_time_utils" name="test_get_time_precision[value1-TimePrecision.MINUTE]" file="tests/test_time_utils.py" line="57" time="0.001" /><testcase classname="tests.test_time_utils" name="test_get_time_precision[value2-TimePrecision.SECOND]" file="tests/test_time_utils.py" line="57" time="0.001" /><testcase classname="tests.test_time_utils" name="test_get_time_precision[value3-TimePrecision.MICROSECOND]" file="tests/test_time_utils.py" line="57" time="0.001" /></testsuite></testsuites>