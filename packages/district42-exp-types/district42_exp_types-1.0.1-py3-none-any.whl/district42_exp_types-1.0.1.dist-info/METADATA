Metadata-Version: 2.4
Name: district42-exp-types
Version: 1.0.1
Summary: district42 experimental types
Home-page: https://github.com/d42-schemas/district42-exp-types
Author: Nikita Tsvetkov
Author-email: tsv1@fastmail.com
License: Apache-2.0
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: Typing :: Typed
Requires-Python: >=3.8
Description-Content-Type: text/markdown
License-File: LICENSE.txt
Requires-Dist: d42<3.0,>=2.0
Requires-Dist: niltype<2.0,>=0.3
Requires-Dist: th<1.0,>=0.3
Dynamic: author
Dynamic: author-email
Dynamic: classifier
Dynamic: description
Dynamic: description-content-type
Dynamic: home-page
Dynamic: license
Dynamic: license-file
Dynamic: requires-dist
Dynamic: requires-python
Dynamic: summary

# district42 experimental types

[![PyPI](https://img.shields.io/pypi/v/district42-exp-types.svg?style=flat-square)](https://pypi.python.org/pypi/district42-exp-types/)
[![PyPI - Downloads](https://img.shields.io/pypi/dm/district42-exp-types?style=flat-square)](https://pypi.python.org/pypi/district42-exp-types/)
[![Python Version](https://img.shields.io/pypi/pyversions/district42-exp-types.svg?style=flat-square)](https://pypi.python.org/pypi/district42-exp-types/)

[district42](https://github.com/d42-schemas/district42) experimental types

## Installation

```sh
pip3 install district42-exp-types
```

## Usage

[numeric](https://github.com/d42-schemas/district42-exp-types/blob/master/district42_exp_types/numeric/__init__.py)

```python
from d42 import schema
from d42.declaration import register_type
from district42_exp_types.numeric import NumericSchema

register_type("numeric", NumericSchema)

print(schema.numeric)
```

[uuid](https://github.com/d42-schemas/district42-exp-types/blob/master/district42_exp_types/uuid/__init__.py)
```python
from d42 import schema
from d42.declaration import register_type
from district42_exp_types.uuid import UUIDSchema

register_type("uuid", UUIDSchema)

print(schema.uuid)
```

[uuid_str](https://github.com/d42-schemas/district42-exp-types/blob/master/district42_exp_types/uuid_str/__init__.py)

```python
from d42 import schema
from d42.declaration import register_type
from district42_exp_types.uuid_str import UUIDStrSchema

register_type("uuid_str", UUIDStrSchema)

print(schema.uuid_str)
```

[sdict](https://github.com/d42-schemas/district42-exp-types/blob/master/district42_exp_types/sdict/__init__.py)

```python
from d42 import schema
from d42.declaration import register_type
from district42_exp_types.sdict import SDictSchema

register_type("sdict", SDictSchema)

print(schema.sdict)
```

[unordered](https://github.com/d42-schemas/district42-exp-types/blob/master/district42_exp_types/unordered/__init__.py)

```python
from d42 import schema
from d42.declaration import register_type
from district42_exp_types.unordered import UnorderedSchema

register_type("unordered", UnorderedSchema)

print(schema.unordered)
```
