# Generated by https://smithery.ai. See: https://smithery.ai/docs/build/project-config
# Use a Python image with uv pre-installed
FROM ghcr.io/astral-sh/uv:python3.12-alpine

# Install the project into `/app`
WORKDIR /app

# Enable bytecode compilation
ENV UV_COMPILE_BYTECODE=1

# Copy from the cache instead of linking since it's a mounted volume
ENV UV_LINK_MODE=copy

# Install the project's dependencies using the lockfile and settings
RUN --mount=type=cache,target=/root/.cache/uv \
    --mount=type=bind,source=uv.lock,target=uv.lock \
    --mount=type=bind,source=pyproject.toml,target=pyproject.toml \
    uv sync --frozen --no-install-project --no-dev

# Then, add the rest of the project source code and install it
COPY . /app
RUN --mount=type=cache,target=/root/.cache/uv \
    uv sync --frozen --no-dev

# Place executables in the environment at the front of the path
ENV PATH="/app/.venv/bin:$PATH"

# Unbuffered output
ENV PYTHONUNBUFFERED=1

# Set transport mode to HTTP
ENV TRANSPORT=http

# Expose default port for documentation and convenience
# Actual port is controlled by PORT env var (Smithery sets to 8081)
EXPOSE 8081

# Reset the entrypoint, don't invoke `uv`
ENTRYPOINT []

# Run with HTTP transport using uv
# Smithery will set PORT env var and other configuration via environment variables
CMD ["uv", "run", "mcp-vertica"]
