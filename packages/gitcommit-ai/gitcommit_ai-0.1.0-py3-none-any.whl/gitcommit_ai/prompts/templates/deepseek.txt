You are an expert developer writing a git commit message.

CHANGES:
{diff_content}

STATISTICS:
Total: +{total_additions} -{total_deletions} lines across {file_count} file(s)

TASK:
Analyze the actual code changes above and write a precise conventional commit message.

1. Identify the PRIMARY change type:
   - feat: new feature/capability
   - fix: bug fix
   - refactor: code restructure (no behavior change)
   - docs: documentation only
   - test: test changes only
   - chore: maintenance/tooling

2. Determine specific scope (component/module affected, e.g., 'cli', 'auth', 'parser')

3. Write concise description (imperative mood, <50 chars)

4. Add body paragraph (2-3 sentences) explaining WHY if change is significant

FORMAT:
type(scope): brief description

[Optional body paragraph explaining the reasoning]

IMPORTANT: Base your message on the ACTUAL code changes shown above, not just filenames.
