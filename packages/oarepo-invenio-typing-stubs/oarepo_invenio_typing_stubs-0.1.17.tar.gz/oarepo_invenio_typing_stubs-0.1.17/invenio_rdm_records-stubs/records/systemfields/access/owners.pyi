from __future__ import annotations

from typing import Any

from invenio_accounts.models import User

class Owner:
    """An abstraction between owner entities and specifications as dicts."""

    _entity: Any | None
    owner_type: str | None
    owner_id: Any | None

    def __init__(self, owner: dict[str, Any] | User | None) -> None: ...
    def dump(self) -> dict[str, Any] | None: ...
    def resolve(self, raise_exc: bool = ...) -> Any | None: ...
    def __bool__(self) -> bool: ...
    def __hash__(self) -> int: ...
    def __eq__(self, other: Any) -> bool: ...
    def __ne__(self, other: Any) -> bool: ...
    def __str__(self) -> str: ...
    def __repr__(self) -> str: ...
