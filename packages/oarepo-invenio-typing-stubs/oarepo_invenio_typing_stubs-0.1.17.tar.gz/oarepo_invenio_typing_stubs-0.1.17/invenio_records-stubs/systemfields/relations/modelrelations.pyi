from typing import Any, List, Optional, Type

from invenio_records.api import Record
from invenio_records.systemfields.relations.relations import RelationBase
from invenio_records.systemfields.relations.results import RelationResult

class ModelRelationResult(RelationResult):
    def _lookup_id(self, *args: Any) -> Any: ...
    def validate(self) -> None: ...
    def dereference(
        self, keys: Optional[List[str]] = ..., attrs: Optional[List[str]] = ...
    ) -> Any: ...
    def clean(
        self, keys: Optional[List[str]] = ..., attrs: Optional[List[str]] = ...
    ) -> Any: ...

class ModelRelation(RelationBase):
    result_cls: Type[RelationResult]
    _record_cls: Type[Record]
    _model_field_name: str

    def __init__(
        self,
        record_cls: Type[Record],
        model_field_name: str,
        key: str,
        keys: Optional[List[str]] = ...,
        attrs: Optional[List[str]] = ...,
    ): ...
    def resolve(self, id_: str) -> Optional[Any]: ...
    def parse_value(self, value: Any) -> Any: ...
    def set_value(self, record: Any, value: Any) -> None: ...
    def get_value(self, record: Any) -> ModelRelationResult: ...
    def clear_value(self, record: Any) -> None: ...
