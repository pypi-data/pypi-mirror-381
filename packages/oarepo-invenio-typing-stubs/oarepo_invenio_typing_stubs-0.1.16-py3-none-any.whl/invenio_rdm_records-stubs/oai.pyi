from __future__ import annotations

from typing import Any

from invenio_pidstore.fetchers import FetchedPID
from invenio_search import RecordsSearch
from lxml import etree

def dublincore_etree(
    pid: Any, record: Any, **serializer_kwargs: Any
) -> etree._Element: ...
def marcxml_etree(pid: Any, record: Any) -> etree._Element: ...
def dcat_etree(pid: Any, record: Any) -> etree._Element: ...
def datacite_etree(pid: Any, record: Any) -> etree._Element: ...
def oai_datacite_etree(pid: Any, record: Any) -> etree._Element: ...
def oaiid_fetcher(record_uuid: Any, data: dict[str, Any]) -> FetchedPID: ...
def getrecord_fetcher(record_id: Any) -> dict[str, Any]: ...

class OAIRecordSearch(RecordsSearch):
    class Meta: ...

# Aliases
oai_marcxml_etree = marcxml_etree
oai_dcat = dcat_etree
