from __future__ import annotations

from typing import Any, Dict, List, Union

def clear_none(d: Dict[str, Any]) -> None: ...
def clear_none_list(ls: List[Any]) -> None: ...
def parse_lookup_key(lookup_key: Union[str, List[str]]) -> List[str]: ...
def dict_lookup(
    source: Union[Dict[str, Any], List[Any]],
    lookup_key: Union[str, List[str]],
    parent: bool = ...,
) -> Any: ...
def dict_set(
    source: Dict[str, Any], key: Union[str, List[Union[str, int]]], value: Any
) -> None: ...
def dict_merge(dest: Dict[str, Any], source: Dict[str, Any]) -> None: ...
def filter_dict_keys(src: Dict[str, Any], keys: List[str]) -> Dict[str, Any]: ...
