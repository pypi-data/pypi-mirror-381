from typing import Any, Generic, Protocol, TypeVar

from flask_resources import Resource
from invenio_rdm_records.oaiserver.resources.config import (
    OAIPMHServerResourceConfig,
)
from invenio_records_resources.resources.errors import ErrorHandlersMixin

class OAIPMHService(Protocol):
    def search(self, identity, params: dict[str, Any] | None = None) -> Any: ...
    def create(self, identity, data: dict[str, Any], /) -> Any: ...
    def read(self, identity, id: int, /) -> Any: ...
    def update(self, identity, id: int, data: dict[str, Any], /) -> Any: ...
    def delete(self, identity, id: int, /) -> None: ...
    def read_all_formats(self, identity, /) -> Any: ...

C = TypeVar("C", bound=OAIPMHServerResourceConfig)
S = TypeVar("S", bound=OAIPMHService)

class OAIPMHServerResource(ErrorHandlersMixin, Resource[C], Generic[C, S]):
    service: S

    def __init__(self, config: C, service: S) -> None: ...
    def create_url_rules(self) -> list[dict[str, Any]]: ...
    def search(self) -> tuple[dict[str, Any], int]: ...
    def create(self) -> tuple[dict[str, Any], int]: ...
    def read(self) -> tuple[dict[str, Any], int]: ...
    def update(self) -> tuple[dict[str, Any], int]: ...
    def delete(self) -> tuple[str, int]: ...
    def read_formats(self) -> tuple[dict[str, Any], int]: ...
