from __future__ import annotations

from typing import Any

from flask_resources.serializers import BaseSerializerSchema

def _serialize_person(person: dict[str, Any]) -> dict[str, Any] | Exception: ...
def _serialize_org(org: dict[str, Any]) -> dict[str, Any]: ...

class CFFSchema(BaseSerializerSchema):
    allowed_types: set[str]

    def get_authors(self, obj: dict[str, Any]) -> list[dict[str, Any]]: ...
    def get_contact(self, obj: dict[str, Any]) -> dict[str, Any] | Any: ...
    def get_date_released(self, obj: dict[str, Any]) -> Any: ...
    def get_doi(self, obj: dict[str, Any]) -> Any: ...
    def get_identifiers(self, obj: dict[str, Any]) -> list[dict[str, str]] | Any: ...
    def get_keywords(self, obj: dict[str, Any]) -> list[str] | Any: ...
    def get_license(self, obj: dict[str, Any]) -> list[str]: ...
    def get_license_url(self, obj: dict[str, Any]) -> Any: ...
    def get_repository_code(self, obj: dict[str, Any]) -> Any: ...
    def get_type(self, obj: dict[str, Any]) -> Any: ...
    def get_message(self, obj: dict[str, Any]) -> str: ...
