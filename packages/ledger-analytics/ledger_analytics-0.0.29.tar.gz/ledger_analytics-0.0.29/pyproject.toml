[build-system]
requires = ["hatchling", "hatch-requirements-txt"]
build-backend = "hatchling.build"

[project]
name = "ledger-analytics"
description = "The Python interface to Ledger Investing's analytics infrastructure"
authors = [ { name = "Ledger Investing" } ]
readme = "README.md"
requires-python = ">3.10"
dynamic = ["version", "optional-dependencies"]
dependencies = [
    "bermuda-ledger",
    "requests",
    "rich",
    "pydantic",
]

[tool.hatch.metadata.hooks.requirements_txt.optional-dependencies]
dev = ["requirements/dev.txt"]
docs = ["requirements/docs.txt"]

[tool.hatch.version]
path = "ledger_analytics/__about__.py"

[tool.pytest.ini_options]
addopts = "-s"

[tool.isort]
profile = "black"

[tool.poetry]
package-mode = false

[project.urls]
Homepage = "https://ledger-investing-ledger-analytics.readthedocs-hosted.com/en/latest/"
Repository = "https://github.com/LedgerInvesting/ledger-analytics/"
Documentation = "https://ledger-investing-ledger-analytics.readthedocs-hosted.com/en/latest/"

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    "ledger_analytics/__init__.py",
]
line-length = 88
indent-width = 4
target-version = "py311"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
ignore = ["F401", "F403", "F405"]
# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"
[format]
# Like Black, use double quotes for strings.
quote-style = "double"
# Like Black, indent with spaces, rather than tabs.
indent-style = "space"
# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false
# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"
# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = true
# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = 30

[tool.ruff.lint.per-file-ignores]
"ledger_analytics/interface.py" = ["F821"]
