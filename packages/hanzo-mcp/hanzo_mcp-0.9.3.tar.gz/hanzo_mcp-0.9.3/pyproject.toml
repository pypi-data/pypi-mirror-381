[build-system]
requires = ["setuptools>=61.0.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "hanzo-mcp"
version = "0.9.3"
description = "The Zen of Hanzo MCP: One server to rule them all. The ultimate MCP that orchestrates all others."
readme = "README.md"
requires-python = ">=3.12"
license = { text = "MIT" }
authors = [{ name = "Hanzo Industries Inc", email = "dev@hanzo.ai" }]
classifiers = [
  "Programming Language :: Python :: 3",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
]
keywords = ["mcp", "claude", "hanzo", "code", "agent"]
dependencies = [
    "mcp>=1.9.4",
    "fastmcp>=2.9.2",
    "httpx>=0.28.1",
    "uvicorn>=0.34.0",
    "openai>=1.62.0",
    "python-dotenv>=1.0.1",
    "litellm>=1.73.2",
    "grep-ast>=0.8.1",
    "bashlex>=0.18",
    "libtmux>=0.39.0",
    "nbformat>=5.10.4",
    "psutil>=6.0.0",
    "pydantic>=2.9.2",
    "pydantic-settings>=2.7.0",
    "typing-extensions>=4.13.0",
    "watchdog>=6.0.0",
    "keyring>=24.0.0",
    "ffind>=1.3.0",
]

[project.urls]
"Homepage" = "https://github.com/hanzoai/mcp"
"Bug Tracker" = "https://github.com/hanzoai/mcp/issues"
"Documentation" = "https://mcp.hanzo.ai"

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.1.0",
    "ruff>=0.13.0",
    "black>=23.3.0",
    "sphinx>=8.0.0",
    "sphinx-rtd-theme>=3.0.0",
    "myst-parser>=4.0.0",
    "sphinx-copybutton>=0.5.0",
    "mypy>=1.10.0",
    "types-aiofiles>=23.2.0",
    "types-psutil>=5.9.5",
    "types-setuptools>=69.5.0",
]
docs = ["sphinx>=8.0.0", "sphinx-rtd-theme>=3.0.0", "myst-parser>=4.0.0", "sphinx-copybutton>=0.5.0"]
analytics = ["posthog>=3.0.0"]
test = [
  "pytest>=7.0.0",
  "pytest-cov>=4.1.0",
  "pytest-mock>=3.10.0",
  "pytest-asyncio>=0.25.3",
  "twisted",
]
agents = ["hanzo-agents>=0.1.0"]
memory = ["hanzo-memory>=1.0.0"]
performance = ["ujson>=5.7.0", "orjson>=3.9.0"]
publish = ["twine>=4.0.2", "build>=1.0.3"]

[project.scripts]
hanzo-mcp = "hanzo_mcp.cli:main"
hanzo-mcp-dev = "hanzo_mcp.dev_server:run_dev_server"
hanzo-plugin = "hanzo_mcp.cli_plugin:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["hanzo_mcp*"]

[tool.setuptools.package-data]
hanzo_mcp = ["py.typed"]

[tool.basedpyright]
include = ["hanzo_mcp"]

[tool.pytest.ini_options]
# Configuration for pytest
addopts = "--no-header --no-summary"
# Note: --cov-fail-under=96.3 will be added after achieving target coverage
markers = [
  "asyncio: mark test as using asyncio",
  "requires_hanzo_agents: mark test as requiring hanzo-agents SDK",
  "requires_memory_tools: mark test as requiring hanzo-memory package",
  "slow: mark test as slow running",
  "integration: mark test as integration test",
]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
asyncio_mode = "auto"
asyncio_default_fixture_loop_scope = "function"

[tool.mypy]
python_version = "3.12"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true
show_column_numbers = true
pretty = true

# Per-module options
[[tool.mypy.overrides]]
module = [
    "bashlex.*",
    "grep_ast.*",
    "libtmux.*",
    "litellm.*",
    "nbformat.*",
    "ffind.*",
    "fastmcp.*",
    "mcp.*",
    "hanzo_agents.*",
    "hanzo_memory.*",
]
ignore_missing_imports = true

[tool.coverage.run]
source = ["hanzo_mcp"]
omit = [
    "*/tests/*",
    "*/__pycache__/*",
    "*/site-packages/*",
    "*/venv/*",
    "*/migrations/*",
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
fail_under = 96.3
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if __name__ == .__main__.:",
    "raise AssertionError",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
    "@abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"
