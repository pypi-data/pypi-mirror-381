[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "cleanlab-codex"
dynamic = ["version"]
description = 'Python client library for developers to integrate Cleanlab Codex into RAG systems'
readme = "README.md"
requires-python = ">=3.9"
license = "MIT"
keywords = []
authors = [
  { name = "Cleanlab Inc", email = "team@cleanlab.ai" },
]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
  "cleanlab-tlm~=1.1,>=1.1.14",
  "codex-sdk==0.1.0a28",
  "pydantic>=2.0.0, <3",
]

[project.urls]
Documentation = "https://github.com/cleanlab/cleanlab-codex#readme"
Issues = "https://github.com/cleanlab/cleanlab-codex/issues"
Source = "https://github.com/cleanlab/cleanlab-codex"

[tool.hatch.version]
path = "src/cleanlab_codex/__about__.py"

[tool.hatch.envs.types]
extra-dependencies = [
  "mypy>=1.0.0",
  "pytest",
  "llama-index-core",
  "smolagents; python_version >= '3.10'",
  "thefuzz",
  "langchain-core",
  "openai",
  "openai-agents",
]

[[tool.hatch.envs.types.matrix]]
python = ["3.9", "3.10", "3.11", "3.12", "3.13"]

[tool.hatch.envs.types.scripts]
check = "mypy --strict --install-types --non-interactive {args:src/cleanlab_codex tests}"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.envs.hatch-test]
extra-dependencies = [
  "llama-index-core",
  "smolagents; python_version >= '3.10'",
  "thefuzz",
  "langchain-core",
  "openai",
]

[tool.hatch.envs.hatch-test.env-vars]
COVERAGE_FAIL_UNDER = ""

[tool.hatch.envs.hatch-test.overrides]
matrix.python.env-vars = [ { key = "COVERAGE_FAIL_UNDER", value = "--fail-under=90", if = [ "3.13" ] } ]

[tool.hatch.envs.hatch-test.scripts]
run = "pytest{env:HATCH_TEST_ARGS:} {args}"
run-cov = "coverage run -m pytest{env:HATCH_TEST_ARGS:} {args}"
cov-combine = "coverage combine"
cov-report = "coverage report {env:COVERAGE_FAIL_UNDER}"

[tool.coverage.run]
source_pkgs = ["cleanlab_codex", "tests"]
branch = true
parallel = true
omit = [
  "src/cleanlab_codex/__about__.py",
  "*/tests/*",
  "src/cleanlab_codex/experimental/*",
]

[tool.coverage.paths]
cleanlab_codex = ["src/cleanlab_codex", "*/cleanlab-codex/src/cleanlab_codex"]

[tool.coverage.report]
exclude_lines = [
  "no cov",
  "if __name__ == .__main__.:",
  "if TYPE_CHECKING:",
  "if _TYPE_CHECKING:",
]
show_missing = true

[tool.hatch.envs.coverage]
detached = true
dependencies = [
  "coverage",
]

[tool.hatch.envs.coverage.scripts]
report = "coverage report --fail-under=90"
html = "coverage html"
xml = "coverage xml"

[tool.ruff.lint]
ignore = ["FA100", "UP007", "UP006", "EM101", "UP035"]
