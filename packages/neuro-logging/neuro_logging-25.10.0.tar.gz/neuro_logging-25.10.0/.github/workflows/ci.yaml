name: CI

on:
  push:
    branches: [master]
    tags: [v*]
  pull_request:
    branches: [master]
  schedule:
  - cron: 0 4 * * *
jobs:
  lint:
    name: Run linters
    runs-on: ubuntu-latest
    steps:
    - name: Checkout commit
      uses: actions/checkout@v5
      with:
        ref: ${{ github.event.pull_request.head.sha }}
    - name: Install python
      uses: actions/setup-python@v6
      with:
        python-version: '3.10'
    - name: Cache packages
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-lint-${{ hashFiles('setup.py')
          }}-${{ hashFiles('requirements-test.txt') }}
    - name: Install dependencies
      run: make setup
    - name: Lint
      run: |
        echo "::add-matcher::.github/actionlint-matcher.json"
        make lint
  test:
    name: Run tests
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.9', '3.10', '3.11', '3.12', '3.13']
    steps:
    - name: Checkout commit
      uses: actions/checkout@v5
      with:
        ref: ${{ github.event.pull_request.head.sha }}
    - name: Install python
      uses: actions/setup-python@v6
      with:
        python-version: ${{ matrix.python-version }}
    - name: Cache packages
      uses: actions/cache@v4
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-py-${{ matrix.python-version }}-${{ hashFiles('setup.py')
          }}-${{ hashFiles('requirements-test.txt') }}
    - name: Install dependencies
      run: make setup
    - name: Run tests
      run: make test
    - name: Upload coverage artifact
      uses: aio-libs/prepare-coverage@v24.9.2
  check:  # The branch protection check
    if: always()
    needs: [lint, test]
    runs-on: ubuntu-latest
    steps:
    - name: Decide whether the needed jobs succeeded or failed
      uses: re-actors/alls-green@release/v1
      with:
        jobs: ${{ toJSON(needs) }}
    - name: Checkout commit
      uses: actions/checkout@v5
    - name: Upload coverage
      uses: aio-libs/upload-coverage@v24.10.1
  deploy:
    name: Release client
    runs-on: ubuntu-latest
    needs: check
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    steps:
    - name: Checkout commit
      uses: actions/checkout@v5
    - name: Install python
      uses: actions/setup-python@v6
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        make setup
        python -m pip install twine build
    - name: Make dist
      run: |
        python -m build
    - name: Release on PyPI
      uses: pypa/gh-action-pypi-publish@v1.13.0
      with:
        password: ${{ secrets.PYPI_TOKEN }}
