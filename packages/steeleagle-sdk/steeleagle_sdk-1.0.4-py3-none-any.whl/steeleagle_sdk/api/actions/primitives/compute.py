###############################################################
# NOTE: THIS FILE IS GENERATED BY GENERATE_API.PY. DO NOT EDIT!
###############################################################
from typing import Optional, List
from google.protobuf.timestamp_pb2 import Timestamp
from google.protobuf.duration_pb2 import Duration
# API imports
from ...base import Action, Datatype
from ....dsl.compiler.registry import register_action
from ..native import run_unary, run_streaming, payload_from_action
# Protobuf imports
from ....protocol.services import compute_service_pb2
from ....protocol.services import compute_service_pb2_grpc
# Type imports
from ...datatypes import compute as params
from ...datatypes import common as common

# Static stub object to be set at file import time
STUB: compute_service_pb2_grpc.ComputeStub = None

'''Used to configure datasinks for sensor streams'''

@register_action
class AddDatasinks(Action):
    '''Add datasinks to consumer list'''
    datasinks: List[params.DatasinkInfo]
    '''Name of target datasinks'''

    async def execute(self):
        req = compute_service_pb2.AddDatasinksRequest()
        ParseDict(payload_from_action(self), req)
        metadata = [
            ('identity', 'internal')
        ]
        return await run_unary(STUB.AddDatasinks, req, metadata=metadata)

@register_action
class SetDatasinks(Action):
    '''Set the datasink consumer list'''
    datasinks: List[params.DatasinkInfo]
    '''Name of target datasinks'''

    async def execute(self):
        req = compute_service_pb2.SetDatasinksRequest()
        ParseDict(payload_from_action(self), req)
        metadata = [
            ('identity', 'internal')
        ]
        return await run_unary(STUB.SetDatasinks, req, metadata=metadata)

@register_action
class RemoveDatasinks(Action):
    '''Remove datasinks from consumer list'''
    datasinks: List[params.DatasinkInfo]
    '''Name of target datasinks'''

    async def execute(self):
        req = compute_service_pb2.RemoveDatasinksRequest()
        ParseDict(payload_from_action(self), req)
        metadata = [
            ('identity', 'internal')
        ]
        return await run_unary(STUB.RemoveDatasinks, req, metadata=metadata)

