(()=>{"use strict";const t=StimulusModule;class e extends Error{}var i,n,a;async function r(){const t=window.wagtail.app.queryController("w-preview");return t?(t.ready||(await t.checkAndUpdatePreview(),await new Promise((t=>{document.addEventListener("w-preview:loaded",t,{once:!0})}))),t.extractContent()):null}!function(t){t[t.CORRECTION=1]="CORRECTION",t[t.COMPLETION=2]="COMPLETION",t[t.DESCRIPTION=3]="DESCRIPTION",t[t.TITLE=4]="TITLE",t[t.CONTEXTUAL_ALT_TEXT=5]="CONTEXTUAL_ALT_TEXT",t[t.IMAGE_TITLE=6]="IMAGE_TITLE",t[t.IMAGE_DESCRIPTION=7]="IMAGE_DESCRIPTION"}(i||(i={})),function(t){t.APPEND="append",t.REPLACE="replace"}(n||(n={})),function(t){t.IDLE="idle",t.LOADING="loading",t.ERROR="error",t.SUGGESTING="suggesting"}(a||(a={}));class o{static handlers={};static register(t,e){this.handlers[t]=e}static async get(t){const e={};return await Promise.allSettled(Object.entries(o.handlers).map((async([i,n])=>{if(!t.activePrompt?.prompt.includes(`{${i}}`))return;const a=await n.call(t);[null,void 0].includes(a)||(e[i]=a)}))),e}}class s extends t.Controller{static targets=["dropdown","prompt","suggestion"];static values={activePromptId:{type:String,default:""},dropdownTemplate:{type:String,default:"#wai-field-panel-dropdown-template"},imageInput:{type:String,default:""},mainInput:{type:String,default:""},prompts:{type:Array,default:[]},state:{type:String,default:a.IDLE},suggestion:{type:String,default:""}};activePrompt=null;abortController=null;imageInput=null;dropdownController=null;static defaultHandlers={content_html:async()=>(await r())?.innerHTML.trim(),content_text:async()=>(await r())?.innerText.trim(),async form_context_before(){return this.formContext.before},async form_context_after(){return this.formContext.after},async image_id(){return this.imageInput?.files?.[0]?new Promise(((t,e)=>{const i=new FileReader;i.onload=()=>t(i.result),i.onerror=e,i.readAsDataURL(this.imageInput.files[0])})):this.imageInput?.value||this.element.getAttribute(`data-${this.identifier}-image-id`)},async input(){return this.inputValue},async max_length(){return this.input.getAttribute("maxlength")}};static{Object.entries(this.defaultHandlers).forEach((([t,e])=>{o.register(t,e)}))}static inputsToText=t=>t.map((t=>"value"in t?t.value:t.innerText)).filter((t=>!!t.trim())).join("\n\n");connect(){if(this.#t||this.hasDropdownTarget)return;const t=this.fieldInput.querySelector("[data-comment-add]");t?this.fieldInput.insertBefore(this.template,t):this.fieldInput.appendChild(this.template)}get#t(){return this.element instanceof HTMLInputElement||this.element instanceof HTMLTextAreaElement||this.element.isContentEditable}get template(){const t=document.querySelector(this.dropdownTemplateValue)?.content?.firstElementChild;if(!t)throw new Error("Could not find dropdown template element.");const e=t.cloneNode(!0),i=e.querySelector('[data-w-dropdown-target="content"]').firstElementChild;return this.filteredPrompts.forEach((t=>{i.insertAdjacentHTML("beforebegin",this.getDropdownItemTemplate(t))})),e}getDropdownItemTemplate(t){return`\n      <button\n        type="button"\n        class="wai-dropdown__item"\n        data-action="click->wai-field-panel#prompt"\n        data-wai-field-panel-target="prompt"\n        data-wai-field-panel-prompt-id-param="${t.uuid}"\n      >\n        <div>${t.label}</div>\n        <div class="wai-dropdown__description">${t.description}</div>\n      </button>\n    `}dropdownTargetConnected(){setTimeout((()=>{this.dropdownController=window.wagtail.app.getControllerForElementAndIdentifier(this.dropdownTarget,"w-dropdown"),this.setDropdownTheme()}))}setDropdownTheme(){const{tippy:t}=this.dropdownController;t.setProps({arrow:!1,maxWidth:"none",theme:"assistant"})}imageInputValueChanged(){if(this.#t||!this.imageInputValue)return;const t=this.element.querySelector(this.imageInputValue)||this.form.querySelector(this.imageInputValue);this.imageInput=t}mainInputValueChanged(){if(this.#t){const t=this.element.closest("[data-field-wrapper]");Array.from(this.element.attributes).forEach((e=>{if("data-controller"===e.name){const i=new Set(t.getAttribute("data-controller")?.split(" ")||[]);i.add(this.identifier),t.setAttribute("data-controller",Array.from(i).join(" ")),this.element.setAttribute("data-controller",e.value.split(" ").filter((t=>t!==this.identifier)).join(" "))}e.name.startsWith(`data-${this.identifier}-`)&&t.setAttribute(e.name,e.value)}))}else if(this.mainInputValue){const t=this.element.querySelector(this.mainInputValue);if(!t)throw new Error(`Could not find input element matching selector "${this.mainInputValue}".`);this.input=t,this.fieldInput=this.input.closest("[data-field-input]")}else{this.fieldInput=this.element.querySelector("[data-field-input]");const t=this.fieldInput.querySelector("input, textarea");if(!t)throw new Error("Could not find input or textarea element.");this.input=t}}get textInputs(){return Array.from(this.form.querySelectorAll('input[type="text"], textarea, [role="textbox"]')).filter((t=>t!==this.input))}get textInputsContext(){return Object.groupBy(this.textInputs,(t=>this.input.compareDocumentPosition(t)&Node.DOCUMENT_POSITION_PRECEDING?"before":"after"))}get formContext(){const{inputsToText:t}=s,{before:e,after:i}=this.textInputsContext;return{before:t(e),after:t(i)}}get form(){return this.input||this.mainInputValueChanged(),("form"in this.input?this.input.form:null)??this.input.closest("form")}get inputValue(){return"value"in this.input?this.input.value:this.input.innerText}set inputValue(t){"value"in this.input?this.input.value=t:this.input.innerText=t}promptsValueChanged(){this.promptsValue.length?this.filteredPrompts=window.wagtailAI.config.aiPrompts.filter((({default_prompt_id:t})=>t&&this.promptsValue.includes(t))):this.filteredPrompts=window.wagtailAI.config.aiPrompts}activePromptIdValueChanged(){this.activePrompt=window.wagtailAI.config.aiPrompts.find((t=>t.uuid===this.activePromptIdValue))??null}async prompt(t){const{promptId:i=this.activePromptIdValue}={...t?.detail,...t?.params};this.stateValue=a.LOADING,this.activePromptIdValue=i,this.activePromptIdValueChanged();const n=new FormData;n.append("context",JSON.stringify(await o.get(this))),n.append("prompt",i);let r="";try{this.abortController=new AbortController,r=await(async(t,i,n)=>{const a=window.wagtailAI.config.urls,r=await fetch(a.TEXT_COMPLETION,{method:"POST",headers:{[wagtailConfig.CSRF_HEADER_NAME]:wagtailConfig.CSRF_TOKEN},body:i,signal:n}),o=await r.json();if(r.ok)return o.message;throw new e(o.error)})(0,n,this.abortController.signal)}catch(t){if(this.abortController?.signal.aborted)return this.stateValue=a.IDLE,void(this.abortController=null);this.stateValue=a.ERROR,console.error(t)}r&&(this.stateValue=a.SUGGESTING,this.suggestionValue=r)}stateValueChanged(){const t=this.dropdownController?.toggleTarget,e=t?.querySelector("svg use");e?.setAttribute("href",this.stateValue===a.LOADING?"#icon-wand-animated":"#icon-wand"),this.togglePrompts(),this.stateValue===a.IDLE&&this.reset()}suggestionValueChanged(){this.hasSuggestionTarget&&(this.suggestionTarget.innerText=this.suggestionValue)}togglePrompts(){switch(this.stateValue){case a.LOADING:case a.ERROR:this.promptTargets.forEach((t=>t.hidden=!0));break;case a.SUGGESTING:this.promptTargets.forEach((t=>t.hidden=t.getAttribute("data-wai-field-panel-prompt-id-param")!==this.activePromptIdValue));break;case a.IDLE:default:this.promptTargets.forEach((t=>t.hidden=!1))}}useSuggestion(){this.activePrompt?.method===n.APPEND?this.inputValue+=this.suggestionValue:this.inputValue=this.suggestionValue,this.input.dispatchEvent(new Event("input",{bubbles:!0})),this.input.dispatchEvent(new Event("change",{bubbles:!0}))}reset(){this.stateValue=a.IDLE,this.abortController?.abort("Cancelled by user"),this.suggestionValue="",this.activePromptIdValue=""}disconnect(){this.#t&&Array.from(this.element.attributes).forEach((t=>{("data-controller"===t.name&&!t.value||t.name.startsWith(`data-${this.identifier}-`))&&this.element.removeAttribute(t.name)}))}}window.wagtail.app.register("wai-field-panel",s),window.wagtailAI.ContextProvider=o})();