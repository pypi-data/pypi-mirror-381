[build-system]
requires = ["setuptools>=61.0", "wheel", "setuptools-scm>=8.0"]
build-backend = "setuptools.build_meta"

[project]
name = "mcp-browser"
version = "2.0.7"
description = "Browser console log capture and control via MCP for Claude Code"
readme = "README.md"
authors = [
    { name = "MCP Browser Team", email = "support@mcp-browser.dev" }
]
license = { text = "MIT" }
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries",
    "Topic :: Internet :: WWW/HTTP :: Browsers",
]
dependencies = [
    "mcp>=0.1.0",
    "websockets>=11.0",
    "playwright>=1.40.0",
    "aiofiles>=23.0.0",
    "aiohttp>=3.9.0",
    "click>=8.1.0",
    "rich>=13.7.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "mypy>=1.0.0",
    "ruff>=0.1.0",
]

[project.scripts]
mcp-browser = "mcp_browser.cli.main:main"

[project.urls]
Homepage = "https://github.com/browserpymcp/mcp-browser"
Documentation = "https://docs.browserpymcp.dev"
Repository = "https://github.com/browserpymcp/mcp-browser"
Issues = "https://github.com/browserpymcp/mcp-browser/issues"

[tool.setuptools]
package-dir = {"mcp_browser" = "src"}
packages = [
    "mcp_browser",
    "mcp_browser.cli",
    "mcp_browser.cli.commands",
    "mcp_browser.cli.utils",
    "mcp_browser.container",
    "mcp_browser.models",
    "mcp_browser.services"
]

[tool.setuptools.package-data]
mcp_browser = [
    "static/*.html",
    "static/*.css",
    "static/*.js",
    "static/dashboard/*",
    "extension/*.js",
    "extension/*.html",
    "extension/*.json",
    "extension/*.png",
    "extension/icons/*.png",
]

[tool.black]
line-length = 88
target-version = ['py310', 'py311', 'py312']
include = '\.pyi?$'

[tool.ruff]
line-length = 88
target-version = "py310"

[tool.ruff.lint]
select = ["E", "F", "I", "N", "W"]
ignore = ["E501"]

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_unimported = false
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
check_untyped_defs = true

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
asyncio_mode = "auto"