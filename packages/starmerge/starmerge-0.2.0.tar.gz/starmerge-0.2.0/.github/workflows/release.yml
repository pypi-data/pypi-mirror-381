name: 🚀 Release to PyPI and GitHub

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., 0.2.0)'
        required: true
        type: string

permissions:
  contents: read

jobs:
  build-and-validate:
    name: 🏗️ Build and Validate Package
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Install uv
      uses: astral-sh/setup-uv@v4

    - name: Set up Python
      run: uv python install 3.11

    - name: Install Python build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install twine check-wheel-contents validate-pyproject

    - name: Validate pyproject.toml
      run: validate-pyproject pyproject.toml

    - name: Build Python package
      run: uv build

    - name: Validate package contents
      run: |
        echo "📦 Validating package structure..."
        check-wheel-contents dist/*.whl --ignore W004

        echo "📋 Package contents summary:"
        python -m zipfile -l dist/*.whl | grep -E "\.py$" | head -20

        echo "✅ Package validation complete"

    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: python-package-distributions
        path: dist/
        retention-days: 7

  publish-to-testpypi:
    name: 🧪 Publish to TestPyPI
    needs: [build-and-validate]
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch'
    environment:
      name: test-pypi
      url: https://test.pypi.org/p/starmerge
    permissions:
      id-token: write  # OIDC trusted publishing

    steps:
    - name: Download package distributions
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

    - name: Publish to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/
        print-hash: true

  publish-to-pypi:
    name: 🚀 Publish to PyPI
    needs: [build-and-validate]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    environment:
      name: pypi
      url: https://pypi.org/p/starmerge
    permissions:
      id-token: write  # OIDC trusted publishing
      contents: write  # For GitHub release creation

    steps:
    - name: Download package distributions
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        print-hash: true

  create-github-release:
    name: 📋 Create GitHub Release
    needs: [publish-to-pypi]
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    permissions:
      contents: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Download package distributions
      uses: actions/download-artifact@v4
      with:
        name: python-package-distributions
        path: dist/

    - name: Determine release type
      id: release-type
      run: |
        if [[ ${{ github.ref_name }} =~ -alpha|-beta|-rc ]]; then
          echo "prerelease=true" >> $GITHUB_OUTPUT
          echo "📦 Pre-release detected: ${{ github.ref_name }}"
        else
          echo "prerelease=false" >> $GITHUB_OUTPUT
          echo "🚀 Stable release detected: ${{ github.ref_name }}"
        fi

    - name: Create GitHub Release
      run: |
        gh release create ${{ github.ref_name }} \
          --title "StarMerge ${{ github.ref_name }}" \
          --generate-notes \
          ${{ steps.release-type.outputs.prerelease == 'true' && '--prerelease' || '--latest' }} \
          dist/*
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Update release description
      run: |
        gh release edit ${{ github.ref_name }} --notes "$(cat <<'EOF'
        ## StarMerge Release ${{ github.ref_name }}

        ### 📦 What's Included
        - ✅ Complete Python implementation of tailwind-merge
        - ✅ Full support for Tailwind CSS v4.x syntax
        - ✅ Comprehensive test coverage
        - ✅ Cryptographic attestations (PEP 740)

        ### 🚀 Installation
        \`\`\`bash
        pip install starmerge
        \`\`\`

        ### 📝 Changes
        $(gh release view ${{ github.ref_name }} --json body --jq .body)

        ---
        *Auto-generated release with security attestations.*
        EOF
        )"
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
