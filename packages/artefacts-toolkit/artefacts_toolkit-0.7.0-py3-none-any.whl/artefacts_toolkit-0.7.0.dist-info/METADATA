Metadata-Version: 2.4
Name: artefacts_toolkit
Version: 0.7.0
Author-email: FD <fabian@artefacts.com>, AGC <alejandro@artefacts.com>, TN <tomo@artefacts.com>, EP <eric@artefacts.com>, BN <bach@artefacts.com>
Project-URL: Homepage, https://github.com/art-e-fact/artefacts-toolkit
Project-URL: Bug Tracker, https://github.com/art-e-fact/artefacts-toolkit
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: Apache Software License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.10
Description-Content-Type: text/markdown
Requires-Dist: artefacts-toolkit-rosbag<0.5.0,>=0.4.0
Requires-Dist: artefacts-toolkit-config<0.3.0,>=0.2.1
Requires-Dist: artefacts-toolkit-gazebo<0.3.0,>=0.2.0
Requires-Dist: artefacts-toolkit-chart<0.4.0,>=0.3.0
Provides-Extra: dev
Requires-Dist: build; extra == "dev"
Requires-Dist: pyre-check; extra == "dev"
Requires-Dist: pytest; extra == "dev"
Requires-Dist: pytest-cov; extra == "dev"
Requires-Dist: pytest-env; extra == "dev"
Requires-Dist: pytest-mock; extra == "dev"
Requires-Dist: ruff; extra == "dev"
Requires-Dist: setuptools-scm; extra == "dev"
Requires-Dist: twine; extra == "dev"

# Artefacts Toolkit

[Documentation](https://docs.artefacts.com/artefacts-toolkit/)
[Artefacts](https://www.artefacts.com)

The Artefacts Toolkit contains a number of helper functions to assist with developing Robotic Applications. It is primarily designed to be used with [Artefacts](https://www.artefacts.com) and the Artefacts Dashboard, though some functions will work without it.

Helpers include:

* Access configurations made in the `artefacts.yaml` file
* Easy creation of rosbags, and extraction topic messages
* Interact with simulation (Gazebo) environment.
* Image / video creation
* Chart creation

The majority of the toolkit is designed to be used with ROS2 (Harmonic / Jazzy) and its corresponding recommended Gazebo simulator (Fortress / Harmonic).

## Installation

```
pip install artefacts-toolkit
```

_Note: Ros2 Jazzy (Python 3.12) users will need to setup a Python Virtual Environment and add it to their `PYTHONPATH` after sourcing ROS_
