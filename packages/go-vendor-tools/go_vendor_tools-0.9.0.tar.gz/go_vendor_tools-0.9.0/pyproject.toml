# Copyright (C) 2024 Maxwell G <maxwell@gtmx.me>
# SPDX-License-Identifier: MIT

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "go-vendor-tools"
description = "Tools for handling Go library vendoring in Fedora"
dynamic = ["version"]
authors = [{ name = "Maxwell G", email = "maxwell@gtmx.me" }]
maintainers = [
    {name = "Maxwell G", email = "maxwell@gtmx.me" },
    {name = "Fedora Go SIG", email="golang@lists.fedoraproject.org"},
]
readme = "README.md"
license = "MIT AND BSD-3-Clause"
license-files.globs = ["LICENSES/*.txt"]
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Development Status :: 3 - Alpha",
    "Typing :: Typed",
]
dependencies = [
    "license_expression",
    "tomli; python_version<'3.11'",
]
requires-python = ">=3.9"

[project.scripts]
go_vendor_archive = "go_vendor_tools.cli.go_vendor_archive:main"
go_vendor_license = "go_vendor_tools.cli.go_vendor_license:main"
gocheck2 = "go_vendor_tools.cli.gocheck2:main"

[project.optional-dependencies]
# User-facing
all = [
    "argcomplete",
    "specfile",
    "tomlkit",
    "zstarfile",
]
# Dependencies for the scancode backend
scancode = [
    "scancode-toolkit",
]
# Dev
codeqa = [
    "pymarkdownlnt",
    "reuse",
    "ruff>=0.3.0",
    "shellcheck-py",
]
formatters = [
    "black",
    "isort",
]
typing = [
    "go-vendor-tools[all]",
    "mypy",
    "pytest",
    "pytest-mock",
    "typing_extensions",
    # For checking noxfile.py
    "nox",
    # For docs typing
    "mkdocs-gen-files",
    "releaserr",
]
test = [
    "go-vendor-tools[all]",
    "pytest",
    "pytest-mock",
]
dev = [
    "go-vendor-tools[all]",
    "go-vendor-tools[codeqa]",
    "go-vendor-tools[formatters]",
    "go-vendor-tools[test]",
    "go-vendor-tools[typing]",
    "nox",
]
# Not meant for external usage. Use [all] instead.
specfile = [
    "specfile",
]

[project.urls]
Homepage = "https://fedora.gitlab.io/sigs/go/go-vendor-tools/"
Source = "https://gitlab.com/fedora/sigs/go/go-vendor-tools"
"Issue Tracker" = "https://gitlab.com/fedora/sigs/go/go-vendor-tools/-/issues"
Changelog = "https://fedora.gitlab.io/sigs/go/go-vendor-tools/news/"


[tool.hatch.version]
path = "src/go_vendor_tools/__init__.py"


[tool.pytest.ini_options]
addopts = [
    "--import-mode=importlib",
]
testpaths = [
    "tests/pytests",
]


[tool.isort]
profile = "black"


[tool.mypy]
check_untyped_defs = true

[[tool.mypy.overrides]]
module = ["license_expression.*", "boolean.*"]
ignore_missing_imports = true


[tool.pymarkdownlnt.extensions.front-matter]
enabled = true
[tool.pymarkdown.plugins.first-line-heading]
enabled = false
# Too many false positives
[tool.pymarkdown.plugins.heading-style]
enabled = false
[tool.pymarkdown.plugins.ul-indent]
enabled = false
#
[tool.pymarkdown.plugins.no-inline-html]
enabled = false
[tool.pymarkdown.plugins.line-length]
line_length = 90
# Code blocks can be a little longer than regular text
code_block_line_length = 120
[tool.pymarkdown.plugins.no-duplicate-heading]
# NEWS.md deliberately has duplicate headings
enabled = false
[tool.pymarkdown.plugins.code-block-style]
style = "fenced"
# False positives
[tool.pymarkdown.plugins.no-emphasis-as-heading]
enabled = false


[tool.coverage.run]
source = [
    "go_vendor_tools",
]
omit = [
    "src/go_vendor_tools/_zstarfile_extra.py",
]

[tool.coverage.paths]
source = [
    "src",
    "*/site-packages",
]

[tool.coverage.report]
# https://coverage.readthedocs.io/en/latest/excluding.html#advanced-exclusion
# These should use single quotes in TOML, as they're regular expressions.
exclude_lines = [
    'pragma: no cover',
    'raise NotImplementedError',
    'if __name__ == .__main__.:',
    'if TYPE_CHECKING:',
    'if t\.TYPE_CHECKING:',
    '@(abc\.)?abstractmethod',
    '@overload',
    'except ImportError:',
]
