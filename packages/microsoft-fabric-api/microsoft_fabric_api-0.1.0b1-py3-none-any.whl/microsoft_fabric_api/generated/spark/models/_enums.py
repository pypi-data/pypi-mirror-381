# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.10.3, generator: @autorest/python@6.15.0)
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from enum import Enum
from azure.core import CaseInsensitiveEnumMeta


class CustomPoolType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Custom pool type. Additional ``CustomPoolType`` types may be added over time."""

    WORKSPACE = "Workspace"
    """Workspace level custom pool"""
    CAPACITY = "Capacity"
    """Capacity level custom pool"""


class GroupType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The type of the group. Additional group types may be added over time."""

    UNKNOWN = "Unknown"
    """Principal group type is unknown."""
    SECURITY_GROUP = "SecurityGroup"
    """Principal is a security group."""
    DISTRIBUTION_LIST = "DistributionList"
    """Principal is a distribution list."""


class ItemReferenceType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The Item reference type. Additional ``ItemReferenceType`` types may be added over time."""

    BY_ID = "ById"
    """The item is referenced by its ID."""


class ItemType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The item type. Values are: ``Lakehouse``\\ , ``SparkJobDefinition``\\ , ``Notebook``.
    Additional ``LivySessionItemType`` types may be added over time.
    """

    LAKEHOUSE = "Lakehouse"
    """Item is a lakehouse item."""
    SPARK_JOB_DEFINITION = "SparkJobDefinition"
    """Item is a spark job definition item."""
    NOTEBOOK = "Notebook"
    """Item is a notebook item."""


class JobType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Type of the job. Values are: ``Unknown``\\ , ``SparkSession``\\ , ``SparkBatch``\\ ,
    ``JupyterSession``. Additional ``LivySessionJobType`` types may be added over time.
    """

    UNKNOWN = "Unknown"
    """Job type is unknown."""
    SPARK_SESSION = "SparkSession"
    """Job type is from a spark session."""
    SPARK_BATCH = "SparkBatch"
    """Job type is from a spark batch."""
    JUPYTER_SESSION = "JupyterSession"
    """Job type is from jupyter session."""


class NodeFamily(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Node family. Additional ``NodeFamily`` types may be added over time."""

    MEMORY_OPTIMIZED = "MemoryOptimized"
    """Memory optimized"""


class NodeSize(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """`Node size </fabric/data-engineering/spark-compute#node-sizes>`_. Additional ``NodeSize`` types
    may be added over time.
    """

    SMALL = "Small"
    """Small node size"""
    MEDIUM = "Medium"
    """Medium node size"""
    LARGE = "Large"
    """Large node size"""
    X_LARGE = "XLarge"
    """XLarge node size"""
    XX_LARGE = "XXLarge"
    """XXLarge node size"""


class Origin(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Origin of the job. Values are: ``SubmittedJob``\\ , ``PendingJob``. Additional
    ``LivySessionOrigin`` types may be added over time.
    """

    SUBMITTED_JOB = "SubmittedJob"
    """Job is coming from submitted data source."""
    PENDING_JOB = "PendingJob"
    """Job is coming from pending data source."""


class PrincipalType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The type of the principal. Additional principal types may be added over time."""

    USER = "User"
    """Principal is a Microsoft Entra user principal."""
    SERVICE_PRINCIPAL = "ServicePrincipal"
    """Principal is a Microsoft Entra service principal."""
    GROUP = "Group"
    """Principal is a security group."""
    SERVICE_PRINCIPAL_PROFILE = "ServicePrincipalProfile"
    """Principal is a service principal profile."""
    ENTIRE_TENANT = "EntireTenant"
    """Principal represents all tenant users."""


class State(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Current state of the job. Values are: ``NotStarted``\\ , ``InProgress``\\ , ``Cancelled``\\ ,
    ``Succeeded``\\ , ``Stopped``\\ , ``Failed``\\ , ``Unknown``. Additional ``LivySessionState``
    types may be added over time.
    """

    IN_PROGRESS = "InProgress"
    """Job is in running or is cancelling state."""
    CANCELLED = "Cancelled"
    """Job got cancelled."""
    NOT_STARTED = "NotStarted"
    """Job is queued, is starting or in library packaging state."""
    SUCCEEDED = "Succeeded"
    """Job has stopped or is in success state."""
    FAILED = "Failed"
    """Job failed or its session timed out."""
    UNKNOWN = "Unknown"
    """Job is in invalid state."""


class TimeUnit(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The unit of time for the duration. Additional duration types may be added over time."""

    SECONDS = "Seconds"
    """Duration in seconds."""
    MINUTES = "Minutes"
    """Duration in minutes."""
    HOURS = "Hours"
    """Duration in hours."""
    DAYS = "Days"
    """Duration in days."""
