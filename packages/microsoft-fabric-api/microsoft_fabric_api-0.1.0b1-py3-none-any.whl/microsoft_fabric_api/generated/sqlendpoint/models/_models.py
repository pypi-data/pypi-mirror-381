# coding=utf-8
# pylint: disable=too-many-lines
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.10.3, generator: @autorest/python@6.15.0)
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

import datetime
from typing import Any, List, Optional, TYPE_CHECKING, Union

from .. import _serialization

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from .. import models as _models


class ConnectionStringResponse(_serialization.Model):
    """The SQL connection string for the workspace containing this SQL endpoint.

    :ivar connection_string: The SQL connection string for the workspace containing this SQL
     endpoint.
    :vartype connection_string: str
    """

    _attribute_map = {
        "connection_string": {"key": "connectionString", "type": "str"},
    }

    def __init__(self, *, connection_string: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword connection_string: The SQL connection string for the workspace containing this SQL
         endpoint.
        :paramtype connection_string: str
        """
        super().__init__(**kwargs)
        self.connection_string = connection_string


class Duration(_serialization.Model):
    """A duration.

    All required parameters must be populated in order to send to server.

    :ivar value: The number of timeUnits in the duration. Required.
    :vartype value: float
    :ivar time_unit: The unit of time for the duration. Additional duration types may be added over
     time. Required. Known values are: "Seconds", "Minutes", "Hours", and "Days".
    :vartype time_unit: str or ~microsoft.fabric.api.sqlendpoint.models.TimeUnit
    """

    _validation = {
        "value": {"required": True},
        "time_unit": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "float"},
        "time_unit": {"key": "timeUnit", "type": "str"},
    }

    def __init__(self, *, value: float, time_unit: Union[str, "_models.TimeUnit"], **kwargs: Any) -> None:
        """
        :keyword value: The number of timeUnits in the duration. Required.
        :paramtype value: float
        :keyword time_unit: The unit of time for the duration. Additional duration types may be added
         over time. Required. Known values are: "Seconds", "Minutes", "Hours", and "Days".
        :paramtype time_unit: str or ~microsoft.fabric.api.sqlendpoint.models.TimeUnit
        """
        super().__init__(**kwargs)
        self.value = value
        self.time_unit = time_unit


class ErrorRelatedResource(_serialization.Model):
    """The error related resource details object.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar resource_id: The resource ID that's involved in the error. Required.
    :vartype resource_id: str
    :ivar resource_type: The type of the resource that's involved in the error. Required.
    :vartype resource_type: str
    """

    _validation = {
        "resource_id": {"required": True, "readonly": True},
        "resource_type": {"required": True, "readonly": True},
    }

    _attribute_map = {
        "resource_id": {"key": "resourceId", "type": "str"},
        "resource_type": {"key": "resourceType", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.resource_id = None
        self.resource_type = None


class ErrorResponseDetails(_serialization.Model):
    """The error response details.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar error_code: A specific identifier that provides information about an error condition,
     allowing for standardized communication between our service and its users. Required.
    :vartype error_code: str
    :ivar message: A human readable representation of the error. Required.
    :vartype message: str
    :ivar related_resource: The error related resource details.
    :vartype related_resource: ~microsoft.fabric.api.sqlendpoint.models.ErrorRelatedResource
    """

    _validation = {
        "error_code": {"required": True, "readonly": True},
        "message": {"required": True, "readonly": True},
        "related_resource": {"readonly": True},
    }

    _attribute_map = {
        "error_code": {"key": "errorCode", "type": "str"},
        "message": {"key": "message", "type": "str"},
        "related_resource": {"key": "relatedResource", "type": "ErrorRelatedResource"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.error_code = None
        self.message = None
        self.related_resource = None


class ErrorResponse(ErrorResponseDetails):
    """The error response.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar error_code: A specific identifier that provides information about an error condition,
     allowing for standardized communication between our service and its users. Required.
    :vartype error_code: str
    :ivar message: A human readable representation of the error. Required.
    :vartype message: str
    :ivar related_resource: The error related resource details.
    :vartype related_resource: ~microsoft.fabric.api.sqlendpoint.models.ErrorRelatedResource
    :ivar request_id: ID of the request associated with the error.
    :vartype request_id: str
    :ivar more_details: List of additional error details.
    :vartype more_details: list[~microsoft.fabric.api.sqlendpoint.models.ErrorResponseDetails]
    """

    _validation = {
        "error_code": {"required": True, "readonly": True},
        "message": {"required": True, "readonly": True},
        "related_resource": {"readonly": True},
        "request_id": {"readonly": True},
        "more_details": {"readonly": True},
    }

    _attribute_map = {
        "error_code": {"key": "errorCode", "type": "str"},
        "message": {"key": "message", "type": "str"},
        "related_resource": {"key": "relatedResource", "type": "ErrorRelatedResource"},
        "request_id": {"key": "requestId", "type": "str"},
        "more_details": {"key": "moreDetails", "type": "[ErrorResponseDetails]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.request_id = None
        self.more_details = None


class Item(_serialization.Model):
    """An item object.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: The item ID.
    :vartype id: str
    :ivar display_name: The item display name.
    :vartype display_name: str
    :ivar description: The item description.
    :vartype description: str
    :ivar type: The item type. Required. Known values are: "Dashboard", "Report", "SemanticModel",
     "PaginatedReport", "Datamart", "Lakehouse", "Eventhouse", "Environment", "KQLDatabase",
     "KQLQueryset", "KQLDashboard", "DataPipeline", "Notebook", "SparkJobDefinition",
     "MLExperiment", "MLModel", "Warehouse", "Eventstream", "SQLEndpoint", "MirroredWarehouse",
     "MirroredDatabase", "Reflex", "GraphQLApi", "MountedDataFactory", "ApacheAirflowJob",
     "SQLDatabase", "CopyJob", "VariableLibrary", "MirroredAzureDatabricksCatalog", "Dataflow",
     "WarehouseSnapshot", "DigitalTwinBuilder", "DigitalTwinBuilderFlow", "AnomalyDetector", "Map",
     and "UserDataFunction".
    :vartype type: str or ~microsoft.fabric.api.sqlendpoint.models.ItemType
    :ivar workspace_id: The workspace ID.
    :vartype workspace_id: str
    :ivar folder_id: The folder ID.
    :vartype folder_id: str
    :ivar tags: List of applied tags.
    :vartype tags: list[~microsoft.fabric.api.sqlendpoint.models.ItemTag]
    """

    _validation = {
        "id": {"readonly": True},
        "type": {"required": True},
        "workspace_id": {"readonly": True},
        "folder_id": {"readonly": True},
        "tags": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "display_name": {"key": "displayName", "type": "str"},
        "description": {"key": "description", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "workspace_id": {"key": "workspaceId", "type": "str"},
        "folder_id": {"key": "folderId", "type": "str"},
        "tags": {"key": "tags", "type": "[ItemTag]"},
    }

    def __init__(
        self,
        *,
        type: Union[str, "_models.ItemType"],
        display_name: Optional[str] = None,
        description: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword display_name: The item display name.
        :paramtype display_name: str
        :keyword description: The item description.
        :paramtype description: str
        :keyword type: The item type. Required. Known values are: "Dashboard", "Report",
         "SemanticModel", "PaginatedReport", "Datamart", "Lakehouse", "Eventhouse", "Environment",
         "KQLDatabase", "KQLQueryset", "KQLDashboard", "DataPipeline", "Notebook", "SparkJobDefinition",
         "MLExperiment", "MLModel", "Warehouse", "Eventstream", "SQLEndpoint", "MirroredWarehouse",
         "MirroredDatabase", "Reflex", "GraphQLApi", "MountedDataFactory", "ApacheAirflowJob",
         "SQLDatabase", "CopyJob", "VariableLibrary", "MirroredAzureDatabricksCatalog", "Dataflow",
         "WarehouseSnapshot", "DigitalTwinBuilder", "DigitalTwinBuilderFlow", "AnomalyDetector", "Map",
         and "UserDataFunction".
        :paramtype type: str or ~microsoft.fabric.api.sqlendpoint.models.ItemType
        """
        super().__init__(**kwargs)
        self.id = None
        self.display_name = display_name
        self.description = description
        self.type = type
        self.workspace_id = None
        self.folder_id = None
        self.tags = None


class ItemTag(_serialization.Model):
    """Represents a tag applied on an item.

    All required parameters must be populated in order to send to server.

    :ivar id: The tag ID. Required.
    :vartype id: str
    :ivar display_name: The name of the tag. Required.
    :vartype display_name: str
    """

    _validation = {
        "id": {"required": True},
        "display_name": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "display_name": {"key": "displayName", "type": "str"},
    }

    def __init__(self, *, id: str, display_name: str, **kwargs: Any) -> None:  # pylint: disable=redefined-builtin
        """
        :keyword id: The tag ID. Required.
        :paramtype id: str
        :keyword display_name: The name of the tag. Required.
        :paramtype display_name: str
        """
        super().__init__(**kwargs)
        self.id = id
        self.display_name = display_name


class PaginatedResponse(_serialization.Model):
    """PaginatedResponse.

    :ivar continuation_token: The token for the next result set batch. If there are no more
     records, it's removed from the response.
    :vartype continuation_token: str
    :ivar continuation_uri: The URI of the next result set batch. If there are no more records,
     it's removed from the response.
    :vartype continuation_uri: str
    """

    _attribute_map = {
        "continuation_token": {"key": "continuationToken", "type": "str"},
        "continuation_uri": {"key": "continuationUri", "type": "str"},
    }

    def __init__(
        self, *, continuation_token: Optional[str] = None, continuation_uri: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword continuation_token: The token for the next result set batch. If there are no more
         records, it's removed from the response.
        :paramtype continuation_token: str
        :keyword continuation_uri: The URI of the next result set batch. If there are no more records,
         it's removed from the response.
        :paramtype continuation_uri: str
        """
        super().__init__(**kwargs)
        self.continuation_token = continuation_token
        self.continuation_uri = continuation_uri


class SqlAuditSettings(_serialization.Model):
    """The current state of audit settings for an item.

    All required parameters must be populated in order to send to server.

    :ivar state: Audit settings state type. Required. Known values are: "Enabled" and "Disabled".
    :vartype state: str or ~microsoft.fabric.api.sqlendpoint.models.AuditSettingsState
    :ivar retention_days: Retention days. 0 indicates indefinite retention period. Required.
    :vartype retention_days: int
    :ivar audit_actions_and_groups: Audit actions and groups. Required.
    :vartype audit_actions_and_groups: list[str]
    """

    _validation = {
        "state": {"required": True},
        "retention_days": {"required": True},
        "audit_actions_and_groups": {"required": True},
    }

    _attribute_map = {
        "state": {"key": "state", "type": "str"},
        "retention_days": {"key": "retentionDays", "type": "int"},
        "audit_actions_and_groups": {"key": "auditActionsAndGroups", "type": "[str]"},
    }

    def __init__(
        self,
        *,
        state: Union[str, "_models.AuditSettingsState"],
        retention_days: int,
        audit_actions_and_groups: List[str],
        **kwargs: Any
    ) -> None:
        """
        :keyword state: Audit settings state type. Required. Known values are: "Enabled" and
         "Disabled".
        :paramtype state: str or ~microsoft.fabric.api.sqlendpoint.models.AuditSettingsState
        :keyword retention_days: Retention days. 0 indicates indefinite retention period. Required.
        :paramtype retention_days: int
        :keyword audit_actions_and_groups: Audit actions and groups. Required.
        :paramtype audit_actions_and_groups: list[str]
        """
        super().__init__(**kwargs)
        self.state = state
        self.retention_days = retention_days
        self.audit_actions_and_groups = audit_actions_and_groups


class SqlAuditSettingsUpdate(_serialization.Model):
    """Audit settings update request.

    :ivar state: Audit settings state type. Known values are: "Enabled" and "Disabled".
    :vartype state: str or ~microsoft.fabric.api.sqlendpoint.models.AuditSettingsState
    :ivar retention_days: Retention days.
    :vartype retention_days: int
    """

    _attribute_map = {
        "state": {"key": "state", "type": "str"},
        "retention_days": {"key": "retentionDays", "type": "int"},
    }

    def __init__(
        self,
        *,
        state: Optional[Union[str, "_models.AuditSettingsState"]] = None,
        retention_days: int = 0,
        **kwargs: Any
    ) -> None:
        """
        :keyword state: Audit settings state type. Known values are: "Enabled" and "Disabled".
        :paramtype state: str or ~microsoft.fabric.api.sqlendpoint.models.AuditSettingsState
        :keyword retention_days: Retention days.
        :paramtype retention_days: int
        """
        super().__init__(**kwargs)
        self.state = state
        self.retention_days = retention_days


class SQLEndpoint(Item):
    """A SQL endpoint object.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: The item ID.
    :vartype id: str
    :ivar display_name: The item display name.
    :vartype display_name: str
    :ivar description: The item description.
    :vartype description: str
    :ivar type: The item type. Required. Known values are: "Dashboard", "Report", "SemanticModel",
     "PaginatedReport", "Datamart", "Lakehouse", "Eventhouse", "Environment", "KQLDatabase",
     "KQLQueryset", "KQLDashboard", "DataPipeline", "Notebook", "SparkJobDefinition",
     "MLExperiment", "MLModel", "Warehouse", "Eventstream", "SQLEndpoint", "MirroredWarehouse",
     "MirroredDatabase", "Reflex", "GraphQLApi", "MountedDataFactory", "ApacheAirflowJob",
     "SQLDatabase", "CopyJob", "VariableLibrary", "MirroredAzureDatabricksCatalog", "Dataflow",
     "WarehouseSnapshot", "DigitalTwinBuilder", "DigitalTwinBuilderFlow", "AnomalyDetector", "Map",
     and "UserDataFunction".
    :vartype type: str or ~microsoft.fabric.api.sqlendpoint.models.ItemType
    :ivar workspace_id: The workspace ID.
    :vartype workspace_id: str
    :ivar folder_id: The folder ID.
    :vartype folder_id: str
    :ivar tags: List of applied tags.
    :vartype tags: list[~microsoft.fabric.api.sqlendpoint.models.ItemTag]
    """


class SqlEndpointRefreshMetadataRequest(_serialization.Model):
    """Refresh SQL analaytics endpoint request payload.

    :ivar timeout: The request duration before timing out. The default value is 15 minutes.
    :vartype timeout: ~microsoft.fabric.api.sqlendpoint.models.Duration
    """

    _attribute_map = {
        "timeout": {"key": "timeout", "type": "Duration"},
    }

    def __init__(self, *, timeout: Optional["_models.Duration"] = None, **kwargs: Any) -> None:
        """
        :keyword timeout: The request duration before timing out. The default value is 15 minutes.
        :paramtype timeout: ~microsoft.fabric.api.sqlendpoint.models.Duration
        """
        super().__init__(**kwargs)
        self.timeout = timeout


class SQLEndpoints(PaginatedResponse):
    """A list of SQL endpoints.

    All required parameters must be populated in order to send to server.

    :ivar continuation_token: The token for the next result set batch. If there are no more
     records, it's removed from the response.
    :vartype continuation_token: str
    :ivar continuation_uri: The URI of the next result set batch. If there are no more records,
     it's removed from the response.
    :vartype continuation_uri: str
    :ivar value: A list of SQL endpoints. Required.
    :vartype value: list[~microsoft.fabric.api.sqlendpoint.models.SQLEndpoint]
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "continuation_token": {"key": "continuationToken", "type": "str"},
        "continuation_uri": {"key": "continuationUri", "type": "str"},
        "value": {"key": "value", "type": "[SQLEndpoint]"},
    }

    def __init__(
        self,
        *,
        value: List["_models.SQLEndpoint"],
        continuation_token: Optional[str] = None,
        continuation_uri: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword continuation_token: The token for the next result set batch. If there are no more
         records, it's removed from the response.
        :paramtype continuation_token: str
        :keyword continuation_uri: The URI of the next result set batch. If there are no more records,
         it's removed from the response.
        :paramtype continuation_uri: str
        :keyword value: A list of SQL endpoints. Required.
        :paramtype value: list[~microsoft.fabric.api.sqlendpoint.models.SQLEndpoint]
        """
        super().__init__(continuation_token=continuation_token, continuation_uri=continuation_uri, **kwargs)
        self.value = value


class TableSyncStatus(_serialization.Model):
    """A table synchronization status object.

    All required parameters must be populated in order to send to server.

    :ivar table_name: The name of the table that synchronized. Required.
    :vartype table_name: str
    :ivar start_date_time: The date and time when the table synchronization started in UTC, using
     the YYYY-MM-DDTHH:mm:ssZ format. Required.
    :vartype start_date_time: ~datetime.datetime
    :ivar end_date_time: The date and time when the table synchronization completed in UTC, using
     the YYYY-MM-DDTHH:mm:ssZ format. Required.
    :vartype end_date_time: ~datetime.datetime
    :ivar error: The error response details.
    :vartype error: ~microsoft.fabric.api.sqlendpoint.models.ErrorResponseDetails
    :ivar status: Whether the table synchronized without errors. Required. Known values are:
     "Success", "Failure", and "NotRun".
    :vartype status: str or ~microsoft.fabric.api.sqlendpoint.models.SyncStatus
    :ivar last_successful_sync_date_time: The date and time when the table synchronization was
     successful in UTC, using the YYYY-MM-DDTHH:mm:ssZ format. Required.
    :vartype last_successful_sync_date_time: ~datetime.datetime
    """

    _validation = {
        "table_name": {"required": True},
        "start_date_time": {"required": True},
        "end_date_time": {"required": True},
        "status": {"required": True},
        "last_successful_sync_date_time": {"required": True},
    }

    _attribute_map = {
        "table_name": {"key": "tableName", "type": "str"},
        "start_date_time": {"key": "startDateTime", "type": "iso-8601"},
        "end_date_time": {"key": "endDateTime", "type": "iso-8601"},
        "error": {"key": "error", "type": "ErrorResponseDetails"},
        "status": {"key": "status", "type": "str"},
        "last_successful_sync_date_time": {"key": "lastSuccessfulSyncDateTime", "type": "iso-8601"},
    }

    def __init__(
        self,
        *,
        table_name: str,
        start_date_time: datetime.datetime,
        end_date_time: datetime.datetime,
        status: Union[str, "_models.SyncStatus"],
        last_successful_sync_date_time: datetime.datetime,
        error: Optional["_models.ErrorResponseDetails"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword table_name: The name of the table that synchronized. Required.
        :paramtype table_name: str
        :keyword start_date_time: The date and time when the table synchronization started in UTC,
         using the YYYY-MM-DDTHH:mm:ssZ format. Required.
        :paramtype start_date_time: ~datetime.datetime
        :keyword end_date_time: The date and time when the table synchronization completed in UTC,
         using the YYYY-MM-DDTHH:mm:ssZ format. Required.
        :paramtype end_date_time: ~datetime.datetime
        :keyword error: The error response details.
        :paramtype error: ~microsoft.fabric.api.sqlendpoint.models.ErrorResponseDetails
        :keyword status: Whether the table synchronized without errors. Required. Known values are:
         "Success", "Failure", and "NotRun".
        :paramtype status: str or ~microsoft.fabric.api.sqlendpoint.models.SyncStatus
        :keyword last_successful_sync_date_time: The date and time when the table synchronization was
         successful in UTC, using the YYYY-MM-DDTHH:mm:ssZ format. Required.
        :paramtype last_successful_sync_date_time: ~datetime.datetime
        """
        super().__init__(**kwargs)
        self.table_name = table_name
        self.start_date_time = start_date_time
        self.end_date_time = end_date_time
        self.error = error
        self.status = status
        self.last_successful_sync_date_time = last_successful_sync_date_time


class TableSyncStatuses(_serialization.Model):
    """A list of table synchronization statuses.

    All required parameters must be populated in order to send to server.

    :ivar value: A list of table synchronization statuses. Required.
    :vartype value: list[~microsoft.fabric.api.sqlendpoint.models.TableSyncStatus]
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "value": {"key": "value", "type": "[TableSyncStatus]"},
    }

    def __init__(self, *, value: List["_models.TableSyncStatus"], **kwargs: Any) -> None:
        """
        :keyword value: A list of table synchronization statuses. Required.
        :paramtype value: list[~microsoft.fabric.api.sqlendpoint.models.TableSyncStatus]
        """
        super().__init__(**kwargs)
        self.value = value
