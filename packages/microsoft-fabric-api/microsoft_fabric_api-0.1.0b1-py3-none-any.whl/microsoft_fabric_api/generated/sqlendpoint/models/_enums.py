# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.10.3, generator: @autorest/python@6.15.0)
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from enum import Enum
from azure.core import CaseInsensitiveEnumMeta


class AuditSettingsState(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Audit settings state. Additional AuditSettingsState may be added over time."""

    ENABLED = "Enabled"
    """Enable the SQL audit."""
    DISABLED = "Disabled"
    """Disable the SQL audit."""


class ItemType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The type of the item. Additional item types may be added over time."""

    DASHBOARD = "Dashboard"
    """PowerBI dashboard."""
    REPORT = "Report"
    """PowerBI report."""
    SEMANTIC_MODEL = "SemanticModel"
    """PowerBI semantic model."""
    PAGINATED_REPORT = "PaginatedReport"
    """PowerBI paginated report."""
    DATAMART = "Datamart"
    """PowerBI datamart."""
    LAKEHOUSE = "Lakehouse"
    """A lakehouse."""
    EVENTHOUSE = "Eventhouse"
    """An eventhouse."""
    ENVIRONMENT = "Environment"
    """An environment."""
    KQL_DATABASE = "KQLDatabase"
    """A KQL database."""
    KQL_QUERYSET = "KQLQueryset"
    """A KQL queryset."""
    KQL_DASHBOARD = "KQLDashboard"
    """A KQL dashboard."""
    DATA_PIPELINE = "DataPipeline"
    """A data pipeline."""
    NOTEBOOK = "Notebook"
    """A notebook."""
    SPARK_JOB_DEFINITION = "SparkJobDefinition"
    """A spark job definition."""
    ML_EXPERIMENT = "MLExperiment"
    """A machine learning experiment."""
    ML_MODEL = "MLModel"
    """A machine learning model."""
    WAREHOUSE = "Warehouse"
    """A warehouse."""
    EVENTSTREAM = "Eventstream"
    """An eventstream."""
    SQL_ENDPOINT = "SQLEndpoint"
    """An SQL endpoint."""
    MIRRORED_WAREHOUSE = "MirroredWarehouse"
    """A mirrored warehouse."""
    MIRRORED_DATABASE = "MirroredDatabase"
    """A mirrored database."""
    REFLEX = "Reflex"
    """A Reflex."""
    GRAPH_QL_API = "GraphQLApi"
    """An API for GraphQL item."""
    MOUNTED_DATA_FACTORY = "MountedDataFactory"
    """A MountedDataFactory."""
    APACHE_AIRFLOW_JOB = "ApacheAirflowJob"
    """An ApacheAirflowJob."""
    SQL_DATABASE = "SQLDatabase"
    """A SQLDatabase."""
    COPY_JOB = "CopyJob"
    """A Copy job."""
    VARIABLE_LIBRARY = "VariableLibrary"
    """A VariableLibrary."""
    MIRRORED_AZURE_DATABRICKS_CATALOG = "MirroredAzureDatabricksCatalog"
    """A mirrored azure databricks catalog."""
    DATAFLOW = "Dataflow"
    """A Dataflow."""
    WAREHOUSE_SNAPSHOT = "WarehouseSnapshot"
    """A Warehouse snapshot."""
    DIGITAL_TWIN_BUILDER = "DigitalTwinBuilder"
    """A DigitalTwinBuilder."""
    DIGITAL_TWIN_BUILDER_FLOW = "DigitalTwinBuilderFlow"
    """A Digital Twin Builder Flow."""
    ANOMALY_DETECTOR = "AnomalyDetector"
    """An Anomaly Detector."""
    MAP = "Map"
    """A Map."""
    USER_DATA_FUNCTION = "UserDataFunction"
    """A User Data Function."""


class PrivateLinkType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """PrivateLinkType."""

    NONE = "None"
    """No private link (default)."""
    WORKSPACE = "Workspace"
    """Workspace private Link."""


class SyncStatus(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The status of the synchronization operation. Additional SyncStatus types may be added over
    time.
    """

    SUCCESS = "Success"
    """Indicates a success."""
    FAILURE = "Failure"
    """Indicates a failure."""
    NOT_RUN = "NotRun"
    """Indicates that the operation did not run."""


class TimeUnit(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The unit of time for the duration. Additional duration types may be added over time."""

    SECONDS = "Seconds"
    """Duration in seconds."""
    MINUTES = "Minutes"
    """Duration in minutes."""
    HOURS = "Hours"
    """Duration in hours."""
    DAYS = "Days"
    """Duration in days."""
