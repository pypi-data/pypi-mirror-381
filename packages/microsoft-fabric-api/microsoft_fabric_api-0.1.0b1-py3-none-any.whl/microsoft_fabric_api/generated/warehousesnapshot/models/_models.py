# coding=utf-8
# pylint: disable=too-many-lines
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.10.3, generator: @autorest/python@6.15.0)
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

import datetime
from typing import Any, List, Optional, TYPE_CHECKING, Union

from .. import _serialization

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from .. import models as _models


class CreateWarehouseSnapshotRequest(_serialization.Model):
    """Create Warehouse snapshot request payload.

    All required parameters must be populated in order to send to server.

    :ivar display_name: The Warehouse snapshot display name. The display name must follow naming
     rules according to item type. Required.
    :vartype display_name: str
    :ivar description: The Warehouse snapshot description. Maximum length is 256 characters.
    :vartype description: str
    :ivar folder_id: The folder ID. If not specified or null, the Warehouse snapshot is created
     with the workspace as its folder.
    :vartype folder_id: str
    :ivar creation_payload: The Warehouse snapshot creation payload.
    :vartype creation_payload:
     ~microsoft.fabric.api.warehousesnapshot.models.WarehouseSnapshotCreationPayload
    """

    _validation = {
        "display_name": {"required": True},
    }

    _attribute_map = {
        "display_name": {"key": "displayName", "type": "str"},
        "description": {"key": "description", "type": "str"},
        "folder_id": {"key": "folderId", "type": "str"},
        "creation_payload": {"key": "creationPayload", "type": "WarehouseSnapshotCreationPayload"},
    }

    def __init__(
        self,
        *,
        display_name: str,
        description: Optional[str] = None,
        folder_id: Optional[str] = None,
        creation_payload: Optional["_models.WarehouseSnapshotCreationPayload"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword display_name: The Warehouse snapshot display name. The display name must follow naming
         rules according to item type. Required.
        :paramtype display_name: str
        :keyword description: The Warehouse snapshot description. Maximum length is 256 characters.
        :paramtype description: str
        :keyword folder_id: The folder ID. If not specified or null, the Warehouse snapshot is created
         with the workspace as its folder.
        :paramtype folder_id: str
        :keyword creation_payload: The Warehouse snapshot creation payload.
        :paramtype creation_payload:
         ~microsoft.fabric.api.warehousesnapshot.models.WarehouseSnapshotCreationPayload
        """
        super().__init__(**kwargs)
        self.display_name = display_name
        self.description = description
        self.folder_id = folder_id
        self.creation_payload = creation_payload


class ErrorRelatedResource(_serialization.Model):
    """The error related resource details object.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar resource_id: The resource ID that's involved in the error. Required.
    :vartype resource_id: str
    :ivar resource_type: The type of the resource that's involved in the error. Required.
    :vartype resource_type: str
    """

    _validation = {
        "resource_id": {"required": True, "readonly": True},
        "resource_type": {"required": True, "readonly": True},
    }

    _attribute_map = {
        "resource_id": {"key": "resourceId", "type": "str"},
        "resource_type": {"key": "resourceType", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.resource_id = None
        self.resource_type = None


class ErrorResponseDetails(_serialization.Model):
    """The error response details.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar error_code: A specific identifier that provides information about an error condition,
     allowing for standardized communication between our service and its users. Required.
    :vartype error_code: str
    :ivar message: A human readable representation of the error. Required.
    :vartype message: str
    :ivar related_resource: The error related resource details.
    :vartype related_resource: ~microsoft.fabric.api.warehousesnapshot.models.ErrorRelatedResource
    """

    _validation = {
        "error_code": {"required": True, "readonly": True},
        "message": {"required": True, "readonly": True},
        "related_resource": {"readonly": True},
    }

    _attribute_map = {
        "error_code": {"key": "errorCode", "type": "str"},
        "message": {"key": "message", "type": "str"},
        "related_resource": {"key": "relatedResource", "type": "ErrorRelatedResource"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.error_code = None
        self.message = None
        self.related_resource = None


class ErrorResponse(ErrorResponseDetails):
    """The error response.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar error_code: A specific identifier that provides information about an error condition,
     allowing for standardized communication between our service and its users. Required.
    :vartype error_code: str
    :ivar message: A human readable representation of the error. Required.
    :vartype message: str
    :ivar related_resource: The error related resource details.
    :vartype related_resource: ~microsoft.fabric.api.warehousesnapshot.models.ErrorRelatedResource
    :ivar request_id: ID of the request associated with the error.
    :vartype request_id: str
    :ivar more_details: List of additional error details.
    :vartype more_details:
     list[~microsoft.fabric.api.warehousesnapshot.models.ErrorResponseDetails]
    """

    _validation = {
        "error_code": {"required": True, "readonly": True},
        "message": {"required": True, "readonly": True},
        "related_resource": {"readonly": True},
        "request_id": {"readonly": True},
        "more_details": {"readonly": True},
    }

    _attribute_map = {
        "error_code": {"key": "errorCode", "type": "str"},
        "message": {"key": "message", "type": "str"},
        "related_resource": {"key": "relatedResource", "type": "ErrorRelatedResource"},
        "request_id": {"key": "requestId", "type": "str"},
        "more_details": {"key": "moreDetails", "type": "[ErrorResponseDetails]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.request_id = None
        self.more_details = None


class Item(_serialization.Model):
    """An item object.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: The item ID.
    :vartype id: str
    :ivar display_name: The item display name.
    :vartype display_name: str
    :ivar description: The item description.
    :vartype description: str
    :ivar type: The item type. Required. Known values are: "Dashboard", "Report", "SemanticModel",
     "PaginatedReport", "Datamart", "Lakehouse", "Eventhouse", "Environment", "KQLDatabase",
     "KQLQueryset", "KQLDashboard", "DataPipeline", "Notebook", "SparkJobDefinition",
     "MLExperiment", "MLModel", "Warehouse", "Eventstream", "SQLEndpoint", "MirroredWarehouse",
     "MirroredDatabase", "Reflex", "GraphQLApi", "MountedDataFactory", "ApacheAirflowJob",
     "SQLDatabase", "CopyJob", "VariableLibrary", "MirroredAzureDatabricksCatalog", "Dataflow",
     "WarehouseSnapshot", "DigitalTwinBuilder", "DigitalTwinBuilderFlow", "AnomalyDetector", "Map",
     and "UserDataFunction".
    :vartype type: str or ~microsoft.fabric.api.warehousesnapshot.models.ItemType
    :ivar workspace_id: The workspace ID.
    :vartype workspace_id: str
    :ivar folder_id: The folder ID.
    :vartype folder_id: str
    :ivar tags: List of applied tags.
    :vartype tags: list[~microsoft.fabric.api.warehousesnapshot.models.ItemTag]
    """

    _validation = {
        "id": {"readonly": True},
        "type": {"required": True},
        "workspace_id": {"readonly": True},
        "folder_id": {"readonly": True},
        "tags": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "display_name": {"key": "displayName", "type": "str"},
        "description": {"key": "description", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "workspace_id": {"key": "workspaceId", "type": "str"},
        "folder_id": {"key": "folderId", "type": "str"},
        "tags": {"key": "tags", "type": "[ItemTag]"},
    }

    def __init__(
        self,
        *,
        type: Union[str, "_models.ItemType"],
        display_name: Optional[str] = None,
        description: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword display_name: The item display name.
        :paramtype display_name: str
        :keyword description: The item description.
        :paramtype description: str
        :keyword type: The item type. Required. Known values are: "Dashboard", "Report",
         "SemanticModel", "PaginatedReport", "Datamart", "Lakehouse", "Eventhouse", "Environment",
         "KQLDatabase", "KQLQueryset", "KQLDashboard", "DataPipeline", "Notebook", "SparkJobDefinition",
         "MLExperiment", "MLModel", "Warehouse", "Eventstream", "SQLEndpoint", "MirroredWarehouse",
         "MirroredDatabase", "Reflex", "GraphQLApi", "MountedDataFactory", "ApacheAirflowJob",
         "SQLDatabase", "CopyJob", "VariableLibrary", "MirroredAzureDatabricksCatalog", "Dataflow",
         "WarehouseSnapshot", "DigitalTwinBuilder", "DigitalTwinBuilderFlow", "AnomalyDetector", "Map",
         and "UserDataFunction".
        :paramtype type: str or ~microsoft.fabric.api.warehousesnapshot.models.ItemType
        """
        super().__init__(**kwargs)
        self.id = None
        self.display_name = display_name
        self.description = description
        self.type = type
        self.workspace_id = None
        self.folder_id = None
        self.tags = None


class ItemTag(_serialization.Model):
    """Represents a tag applied on an item.

    All required parameters must be populated in order to send to server.

    :ivar id: The tag ID. Required.
    :vartype id: str
    :ivar display_name: The name of the tag. Required.
    :vartype display_name: str
    """

    _validation = {
        "id": {"required": True},
        "display_name": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "display_name": {"key": "displayName", "type": "str"},
    }

    def __init__(self, *, id: str, display_name: str, **kwargs: Any) -> None:  # pylint: disable=redefined-builtin
        """
        :keyword id: The tag ID. Required.
        :paramtype id: str
        :keyword display_name: The name of the tag. Required.
        :paramtype display_name: str
        """
        super().__init__(**kwargs)
        self.id = id
        self.display_name = display_name


class PaginatedResponse(_serialization.Model):
    """PaginatedResponse.

    :ivar continuation_token: The token for the next result set batch. If there are no more
     records, it's removed from the response.
    :vartype continuation_token: str
    :ivar continuation_uri: The URI of the next result set batch. If there are no more records,
     it's removed from the response.
    :vartype continuation_uri: str
    """

    _attribute_map = {
        "continuation_token": {"key": "continuationToken", "type": "str"},
        "continuation_uri": {"key": "continuationUri", "type": "str"},
    }

    def __init__(
        self, *, continuation_token: Optional[str] = None, continuation_uri: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword continuation_token: The token for the next result set batch. If there are no more
         records, it's removed from the response.
        :paramtype continuation_token: str
        :keyword continuation_uri: The URI of the next result set batch. If there are no more records,
         it's removed from the response.
        :paramtype continuation_uri: str
        """
        super().__init__(**kwargs)
        self.continuation_token = continuation_token
        self.continuation_uri = continuation_uri


class UpdateWarehouseSnapshotRequest(_serialization.Model):
    """Update Warehouse snapshot request.

    :ivar display_name: The Warehouse snapshot display name. The display name must follow naming
     rules according to item type.
    :vartype display_name: str
    :ivar description: The Warehouse snapshot description. Maximum length is 256 characters.
    :vartype description: str
    :ivar properties: The Warehouse snapshot update properties payload.
    :vartype properties:
     ~microsoft.fabric.api.warehousesnapshot.models.WarehouseSnapshotUpdateProperties
    """

    _attribute_map = {
        "display_name": {"key": "displayName", "type": "str"},
        "description": {"key": "description", "type": "str"},
        "properties": {"key": "properties", "type": "WarehouseSnapshotUpdateProperties"},
    }

    def __init__(
        self,
        *,
        display_name: Optional[str] = None,
        description: Optional[str] = None,
        properties: Optional["_models.WarehouseSnapshotUpdateProperties"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword display_name: The Warehouse snapshot display name. The display name must follow naming
         rules according to item type.
        :paramtype display_name: str
        :keyword description: The Warehouse snapshot description. Maximum length is 256 characters.
        :paramtype description: str
        :keyword properties: The Warehouse snapshot update properties payload.
        :paramtype properties:
         ~microsoft.fabric.api.warehousesnapshot.models.WarehouseSnapshotUpdateProperties
        """
        super().__init__(**kwargs)
        self.display_name = display_name
        self.description = description
        self.properties = properties


class WarehouseSnapshot(Item):
    """A Warehouse snapshot object.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: The item ID.
    :vartype id: str
    :ivar display_name: The item display name.
    :vartype display_name: str
    :ivar description: The item description.
    :vartype description: str
    :ivar type: The item type. Required. Known values are: "Dashboard", "Report", "SemanticModel",
     "PaginatedReport", "Datamart", "Lakehouse", "Eventhouse", "Environment", "KQLDatabase",
     "KQLQueryset", "KQLDashboard", "DataPipeline", "Notebook", "SparkJobDefinition",
     "MLExperiment", "MLModel", "Warehouse", "Eventstream", "SQLEndpoint", "MirroredWarehouse",
     "MirroredDatabase", "Reflex", "GraphQLApi", "MountedDataFactory", "ApacheAirflowJob",
     "SQLDatabase", "CopyJob", "VariableLibrary", "MirroredAzureDatabricksCatalog", "Dataflow",
     "WarehouseSnapshot", "DigitalTwinBuilder", "DigitalTwinBuilderFlow", "AnomalyDetector", "Map",
     and "UserDataFunction".
    :vartype type: str or ~microsoft.fabric.api.warehousesnapshot.models.ItemType
    :ivar workspace_id: The workspace ID.
    :vartype workspace_id: str
    :ivar folder_id: The folder ID.
    :vartype folder_id: str
    :ivar tags: List of applied tags.
    :vartype tags: list[~microsoft.fabric.api.warehousesnapshot.models.ItemTag]
    :ivar properties: The Warehouse snapshot properties.
    :vartype properties: ~microsoft.fabric.api.warehousesnapshot.models.WarehouseSnapshotProperties
    """

    _validation = {
        "id": {"readonly": True},
        "type": {"required": True},
        "workspace_id": {"readonly": True},
        "folder_id": {"readonly": True},
        "tags": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "display_name": {"key": "displayName", "type": "str"},
        "description": {"key": "description", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "workspace_id": {"key": "workspaceId", "type": "str"},
        "folder_id": {"key": "folderId", "type": "str"},
        "tags": {"key": "tags", "type": "[ItemTag]"},
        "properties": {"key": "properties", "type": "WarehouseSnapshotProperties"},
    }

    def __init__(
        self,
        *,
        type: Union[str, "_models.ItemType"],
        display_name: Optional[str] = None,
        description: Optional[str] = None,
        properties: Optional["_models.WarehouseSnapshotProperties"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword display_name: The item display name.
        :paramtype display_name: str
        :keyword description: The item description.
        :paramtype description: str
        :keyword type: The item type. Required. Known values are: "Dashboard", "Report",
         "SemanticModel", "PaginatedReport", "Datamart", "Lakehouse", "Eventhouse", "Environment",
         "KQLDatabase", "KQLQueryset", "KQLDashboard", "DataPipeline", "Notebook", "SparkJobDefinition",
         "MLExperiment", "MLModel", "Warehouse", "Eventstream", "SQLEndpoint", "MirroredWarehouse",
         "MirroredDatabase", "Reflex", "GraphQLApi", "MountedDataFactory", "ApacheAirflowJob",
         "SQLDatabase", "CopyJob", "VariableLibrary", "MirroredAzureDatabricksCatalog", "Dataflow",
         "WarehouseSnapshot", "DigitalTwinBuilder", "DigitalTwinBuilderFlow", "AnomalyDetector", "Map",
         and "UserDataFunction".
        :paramtype type: str or ~microsoft.fabric.api.warehousesnapshot.models.ItemType
        :keyword properties: The Warehouse snapshot properties.
        :paramtype properties:
         ~microsoft.fabric.api.warehousesnapshot.models.WarehouseSnapshotProperties
        """
        super().__init__(display_name=display_name, description=description, type=type, **kwargs)
        self.properties = properties


class WarehouseSnapshotCreationPayload(_serialization.Model):
    """The Warehouse snapshot creation payload.

    All required parameters must be populated in order to send to server.

    :ivar parent_warehouse_id: The parent Warehouse ID. Required.
    :vartype parent_warehouse_id: str
    :ivar snapshot_date_time: The date and time used for the Warehouse snapshot, if not provided
     the current date and time will be taken. If given it should be in UTC, using the
     YYYY-MM-DDTHH:mm:ssZ format.
    :vartype snapshot_date_time: ~datetime.datetime
    """

    _validation = {
        "parent_warehouse_id": {"required": True},
    }

    _attribute_map = {
        "parent_warehouse_id": {"key": "parentWarehouseId", "type": "str"},
        "snapshot_date_time": {"key": "snapshotDateTime", "type": "iso-8601"},
    }

    def __init__(
        self, *, parent_warehouse_id: str, snapshot_date_time: Optional[datetime.datetime] = None, **kwargs: Any
    ) -> None:
        """
        :keyword parent_warehouse_id: The parent Warehouse ID. Required.
        :paramtype parent_warehouse_id: str
        :keyword snapshot_date_time: The date and time used for the Warehouse snapshot, if not provided
         the current date and time will be taken. If given it should be in UTC, using the
         YYYY-MM-DDTHH:mm:ssZ format.
        :paramtype snapshot_date_time: ~datetime.datetime
        """
        super().__init__(**kwargs)
        self.parent_warehouse_id = parent_warehouse_id
        self.snapshot_date_time = snapshot_date_time


class WarehouseSnapshotProperties(_serialization.Model):
    """The Warehouse snapshot properties.

    All required parameters must be populated in order to send to server.

    :ivar connection_string: The SQL connection string connected to the workspace containing this
     warehouse. Required.
    :vartype connection_string: str
    :ivar parent_warehouse_id: The parent Warehouse ID. Required.
    :vartype parent_warehouse_id: str
    :ivar snapshot_date_time: The current warehouse snapshot date and time in UTC, using the
     YYYY-MM-DDTHH:mm:ssZ format. Required.
    :vartype snapshot_date_time: ~datetime.datetime
    """

    _validation = {
        "connection_string": {"required": True},
        "parent_warehouse_id": {"required": True},
        "snapshot_date_time": {"required": True},
    }

    _attribute_map = {
        "connection_string": {"key": "connectionString", "type": "str"},
        "parent_warehouse_id": {"key": "parentWarehouseId", "type": "str"},
        "snapshot_date_time": {"key": "snapshotDateTime", "type": "iso-8601"},
    }

    def __init__(
        self, *, connection_string: str, parent_warehouse_id: str, snapshot_date_time: datetime.datetime, **kwargs: Any
    ) -> None:
        """
        :keyword connection_string: The SQL connection string connected to the workspace containing
         this warehouse. Required.
        :paramtype connection_string: str
        :keyword parent_warehouse_id: The parent Warehouse ID. Required.
        :paramtype parent_warehouse_id: str
        :keyword snapshot_date_time: The current warehouse snapshot date and time in UTC, using the
         YYYY-MM-DDTHH:mm:ssZ format. Required.
        :paramtype snapshot_date_time: ~datetime.datetime
        """
        super().__init__(**kwargs)
        self.connection_string = connection_string
        self.parent_warehouse_id = parent_warehouse_id
        self.snapshot_date_time = snapshot_date_time


class WarehouseSnapshots(PaginatedResponse):
    """A list of Warehouse snapshots.

    All required parameters must be populated in order to send to server.

    :ivar continuation_token: The token for the next result set batch. If there are no more
     records, it's removed from the response.
    :vartype continuation_token: str
    :ivar continuation_uri: The URI of the next result set batch. If there are no more records,
     it's removed from the response.
    :vartype continuation_uri: str
    :ivar value: A list of Warehouse snapshots. Required.
    :vartype value: list[~microsoft.fabric.api.warehousesnapshot.models.WarehouseSnapshot]
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "continuation_token": {"key": "continuationToken", "type": "str"},
        "continuation_uri": {"key": "continuationUri", "type": "str"},
        "value": {"key": "value", "type": "[WarehouseSnapshot]"},
    }

    def __init__(
        self,
        *,
        value: List["_models.WarehouseSnapshot"],
        continuation_token: Optional[str] = None,
        continuation_uri: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword continuation_token: The token for the next result set batch. If there are no more
         records, it's removed from the response.
        :paramtype continuation_token: str
        :keyword continuation_uri: The URI of the next result set batch. If there are no more records,
         it's removed from the response.
        :paramtype continuation_uri: str
        :keyword value: A list of Warehouse snapshots. Required.
        :paramtype value: list[~microsoft.fabric.api.warehousesnapshot.models.WarehouseSnapshot]
        """
        super().__init__(continuation_token=continuation_token, continuation_uri=continuation_uri, **kwargs)
        self.value = value


class WarehouseSnapshotUpdateProperties(_serialization.Model):
    """The Warehouse snapshot update properties payload.

    All required parameters must be populated in order to send to server.

    :ivar snapshot_date_time: The date and time used for the Warehouse snapshot, if not provided
     the current date and time will be taken. If given it should be in UTC, using the
     YYYY-MM-DDTHH:mm:ssZ format. Required.
    :vartype snapshot_date_time: ~datetime.datetime
    """

    _validation = {
        "snapshot_date_time": {"required": True},
    }

    _attribute_map = {
        "snapshot_date_time": {"key": "snapshotDateTime", "type": "iso-8601"},
    }

    def __init__(self, *, snapshot_date_time: datetime.datetime, **kwargs: Any) -> None:
        """
        :keyword snapshot_date_time: The date and time used for the Warehouse snapshot, if not provided
         the current date and time will be taken. If given it should be in UTC, using the
         YYYY-MM-DDTHH:mm:ssZ format. Required.
        :paramtype snapshot_date_time: ~datetime.datetime
        """
        super().__init__(**kwargs)
        self.snapshot_date_time = snapshot_date_time
