# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.10.3, generator: @autorest/python@6.15.0)
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from enum import Enum
from azure.core import CaseInsensitiveEnumMeta


class CustomPoolMemory(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Custom pool memory for Spark driver or Spark executor. Additional ``CustomPoolMemory`` types
    may be added over time.
    """

    TWENTY_EIGHT_G = "28g"
    """28GB memory."""
    FIFTY_SIX_G = "56g"
    """56G memory."""
    ONE_HUNDRED_TWELVE_G = "112g"
    """112G memory."""
    TWO_HUNDRED_TWENTY_FOUR_G = "224g"
    """224G memory."""
    FOUR_HUNDRED_G = "400g"
    """400G memory."""


class CustomPoolType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Custom pool type. Additional ``CustomPoolType`` types may be added over time."""

    WORKSPACE = "Workspace"
    """Workspace custom pool"""
    CAPACITY = "Capacity"
    """Capacity custom pool"""


class EnvironmentPublishState(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Publish state. Additional state types may be added over time."""

    WAITING = "Waiting"
    """Environment publish is in waiting state."""
    RUNNING = "Running"
    """Environment publish is in running state."""
    CANCELLING = "Cancelling"
    """Environment publish is in cancelling state."""
    CANCELLED = "Cancelled"
    """Environment publish is in cancelled state."""
    FAILED = "Failed"
    """Environment publish is in failed state."""
    SUCCESS = "Success"
    """Environment publish is in success state."""


class ItemType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The type of the item. Additional item types may be added over time."""

    DASHBOARD = "Dashboard"
    """PowerBI dashboard."""
    REPORT = "Report"
    """PowerBI report."""
    SEMANTIC_MODEL = "SemanticModel"
    """PowerBI semantic model."""
    PAGINATED_REPORT = "PaginatedReport"
    """PowerBI paginated report."""
    DATAMART = "Datamart"
    """PowerBI datamart."""
    LAKEHOUSE = "Lakehouse"
    """A lakehouse."""
    EVENTHOUSE = "Eventhouse"
    """An eventhouse."""
    ENVIRONMENT = "Environment"
    """An environment."""
    KQL_DATABASE = "KQLDatabase"
    """A KQL database."""
    KQL_QUERYSET = "KQLQueryset"
    """A KQL queryset."""
    KQL_DASHBOARD = "KQLDashboard"
    """A KQL dashboard."""
    DATA_PIPELINE = "DataPipeline"
    """A data pipeline."""
    NOTEBOOK = "Notebook"
    """A notebook."""
    SPARK_JOB_DEFINITION = "SparkJobDefinition"
    """A spark job definition."""
    ML_EXPERIMENT = "MLExperiment"
    """A machine learning experiment."""
    ML_MODEL = "MLModel"
    """A machine learning model."""
    WAREHOUSE = "Warehouse"
    """A warehouse."""
    EVENTSTREAM = "Eventstream"
    """An eventstream."""
    SQL_ENDPOINT = "SQLEndpoint"
    """An SQL endpoint."""
    MIRRORED_WAREHOUSE = "MirroredWarehouse"
    """A mirrored warehouse."""
    MIRRORED_DATABASE = "MirroredDatabase"
    """A mirrored database."""
    REFLEX = "Reflex"
    """A Reflex."""
    GRAPH_QL_API = "GraphQLApi"
    """An API for GraphQL item."""
    MOUNTED_DATA_FACTORY = "MountedDataFactory"
    """A MountedDataFactory."""
    APACHE_AIRFLOW_JOB = "ApacheAirflowJob"
    """An ApacheAirflowJob."""
    SQL_DATABASE = "SQLDatabase"
    """A SQLDatabase."""
    COPY_JOB = "CopyJob"
    """A Copy job."""
    VARIABLE_LIBRARY = "VariableLibrary"
    """A VariableLibrary."""
    MIRRORED_AZURE_DATABRICKS_CATALOG = "MirroredAzureDatabricksCatalog"
    """A mirrored azure databricks catalog."""
    DATAFLOW = "Dataflow"
    """A Dataflow."""
    WAREHOUSE_SNAPSHOT = "WarehouseSnapshot"
    """A Warehouse snapshot."""
    DIGITAL_TWIN_BUILDER = "DigitalTwinBuilder"
    """A DigitalTwinBuilder."""
    DIGITAL_TWIN_BUILDER_FLOW = "DigitalTwinBuilderFlow"
    """A Digital Twin Builder Flow."""
    ANOMALY_DETECTOR = "AnomalyDetector"
    """An Anomaly Detector."""
    MAP = "Map"
    """A Map."""
    USER_DATA_FUNCTION = "UserDataFunction"
    """A User Data Function."""


class LibraryType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """A library type. Additional types may be added over time."""

    CUSTOM = "Custom"
    """Custom libraries"""
    EXTERNAL = "External"
    """External libraries"""


class PayloadType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The type of the definition part payload. Additional payload types may be added over time."""

    INLINE_BASE64 = "InlineBase64"
    """Inline Base 64."""
