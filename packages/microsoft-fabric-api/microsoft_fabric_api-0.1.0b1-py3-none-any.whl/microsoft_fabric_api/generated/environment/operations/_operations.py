# pylint: disable=too-many-lines,too-many-statements
# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.10.3, generator: @autorest/python@6.15.0)
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
from io import IOBase
import sys
from typing import Any, Callable, Dict, IO, Iterable, Iterator, Optional, Type, TypeVar, Union, cast, overload

from azure.core.exceptions import (
    ClientAuthenticationError,
    HttpResponseError,
    ResourceExistsError,
    ResourceNotFoundError,
    ResourceNotModifiedError,
    map_error,
)
from azure.core.paging import ItemPaged
from azure.core.pipeline import PipelineResponse
from azure.core.polling import LROPoller, NoPolling, PollingMethod
from azure.core.polling.base_polling import LROBasePolling
from azure.core.rest import HttpRequest, HttpResponse
from azure.core.tracing.decorator import distributed_trace
from azure.core.utils import case_insensitive_dict

from .. import models as _models
from .._serialization import Serializer

if sys.version_info >= (3, 9):
    from collections.abc import MutableMapping
else:
    from typing import MutableMapping  # type: ignore  # pylint: disable=ungrouped-imports
T = TypeVar("T")
ClsType = Optional[Callable[[PipelineResponse[HttpRequest, HttpResponse], T, Dict[str, Any]], Any]]

_SERIALIZER = Serializer()
_SERIALIZER.client_side_validation = False


def build_staging_get_spark_compute_preview_request(  # pylint: disable=name-too-long
    workspace_id: str, environment_id: str, *, preview: bool, **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    accept = _headers.pop("Accept", "application/json")

    # Construct URL
    _url = "/workspaces/{workspaceId}/environments/{environmentId}/staging/sparkcompute"
    path_format_arguments = {
        "workspaceId": _SERIALIZER.url("workspace_id", workspace_id, "str"),
        "environmentId": _SERIALIZER.url("environment_id", environment_id, "str"),
    }

    _url: str = _url.format(**path_format_arguments)  # type: ignore

    # Construct parameters
    _params["preview"] = _SERIALIZER.query("preview", preview, "bool")

    # Construct headers
    _headers["Accept"] = _SERIALIZER.header("accept", accept, "str")

    return HttpRequest(method="GET", url=_url, params=_params, headers=_headers, **kwargs)


def build_staging_update_spark_compute_preview_request(  # pylint: disable=name-too-long
    workspace_id: str, environment_id: str, *, preview: bool, **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    content_type: Optional[str] = kwargs.pop("content_type", _headers.pop("Content-Type", None))
    accept = _headers.pop("Accept", "application/json")

    # Construct URL
    _url = "/workspaces/{workspaceId}/environments/{environmentId}/staging/sparkcompute"
    path_format_arguments = {
        "workspaceId": _SERIALIZER.url("workspace_id", workspace_id, "str"),
        "environmentId": _SERIALIZER.url("environment_id", environment_id, "str"),
    }

    _url: str = _url.format(**path_format_arguments)  # type: ignore

    # Construct parameters
    _params["preview"] = _SERIALIZER.query("preview", preview, "bool")

    # Construct headers
    if content_type is not None:
        _headers["Content-Type"] = _SERIALIZER.header("content_type", content_type, "str")
    _headers["Accept"] = _SERIALIZER.header("accept", accept, "str")

    return HttpRequest(method="PATCH", url=_url, params=_params, headers=_headers, **kwargs)


def build_staging_get_spark_compute_request(
    workspace_id: str, environment_id: str, *, preview: bool, **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    accept = _headers.pop("Accept", "application/json")

    # Construct URL
    _url = "/workspaces/{workspaceId}/environments/{environmentId}/staging/sparkcompute"
    path_format_arguments = {
        "workspaceId": _SERIALIZER.url("workspace_id", workspace_id, "str"),
        "environmentId": _SERIALIZER.url("environment_id", environment_id, "str"),
    }

    _url: str = _url.format(**path_format_arguments)  # type: ignore

    # Construct parameters
    _params["preview"] = _SERIALIZER.query("preview", preview, "bool")

    # Construct headers
    _headers["Accept"] = _SERIALIZER.header("accept", accept, "str")

    return HttpRequest(method="GET", url=_url, params=_params, headers=_headers, **kwargs)


def build_staging_update_spark_compute_request(  # pylint: disable=name-too-long
    workspace_id: str, environment_id: str, *, preview: bool, **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    content_type: Optional[str] = kwargs.pop("content_type", _headers.pop("Content-Type", None))
    accept = _headers.pop("Accept", "application/json")

    # Construct URL
    _url = "/workspaces/{workspaceId}/environments/{environmentId}/staging/sparkcompute"
    path_format_arguments = {
        "workspaceId": _SERIALIZER.url("workspace_id", workspace_id, "str"),
        "environmentId": _SERIALIZER.url("environment_id", environment_id, "str"),
    }

    _url: str = _url.format(**path_format_arguments)  # type: ignore

    # Construct parameters
    _params["preview"] = _SERIALIZER.query("preview", preview, "bool")

    # Construct headers
    if content_type is not None:
        _headers["Content-Type"] = _SERIALIZER.header("content_type", content_type, "str")
    _headers["Accept"] = _SERIALIZER.header("accept", accept, "str")

    return HttpRequest(method="PATCH", url=_url, params=_params, headers=_headers, **kwargs)


def build_staging_list_libraries_request(
    workspace_id: str,
    environment_id: str,
    *,
    preview: bool,
    continuation_token_parameter: Optional[str] = None,
    **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    accept = _headers.pop("Accept", "application/json")

    # Construct URL
    _url = "/workspaces/{workspaceId}/environments/{environmentId}/staging/libraries"
    path_format_arguments = {
        "workspaceId": _SERIALIZER.url("workspace_id", workspace_id, "str"),
        "environmentId": _SERIALIZER.url("environment_id", environment_id, "str"),
    }

    _url: str = _url.format(**path_format_arguments)  # type: ignore

    # Construct parameters
    _params["preview"] = _SERIALIZER.query("preview", preview, "bool")
    if continuation_token_parameter is not None:
        _params["continuationToken"] = _SERIALIZER.query(
            "continuation_token_parameter", continuation_token_parameter, "str"
        )

    # Construct headers
    _headers["Accept"] = _SERIALIZER.header("accept", accept, "str")

    return HttpRequest(method="GET", url=_url, params=_params, headers=_headers, **kwargs)


def build_staging_upload_custom_library_preview_request(  # pylint: disable=name-too-long
    workspace_id: str, environment_id: str, **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})

    accept = _headers.pop("Accept", "application/json")

    # Construct URL
    _url = "/workspaces/{workspaceId}/environments/{environmentId}/staging/libraries"
    path_format_arguments = {
        "workspaceId": _SERIALIZER.url("workspace_id", workspace_id, "str"),
        "environmentId": _SERIALIZER.url("environment_id", environment_id, "str"),
    }

    _url: str = _url.format(**path_format_arguments)  # type: ignore

    # Construct headers
    _headers["Accept"] = _SERIALIZER.header("accept", accept, "str")

    return HttpRequest(method="POST", url=_url, headers=_headers, **kwargs)


def build_staging_delete_custom_library_preview_request(  # pylint: disable=name-too-long
    workspace_id: str, environment_id: str, *, library_to_delete: str, **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    accept = _headers.pop("Accept", "application/json")

    # Construct URL
    _url = "/workspaces/{workspaceId}/environments/{environmentId}/staging/libraries"
    path_format_arguments = {
        "workspaceId": _SERIALIZER.url("workspace_id", workspace_id, "str"),
        "environmentId": _SERIALIZER.url("environment_id", environment_id, "str"),
    }

    _url: str = _url.format(**path_format_arguments)  # type: ignore

    # Construct parameters
    _params["libraryToDelete"] = _SERIALIZER.query("library_to_delete", library_to_delete, "str")

    # Construct headers
    _headers["Accept"] = _SERIALIZER.header("accept", accept, "str")

    return HttpRequest(method="DELETE", url=_url, params=_params, headers=_headers, **kwargs)


def build_staging_list_libraries_preview_request(  # pylint: disable=name-too-long
    workspace_id: str, environment_id: str, *, preview: bool, **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    accept = _headers.pop("Accept", "application/json")

    # Construct URL
    _url = "/workspaces/{workspaceId}/environments/{environmentId}/staging/libraries"
    path_format_arguments = {
        "workspaceId": _SERIALIZER.url("workspace_id", workspace_id, "str"),
        "environmentId": _SERIALIZER.url("environment_id", environment_id, "str"),
    }

    _url: str = _url.format(**path_format_arguments)  # type: ignore

    # Construct parameters
    _params["preview"] = _SERIALIZER.query("preview", preview, "bool")

    # Construct headers
    _headers["Accept"] = _SERIALIZER.header("accept", accept, "str")

    return HttpRequest(method="GET", url=_url, params=_params, headers=_headers, **kwargs)


def build_staging_upload_custom_library_request(  # pylint: disable=name-too-long
    workspace_id: str, environment_id: str, library_name: str, **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})

    accept = _headers.pop("Accept", "application/json")

    # Construct URL
    _url = "/workspaces/{workspaceId}/environments/{environmentId}/staging/libraries/{libraryName}"
    path_format_arguments = {
        "workspaceId": _SERIALIZER.url("workspace_id", workspace_id, "str"),
        "environmentId": _SERIALIZER.url("environment_id", environment_id, "str"),
        "libraryName": _SERIALIZER.url("library_name", library_name, "str"),
    }

    _url: str = _url.format(**path_format_arguments)  # type: ignore

    # Construct headers
    _headers["Accept"] = _SERIALIZER.header("accept", accept, "str")

    return HttpRequest(method="POST", url=_url, headers=_headers, **kwargs)


def build_staging_delete_custom_library_request(  # pylint: disable=name-too-long
    workspace_id: str, environment_id: str, library_name: str, **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})

    accept = _headers.pop("Accept", "application/json")

    # Construct URL
    _url = "/workspaces/{workspaceId}/environments/{environmentId}/staging/libraries/{libraryName}"
    path_format_arguments = {
        "workspaceId": _SERIALIZER.url("workspace_id", workspace_id, "str"),
        "environmentId": _SERIALIZER.url("environment_id", environment_id, "str"),
        "libraryName": _SERIALIZER.url("library_name", library_name, "str"),
    }

    _url: str = _url.format(**path_format_arguments)  # type: ignore

    # Construct headers
    _headers["Accept"] = _SERIALIZER.header("accept", accept, "str")

    return HttpRequest(method="DELETE", url=_url, headers=_headers, **kwargs)


def build_staging_remove_external_library_request(  # pylint: disable=name-too-long
    workspace_id: str, environment_id: str, **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})

    content_type: Optional[str] = kwargs.pop("content_type", _headers.pop("Content-Type", None))
    accept = _headers.pop("Accept", "application/json")

    # Construct URL
    _url = "/workspaces/{workspaceId}/environments/{environmentId}/staging/libraries/removeExternalLibrary"
    path_format_arguments = {
        "workspaceId": _SERIALIZER.url("workspace_id", workspace_id, "str"),
        "environmentId": _SERIALIZER.url("environment_id", environment_id, "str"),
    }

    _url: str = _url.format(**path_format_arguments)  # type: ignore

    # Construct headers
    if content_type is not None:
        _headers["Content-Type"] = _SERIALIZER.header("content_type", content_type, "str")
    _headers["Accept"] = _SERIALIZER.header("accept", accept, "str")

    return HttpRequest(method="POST", url=_url, headers=_headers, **kwargs)


def build_staging_import_external_libraries_request(  # pylint: disable=name-too-long
    workspace_id: str, environment_id: str, **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})

    accept = _headers.pop("Accept", "application/json")

    # Construct URL
    _url = "/workspaces/{workspaceId}/environments/{environmentId}/staging/libraries/importExternalLibraries"
    path_format_arguments = {
        "workspaceId": _SERIALIZER.url("workspace_id", workspace_id, "str"),
        "environmentId": _SERIALIZER.url("environment_id", environment_id, "str"),
    }

    _url: str = _url.format(**path_format_arguments)  # type: ignore

    # Construct headers
    _headers["Accept"] = _SERIALIZER.header("accept", accept, "str")

    return HttpRequest(method="POST", url=_url, headers=_headers, **kwargs)


def build_staging_export_external_libraries_request(  # pylint: disable=name-too-long
    workspace_id: str, environment_id: str, **kwargs: Any
) -> HttpRequest:
    # Construct URL
    _url = "/workspaces/{workspaceId}/environments/{environmentId}/staging/libraries/exportExternalLibraries"
    path_format_arguments = {
        "workspaceId": _SERIALIZER.url("workspace_id", workspace_id, "str"),
        "environmentId": _SERIALIZER.url("environment_id", environment_id, "str"),
    }

    _url: str = _url.format(**path_format_arguments)  # type: ignore

    return HttpRequest(method="GET", url=_url, **kwargs)


def build_published_get_spark_compute_preview_request(  # pylint: disable=name-too-long
    workspace_id: str, environment_id: str, *, preview: bool, **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    accept = _headers.pop("Accept", "application/json")

    # Construct URL
    _url = "/workspaces/{workspaceId}/environments/{environmentId}/sparkcompute"
    path_format_arguments = {
        "workspaceId": _SERIALIZER.url("workspace_id", workspace_id, "str"),
        "environmentId": _SERIALIZER.url("environment_id", environment_id, "str"),
    }

    _url: str = _url.format(**path_format_arguments)  # type: ignore

    # Construct parameters
    _params["preview"] = _SERIALIZER.query("preview", preview, "bool")

    # Construct headers
    _headers["Accept"] = _SERIALIZER.header("accept", accept, "str")

    return HttpRequest(method="GET", url=_url, params=_params, headers=_headers, **kwargs)


def build_published_get_spark_compute_request(  # pylint: disable=name-too-long
    workspace_id: str, environment_id: str, *, preview: bool, **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    accept = _headers.pop("Accept", "application/json")

    # Construct URL
    _url = "/workspaces/{workspaceId}/environments/{environmentId}/sparkcompute"
    path_format_arguments = {
        "workspaceId": _SERIALIZER.url("workspace_id", workspace_id, "str"),
        "environmentId": _SERIALIZER.url("environment_id", environment_id, "str"),
    }

    _url: str = _url.format(**path_format_arguments)  # type: ignore

    # Construct parameters
    _params["preview"] = _SERIALIZER.query("preview", preview, "bool")

    # Construct headers
    _headers["Accept"] = _SERIALIZER.header("accept", accept, "str")

    return HttpRequest(method="GET", url=_url, params=_params, headers=_headers, **kwargs)


def build_published_list_libraries_request(
    workspace_id: str,
    environment_id: str,
    *,
    preview: bool,
    continuation_token_parameter: Optional[str] = None,
    **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    accept = _headers.pop("Accept", "application/json")

    # Construct URL
    _url = "/workspaces/{workspaceId}/environments/{environmentId}/libraries"
    path_format_arguments = {
        "workspaceId": _SERIALIZER.url("workspace_id", workspace_id, "str"),
        "environmentId": _SERIALIZER.url("environment_id", environment_id, "str"),
    }

    _url: str = _url.format(**path_format_arguments)  # type: ignore

    # Construct parameters
    if continuation_token_parameter is not None:
        _params["continuationToken"] = _SERIALIZER.query(
            "continuation_token_parameter", continuation_token_parameter, "str"
        )
    _params["preview"] = _SERIALIZER.query("preview", preview, "bool")

    # Construct headers
    _headers["Accept"] = _SERIALIZER.header("accept", accept, "str")

    return HttpRequest(method="GET", url=_url, params=_params, headers=_headers, **kwargs)


def build_published_list_libraries_preview_request(  # pylint: disable=name-too-long
    workspace_id: str, environment_id: str, *, preview: bool, **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    accept = _headers.pop("Accept", "application/json")

    # Construct URL
    _url = "/workspaces/{workspaceId}/environments/{environmentId}/libraries"
    path_format_arguments = {
        "workspaceId": _SERIALIZER.url("workspace_id", workspace_id, "str"),
        "environmentId": _SERIALIZER.url("environment_id", environment_id, "str"),
    }

    _url: str = _url.format(**path_format_arguments)  # type: ignore

    # Construct parameters
    _params["preview"] = _SERIALIZER.query("preview", preview, "bool")

    # Construct headers
    _headers["Accept"] = _SERIALIZER.header("accept", accept, "str")

    return HttpRequest(method="GET", url=_url, params=_params, headers=_headers, **kwargs)


def build_published_export_external_libraries_request(  # pylint: disable=name-too-long
    workspace_id: str, environment_id: str, **kwargs: Any
) -> HttpRequest:
    # Construct URL
    _url = "/workspaces/{workspaceId}/environments/{environmentId}/libraries/exportExternalLibraries"
    path_format_arguments = {
        "workspaceId": _SERIALIZER.url("workspace_id", workspace_id, "str"),
        "environmentId": _SERIALIZER.url("environment_id", environment_id, "str"),
    }

    _url: str = _url.format(**path_format_arguments)  # type: ignore

    return HttpRequest(method="GET", url=_url, **kwargs)


def build_items_list_environments_request(
    workspace_id: str, *, continuation_token_parameter: Optional[str] = None, **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    accept = _headers.pop("Accept", "application/json")

    # Construct URL
    _url = "/workspaces/{workspaceId}/environments"
    path_format_arguments = {
        "workspaceId": _SERIALIZER.url("workspace_id", workspace_id, "str"),
    }

    _url: str = _url.format(**path_format_arguments)  # type: ignore

    # Construct parameters
    if continuation_token_parameter is not None:
        _params["continuationToken"] = _SERIALIZER.query(
            "continuation_token_parameter", continuation_token_parameter, "str"
        )

    # Construct headers
    _headers["Accept"] = _SERIALIZER.header("accept", accept, "str")

    return HttpRequest(method="GET", url=_url, params=_params, headers=_headers, **kwargs)


def build_items_create_environment_request(workspace_id: str, **kwargs: Any) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})

    content_type: Optional[str] = kwargs.pop("content_type", _headers.pop("Content-Type", None))
    accept = _headers.pop("Accept", "application/json")

    # Construct URL
    _url = "/workspaces/{workspaceId}/environments"
    path_format_arguments = {
        "workspaceId": _SERIALIZER.url("workspace_id", workspace_id, "str"),
    }

    _url: str = _url.format(**path_format_arguments)  # type: ignore

    # Construct headers
    if content_type is not None:
        _headers["Content-Type"] = _SERIALIZER.header("content_type", content_type, "str")
    _headers["Accept"] = _SERIALIZER.header("accept", accept, "str")

    return HttpRequest(method="POST", url=_url, headers=_headers, **kwargs)


def build_items_get_environment_request(workspace_id: str, environment_id: str, **kwargs: Any) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})

    accept = _headers.pop("Accept", "application/json")

    # Construct URL
    _url = "/workspaces/{workspaceId}/environments/{environmentId}"
    path_format_arguments = {
        "workspaceId": _SERIALIZER.url("workspace_id", workspace_id, "str"),
        "environmentId": _SERIALIZER.url("environment_id", environment_id, "str"),
    }

    _url: str = _url.format(**path_format_arguments)  # type: ignore

    # Construct headers
    _headers["Accept"] = _SERIALIZER.header("accept", accept, "str")

    return HttpRequest(method="GET", url=_url, headers=_headers, **kwargs)


def build_items_update_environment_request(workspace_id: str, environment_id: str, **kwargs: Any) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})

    content_type: Optional[str] = kwargs.pop("content_type", _headers.pop("Content-Type", None))
    accept = _headers.pop("Accept", "application/json")

    # Construct URL
    _url = "/workspaces/{workspaceId}/environments/{environmentId}"
    path_format_arguments = {
        "workspaceId": _SERIALIZER.url("workspace_id", workspace_id, "str"),
        "environmentId": _SERIALIZER.url("environment_id", environment_id, "str"),
    }

    _url: str = _url.format(**path_format_arguments)  # type: ignore

    # Construct headers
    if content_type is not None:
        _headers["Content-Type"] = _SERIALIZER.header("content_type", content_type, "str")
    _headers["Accept"] = _SERIALIZER.header("accept", accept, "str")

    return HttpRequest(method="PATCH", url=_url, headers=_headers, **kwargs)


def build_items_delete_environment_request(workspace_id: str, environment_id: str, **kwargs: Any) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})

    accept = _headers.pop("Accept", "application/json")

    # Construct URL
    _url = "/workspaces/{workspaceId}/environments/{environmentId}"
    path_format_arguments = {
        "workspaceId": _SERIALIZER.url("workspace_id", workspace_id, "str"),
        "environmentId": _SERIALIZER.url("environment_id", environment_id, "str"),
    }

    _url: str = _url.format(**path_format_arguments)  # type: ignore

    # Construct headers
    _headers["Accept"] = _SERIALIZER.header("accept", accept, "str")

    return HttpRequest(method="DELETE", url=_url, headers=_headers, **kwargs)


def build_items_get_environment_definition_request(  # pylint: disable=name-too-long
    workspace_id: str, environment_id: str, *, format: Optional[str] = None, **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    accept = _headers.pop("Accept", "application/json")

    # Construct URL
    _url = "/workspaces/{workspaceId}/environments/{environmentId}/getDefinition"
    path_format_arguments = {
        "workspaceId": _SERIALIZER.url("workspace_id", workspace_id, "str"),
        "environmentId": _SERIALIZER.url("environment_id", environment_id, "str"),
    }

    _url: str = _url.format(**path_format_arguments)  # type: ignore

    # Construct parameters
    if format is not None:
        _params["format"] = _SERIALIZER.query("format", format, "str")

    # Construct headers
    _headers["Accept"] = _SERIALIZER.header("accept", accept, "str")

    return HttpRequest(method="POST", url=_url, params=_params, headers=_headers, **kwargs)


def build_items_update_environment_definition_request(  # pylint: disable=name-too-long
    workspace_id: str, environment_id: str, *, update_metadata: Optional[bool] = None, **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    content_type: Optional[str] = kwargs.pop("content_type", _headers.pop("Content-Type", None))
    accept = _headers.pop("Accept", "application/json")

    # Construct URL
    _url = "/workspaces/{workspaceId}/environments/{environmentId}/updateDefinition"
    path_format_arguments = {
        "workspaceId": _SERIALIZER.url("workspace_id", workspace_id, "str"),
        "environmentId": _SERIALIZER.url("environment_id", environment_id, "str"),
    }

    _url: str = _url.format(**path_format_arguments)  # type: ignore

    # Construct parameters
    if update_metadata is not None:
        _params["updateMetadata"] = _SERIALIZER.query("update_metadata", update_metadata, "bool")

    # Construct headers
    if content_type is not None:
        _headers["Content-Type"] = _SERIALIZER.header("content_type", content_type, "str")
    _headers["Accept"] = _SERIALIZER.header("accept", accept, "str")

    return HttpRequest(method="POST", url=_url, params=_params, headers=_headers, **kwargs)


def build_items_publish_environment_request(
    workspace_id: str, environment_id: str, *, preview: bool, **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    accept = _headers.pop("Accept", "application/json")

    # Construct URL
    _url = "/workspaces/{workspaceId}/environments/{environmentId}/staging/publish"
    path_format_arguments = {
        "workspaceId": _SERIALIZER.url("workspace_id", workspace_id, "str"),
        "environmentId": _SERIALIZER.url("environment_id", environment_id, "str"),
    }

    _url: str = _url.format(**path_format_arguments)  # type: ignore

    # Construct parameters
    _params["preview"] = _SERIALIZER.query("preview", preview, "bool")

    # Construct headers
    _headers["Accept"] = _SERIALIZER.header("accept", accept, "str")

    return HttpRequest(method="POST", url=_url, params=_params, headers=_headers, **kwargs)


def build_items_publish_environment_preview_request(  # pylint: disable=name-too-long
    workspace_id: str, environment_id: str, *, preview: bool, **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    accept = _headers.pop("Accept", "application/json")

    # Construct URL
    _url = "/workspaces/{workspaceId}/environments/{environmentId}/staging/publish"
    path_format_arguments = {
        "workspaceId": _SERIALIZER.url("workspace_id", workspace_id, "str"),
        "environmentId": _SERIALIZER.url("environment_id", environment_id, "str"),
    }

    _url: str = _url.format(**path_format_arguments)  # type: ignore

    # Construct parameters
    _params["preview"] = _SERIALIZER.query("preview", preview, "bool")

    # Construct headers
    _headers["Accept"] = _SERIALIZER.header("accept", accept, "str")

    return HttpRequest(method="POST", url=_url, params=_params, headers=_headers, **kwargs)


def build_items_cancel_publish_environment_request(  # pylint: disable=name-too-long
    workspace_id: str, environment_id: str, **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})

    accept = _headers.pop("Accept", "application/json")

    # Construct URL
    _url = "/workspaces/{workspaceId}/environments/{environmentId}/staging/cancelPublish"
    path_format_arguments = {
        "workspaceId": _SERIALIZER.url("workspace_id", workspace_id, "str"),
        "environmentId": _SERIALIZER.url("environment_id", environment_id, "str"),
    }

    _url: str = _url.format(**path_format_arguments)  # type: ignore

    # Construct headers
    _headers["Accept"] = _SERIALIZER.header("accept", accept, "str")

    return HttpRequest(method="POST", url=_url, headers=_headers, **kwargs)


class StagingOperations:
    """
    .. warning::
        **DO NOT** instantiate this class directly.

        Instead, you should access the following operations through
        :class:`~microsoft.fabric.api.environment.FabricEnvironmentClient`'s
        :attr:`staging` attribute.
    """

    models = _models

    def __init__(self, *args, **kwargs):
        input_args = list(args)
        self._client = input_args.pop(0) if input_args else kwargs.pop("client")
        self._config = input_args.pop(0) if input_args else kwargs.pop("config")
        self._serialize = input_args.pop(0) if input_args else kwargs.pop("serializer")
        self._deserialize = input_args.pop(0) if input_args else kwargs.pop("deserializer")

    @distributed_trace
    def get_spark_compute_preview(
        self, workspace_id: str, environment_id: str, *, preview: bool, **kwargs: Any
    ) -> _models.EnvironmentSparkComputePreview:
        """Get environment staging spark compute.

        ..

           [!NOTE]
           This API is part of a Preview release and is provided for evaluation and development
        purposes only. It may change based on feedback and is not recommended for production use. This
        preview API will be deprecated on **March 1, 2026**\\ , and replaced by a stable version,
        available `here </rest/api/fabric/environment/staging/get-spark-compute>`_. The new version
        introduces breaking changes and is not backward compatible.
           **When calling this API, callers must specify ``true`` as the value for the query parameter
        ``preview``.**


        Deprecation Notice
        ------------------

        A new query parameter ``preview`` has been introduced to facilitate this transition:


        * The ``preview`` query parameter currently defaults to ``true``.
        * Set the value of the ``preview`` query parameter to ``false`` to use the stable Release
        version of this API.
        * Starting March 1, 2026, the default value for ``preview`` will change to ``false``.

        To ensure compatibility, explicitly set the ``preview`` parameter to your desired value (\\
        ``true`` or ``false``\\ ).

        It is recommended to migrate your integration to use the Release version as soon as possible by
        specifying ``false`` for the ``preview`` query parameter (\\ **the default value for the
        ``preview`` query parameter will be set to ``false`` on API's deprecation date**\\ ).

        The following incompatible changes were introduced in the Release version:


        * Response property ``sparkProperties``\\ 's type was changed from ``object`` to the list of
        ``SparkProperty``.

        Permissions
        -----------

        Read permission for the environment item.

        Required Delegated Scopes
        -------------------------

        Item.Read.All or Item.ReadWrite.All or Environment.Read.All or Environment.ReadWrite.All

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param workspace_id: The workspace ID. Required.
        :type workspace_id: str
        :param environment_id: The environment ID. Required.
        :type environment_id: str
        :keyword preview: This parameter specifies which version of the API to use. Set to ``true`` to
         use the preview version described on this page, or to ``false`` to use the Release version
         detailed `here </rest/api/fabric/environment/staging/get-spark-compute>`_.
         Starting March 1, 2026, the default value for ``preview`` will change to ``false``. Required.
        :paramtype preview: bool
        :return: EnvironmentSparkComputePreview
        :rtype: ~microsoft.fabric.api.environment.models.EnvironmentSparkComputePreview
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        error_map: MutableMapping[int, Type[HttpResponseError]] = {
            401: ClientAuthenticationError,
            404: ResourceNotFoundError,
            409: ResourceExistsError,
            304: ResourceNotModifiedError,
        }
        error_map.update(kwargs.pop("error_map", {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls: ClsType[_models.EnvironmentSparkComputePreview] = kwargs.pop("cls", None)

        _request = build_staging_get_spark_compute_preview_request(
            workspace_id=workspace_id,
            environment_id=environment_id,
            preview=preview,
            headers=_headers,
            params=_params,
        )
        _request.url = self._client.format_url(_request.url)

        _stream = False
        pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
            _request, stream=_stream, **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize.failsafe_deserialize(_models.ErrorResponse, pipeline_response)
            raise HttpResponseError(response=response, model=error)

        deserialized = self._deserialize("EnvironmentSparkComputePreview", pipeline_response.http_response)

        if cls:
            return cls(pipeline_response, deserialized, {})  # type: ignore

        return deserialized  # type: ignore

    @overload
    def update_spark_compute_preview(
        self,
        workspace_id: str,
        environment_id: str,
        update_environment_spark_compute_request: _models.UpdateEnvironmentSparkComputeRequestPreview,
        *,
        preview: bool,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> _models.EnvironmentSparkComputePreview:
        """Update environment staging spark compute. If you want to delete a spark property, set its value
        as null.

        ..

           [!NOTE]
           This API is part of a Preview release and is provided for evaluation and development
        purposes only. It may change based on feedback and is not recommended for production use. This
        preview API will be deprecated on **March 1, 2026**\\ , and replaced by a stable version,
        available `here </rest/api/fabric/environment/staging/update-spark-compute>`_. The new version
        introduces breaking changes and is not backward compatible.
           **When calling this API, callers must specify ``true`` as the value for the query parameter
        ``preview``.**


        Deprecation Notice
        ------------------

        A new query parameter ``preview`` has been introduced to facilitate this transition:


        * The ``preview`` query parameter currently defaults to ``true``.
        * Set the value of the ``preview`` query parameter to ``false`` to use the stable Release
        version of this API.
        * Starting March 1, 2026, the default value for ``preview`` will change to ``false``.

        To ensure compatibility, explicitly set the ``preview`` parameter to your desired value (\\
        ``true`` or ``false``\\ ).

        It is recommended to migrate your integration to use the Release version as soon as possible by
        specifying ``false`` for the ``preview`` query parameter (\\ **the default value for the
        ``preview`` query parameter will be set to ``false`` on API's deprecation date**\\ ).

        The following incompatible changes were introduced in the Release version:


        * Request and response property ``sparkProperties``\\ 's type was changed from ``object`` to
        the list of ``SparkProperty``.

        Permissions
        -----------

        Write permission for the environment item.

        Required Delegated Scopes
        -------------------------

        Item.ReadWrite.All or Environment.ReadWrite.All

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param workspace_id: The workspace ID. Required.
        :type workspace_id: str
        :param environment_id: The environment ID. Required.
        :type environment_id: str
        :param update_environment_spark_compute_request: Update environment spark compute request
         payload. Required.
        :type update_environment_spark_compute_request:
         ~microsoft.fabric.api.environment.models.UpdateEnvironmentSparkComputeRequestPreview
        :keyword preview: This parameter specifies which version of the API to use. Set to ``true`` to
         use the preview version described on this page, or to ``false`` to use the Release version
         detailed `here </rest/api/fabric/environment/staging/update-spark-compute>`_.
         Starting March 1, 2026, the default value for ``preview`` will change to ``false``. Required.
        :paramtype preview: bool
        :keyword content_type: Body Parameter content-type. Content type parameter for JSON body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: EnvironmentSparkComputePreview
        :rtype: ~microsoft.fabric.api.environment.models.EnvironmentSparkComputePreview
        :raises ~azure.core.exceptions.HttpResponseError:
        """

    @overload
    def update_spark_compute_preview(
        self,
        workspace_id: str,
        environment_id: str,
        update_environment_spark_compute_request: IO[bytes],
        *,
        preview: bool,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> _models.EnvironmentSparkComputePreview:
        """Update environment staging spark compute. If you want to delete a spark property, set its value
        as null.

        ..

           [!NOTE]
           This API is part of a Preview release and is provided for evaluation and development
        purposes only. It may change based on feedback and is not recommended for production use. This
        preview API will be deprecated on **March 1, 2026**\\ , and replaced by a stable version,
        available `here </rest/api/fabric/environment/staging/update-spark-compute>`_. The new version
        introduces breaking changes and is not backward compatible.
           **When calling this API, callers must specify ``true`` as the value for the query parameter
        ``preview``.**


        Deprecation Notice
        ------------------

        A new query parameter ``preview`` has been introduced to facilitate this transition:


        * The ``preview`` query parameter currently defaults to ``true``.
        * Set the value of the ``preview`` query parameter to ``false`` to use the stable Release
        version of this API.
        * Starting March 1, 2026, the default value for ``preview`` will change to ``false``.

        To ensure compatibility, explicitly set the ``preview`` parameter to your desired value (\\
        ``true`` or ``false``\\ ).

        It is recommended to migrate your integration to use the Release version as soon as possible by
        specifying ``false`` for the ``preview`` query parameter (\\ **the default value for the
        ``preview`` query parameter will be set to ``false`` on API's deprecation date**\\ ).

        The following incompatible changes were introduced in the Release version:


        * Request and response property ``sparkProperties``\\ 's type was changed from ``object`` to
        the list of ``SparkProperty``.

        Permissions
        -----------

        Write permission for the environment item.

        Required Delegated Scopes
        -------------------------

        Item.ReadWrite.All or Environment.ReadWrite.All

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param workspace_id: The workspace ID. Required.
        :type workspace_id: str
        :param environment_id: The environment ID. Required.
        :type environment_id: str
        :param update_environment_spark_compute_request: Update environment spark compute request
         payload. Required.
        :type update_environment_spark_compute_request: IO[bytes]
        :keyword preview: This parameter specifies which version of the API to use. Set to ``true`` to
         use the preview version described on this page, or to ``false`` to use the Release version
         detailed `here </rest/api/fabric/environment/staging/update-spark-compute>`_.
         Starting March 1, 2026, the default value for ``preview`` will change to ``false``. Required.
        :paramtype preview: bool
        :keyword content_type: Body Parameter content-type. Content type parameter for binary body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: EnvironmentSparkComputePreview
        :rtype: ~microsoft.fabric.api.environment.models.EnvironmentSparkComputePreview
        :raises ~azure.core.exceptions.HttpResponseError:
        """

    @distributed_trace
    def update_spark_compute_preview(
        self,
        workspace_id: str,
        environment_id: str,
        update_environment_spark_compute_request: Union[_models.UpdateEnvironmentSparkComputeRequestPreview, IO[bytes]],
        *,
        preview: bool,
        **kwargs: Any
    ) -> _models.EnvironmentSparkComputePreview:
        """Update environment staging spark compute. If you want to delete a spark property, set its value
        as null.

        ..

           [!NOTE]
           This API is part of a Preview release and is provided for evaluation and development
        purposes only. It may change based on feedback and is not recommended for production use. This
        preview API will be deprecated on **March 1, 2026**\\ , and replaced by a stable version,
        available `here </rest/api/fabric/environment/staging/update-spark-compute>`_. The new version
        introduces breaking changes and is not backward compatible.
           **When calling this API, callers must specify ``true`` as the value for the query parameter
        ``preview``.**


        Deprecation Notice
        ------------------

        A new query parameter ``preview`` has been introduced to facilitate this transition:


        * The ``preview`` query parameter currently defaults to ``true``.
        * Set the value of the ``preview`` query parameter to ``false`` to use the stable Release
        version of this API.
        * Starting March 1, 2026, the default value for ``preview`` will change to ``false``.

        To ensure compatibility, explicitly set the ``preview`` parameter to your desired value (\\
        ``true`` or ``false``\\ ).

        It is recommended to migrate your integration to use the Release version as soon as possible by
        specifying ``false`` for the ``preview`` query parameter (\\ **the default value for the
        ``preview`` query parameter will be set to ``false`` on API's deprecation date**\\ ).

        The following incompatible changes were introduced in the Release version:


        * Request and response property ``sparkProperties``\\ 's type was changed from ``object`` to
        the list of ``SparkProperty``.

        Permissions
        -----------

        Write permission for the environment item.

        Required Delegated Scopes
        -------------------------

        Item.ReadWrite.All or Environment.ReadWrite.All

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param workspace_id: The workspace ID. Required.
        :type workspace_id: str
        :param environment_id: The environment ID. Required.
        :type environment_id: str
        :param update_environment_spark_compute_request: Update environment spark compute request
         payload. Is either a UpdateEnvironmentSparkComputeRequestPreview type or a IO[bytes] type.
         Required.
        :type update_environment_spark_compute_request:
         ~microsoft.fabric.api.environment.models.UpdateEnvironmentSparkComputeRequestPreview or
         IO[bytes]
        :keyword preview: This parameter specifies which version of the API to use. Set to ``true`` to
         use the preview version described on this page, or to ``false`` to use the Release version
         detailed `here </rest/api/fabric/environment/staging/update-spark-compute>`_.
         Starting March 1, 2026, the default value for ``preview`` will change to ``false``. Required.
        :paramtype preview: bool
        :return: EnvironmentSparkComputePreview
        :rtype: ~microsoft.fabric.api.environment.models.EnvironmentSparkComputePreview
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        error_map: MutableMapping[int, Type[HttpResponseError]] = {
            401: ClientAuthenticationError,
            404: ResourceNotFoundError,
            409: ResourceExistsError,
            304: ResourceNotModifiedError,
        }
        error_map.update(kwargs.pop("error_map", {}) or {})

        _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
        _params = kwargs.pop("params", {}) or {}

        content_type: Optional[str] = kwargs.pop("content_type", _headers.pop("Content-Type", None))
        cls: ClsType[_models.EnvironmentSparkComputePreview] = kwargs.pop("cls", None)

        content_type = content_type or "application/json"
        _json = None
        _content = None
        if isinstance(update_environment_spark_compute_request, (IOBase, bytes)):
            _content = update_environment_spark_compute_request
        else:
            _json = self._serialize.body(
                update_environment_spark_compute_request, "UpdateEnvironmentSparkComputeRequestPreview"
            )

        _request = build_staging_update_spark_compute_preview_request(
            workspace_id=workspace_id,
            environment_id=environment_id,
            preview=preview,
            content_type=content_type,
            json=_json,
            content=_content,
            headers=_headers,
            params=_params,
        )
        _request.url = self._client.format_url(_request.url)

        _stream = False
        pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
            _request, stream=_stream, **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize.failsafe_deserialize(_models.ErrorResponse, pipeline_response)
            raise HttpResponseError(response=response, model=error)

        deserialized = self._deserialize("EnvironmentSparkComputePreview", pipeline_response.http_response)

        if cls:
            return cls(pipeline_response, deserialized, {})  # type: ignore

        return deserialized  # type: ignore

    @distributed_trace
    def get_spark_compute(
        self, workspace_id: str, environment_id: str, *, preview: bool, **kwargs: Any
    ) -> _models.EnvironmentSparkCompute:
        """Get environment staging spark compute.

        ..

           [!NOTE]
           This API is a release version of a preview version due to be deprecated on March 1, 2026.
           **When calling this API - callers must set the query parameter ``preview`` to the value
        ``false``\\ **.


        Permissions
        -----------

        Read permission for the environment item.

        Required Delegated Scopes
        -------------------------

        Item.Read.All or Item.ReadWrite.All or Environment.Read.All or Environment.ReadWrite.All

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param workspace_id: The workspace ID. Required.
        :type workspace_id: str
        :param environment_id: The environment ID. Required.
        :type environment_id: str
        :keyword preview: This parameter specifies which version of the API to use. Set to ``false`` to
         use the release version. Required.
        :paramtype preview: bool
        :return: EnvironmentSparkCompute
        :rtype: ~microsoft.fabric.api.environment.models.EnvironmentSparkCompute
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        error_map: MutableMapping[int, Type[HttpResponseError]] = {
            401: ClientAuthenticationError,
            404: ResourceNotFoundError,
            409: ResourceExistsError,
            304: ResourceNotModifiedError,
        }
        error_map.update(kwargs.pop("error_map", {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls: ClsType[_models.EnvironmentSparkCompute] = kwargs.pop("cls", None)

        _request = build_staging_get_spark_compute_request(
            workspace_id=workspace_id,
            environment_id=environment_id,
            preview=preview,
            headers=_headers,
            params=_params,
        )
        _request.url = self._client.format_url(_request.url)

        _stream = False
        pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
            _request, stream=_stream, **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize.failsafe_deserialize(_models.ErrorResponse, pipeline_response)
            raise HttpResponseError(response=response, model=error)

        deserialized = self._deserialize("EnvironmentSparkCompute", pipeline_response.http_response)

        if cls:
            return cls(pipeline_response, deserialized, {})  # type: ignore

        return deserialized  # type: ignore

    @overload
    def update_spark_compute(
        self,
        workspace_id: str,
        environment_id: str,
        update_environment_spark_compute_request: _models.UpdateEnvironmentSparkComputeRequest,
        *,
        preview: bool,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> _models.EnvironmentSparkCompute:
        """Update environment staging spark compute. If you want to delete a spark property, set its value
        as null.

        ..

           [!NOTE]
           This API is a release version of a preview version due to be deprecated on March 1, 2026.
           **When calling this API - callers must set the query parameter ``preview`` to the value
        ``false``\\ **


        Permissions
        -----------

        Write permission for the environment item.

        Required Delegated Scopes
        -------------------------

        Item.ReadWrite.All or Environment.ReadWrite.All

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param workspace_id: The workspace ID. Required.
        :type workspace_id: str
        :param environment_id: The environment ID. Required.
        :type environment_id: str
        :param update_environment_spark_compute_request: Update environment spark compute request
         payload. Required.
        :type update_environment_spark_compute_request:
         ~microsoft.fabric.api.environment.models.UpdateEnvironmentSparkComputeRequest
        :keyword preview: This parameter specifies which version of the API to use. Set to ``false`` to
         use the release version. Required.
        :paramtype preview: bool
        :keyword content_type: Body Parameter content-type. Content type parameter for JSON body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: EnvironmentSparkCompute
        :rtype: ~microsoft.fabric.api.environment.models.EnvironmentSparkCompute
        :raises ~azure.core.exceptions.HttpResponseError:
        """

    @overload
    def update_spark_compute(
        self,
        workspace_id: str,
        environment_id: str,
        update_environment_spark_compute_request: IO[bytes],
        *,
        preview: bool,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> _models.EnvironmentSparkCompute:
        """Update environment staging spark compute. If you want to delete a spark property, set its value
        as null.

        ..

           [!NOTE]
           This API is a release version of a preview version due to be deprecated on March 1, 2026.
           **When calling this API - callers must set the query parameter ``preview`` to the value
        ``false``\\ **


        Permissions
        -----------

        Write permission for the environment item.

        Required Delegated Scopes
        -------------------------

        Item.ReadWrite.All or Environment.ReadWrite.All

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param workspace_id: The workspace ID. Required.
        :type workspace_id: str
        :param environment_id: The environment ID. Required.
        :type environment_id: str
        :param update_environment_spark_compute_request: Update environment spark compute request
         payload. Required.
        :type update_environment_spark_compute_request: IO[bytes]
        :keyword preview: This parameter specifies which version of the API to use. Set to ``false`` to
         use the release version. Required.
        :paramtype preview: bool
        :keyword content_type: Body Parameter content-type. Content type parameter for binary body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: EnvironmentSparkCompute
        :rtype: ~microsoft.fabric.api.environment.models.EnvironmentSparkCompute
        :raises ~azure.core.exceptions.HttpResponseError:
        """

    @distributed_trace
    def update_spark_compute(
        self,
        workspace_id: str,
        environment_id: str,
        update_environment_spark_compute_request: Union[_models.UpdateEnvironmentSparkComputeRequest, IO[bytes]],
        *,
        preview: bool,
        **kwargs: Any
    ) -> _models.EnvironmentSparkCompute:
        """Update environment staging spark compute. If you want to delete a spark property, set its value
        as null.

        ..

           [!NOTE]
           This API is a release version of a preview version due to be deprecated on March 1, 2026.
           **When calling this API - callers must set the query parameter ``preview`` to the value
        ``false``\\ **


        Permissions
        -----------

        Write permission for the environment item.

        Required Delegated Scopes
        -------------------------

        Item.ReadWrite.All or Environment.ReadWrite.All

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param workspace_id: The workspace ID. Required.
        :type workspace_id: str
        :param environment_id: The environment ID. Required.
        :type environment_id: str
        :param update_environment_spark_compute_request: Update environment spark compute request
         payload. Is either a UpdateEnvironmentSparkComputeRequest type or a IO[bytes] type. Required.
        :type update_environment_spark_compute_request:
         ~microsoft.fabric.api.environment.models.UpdateEnvironmentSparkComputeRequest or IO[bytes]
        :keyword preview: This parameter specifies which version of the API to use. Set to ``false`` to
         use the release version. Required.
        :paramtype preview: bool
        :return: EnvironmentSparkCompute
        :rtype: ~microsoft.fabric.api.environment.models.EnvironmentSparkCompute
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        error_map: MutableMapping[int, Type[HttpResponseError]] = {
            401: ClientAuthenticationError,
            404: ResourceNotFoundError,
            409: ResourceExistsError,
            304: ResourceNotModifiedError,
        }
        error_map.update(kwargs.pop("error_map", {}) or {})

        _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
        _params = kwargs.pop("params", {}) or {}

        content_type: Optional[str] = kwargs.pop("content_type", _headers.pop("Content-Type", None))
        cls: ClsType[_models.EnvironmentSparkCompute] = kwargs.pop("cls", None)

        content_type = content_type or "application/json"
        _json = None
        _content = None
        if isinstance(update_environment_spark_compute_request, (IOBase, bytes)):
            _content = update_environment_spark_compute_request
        else:
            _json = self._serialize.body(
                update_environment_spark_compute_request, "UpdateEnvironmentSparkComputeRequest"
            )

        _request = build_staging_update_spark_compute_request(
            workspace_id=workspace_id,
            environment_id=environment_id,
            preview=preview,
            content_type=content_type,
            json=_json,
            content=_content,
            headers=_headers,
            params=_params,
        )
        _request.url = self._client.format_url(_request.url)

        _stream = False
        pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
            _request, stream=_stream, **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize.failsafe_deserialize(_models.ErrorResponse, pipeline_response)
            raise HttpResponseError(response=response, model=error)

        deserialized = self._deserialize("EnvironmentSparkCompute", pipeline_response.http_response)

        if cls:
            return cls(pipeline_response, deserialized, {})  # type: ignore

        return deserialized  # type: ignore

    @distributed_trace
    def list_libraries(
        self,
        workspace_id: str,
        environment_id: str,
        *,
        preview: bool,
        continuation_token_parameter: Optional[str] = None,
        **kwargs: Any
    ) -> Iterable["_models.Library"]:
        """Get a list of libraries staged into environment.

        ..

           [!NOTE]
           This API is a release version of a preview version due to be deprecated on March 1, 2026.
           **When calling this API - callers must set the query parameter ``preview`` to the value
        ``false``\\ **


        This API supports `pagination </rest/api/fabric/articles/pagination>`_.

        Permissions
        -----------

        Read permission for the environment item.

        Required Delegated Scopes
        -------------------------

        Item.Read.All or Item.ReadWrite.All or Environment.Read.All or Environment.ReadWrite.All

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param workspace_id: The workspace ID. Required.
        :type workspace_id: str
        :param environment_id: The environment ID. Required.
        :type environment_id: str
        :keyword preview: This parameter specifies which version of the API to use. Set to ``false`` to
         use the release version. Required.
        :paramtype preview: bool
        :keyword continuation_token_parameter: Token to retrieve the next page of results, if
         available. Default value is None.
        :paramtype continuation_token_parameter: str
        :return: An iterator like instance of Library
        :rtype: ~azure.core.paging.ItemPaged[~microsoft.fabric.api.environment.models.Library]
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls: ClsType[_models._models.Libraries] = kwargs.pop("cls", None)  # pylint: disable=protected-access

        error_map: MutableMapping[int, Type[HttpResponseError]] = {
            401: ClientAuthenticationError,
            404: ResourceNotFoundError,
            409: ResourceExistsError,
            304: ResourceNotModifiedError,
        }
        error_map.update(kwargs.pop("error_map", {}) or {})

        def prepare_request(next_link=None):
            if not next_link:

                _request = build_staging_list_libraries_request(
                    workspace_id=workspace_id,
                    environment_id=environment_id,
                    preview=preview,
                    continuation_token_parameter=continuation_token_parameter,
                    headers=_headers,
                    params=_params,
                )
                _request.url = self._client.format_url(_request.url)

            else:
                _request = HttpRequest("GET", next_link)
                _request.url = self._client.format_url(_request.url)

            return _request

        def extract_data(pipeline_response):
            deserialized = self._deserialize(
                _models._models.Libraries, pipeline_response  # pylint: disable=protected-access
            )
            list_of_elem = deserialized.libraries
            if cls:
                list_of_elem = cls(list_of_elem)  # type: ignore
            return deserialized.continuation_uri or None, iter(list_of_elem)

        def get_next(next_link=None):
            _request = prepare_request(next_link)

            _stream = False
            pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
                _request, stream=_stream, **kwargs
            )
            response = pipeline_response.http_response

            if response.status_code not in [200]:
                map_error(status_code=response.status_code, response=response, error_map=error_map)
                error = self._deserialize.failsafe_deserialize(_models.ErrorResponse, pipeline_response)
                raise HttpResponseError(response=response, model=error)

            return pipeline_response

        return ItemPaged(get_next, extract_data)

    @distributed_trace
    def upload_custom_library_preview(  # pylint: disable=inconsistent-return-statements
        self, workspace_id: str, environment_id: str, **kwargs: Any
    ) -> None:
        """Upload spark library into environment.

        ..

           [!NOTE]
           This API is part of a Preview release and is provided for evaluation and development
        purposes only. It may change based on feedback and is not recommended for production use. This
        preview API will be deprecated on **March 1, 2026**\\ , and replaced by a stable version,
        available `here </rest/api/fabric/environment/staging/upload-custom-library>`_.
           The new version introduces breaking changes and is not backward compatible.**


        Deprecation Notice
        ------------------

        It is recommended to migrate your integration to use the Release version.

        The following incompatible changes were introduced in the Release version:


        * The request URL structure has changed: the library name to be added is now specified directly
        in the URL path.
        * The request now supports ``application/octet-stream`` as ``Content-Type`` instead of
        ``multipart/form-data``.

        This API allows one file upload at a time. The supported file formats are .jar, .py, .whl,
        .tar.gz, or environment.yml.

        Limitations
        -----------

        The maximum request size allowed is 100MB.

        Network issues may impact the upload size and may result in timeouts.

        Content-Type
        ------------

        The library file needs to be upload using ``Content-Type`` as ``multipart/form-data``.

        Permissions
        -----------

        Write permission for the environment item.

        Required Delegated Scopes
        -------------------------

        Environment.ReadWrite.All

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param workspace_id: The workspace ID. Required.
        :type workspace_id: str
        :param environment_id: The environment ID. Required.
        :type environment_id: str
        :return: None
        :rtype: None
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        error_map: MutableMapping[int, Type[HttpResponseError]] = {
            401: ClientAuthenticationError,
            404: ResourceNotFoundError,
            409: ResourceExistsError,
            304: ResourceNotModifiedError,
        }
        error_map.update(kwargs.pop("error_map", {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls: ClsType[None] = kwargs.pop("cls", None)

        _request = build_staging_upload_custom_library_preview_request(
            workspace_id=workspace_id,
            environment_id=environment_id,
            headers=_headers,
            params=_params,
        )
        _request.url = self._client.format_url(_request.url)

        _stream = False
        pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
            _request, stream=_stream, **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize.failsafe_deserialize(_models.ErrorResponse, pipeline_response)
            raise HttpResponseError(response=response, model=error)

        if cls:
            return cls(pipeline_response, None, {})  # type: ignore

    @distributed_trace
    def delete_custom_library_preview(  # pylint: disable=inconsistent-return-statements
        self, workspace_id: str, environment_id: str, *, library_to_delete: str, **kwargs: Any
    ) -> None:
        """Deletes a library from environment. It supports deleting one file at a time.

        ..

           [!NOTE]
           This API is part of a Preview release and is provided for evaluation and development
        purposes only. It may change based on feedback and is not recommended for production use. This
        preview API will be deprecated on **March 1, 2026**\\ , and replaced by a stable version,
        available `here </rest/api/fabric/environment/staging/delete-custom-library>`_.
           The new version introduces breaking changes and is not backward compatible.**


        Deprecation Notice
        ------------------

        It is recommended to migrate your integration to use the Release version.

        The following incompatible changes were introduced in the Release version:


        * The request URL structure has changed: the library name to be removed is now specified
        directly in the URL path, rather than as a query parameter in the libraries collection.

        Permissions
        -----------

        Write permission for the environment item.

        Required Delegated Scopes
        -------------------------

        Environment.ReadWrite.All

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param workspace_id: The workspace ID. Required.
        :type workspace_id: str
        :param environment_id: The environment ID. Required.
        :type environment_id: str
        :keyword library_to_delete: The library file to be deleted. The library name needs to include
         its extension, for example samplefile.jar. Required.
        :paramtype library_to_delete: str
        :return: None
        :rtype: None
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        error_map: MutableMapping[int, Type[HttpResponseError]] = {
            401: ClientAuthenticationError,
            404: ResourceNotFoundError,
            409: ResourceExistsError,
            304: ResourceNotModifiedError,
        }
        error_map.update(kwargs.pop("error_map", {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls: ClsType[None] = kwargs.pop("cls", None)

        _request = build_staging_delete_custom_library_preview_request(
            workspace_id=workspace_id,
            environment_id=environment_id,
            library_to_delete=library_to_delete,
            headers=_headers,
            params=_params,
        )
        _request.url = self._client.format_url(_request.url)

        _stream = False
        pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
            _request, stream=_stream, **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize.failsafe_deserialize(_models.ErrorResponse, pipeline_response)
            raise HttpResponseError(response=response, model=error)

        if cls:
            return cls(pipeline_response, None, {})  # type: ignore

    @distributed_trace
    def list_libraries_preview(
        self, workspace_id: str, environment_id: str, *, preview: bool, **kwargs: Any
    ) -> _models.LibrariesPreview:
        """Get environment staging libraries.

        ..

           [!NOTE]
           This API is part of a Preview release and is provided for evaluation and development
        purposes only. It may change based on feedback and is not recommended for production use. This
        preview API will be deprecated on **March 1, 2026**\\ , and replaced by a stable version,
        available `here </rest/api/fabric/environment/staging/list-libraries>`_. The new version
        introduces breaking changes and is not backward compatible.
           **When calling this API, callers must specify ``true`` as the value for the query parameter
        ``preview``.**


        Deprecation Notice
        ------------------

        A new query parameter ``preview`` has been introduced to facilitate this transition:


        * The ``preview`` query parameter currently defaults to ``true``.
        * Set the value of the ``preview`` query parameter to ``false`` to use the stable Release
        version of this API.
        * Starting March 1, 2026, the default value for ``preview`` will change to ``false``.

        It is recommended to migrate your integration to use the Release version as soon as possible by
        specifying ``false`` for the ``preview`` query parameter (\\ **the default value for the
        ``preview`` query parameter will be set to ``false`` on API's deprecation date**\\ ).

        The following incompatible changes were introduced in the Release version:


        * Different response format and schema structure
        * Enhanced library properties in the response
        * Updated field names and data types
        * Improved error handling and messages

        This API supports `pagination </rest/api/fabric/articles/pagination>`_.

        Permissions
        -----------

        Read permission for the environment item.

        Required Delegated Scopes
        -------------------------

        Item.Read.All or Item.ReadWrite.All or Environment.Read.All or Environment.ReadWrite.All

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param workspace_id: The workspace ID. Required.
        :type workspace_id: str
        :param environment_id: The environment ID. Required.
        :type environment_id: str
        :keyword preview: This parameter specifies which version of the API to use. Set to ``true`` to
         use the preview version described on this page, or to ``false`` to use the Release version
         detailed `here </rest/api/fabric/environment/staging/list-libraries>`_.
         Starting March 1, 2026, the default value for ``preview`` will change to ``false``. Required.
        :paramtype preview: bool
        :return: LibrariesPreview
        :rtype: ~microsoft.fabric.api.environment.models.LibrariesPreview
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        error_map: MutableMapping[int, Type[HttpResponseError]] = {
            401: ClientAuthenticationError,
            404: ResourceNotFoundError,
            409: ResourceExistsError,
            304: ResourceNotModifiedError,
        }
        error_map.update(kwargs.pop("error_map", {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls: ClsType[_models.LibrariesPreview] = kwargs.pop("cls", None)

        _request = build_staging_list_libraries_preview_request(
            workspace_id=workspace_id,
            environment_id=environment_id,
            preview=preview,
            headers=_headers,
            params=_params,
        )
        _request.url = self._client.format_url(_request.url)

        _stream = False
        pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
            _request, stream=_stream, **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize.failsafe_deserialize(_models.ErrorResponse, pipeline_response)
            raise HttpResponseError(response=response, model=error)

        deserialized = self._deserialize("LibrariesPreview", pipeline_response.http_response)

        if cls:
            return cls(pipeline_response, deserialized, {})  # type: ignore

        return deserialized  # type: ignore

    @distributed_trace
    def upload_custom_library(  # pylint: disable=inconsistent-return-statements
        self, workspace_id: str, environment_id: str, library_name: str, **kwargs: Any
    ) -> None:
        """Upload spark library into environment.

        This API allows one file upload at a time. The supported file formats are .jar, .py, .whl, and
        .tar.gz.

        Limitations
        -----------

        The maximum request size allowed is 100MB.

        Network issues may impact the upload size and may result in timeouts.

        Content-Type
        ------------

        The library file needs to be upload using ``Content-Type`` as ``application/octet-stream``.

        Permissions
        -----------

        Write permission for the environment item.

        Required Delegated Scopes
        -------------------------

        Item.ReadWrite.All or Environment.ReadWrite.All

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param workspace_id: The workspace ID. Required.
        :type workspace_id: str
        :param environment_id: The environment ID. Required.
        :type environment_id: str
        :param library_name: The library name to be uploaded. The library name needs to include its
         extension, for example ``samplefile.jar``. Required.
        :type library_name: str
        :return: None
        :rtype: None
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        error_map: MutableMapping[int, Type[HttpResponseError]] = {
            401: ClientAuthenticationError,
            404: ResourceNotFoundError,
            409: ResourceExistsError,
            304: ResourceNotModifiedError,
        }
        error_map.update(kwargs.pop("error_map", {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls: ClsType[None] = kwargs.pop("cls", None)

        _request = build_staging_upload_custom_library_request(
            workspace_id=workspace_id,
            environment_id=environment_id,
            library_name=library_name,
            headers=_headers,
            params=_params,
        )
        _request.url = self._client.format_url(_request.url)

        _stream = False
        pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
            _request, stream=_stream, **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize.failsafe_deserialize(_models.ErrorResponse, pipeline_response)
            raise HttpResponseError(response=response, model=error)

        if cls:
            return cls(pipeline_response, None, {})  # type: ignore

    @distributed_trace
    def delete_custom_library(  # pylint: disable=inconsistent-return-statements
        self, workspace_id: str, environment_id: str, library_name: str, **kwargs: Any
    ) -> None:
        """Delete a custom library from environment. It supports deleting one file at a time. The
        supported file formats are .jar, .py, .whl, and .tar.gz.

        Permissions
        -----------

        Write permission for the environment item.

        Required Delegated Scopes
        -------------------------

        Item.ReadWrite.All or Environment.ReadWrite.All

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param workspace_id: The workspace ID. Required.
        :type workspace_id: str
        :param environment_id: The environment ID. Required.
        :type environment_id: str
        :param library_name: The library name to be deleted. The library name needs to include its
         extension if it is a custom library, for example ``samplefile.jar``. Required.
        :type library_name: str
        :return: None
        :rtype: None
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        error_map: MutableMapping[int, Type[HttpResponseError]] = {
            401: ClientAuthenticationError,
            404: ResourceNotFoundError,
            409: ResourceExistsError,
            304: ResourceNotModifiedError,
        }
        error_map.update(kwargs.pop("error_map", {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls: ClsType[None] = kwargs.pop("cls", None)

        _request = build_staging_delete_custom_library_request(
            workspace_id=workspace_id,
            environment_id=environment_id,
            library_name=library_name,
            headers=_headers,
            params=_params,
        )
        _request.url = self._client.format_url(_request.url)

        _stream = False
        pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
            _request, stream=_stream, **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize.failsafe_deserialize(_models.ErrorResponse, pipeline_response)
            raise HttpResponseError(response=response, model=error)

        if cls:
            return cls(pipeline_response, None, {})  # type: ignore

    @overload
    def remove_external_library(  # pylint: disable=inconsistent-return-statements
        self,
        workspace_id: str,
        environment_id: str,
        remove_external_library_request: _models.RemoveExternalLibrariesRequest,
        *,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> None:
        """Delete a spark external library from an environment.

        This API allows one library deletion at a time.

        Permissions
        -----------

        Write permission for the environment item.

        Required Delegated Scopes
        -------------------------

        Item.ReadWrite.All or Environment.ReadWrite.All

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param workspace_id: The workspace ID. Required.
        :type workspace_id: str
        :param environment_id: The environment ID. Required.
        :type environment_id: str
        :param remove_external_library_request: The external library request payload. Required.
        :type remove_external_library_request:
         ~microsoft.fabric.api.environment.models.RemoveExternalLibrariesRequest
        :keyword content_type: Body Parameter content-type. Content type parameter for JSON body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: None
        :rtype: None
        :raises ~azure.core.exceptions.HttpResponseError:
        """

    @overload
    def remove_external_library(  # pylint: disable=inconsistent-return-statements
        self,
        workspace_id: str,
        environment_id: str,
        remove_external_library_request: IO[bytes],
        *,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> None:
        """Delete a spark external library from an environment.

        This API allows one library deletion at a time.

        Permissions
        -----------

        Write permission for the environment item.

        Required Delegated Scopes
        -------------------------

        Item.ReadWrite.All or Environment.ReadWrite.All

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param workspace_id: The workspace ID. Required.
        :type workspace_id: str
        :param environment_id: The environment ID. Required.
        :type environment_id: str
        :param remove_external_library_request: The external library request payload. Required.
        :type remove_external_library_request: IO[bytes]
        :keyword content_type: Body Parameter content-type. Content type parameter for binary body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: None
        :rtype: None
        :raises ~azure.core.exceptions.HttpResponseError:
        """

    @distributed_trace
    def remove_external_library(  # pylint: disable=inconsistent-return-statements
        self,
        workspace_id: str,
        environment_id: str,
        remove_external_library_request: Union[_models.RemoveExternalLibrariesRequest, IO[bytes]],
        **kwargs: Any
    ) -> None:
        """Delete a spark external library from an environment.

        This API allows one library deletion at a time.

        Permissions
        -----------

        Write permission for the environment item.

        Required Delegated Scopes
        -------------------------

        Item.ReadWrite.All or Environment.ReadWrite.All

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param workspace_id: The workspace ID. Required.
        :type workspace_id: str
        :param environment_id: The environment ID. Required.
        :type environment_id: str
        :param remove_external_library_request: The external library request payload. Is either a
         RemoveExternalLibrariesRequest type or a IO[bytes] type. Required.
        :type remove_external_library_request:
         ~microsoft.fabric.api.environment.models.RemoveExternalLibrariesRequest or IO[bytes]
        :return: None
        :rtype: None
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        error_map: MutableMapping[int, Type[HttpResponseError]] = {
            401: ClientAuthenticationError,
            404: ResourceNotFoundError,
            409: ResourceExistsError,
            304: ResourceNotModifiedError,
        }
        error_map.update(kwargs.pop("error_map", {}) or {})

        _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
        _params = kwargs.pop("params", {}) or {}

        content_type: Optional[str] = kwargs.pop("content_type", _headers.pop("Content-Type", None))
        cls: ClsType[None] = kwargs.pop("cls", None)

        content_type = content_type or "application/json"
        _json = None
        _content = None
        if isinstance(remove_external_library_request, (IOBase, bytes)):
            _content = remove_external_library_request
        else:
            _json = self._serialize.body(remove_external_library_request, "RemoveExternalLibrariesRequest")

        _request = build_staging_remove_external_library_request(
            workspace_id=workspace_id,
            environment_id=environment_id,
            content_type=content_type,
            json=_json,
            content=_content,
            headers=_headers,
            params=_params,
        )
        _request.url = self._client.format_url(_request.url)

        _stream = False
        pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
            _request, stream=_stream, **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize.failsafe_deserialize(_models.ErrorResponse, pipeline_response)
            raise HttpResponseError(response=response, model=error)

        if cls:
            return cls(pipeline_response, None, {})  # type: ignore

    @distributed_trace
    def import_external_libraries(  # pylint: disable=inconsistent-return-statements
        self, workspace_id: str, environment_id: str, **kwargs: Any
    ) -> None:
        """Upload spark external libraries as an ``environment.yml`` file into environment. It overrides
        the list of existing external libraries in environment.

        This API allows file upload at a time.

        Permissions
        -----------

        Write permission for the environment item.

        Required Delegated Scopes
        -------------------------

        Item.ReadWrite.All or Environment.ReadWrite.All

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param workspace_id: The workspace ID. Required.
        :type workspace_id: str
        :param environment_id: The environment ID. Required.
        :type environment_id: str
        :return: None
        :rtype: None
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        error_map: MutableMapping[int, Type[HttpResponseError]] = {
            401: ClientAuthenticationError,
            404: ResourceNotFoundError,
            409: ResourceExistsError,
            304: ResourceNotModifiedError,
        }
        error_map.update(kwargs.pop("error_map", {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls: ClsType[None] = kwargs.pop("cls", None)

        _request = build_staging_import_external_libraries_request(
            workspace_id=workspace_id,
            environment_id=environment_id,
            headers=_headers,
            params=_params,
        )
        _request.url = self._client.format_url(_request.url)

        _stream = False
        pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
            _request, stream=_stream, **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize.failsafe_deserialize(_models.ErrorResponse, pipeline_response)
            raise HttpResponseError(response=response, model=error)

        if cls:
            return cls(pipeline_response, None, {})  # type: ignore

    @distributed_trace
    def export_external_libraries(  # pylint: disable=inconsistent-return-statements
        self, workspace_id: str, environment_id: str, **kwargs: Any
    ) -> None:
        """Export a set of external libraries saved in the environment in YML format.

        Permissions
        -----------

        Read permission for the environment item.

        Required Delegated Scopes
        -------------------------

        Item.Read.All or Item.ReadWrite.All or Environment.Read.All or Environment.ReadWrite.All

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param workspace_id: The workspace ID. Required.
        :type workspace_id: str
        :param environment_id: The environment ID. Required.
        :type environment_id: str
        :return: None
        :rtype: None
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        error_map: MutableMapping[int, Type[HttpResponseError]] = {
            401: ClientAuthenticationError,
            404: ResourceNotFoundError,
            409: ResourceExistsError,
            304: ResourceNotModifiedError,
        }
        error_map.update(kwargs.pop("error_map", {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls: ClsType[None] = kwargs.pop("cls", None)

        _request = build_staging_export_external_libraries_request(
            workspace_id=workspace_id,
            environment_id=environment_id,
            headers=_headers,
            params=_params,
        )
        _request.url = self._client.format_url(_request.url)

        _stream = False
        pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
            _request, stream=_stream, **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response)

        if cls:
            return cls(pipeline_response, None, {})  # type: ignore


class PublishedOperations:
    """
    .. warning::
        **DO NOT** instantiate this class directly.

        Instead, you should access the following operations through
        :class:`~microsoft.fabric.api.environment.FabricEnvironmentClient`'s
        :attr:`published` attribute.
    """

    models = _models

    def __init__(self, *args, **kwargs):
        input_args = list(args)
        self._client = input_args.pop(0) if input_args else kwargs.pop("client")
        self._config = input_args.pop(0) if input_args else kwargs.pop("config")
        self._serialize = input_args.pop(0) if input_args else kwargs.pop("serializer")
        self._deserialize = input_args.pop(0) if input_args else kwargs.pop("deserializer")

    @distributed_trace
    def get_spark_compute_preview(
        self, workspace_id: str, environment_id: str, *, preview: bool, **kwargs: Any
    ) -> _models.EnvironmentSparkComputePreview:
        """Get environment spark compute.

        ..

           [!NOTE]
           This API is part of a Preview release and is provided for evaluation and development
        purposes only. It may change based on feedback and is not recommended for production use. This
        preview API will be deprecated on **March 1, 2026**\\ , and replaced by a stable version,
        available `here </rest/api/fabric/environment/published/get-spark-compute>`_. The new version
        introduces breaking changes and is not backward compatible.
           **When calling this API, callers must specify ``true`` as the value for the query parameter
        ``preview``.**


        Deprecation Notice
        ------------------

        A new query parameter ``preview`` has been introduced to facilitate this transition:


        * The ``preview`` query parameter currently defaults to ``true``.
        * Set the value of the ``preview`` query parameter to ``false`` to use the stable Release
        version of this API.
        * Starting March 1, 2026, the default value for ``preview`` will change to ``false``.

        To ensure compatibility, explicitly set the ``preview`` parameter to your desired value (\\
        ``true`` or ``false``\\ ).

        It is recommended to migrate your integration to use the Release version as soon as possible by
        specifying ``false`` for the ``preview`` query parameter (\\ **the default value for the
        ``preview`` query parameter will be set to ``false`` on API's deprecation date**\\ ).

        The following incompatible changes were introduced in the Release version:


        * Response property ``sparkProperties``\\ 's type was changed from ``object`` to the list of
        ``SparkProperty``.

        Permissions
        -----------

        Read permission for the environment item.

        Required Delegated Scopes
        -------------------------

        Item.Read.All or Item.ReadWrite.All or Environment.Read.All or Environment.ReadWrite.All

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param workspace_id: The workspace ID. Required.
        :type workspace_id: str
        :param environment_id: The environment ID. Required.
        :type environment_id: str
        :keyword preview: This parameter specifies which version of the API to use. Set to ``true`` to
         use the preview version described on this page, or to ``false`` to use the Release version
         detailed `here </rest/api/fabric/environment/published/get-spark-compute>`_.
         Starting March 1, 2026, the default value for ``preview`` will change to ``false``. Required.
        :paramtype preview: bool
        :return: EnvironmentSparkComputePreview
        :rtype: ~microsoft.fabric.api.environment.models.EnvironmentSparkComputePreview
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        error_map: MutableMapping[int, Type[HttpResponseError]] = {
            401: ClientAuthenticationError,
            404: ResourceNotFoundError,
            409: ResourceExistsError,
            304: ResourceNotModifiedError,
        }
        error_map.update(kwargs.pop("error_map", {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls: ClsType[_models.EnvironmentSparkComputePreview] = kwargs.pop("cls", None)

        _request = build_published_get_spark_compute_preview_request(
            workspace_id=workspace_id,
            environment_id=environment_id,
            preview=preview,
            headers=_headers,
            params=_params,
        )
        _request.url = self._client.format_url(_request.url)

        _stream = False
        pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
            _request, stream=_stream, **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize.failsafe_deserialize(_models.ErrorResponse, pipeline_response)
            raise HttpResponseError(response=response, model=error)

        deserialized = self._deserialize("EnvironmentSparkComputePreview", pipeline_response.http_response)

        if cls:
            return cls(pipeline_response, deserialized, {})  # type: ignore

        return deserialized  # type: ignore

    @distributed_trace
    def get_spark_compute(
        self, workspace_id: str, environment_id: str, *, preview: bool, **kwargs: Any
    ) -> _models.EnvironmentSparkCompute:
        """Get environment spark compute.

        ..

           [!NOTE]
           This API is a release version of a preview version due to be deprecated on March 1, 2026.
           **When calling this API - callers must set the query parameter ``preview`` to the value
        ``false``\\ **


        Permissions
        -----------

        Read permission for the environment item.

        Required Delegated Scopes
        -------------------------

        Item.Read.All or Item.ReadWrite.All or Environment.Read.All or Environment.ReadWrite.All

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param workspace_id: The workspace ID. Required.
        :type workspace_id: str
        :param environment_id: The environment ID. Required.
        :type environment_id: str
        :keyword preview: This parameter specifies which version of the API to use. Set to ``false`` to
         use the release version. Required.
        :paramtype preview: bool
        :return: EnvironmentSparkCompute
        :rtype: ~microsoft.fabric.api.environment.models.EnvironmentSparkCompute
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        error_map: MutableMapping[int, Type[HttpResponseError]] = {
            401: ClientAuthenticationError,
            404: ResourceNotFoundError,
            409: ResourceExistsError,
            304: ResourceNotModifiedError,
        }
        error_map.update(kwargs.pop("error_map", {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls: ClsType[_models.EnvironmentSparkCompute] = kwargs.pop("cls", None)

        _request = build_published_get_spark_compute_request(
            workspace_id=workspace_id,
            environment_id=environment_id,
            preview=preview,
            headers=_headers,
            params=_params,
        )
        _request.url = self._client.format_url(_request.url)

        _stream = False
        pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
            _request, stream=_stream, **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize.failsafe_deserialize(_models.ErrorResponse, pipeline_response)
            raise HttpResponseError(response=response, model=error)

        deserialized = self._deserialize("EnvironmentSparkCompute", pipeline_response.http_response)

        if cls:
            return cls(pipeline_response, deserialized, {})  # type: ignore

        return deserialized  # type: ignore

    @distributed_trace
    def list_libraries(
        self,
        workspace_id: str,
        environment_id: str,
        *,
        preview: bool,
        continuation_token_parameter: Optional[str] = None,
        **kwargs: Any
    ) -> Iterable["_models.Library"]:
        """Get environment published libraries.

        ..

           [!NOTE]
           This API is a release version of a preview version due to be deprecated on March 1, 2026.
           **When calling this API - callers must set the query parameter ``preview`` to the value
        ``false``\\ **


        This API supports `pagination </rest/api/fabric/articles/pagination>`_.

        Permissions
        -----------

        Read permission for the environment item.

        Required Delegated Scopes
        -------------------------

        Item.Read.All or Item.ReadWrite.All or Environment.Read.All or Environment.ReadWrite.All

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param workspace_id: The workspace ID. Required.
        :type workspace_id: str
        :param environment_id: The environment ID. Required.
        :type environment_id: str
        :keyword preview: This parameter specifies which version of the API to use. Set to ``false`` to
         use the release version. Required.
        :paramtype preview: bool
        :keyword continuation_token_parameter: Token to retrieve the next page of results, if
         available. Default value is None.
        :paramtype continuation_token_parameter: str
        :return: An iterator like instance of Library
        :rtype: ~azure.core.paging.ItemPaged[~microsoft.fabric.api.environment.models.Library]
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls: ClsType[_models._models.Libraries] = kwargs.pop("cls", None)  # pylint: disable=protected-access

        error_map: MutableMapping[int, Type[HttpResponseError]] = {
            401: ClientAuthenticationError,
            404: ResourceNotFoundError,
            409: ResourceExistsError,
            304: ResourceNotModifiedError,
        }
        error_map.update(kwargs.pop("error_map", {}) or {})

        def prepare_request(next_link=None):
            if not next_link:

                _request = build_published_list_libraries_request(
                    workspace_id=workspace_id,
                    environment_id=environment_id,
                    preview=preview,
                    continuation_token_parameter=continuation_token_parameter,
                    headers=_headers,
                    params=_params,
                )
                _request.url = self._client.format_url(_request.url)

            else:
                _request = HttpRequest("GET", next_link)
                _request.url = self._client.format_url(_request.url)

            return _request

        def extract_data(pipeline_response):
            deserialized = self._deserialize(
                _models._models.Libraries, pipeline_response  # pylint: disable=protected-access
            )
            list_of_elem = deserialized.libraries
            if cls:
                list_of_elem = cls(list_of_elem)  # type: ignore
            return deserialized.continuation_uri or None, iter(list_of_elem)

        def get_next(next_link=None):
            _request = prepare_request(next_link)

            _stream = False
            pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
                _request, stream=_stream, **kwargs
            )
            response = pipeline_response.http_response

            if response.status_code not in [200]:
                map_error(status_code=response.status_code, response=response, error_map=error_map)
                error = self._deserialize.failsafe_deserialize(_models.ErrorResponse, pipeline_response)
                raise HttpResponseError(response=response, model=error)

            return pipeline_response

        return ItemPaged(get_next, extract_data)

    @distributed_trace
    def list_libraries_preview(
        self, workspace_id: str, environment_id: str, *, preview: bool, **kwargs: Any
    ) -> _models.LibrariesPreview:
        """Get environment published libraries.

        ..

           [!NOTE]
           This API is part of a Preview release and is provided for evaluation and development
        purposes only. It may change based on feedback and is not recommended for production use. This
        preview API will be deprecated on **March 1, 2026**\\ , and replaced by a stable version,
        available `here </rest/api/fabric/environment/published/list-libraries>`_. The new version
        introduces breaking changes and is not backward compatible.
           **When calling this API, callers must specify ``true`` as the value for the query parameter
        ``preview``.**


        Deprecation Notice
        ------------------

        A new query parameter ``preview`` has been introduced to facilitate this transition:


        * The ``preview`` query parameter currently defaults to ``true``.
        * Set the value of the ``preview`` query parameter to ``false`` to use the stable Release
        version of this API.
        * Starting March 1, 2026, the default value for ``preview`` will change to ``false``.

        It is recommended to migrate your integration to use the Release version as soon as possible by
        specifying ``false`` for the ``preview`` query parameter (\\ **the default value for the
        ``preview`` query parameter will be set to ``false`` on API's deprecation date**\\ ).

        The following incompatible changes were introduced in the Release version:


        * Different response format and schema structure
        * Enhanced library properties in the response
        * Updated field names and data types
        * Improved error handling and messages

        This API supports `pagination </rest/api/fabric/articles/pagination>`_.

        Permissions
        -----------

        Read permission for the environment item.

        Required Delegated Scopes
        -------------------------

        Item.Read.All or Item.ReadWrite.All or Environment.Read.All or Environment.ReadWrite.All

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param workspace_id: The workspace ID. Required.
        :type workspace_id: str
        :param environment_id: The environment ID. Required.
        :type environment_id: str
        :keyword preview: This parameter specifies which version of the API to use. Set to ``true`` to
         use the preview version described on this page, or to ``false`` to use the Release version
         detailed `here </rest/api/fabric/environment/published/list-libraries>`_.
         Starting March 1, 2026, the default value for ``preview`` will change to ``false``. Required.
        :paramtype preview: bool
        :return: LibrariesPreview
        :rtype: ~microsoft.fabric.api.environment.models.LibrariesPreview
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        error_map: MutableMapping[int, Type[HttpResponseError]] = {
            401: ClientAuthenticationError,
            404: ResourceNotFoundError,
            409: ResourceExistsError,
            304: ResourceNotModifiedError,
        }
        error_map.update(kwargs.pop("error_map", {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls: ClsType[_models.LibrariesPreview] = kwargs.pop("cls", None)

        _request = build_published_list_libraries_preview_request(
            workspace_id=workspace_id,
            environment_id=environment_id,
            preview=preview,
            headers=_headers,
            params=_params,
        )
        _request.url = self._client.format_url(_request.url)

        _stream = False
        pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
            _request, stream=_stream, **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize.failsafe_deserialize(_models.ErrorResponse, pipeline_response)
            raise HttpResponseError(response=response, model=error)

        deserialized = self._deserialize("LibrariesPreview", pipeline_response.http_response)

        if cls:
            return cls(pipeline_response, deserialized, {})  # type: ignore

        return deserialized  # type: ignore

    @distributed_trace
    def export_external_libraries(  # pylint: disable=inconsistent-return-statements
        self, workspace_id: str, environment_id: str, **kwargs: Any
    ) -> None:
        """Export a set of external libraries published in the environment in ``YML`` format.

        Permissions
        -----------

        Read permission for the environment item.

        Required Delegated Scopes
        -------------------------

        Item.Read.All or Item.ReadWrite.All or Environment.Read.All or Environment.ReadWrite.All

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param workspace_id: The workspace ID. Required.
        :type workspace_id: str
        :param environment_id: The environment ID. Required.
        :type environment_id: str
        :return: None
        :rtype: None
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        error_map: MutableMapping[int, Type[HttpResponseError]] = {
            401: ClientAuthenticationError,
            404: ResourceNotFoundError,
            409: ResourceExistsError,
            304: ResourceNotModifiedError,
        }
        error_map.update(kwargs.pop("error_map", {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls: ClsType[None] = kwargs.pop("cls", None)

        _request = build_published_export_external_libraries_request(
            workspace_id=workspace_id,
            environment_id=environment_id,
            headers=_headers,
            params=_params,
        )
        _request.url = self._client.format_url(_request.url)

        _stream = False
        pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
            _request, stream=_stream, **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            raise HttpResponseError(response=response)

        if cls:
            return cls(pipeline_response, None, {})  # type: ignore


class ItemsOperations:
    """
    .. warning::
        **DO NOT** instantiate this class directly.

        Instead, you should access the following operations through
        :class:`~microsoft.fabric.api.environment.FabricEnvironmentClient`'s
        :attr:`items` attribute.
    """

    models = _models

    def __init__(self, *args, **kwargs):
        input_args = list(args)
        self._client = input_args.pop(0) if input_args else kwargs.pop("client")
        self._config = input_args.pop(0) if input_args else kwargs.pop("config")
        self._serialize = input_args.pop(0) if input_args else kwargs.pop("serializer")
        self._deserialize = input_args.pop(0) if input_args else kwargs.pop("deserializer")

    @distributed_trace
    def list_environments(
        self, workspace_id: str, *, continuation_token_parameter: Optional[str] = None, **kwargs: Any
    ) -> Iterable["_models.Environment"]:
        """Returns a list of environments from the specified workspace.

        This API supports `pagination </rest/api/fabric/articles/pagination>`_.

        Permissions
        -----------

         The caller must have a *viewer* workspace role.

        Required Delegated Scopes
        -------------------------

        Workspace.Read.All or Workspace.ReadWrite.All

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param workspace_id: The workspace ID. Required.
        :type workspace_id: str
        :keyword continuation_token_parameter: A token for retrieving the next page of results. Default
         value is None.
        :paramtype continuation_token_parameter: str
        :return: An iterator like instance of Environment
        :rtype: ~azure.core.paging.ItemPaged[~microsoft.fabric.api.environment.models.Environment]
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls: ClsType[_models._models.Environments] = kwargs.pop("cls", None)  # pylint: disable=protected-access

        error_map: MutableMapping[int, Type[HttpResponseError]] = {
            401: ClientAuthenticationError,
            404: ResourceNotFoundError,
            409: ResourceExistsError,
            304: ResourceNotModifiedError,
        }
        error_map.update(kwargs.pop("error_map", {}) or {})

        def prepare_request(next_link=None):
            if not next_link:

                _request = build_items_list_environments_request(
                    workspace_id=workspace_id,
                    continuation_token_parameter=continuation_token_parameter,
                    headers=_headers,
                    params=_params,
                )
                _request.url = self._client.format_url(_request.url)

            else:
                _request = HttpRequest("GET", next_link)
                _request.url = self._client.format_url(_request.url)

            return _request

        def extract_data(pipeline_response):
            deserialized = self._deserialize(
                _models._models.Environments, pipeline_response  # pylint: disable=protected-access
            )
            list_of_elem = deserialized.value
            if cls:
                list_of_elem = cls(list_of_elem)  # type: ignore
            return deserialized.continuation_uri or None, iter(list_of_elem)

        def get_next(next_link=None):
            _request = prepare_request(next_link)

            _stream = False
            pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
                _request, stream=_stream, **kwargs
            )
            response = pipeline_response.http_response

            if response.status_code not in [200]:
                map_error(status_code=response.status_code, response=response, error_map=error_map)
                error = self._deserialize.failsafe_deserialize(_models.ErrorResponse, pipeline_response)
                raise HttpResponseError(response=response, model=error)

            return pipeline_response

        return ItemPaged(get_next, extract_data)

    def _create_environment_initial(
        self,
        workspace_id: str,
        create_environment_request: Union[_models.CreateEnvironmentRequest, IO[bytes]],
        **kwargs: Any
    ) -> Iterator[bytes]:
        error_map: MutableMapping[int, Type[HttpResponseError]] = {
            401: ClientAuthenticationError,
            404: ResourceNotFoundError,
            409: ResourceExistsError,
            304: ResourceNotModifiedError,
        }
        error_map.update(kwargs.pop("error_map", {}) or {})

        _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
        _params = kwargs.pop("params", {}) or {}

        content_type: Optional[str] = kwargs.pop("content_type", _headers.pop("Content-Type", None))
        cls: ClsType[Iterator[bytes]] = kwargs.pop("cls", None)

        content_type = content_type or "application/json"
        _json = None
        _content = None
        if isinstance(create_environment_request, (IOBase, bytes)):
            _content = create_environment_request
        else:
            _json = self._serialize.body(create_environment_request, "CreateEnvironmentRequest")

        _request = build_items_create_environment_request(
            workspace_id=workspace_id,
            content_type=content_type,
            json=_json,
            content=_content,
            headers=_headers,
            params=_params,
        )
        _request.url = self._client.format_url(_request.url)

        _stream = True
        pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
            _request, stream=_stream, **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [201, 202]:
            response.read()  # Load the body in memory and close the socket
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize.failsafe_deserialize(_models.ErrorResponse, pipeline_response)
            raise HttpResponseError(response=response, model=error)

        response_headers = {}
        if response.status_code == 201:
            deserialized = response.iter_bytes()

        if response.status_code == 202:
            response_headers["Location"] = self._deserialize("str", response.headers.get("Location"))
            response_headers["x-ms-operation-id"] = self._deserialize("str", response.headers.get("x-ms-operation-id"))
            response_headers["Retry-After"] = self._deserialize("int", response.headers.get("Retry-After"))

            deserialized = response.iter_bytes()

        if cls:
            return cls(pipeline_response, deserialized, response_headers)  # type: ignore

        return deserialized  # type: ignore

    @overload
    def begin_create_environment(
        self,
        workspace_id: str,
        create_environment_request: _models.CreateEnvironmentRequest,
        *,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> LROPoller[_models.Environment]:
        """Creates an environment in the specified workspace.

        This API supports `long running operations (LRO)
        </rest/api/fabric/articles/long-running-operation>`_.

        Permissions
        -----------

         The caller must have a *contributor* workspace role.

        Required Delegated Scopes
        -------------------------

         Environment.ReadWrite.All or Item.ReadWrite.All

        Limitations
        -----------


        * To create an environment, the workspace must be on a supported Fabric capacity.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param workspace_id: The workspace ID. Required.
        :type workspace_id: str
        :param create_environment_request: Create item request payload. Required.
        :type create_environment_request:
         ~microsoft.fabric.api.environment.models.CreateEnvironmentRequest
        :keyword content_type: Body Parameter content-type. Content type parameter for JSON body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: An instance of LROPoller that returns Environment
        :rtype: ~azure.core.polling.LROPoller[~microsoft.fabric.api.environment.models.Environment]
        :raises ~azure.core.exceptions.HttpResponseError:
        """

    @overload
    def begin_create_environment(
        self,
        workspace_id: str,
        create_environment_request: IO[bytes],
        *,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> LROPoller[_models.Environment]:
        """Creates an environment in the specified workspace.

        This API supports `long running operations (LRO)
        </rest/api/fabric/articles/long-running-operation>`_.

        Permissions
        -----------

         The caller must have a *contributor* workspace role.

        Required Delegated Scopes
        -------------------------

         Environment.ReadWrite.All or Item.ReadWrite.All

        Limitations
        -----------


        * To create an environment, the workspace must be on a supported Fabric capacity.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param workspace_id: The workspace ID. Required.
        :type workspace_id: str
        :param create_environment_request: Create item request payload. Required.
        :type create_environment_request: IO[bytes]
        :keyword content_type: Body Parameter content-type. Content type parameter for binary body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: An instance of LROPoller that returns Environment
        :rtype: ~azure.core.polling.LROPoller[~microsoft.fabric.api.environment.models.Environment]
        :raises ~azure.core.exceptions.HttpResponseError:
        """

    @distributed_trace
    def begin_create_environment(
        self,
        workspace_id: str,
        create_environment_request: Union[_models.CreateEnvironmentRequest, IO[bytes]],
        **kwargs: Any
    ) -> LROPoller[_models.Environment]:
        """Creates an environment in the specified workspace.

        This API supports `long running operations (LRO)
        </rest/api/fabric/articles/long-running-operation>`_.

        Permissions
        -----------

         The caller must have a *contributor* workspace role.

        Required Delegated Scopes
        -------------------------

         Environment.ReadWrite.All or Item.ReadWrite.All

        Limitations
        -----------


        * To create an environment, the workspace must be on a supported Fabric capacity.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param workspace_id: The workspace ID. Required.
        :type workspace_id: str
        :param create_environment_request: Create item request payload. Is either a
         CreateEnvironmentRequest type or a IO[bytes] type. Required.
        :type create_environment_request:
         ~microsoft.fabric.api.environment.models.CreateEnvironmentRequest or IO[bytes]
        :return: An instance of LROPoller that returns Environment
        :rtype: ~azure.core.polling.LROPoller[~microsoft.fabric.api.environment.models.Environment]
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
        _params = kwargs.pop("params", {}) or {}

        content_type: Optional[str] = kwargs.pop("content_type", _headers.pop("Content-Type", None))
        cls: ClsType[_models.Environment] = kwargs.pop("cls", None)
        polling: Union[bool, PollingMethod] = kwargs.pop("polling", True)
        lro_delay = kwargs.pop("polling_interval", self._config.polling_interval)
        cont_token: Optional[str] = kwargs.pop("continuation_token", None)
        if cont_token is None:
            raw_result = self._create_environment_initial(
                workspace_id=workspace_id,
                create_environment_request=create_environment_request,
                content_type=content_type,
                cls=lambda x, y, z: x,
                headers=_headers,
                params=_params,
                **kwargs
            )
            raw_result.http_response.read()  # type: ignore
        kwargs.pop("error_map", None)

        def get_long_running_output(pipeline_response):
            deserialized = self._deserialize("Environment", pipeline_response.http_response)
            if cls:
                return cls(pipeline_response, deserialized, {})  # type: ignore
            return deserialized

        if polling is True:
            polling_method: PollingMethod = cast(PollingMethod, LROBasePolling(lro_delay, **kwargs))
        elif polling is False:
            polling_method = cast(PollingMethod, NoPolling())
        else:
            polling_method = polling
        if cont_token:
            return LROPoller[_models.Environment].from_continuation_token(
                polling_method=polling_method,
                continuation_token=cont_token,
                client=self._client,
                deserialization_callback=get_long_running_output,
            )
        return LROPoller[_models.Environment](
            self._client, raw_result, get_long_running_output, polling_method  # type: ignore
        )

    @distributed_trace
    def get_environment(self, workspace_id: str, environment_id: str, **kwargs: Any) -> _models.Environment:
        """Returns properties of the specified environment.

        Permissions
        -----------

         The caller must have *read* permissions for the environment.

        Required Delegated Scopes
        -------------------------

        Environment.Read.All or Item.Read.All or Environment.ReadWrite.All or Item.ReadWrite.All

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param workspace_id: The workspace ID. Required.
        :type workspace_id: str
        :param environment_id: The environment ID. Required.
        :type environment_id: str
        :return: Environment
        :rtype: ~microsoft.fabric.api.environment.models.Environment
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        error_map: MutableMapping[int, Type[HttpResponseError]] = {
            401: ClientAuthenticationError,
            404: ResourceNotFoundError,
            409: ResourceExistsError,
            304: ResourceNotModifiedError,
        }
        error_map.update(kwargs.pop("error_map", {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls: ClsType[_models.Environment] = kwargs.pop("cls", None)

        _request = build_items_get_environment_request(
            workspace_id=workspace_id,
            environment_id=environment_id,
            headers=_headers,
            params=_params,
        )
        _request.url = self._client.format_url(_request.url)

        _stream = False
        pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
            _request, stream=_stream, **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize.failsafe_deserialize(_models.ErrorResponse, pipeline_response)
            raise HttpResponseError(response=response, model=error)

        deserialized = self._deserialize("Environment", pipeline_response.http_response)

        if cls:
            return cls(pipeline_response, deserialized, {})  # type: ignore

        return deserialized  # type: ignore

    @overload
    def update_environment(
        self,
        workspace_id: str,
        environment_id: str,
        update_environment_request: _models.UpdateEnvironmentRequest,
        *,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> _models.Environment:
        """Updates the properties of the specified environment.

        Permissions
        -----------

         The caller must have *read and write* permissions for the environment.

        Required Delegated Scopes
        -------------------------

         Environment.ReadWrite.All or Item.ReadWrite.All

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param workspace_id: The workspace ID. Required.
        :type workspace_id: str
        :param environment_id: The environment ID. Required.
        :type environment_id: str
        :param update_environment_request: Update environment request payload. Required.
        :type update_environment_request:
         ~microsoft.fabric.api.environment.models.UpdateEnvironmentRequest
        :keyword content_type: Body Parameter content-type. Content type parameter for JSON body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: Environment
        :rtype: ~microsoft.fabric.api.environment.models.Environment
        :raises ~azure.core.exceptions.HttpResponseError:
        """

    @overload
    def update_environment(
        self,
        workspace_id: str,
        environment_id: str,
        update_environment_request: IO[bytes],
        *,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> _models.Environment:
        """Updates the properties of the specified environment.

        Permissions
        -----------

         The caller must have *read and write* permissions for the environment.

        Required Delegated Scopes
        -------------------------

         Environment.ReadWrite.All or Item.ReadWrite.All

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param workspace_id: The workspace ID. Required.
        :type workspace_id: str
        :param environment_id: The environment ID. Required.
        :type environment_id: str
        :param update_environment_request: Update environment request payload. Required.
        :type update_environment_request: IO[bytes]
        :keyword content_type: Body Parameter content-type. Content type parameter for binary body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: Environment
        :rtype: ~microsoft.fabric.api.environment.models.Environment
        :raises ~azure.core.exceptions.HttpResponseError:
        """

    @distributed_trace
    def update_environment(
        self,
        workspace_id: str,
        environment_id: str,
        update_environment_request: Union[_models.UpdateEnvironmentRequest, IO[bytes]],
        **kwargs: Any
    ) -> _models.Environment:
        """Updates the properties of the specified environment.

        Permissions
        -----------

         The caller must have *read and write* permissions for the environment.

        Required Delegated Scopes
        -------------------------

         Environment.ReadWrite.All or Item.ReadWrite.All

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param workspace_id: The workspace ID. Required.
        :type workspace_id: str
        :param environment_id: The environment ID. Required.
        :type environment_id: str
        :param update_environment_request: Update environment request payload. Is either a
         UpdateEnvironmentRequest type or a IO[bytes] type. Required.
        :type update_environment_request:
         ~microsoft.fabric.api.environment.models.UpdateEnvironmentRequest or IO[bytes]
        :return: Environment
        :rtype: ~microsoft.fabric.api.environment.models.Environment
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        error_map: MutableMapping[int, Type[HttpResponseError]] = {
            401: ClientAuthenticationError,
            404: ResourceNotFoundError,
            409: ResourceExistsError,
            304: ResourceNotModifiedError,
        }
        error_map.update(kwargs.pop("error_map", {}) or {})

        _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
        _params = kwargs.pop("params", {}) or {}

        content_type: Optional[str] = kwargs.pop("content_type", _headers.pop("Content-Type", None))
        cls: ClsType[_models.Environment] = kwargs.pop("cls", None)

        content_type = content_type or "application/json"
        _json = None
        _content = None
        if isinstance(update_environment_request, (IOBase, bytes)):
            _content = update_environment_request
        else:
            _json = self._serialize.body(update_environment_request, "UpdateEnvironmentRequest")

        _request = build_items_update_environment_request(
            workspace_id=workspace_id,
            environment_id=environment_id,
            content_type=content_type,
            json=_json,
            content=_content,
            headers=_headers,
            params=_params,
        )
        _request.url = self._client.format_url(_request.url)

        _stream = False
        pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
            _request, stream=_stream, **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize.failsafe_deserialize(_models.ErrorResponse, pipeline_response)
            raise HttpResponseError(response=response, model=error)

        deserialized = self._deserialize("Environment", pipeline_response.http_response)

        if cls:
            return cls(pipeline_response, deserialized, {})  # type: ignore

        return deserialized  # type: ignore

    @distributed_trace
    def delete_environment(  # pylint: disable=inconsistent-return-statements
        self, workspace_id: str, environment_id: str, **kwargs: Any
    ) -> None:
        """Deletes the specified environment.

        Permissions
        -----------

         The caller must have *write* permissions for the environment.

        Required Delegated Scopes
        -------------------------

         Environment.ReadWrite.All or Item.ReadWrite.All

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param workspace_id: The workspace ID. Required.
        :type workspace_id: str
        :param environment_id: The environment ID. Required.
        :type environment_id: str
        :return: None
        :rtype: None
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        error_map: MutableMapping[int, Type[HttpResponseError]] = {
            401: ClientAuthenticationError,
            404: ResourceNotFoundError,
            409: ResourceExistsError,
            304: ResourceNotModifiedError,
        }
        error_map.update(kwargs.pop("error_map", {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls: ClsType[None] = kwargs.pop("cls", None)

        _request = build_items_delete_environment_request(
            workspace_id=workspace_id,
            environment_id=environment_id,
            headers=_headers,
            params=_params,
        )
        _request.url = self._client.format_url(_request.url)

        _stream = False
        pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
            _request, stream=_stream, **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize.failsafe_deserialize(_models.ErrorResponse, pipeline_response)
            raise HttpResponseError(response=response, model=error)

        if cls:
            return cls(pipeline_response, None, {})  # type: ignore

    def _get_environment_definition_initial(
        self, workspace_id: str, environment_id: str, *, format: Optional[str] = None, **kwargs: Any
    ) -> Iterator[bytes]:
        error_map: MutableMapping[int, Type[HttpResponseError]] = {
            401: ClientAuthenticationError,
            404: ResourceNotFoundError,
            409: ResourceExistsError,
            304: ResourceNotModifiedError,
        }
        error_map.update(kwargs.pop("error_map", {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls: ClsType[Iterator[bytes]] = kwargs.pop("cls", None)

        _request = build_items_get_environment_definition_request(
            workspace_id=workspace_id,
            environment_id=environment_id,
            format=format,
            headers=_headers,
            params=_params,
        )
        _request.url = self._client.format_url(_request.url)

        _stream = True
        pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
            _request, stream=_stream, **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200, 202]:
            response.read()  # Load the body in memory and close the socket
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize.failsafe_deserialize(_models.ErrorResponse, pipeline_response)
            raise HttpResponseError(response=response, model=error)

        response_headers = {}
        if response.status_code == 200:
            deserialized = response.iter_bytes()

        if response.status_code == 202:
            response_headers["Location"] = self._deserialize("str", response.headers.get("Location"))
            response_headers["x-ms-operation-id"] = self._deserialize("str", response.headers.get("x-ms-operation-id"))
            response_headers["Retry-After"] = self._deserialize("int", response.headers.get("Retry-After"))

            deserialized = response.iter_bytes()

        if cls:
            return cls(pipeline_response, deserialized, response_headers)  # type: ignore

        return deserialized  # type: ignore

    @distributed_trace
    def begin_get_environment_definition(
        self, workspace_id: str, environment_id: str, *, format: Optional[str] = None, **kwargs: Any
    ) -> LROPoller[_models.EnvironmentDefinitionResponse]:
        """Returns the specified environment public definition.

        This API supports `long running operations (LRO)
        </rest/api/fabric/articles/long-running-operation>`_.

        When you get a environment's public definition, the sensitivity label is not a part of the
        definition.

        Permissions
        -----------

         The caller must have *read and write* permissions for the environment.

        Required Delegated Scopes
        -------------------------

         Environment.ReadWrite.All or Item.ReadWrite.All

        Limitations
        -----------

         This API is blocked for a environment with an encrypted sensitivity label.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param workspace_id: The workspace ID. Required.
        :type workspace_id: str
        :param environment_id: The environment ID. Required.
        :type environment_id: str
        :keyword format: The format of the environment public definition. Default value is None.
        :paramtype format: str
        :return: An instance of LROPoller that returns EnvironmentDefinitionResponse
        :rtype:
         ~azure.core.polling.LROPoller[~microsoft.fabric.api.environment.models.EnvironmentDefinitionResponse]
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls: ClsType[_models.EnvironmentDefinitionResponse] = kwargs.pop("cls", None)
        polling: Union[bool, PollingMethod] = kwargs.pop("polling", True)
        lro_delay = kwargs.pop("polling_interval", self._config.polling_interval)
        cont_token: Optional[str] = kwargs.pop("continuation_token", None)
        if cont_token is None:
            raw_result = self._get_environment_definition_initial(
                workspace_id=workspace_id,
                environment_id=environment_id,
                format=format,
                cls=lambda x, y, z: x,
                headers=_headers,
                params=_params,
                **kwargs
            )
            raw_result.http_response.read()  # type: ignore
        kwargs.pop("error_map", None)

        def get_long_running_output(pipeline_response):
            deserialized = self._deserialize("EnvironmentDefinitionResponse", pipeline_response.http_response)
            if cls:
                return cls(pipeline_response, deserialized, {})  # type: ignore
            return deserialized

        if polling is True:
            polling_method: PollingMethod = cast(PollingMethod, LROBasePolling(lro_delay, **kwargs))
        elif polling is False:
            polling_method = cast(PollingMethod, NoPolling())
        else:
            polling_method = polling
        if cont_token:
            return LROPoller[_models.EnvironmentDefinitionResponse].from_continuation_token(
                polling_method=polling_method,
                continuation_token=cont_token,
                client=self._client,
                deserialization_callback=get_long_running_output,
            )
        return LROPoller[_models.EnvironmentDefinitionResponse](
            self._client, raw_result, get_long_running_output, polling_method  # type: ignore
        )

    def _update_environment_definition_initial(
        self,
        workspace_id: str,
        environment_id: str,
        update_environment_definition_request: Union[_models.UpdateEnvironmentDefinitionRequest, IO[bytes]],
        *,
        update_metadata: Optional[bool] = None,
        **kwargs: Any
    ) -> Iterator[bytes]:
        error_map: MutableMapping[int, Type[HttpResponseError]] = {
            401: ClientAuthenticationError,
            404: ResourceNotFoundError,
            409: ResourceExistsError,
            304: ResourceNotModifiedError,
        }
        error_map.update(kwargs.pop("error_map", {}) or {})

        _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
        _params = kwargs.pop("params", {}) or {}

        content_type: Optional[str] = kwargs.pop("content_type", _headers.pop("Content-Type", None))
        cls: ClsType[Iterator[bytes]] = kwargs.pop("cls", None)

        content_type = content_type or "application/json"
        _json = None
        _content = None
        if isinstance(update_environment_definition_request, (IOBase, bytes)):
            _content = update_environment_definition_request
        else:
            _json = self._serialize.body(update_environment_definition_request, "UpdateEnvironmentDefinitionRequest")

        _request = build_items_update_environment_definition_request(
            workspace_id=workspace_id,
            environment_id=environment_id,
            update_metadata=update_metadata,
            content_type=content_type,
            json=_json,
            content=_content,
            headers=_headers,
            params=_params,
        )
        _request.url = self._client.format_url(_request.url)

        _stream = True
        pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
            _request, stream=_stream, **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200, 202]:
            response.read()  # Load the body in memory and close the socket
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize.failsafe_deserialize(_models.ErrorResponse, pipeline_response)
            raise HttpResponseError(response=response, model=error)

        response_headers = {}
        if response.status_code == 200:
            deserialized = response.iter_bytes()

        if response.status_code == 202:
            response_headers["Location"] = self._deserialize("str", response.headers.get("Location"))
            response_headers["x-ms-operation-id"] = self._deserialize("str", response.headers.get("x-ms-operation-id"))
            response_headers["Retry-After"] = self._deserialize("int", response.headers.get("Retry-After"))

            deserialized = response.iter_bytes()

        if cls:
            return cls(pipeline_response, deserialized, response_headers)  # type: ignore

        return deserialized  # type: ignore

    @overload
    def begin_update_environment_definition(
        self,
        workspace_id: str,
        environment_id: str,
        update_environment_definition_request: _models.UpdateEnvironmentDefinitionRequest,
        *,
        update_metadata: Optional[bool] = None,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> LROPoller[None]:
        """Overrides the definition for the specified environment.

        This API supports `long running operations (LRO)
        </rest/api/fabric/articles/long-running-operation>`_.

        Updating the environment's definition, does not affect its sensitivity label.

        Permissions
        -----------

         The caller must have *read and write* permissions for the environment.

        Required Delegated Scopes
        -------------------------

         Environment.ReadWrite.All or Item.ReadWrite.All

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param workspace_id: The workspace ID. Required.
        :type workspace_id: str
        :param environment_id: The environment ID. Required.
        :type environment_id: str
        :param update_environment_definition_request: Update environment definition request payload.
         Required.
        :type update_environment_definition_request:
         ~microsoft.fabric.api.environment.models.UpdateEnvironmentDefinitionRequest
        :keyword update_metadata: When set to true and the .platform file is provided as part of the
         definition, the item's metadata is updated using the metadata in the .platform file. Default
         value is None.
        :paramtype update_metadata: bool
        :keyword content_type: Body Parameter content-type. Content type parameter for JSON body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: An instance of LROPoller that returns None
        :rtype: ~azure.core.polling.LROPoller[None]
        :raises ~azure.core.exceptions.HttpResponseError:
        """

    @overload
    def begin_update_environment_definition(
        self,
        workspace_id: str,
        environment_id: str,
        update_environment_definition_request: IO[bytes],
        *,
        update_metadata: Optional[bool] = None,
        content_type: str = "application/json",
        **kwargs: Any
    ) -> LROPoller[None]:
        """Overrides the definition for the specified environment.

        This API supports `long running operations (LRO)
        </rest/api/fabric/articles/long-running-operation>`_.

        Updating the environment's definition, does not affect its sensitivity label.

        Permissions
        -----------

         The caller must have *read and write* permissions for the environment.

        Required Delegated Scopes
        -------------------------

         Environment.ReadWrite.All or Item.ReadWrite.All

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param workspace_id: The workspace ID. Required.
        :type workspace_id: str
        :param environment_id: The environment ID. Required.
        :type environment_id: str
        :param update_environment_definition_request: Update environment definition request payload.
         Required.
        :type update_environment_definition_request: IO[bytes]
        :keyword update_metadata: When set to true and the .platform file is provided as part of the
         definition, the item's metadata is updated using the metadata in the .platform file. Default
         value is None.
        :paramtype update_metadata: bool
        :keyword content_type: Body Parameter content-type. Content type parameter for binary body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: An instance of LROPoller that returns None
        :rtype: ~azure.core.polling.LROPoller[None]
        :raises ~azure.core.exceptions.HttpResponseError:
        """

    @distributed_trace
    def begin_update_environment_definition(
        self,
        workspace_id: str,
        environment_id: str,
        update_environment_definition_request: Union[_models.UpdateEnvironmentDefinitionRequest, IO[bytes]],
        *,
        update_metadata: Optional[bool] = None,
        **kwargs: Any
    ) -> LROPoller[None]:
        """Overrides the definition for the specified environment.

        This API supports `long running operations (LRO)
        </rest/api/fabric/articles/long-running-operation>`_.

        Updating the environment's definition, does not affect its sensitivity label.

        Permissions
        -----------

         The caller must have *read and write* permissions for the environment.

        Required Delegated Scopes
        -------------------------

         Environment.ReadWrite.All or Item.ReadWrite.All

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param workspace_id: The workspace ID. Required.
        :type workspace_id: str
        :param environment_id: The environment ID. Required.
        :type environment_id: str
        :param update_environment_definition_request: Update environment definition request payload. Is
         either a UpdateEnvironmentDefinitionRequest type or a IO[bytes] type. Required.
        :type update_environment_definition_request:
         ~microsoft.fabric.api.environment.models.UpdateEnvironmentDefinitionRequest or IO[bytes]
        :keyword update_metadata: When set to true and the .platform file is provided as part of the
         definition, the item's metadata is updated using the metadata in the .platform file. Default
         value is None.
        :paramtype update_metadata: bool
        :return: An instance of LROPoller that returns None
        :rtype: ~azure.core.polling.LROPoller[None]
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
        _params = kwargs.pop("params", {}) or {}

        content_type: Optional[str] = kwargs.pop("content_type", _headers.pop("Content-Type", None))
        cls: ClsType[None] = kwargs.pop("cls", None)
        polling: Union[bool, PollingMethod] = kwargs.pop("polling", True)
        lro_delay = kwargs.pop("polling_interval", self._config.polling_interval)
        cont_token: Optional[str] = kwargs.pop("continuation_token", None)
        if cont_token is None:
            raw_result = self._update_environment_definition_initial(
                workspace_id=workspace_id,
                environment_id=environment_id,
                update_environment_definition_request=update_environment_definition_request,
                update_metadata=update_metadata,
                content_type=content_type,
                cls=lambda x, y, z: x,
                headers=_headers,
                params=_params,
                **kwargs
            )
            raw_result.http_response.read()  # type: ignore
        kwargs.pop("error_map", None)

        def get_long_running_output(pipeline_response):  # pylint: disable=inconsistent-return-statements
            if cls:
                return cls(pipeline_response, None, {})  # type: ignore

        if polling is True:
            polling_method: PollingMethod = cast(PollingMethod, LROBasePolling(lro_delay, **kwargs))
        elif polling is False:
            polling_method = cast(PollingMethod, NoPolling())
        else:
            polling_method = polling
        if cont_token:
            return LROPoller[None].from_continuation_token(
                polling_method=polling_method,
                continuation_token=cont_token,
                client=self._client,
                deserialization_callback=get_long_running_output,
            )
        return LROPoller[None](self._client, raw_result, get_long_running_output, polling_method)  # type: ignore

    def _publish_environment_initial(
        self, workspace_id: str, environment_id: str, *, preview: bool, **kwargs: Any
    ) -> Iterator[bytes]:
        error_map: MutableMapping[int, Type[HttpResponseError]] = {
            401: ClientAuthenticationError,
            404: ResourceNotFoundError,
            409: ResourceExistsError,
            304: ResourceNotModifiedError,
        }
        error_map.update(kwargs.pop("error_map", {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls: ClsType[Iterator[bytes]] = kwargs.pop("cls", None)

        _request = build_items_publish_environment_request(
            workspace_id=workspace_id,
            environment_id=environment_id,
            preview=preview,
            headers=_headers,
            params=_params,
        )
        _request.url = self._client.format_url(_request.url)

        _stream = True
        pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
            _request, stream=_stream, **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200, 202]:
            response.read()  # Load the body in memory and close the socket
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize.failsafe_deserialize(_models.ErrorResponse, pipeline_response)
            raise HttpResponseError(response=response, model=error)

        response_headers = {}
        if response.status_code == 200:
            deserialized = response.iter_bytes()

        if response.status_code == 202:
            response_headers["Location"] = self._deserialize("str", response.headers.get("Location"))
            response_headers["x-ms-operation-id"] = self._deserialize("str", response.headers.get("x-ms-operation-id"))
            response_headers["Retry-After"] = self._deserialize("int", response.headers.get("Retry-After"))

            deserialized = response.iter_bytes()

        if cls:
            return cls(pipeline_response, deserialized, response_headers)  # type: ignore

        return deserialized  # type: ignore

    @distributed_trace
    def begin_publish_environment(
        self, workspace_id: str, environment_id: str, *, preview: bool, **kwargs: Any
    ) -> LROPoller[_models.EnvironmentProperties]:
        """Trigger an environment publish operation.

        ..

           [!NOTE]
           This API is a release version of a preview version due to be deprecated on March 1, 2026.
           **When calling this API - callers must set the query parameter ``preview`` to the value
        ``false``\\ **


        This API supports `long running operations (LRO)
        </rest/api/fabric/articles/long-running-operation>`_.

        Permissions
        -----------

        Write permission for the environment item.

        Required Delegated Scopes
        -------------------------

        Item.ReadWrite.All or Environment.ReadWrite.All

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param workspace_id: The workspace ID. Required.
        :type workspace_id: str
        :param environment_id: The environment ID. Required.
        :type environment_id: str
        :keyword preview: This parameter specifies which version of the API to use. Set to ``false`` to
         use the release version. Required.
        :paramtype preview: bool
        :return: An instance of LROPoller that returns EnvironmentProperties
        :rtype:
         ~azure.core.polling.LROPoller[~microsoft.fabric.api.environment.models.EnvironmentProperties]
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls: ClsType[_models.EnvironmentProperties] = kwargs.pop("cls", None)
        polling: Union[bool, PollingMethod] = kwargs.pop("polling", True)
        lro_delay = kwargs.pop("polling_interval", self._config.polling_interval)
        cont_token: Optional[str] = kwargs.pop("continuation_token", None)
        if cont_token is None:
            raw_result = self._publish_environment_initial(
                workspace_id=workspace_id,
                environment_id=environment_id,
                preview=preview,
                cls=lambda x, y, z: x,
                headers=_headers,
                params=_params,
                **kwargs
            )
            raw_result.http_response.read()  # type: ignore
        kwargs.pop("error_map", None)

        def get_long_running_output(pipeline_response):
            deserialized = self._deserialize("EnvironmentProperties", pipeline_response.http_response)
            if cls:
                return cls(pipeline_response, deserialized, {})  # type: ignore
            return deserialized

        if polling is True:
            polling_method: PollingMethod = cast(PollingMethod, LROBasePolling(lro_delay, **kwargs))
        elif polling is False:
            polling_method = cast(PollingMethod, NoPolling())
        else:
            polling_method = polling
        if cont_token:
            return LROPoller[_models.EnvironmentProperties].from_continuation_token(
                polling_method=polling_method,
                continuation_token=cont_token,
                client=self._client,
                deserialization_callback=get_long_running_output,
            )
        return LROPoller[_models.EnvironmentProperties](
            self._client, raw_result, get_long_running_output, polling_method  # type: ignore
        )

    @distributed_trace
    def publish_environment_preview(
        self, workspace_id: str, environment_id: str, *, preview: bool, **kwargs: Any
    ) -> _models.EnvironmentProperties:
        """Trigger an environment publish operation.

        ..

           [!NOTE]
           This API is part of a Preview release and is provided for evaluation and development
        purposes only. It may change based on feedback and is not recommended for production use. This
        preview API will be deprecated on **March 1, 2026**\\ , and replaced by a stable version,
        available `here </rest/api/fabric/environment/items/publish-environment>`_. The new version
        introduces breaking changes and is not backward compatible.
           **When calling this API, callers must specify ``true`` as the value for the query parameter
        ``preview``.**


        Deprecation Notice
        ------------------

        A new query parameter ``preview`` has been introduced to facilitate this transition:


        * The ``preview`` query parameter currently defaults to ``true``.
        * Set the value of the ``preview`` query parameter to ``false`` to use the stable Release
        version of this API.
        * Starting March 1, 2026, the default value for ``preview`` will change to ``false``.

        It is recommended to migrate your integration to use the Release version as soon as possible by
        specifying ``false`` for the ``preview`` query parameter (\\ **the default value for the
        ``preview`` query parameter will be set to ``false`` on API's deprecation date**\\ ).

        The following incompatible changes were introduced in the Release version:


        * Response is following `long running operations (LRO)
        </rest/api/fabric/articles/long-running-operation>`_ pattern and HTTP response code 202 may be
        returned.

        Permissions
        -----------

        Write permission for the environment item.

        Required Delegated Scopes
        -------------------------

        Item.ReadWrite.All or Environment.ReadWrite.All

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param workspace_id: The workspace ID. Required.
        :type workspace_id: str
        :param environment_id: The environment ID. Required.
        :type environment_id: str
        :keyword preview: This parameter specifies which version of the API to use. Set to ``true`` to
         use the preview version described on this page, or to ``false`` to use the Release version
         detailed `here </rest/api/fabric/environment/items/publish-environment>`_.
         Starting March 1, 2026, the default value for ``preview`` will change to ``false``. Required.
        :paramtype preview: bool
        :return: EnvironmentProperties
        :rtype: ~microsoft.fabric.api.environment.models.EnvironmentProperties
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        error_map: MutableMapping[int, Type[HttpResponseError]] = {
            401: ClientAuthenticationError,
            404: ResourceNotFoundError,
            409: ResourceExistsError,
            304: ResourceNotModifiedError,
        }
        error_map.update(kwargs.pop("error_map", {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls: ClsType[_models.EnvironmentProperties] = kwargs.pop("cls", None)

        _request = build_items_publish_environment_preview_request(
            workspace_id=workspace_id,
            environment_id=environment_id,
            preview=preview,
            headers=_headers,
            params=_params,
        )
        _request.url = self._client.format_url(_request.url)

        _stream = False
        pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
            _request, stream=_stream, **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize.failsafe_deserialize(_models.ErrorResponse, pipeline_response)
            raise HttpResponseError(response=response, model=error)

        deserialized = self._deserialize("EnvironmentProperties", pipeline_response.http_response)

        if cls:
            return cls(pipeline_response, deserialized, {})  # type: ignore

        return deserialized  # type: ignore

    @distributed_trace
    def cancel_publish_environment(
        self, workspace_id: str, environment_id: str, **kwargs: Any
    ) -> _models.EnvironmentProperties:
        """Trigger an environment publish cancellation.

        Permissions
        -----------

        Write permission for the environment item.

        Required Delegated Scopes
        -------------------------

        Item.ReadWrite.All or Environment.ReadWrite.All

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param workspace_id: The workspace ID. Required.
        :type workspace_id: str
        :param environment_id: The environment ID. Required.
        :type environment_id: str
        :return: EnvironmentProperties
        :rtype: ~microsoft.fabric.api.environment.models.EnvironmentProperties
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        error_map: MutableMapping[int, Type[HttpResponseError]] = {
            401: ClientAuthenticationError,
            404: ResourceNotFoundError,
            409: ResourceExistsError,
            304: ResourceNotModifiedError,
        }
        error_map.update(kwargs.pop("error_map", {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls: ClsType[_models.EnvironmentProperties] = kwargs.pop("cls", None)

        _request = build_items_cancel_publish_environment_request(
            workspace_id=workspace_id,
            environment_id=environment_id,
            headers=_headers,
            params=_params,
        )
        _request.url = self._client.format_url(_request.url)

        _stream = False
        pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
            _request, stream=_stream, **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize.failsafe_deserialize(_models.ErrorResponse, pipeline_response)
            raise HttpResponseError(response=response, model=error)

        deserialized = self._deserialize("EnvironmentProperties", pipeline_response.http_response)

        if cls:
            return cls(pipeline_response, deserialized, {})  # type: ignore

        return deserialized  # type: ignore
