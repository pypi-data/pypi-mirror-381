# coding=utf-8
# pylint: disable=too-many-lines
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.10.3, generator: @autorest/python@6.15.0)
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

import sys
from typing import Any, List, Optional, TYPE_CHECKING, Union

from .. import _serialization

if sys.version_info >= (3, 9):
    from collections.abc import MutableMapping
else:
    from typing import MutableMapping  # type: ignore  # pylint: disable=ungrouped-imports

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from .. import models as _models
JSON = MutableMapping[str, Any]  # pylint: disable=unsubscriptable-object


class CreateMLModelRequest(_serialization.Model):
    """Create machine learning model request payload.

    All required parameters must be populated in order to send to server.

    :ivar display_name: The machine learning model display name. The display name must follow
     naming rules according to item type. Required.
    :vartype display_name: str
    :ivar description: The machine learning model description. Maximum length is 256 characters.
    :vartype description: str
    :ivar folder_id: The folder ID. If not specified or null, the machine learning model is created
     with the workspace as its folder.
    :vartype folder_id: str
    """

    _validation = {
        "display_name": {"required": True},
    }

    _attribute_map = {
        "display_name": {"key": "displayName", "type": "str"},
        "description": {"key": "description", "type": "str"},
        "folder_id": {"key": "folderId", "type": "str"},
    }

    def __init__(
        self, *, display_name: str, description: Optional[str] = None, folder_id: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword display_name: The machine learning model display name. The display name must follow
         naming rules according to item type. Required.
        :paramtype display_name: str
        :keyword description: The machine learning model description. Maximum length is 256 characters.
        :paramtype description: str
        :keyword folder_id: The folder ID. If not specified or null, the machine learning model is
         created with the workspace as its folder.
        :paramtype folder_id: str
        """
        super().__init__(**kwargs)
        self.display_name = display_name
        self.description = description
        self.folder_id = folder_id


class ErrorRelatedResource(_serialization.Model):
    """The error related resource details object.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar resource_id: The resource ID that's involved in the error. Required.
    :vartype resource_id: str
    :ivar resource_type: The type of the resource that's involved in the error. Required.
    :vartype resource_type: str
    """

    _validation = {
        "resource_id": {"required": True, "readonly": True},
        "resource_type": {"required": True, "readonly": True},
    }

    _attribute_map = {
        "resource_id": {"key": "resourceId", "type": "str"},
        "resource_type": {"key": "resourceType", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.resource_id = None
        self.resource_type = None


class ErrorResponseDetails(_serialization.Model):
    """The error response details.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar error_code: A specific identifier that provides information about an error condition,
     allowing for standardized communication between our service and its users. Required.
    :vartype error_code: str
    :ivar message: A human readable representation of the error. Required.
    :vartype message: str
    :ivar related_resource: The error related resource details.
    :vartype related_resource: ~microsoft.fabric.api.mlmodel.models.ErrorRelatedResource
    """

    _validation = {
        "error_code": {"required": True, "readonly": True},
        "message": {"required": True, "readonly": True},
        "related_resource": {"readonly": True},
    }

    _attribute_map = {
        "error_code": {"key": "errorCode", "type": "str"},
        "message": {"key": "message", "type": "str"},
        "related_resource": {"key": "relatedResource", "type": "ErrorRelatedResource"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.error_code = None
        self.message = None
        self.related_resource = None


class ErrorResponse(ErrorResponseDetails):
    """The error response.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar error_code: A specific identifier that provides information about an error condition,
     allowing for standardized communication between our service and its users. Required.
    :vartype error_code: str
    :ivar message: A human readable representation of the error. Required.
    :vartype message: str
    :ivar related_resource: The error related resource details.
    :vartype related_resource: ~microsoft.fabric.api.mlmodel.models.ErrorRelatedResource
    :ivar request_id: ID of the request associated with the error.
    :vartype request_id: str
    :ivar more_details: List of additional error details.
    :vartype more_details: list[~microsoft.fabric.api.mlmodel.models.ErrorResponseDetails]
    """

    _validation = {
        "error_code": {"required": True, "readonly": True},
        "message": {"required": True, "readonly": True},
        "related_resource": {"readonly": True},
        "request_id": {"readonly": True},
        "more_details": {"readonly": True},
    }

    _attribute_map = {
        "error_code": {"key": "errorCode", "type": "str"},
        "message": {"key": "message", "type": "str"},
        "related_resource": {"key": "relatedResource", "type": "ErrorRelatedResource"},
        "request_id": {"key": "requestId", "type": "str"},
        "more_details": {"key": "moreDetails", "type": "[ErrorResponseDetails]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.request_id = None
        self.more_details = None


class Item(_serialization.Model):
    """An item object.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: The item ID.
    :vartype id: str
    :ivar display_name: The item display name.
    :vartype display_name: str
    :ivar description: The item description.
    :vartype description: str
    :ivar type: The item type. Required. Known values are: "Dashboard", "Report", "SemanticModel",
     "PaginatedReport", "Datamart", "Lakehouse", "Eventhouse", "Environment", "KQLDatabase",
     "KQLQueryset", "KQLDashboard", "DataPipeline", "Notebook", "SparkJobDefinition",
     "MLExperiment", "MLModel", "Warehouse", "Eventstream", "SQLEndpoint", "MirroredWarehouse",
     "MirroredDatabase", "Reflex", "GraphQLApi", "MountedDataFactory", "ApacheAirflowJob",
     "SQLDatabase", "CopyJob", "VariableLibrary", "MirroredAzureDatabricksCatalog", "Dataflow",
     "WarehouseSnapshot", "DigitalTwinBuilder", "DigitalTwinBuilderFlow", "AnomalyDetector", "Map",
     and "UserDataFunction".
    :vartype type: str or ~microsoft.fabric.api.mlmodel.models.ItemType
    :ivar workspace_id: The workspace ID.
    :vartype workspace_id: str
    :ivar folder_id: The folder ID.
    :vartype folder_id: str
    :ivar tags: List of applied tags.
    :vartype tags: list[~microsoft.fabric.api.mlmodel.models.ItemTag]
    """

    _validation = {
        "id": {"readonly": True},
        "type": {"required": True},
        "workspace_id": {"readonly": True},
        "folder_id": {"readonly": True},
        "tags": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "display_name": {"key": "displayName", "type": "str"},
        "description": {"key": "description", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "workspace_id": {"key": "workspaceId", "type": "str"},
        "folder_id": {"key": "folderId", "type": "str"},
        "tags": {"key": "tags", "type": "[ItemTag]"},
    }

    def __init__(
        self,
        *,
        type: Union[str, "_models.ItemType"],
        display_name: Optional[str] = None,
        description: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword display_name: The item display name.
        :paramtype display_name: str
        :keyword description: The item description.
        :paramtype description: str
        :keyword type: The item type. Required. Known values are: "Dashboard", "Report",
         "SemanticModel", "PaginatedReport", "Datamart", "Lakehouse", "Eventhouse", "Environment",
         "KQLDatabase", "KQLQueryset", "KQLDashboard", "DataPipeline", "Notebook", "SparkJobDefinition",
         "MLExperiment", "MLModel", "Warehouse", "Eventstream", "SQLEndpoint", "MirroredWarehouse",
         "MirroredDatabase", "Reflex", "GraphQLApi", "MountedDataFactory", "ApacheAirflowJob",
         "SQLDatabase", "CopyJob", "VariableLibrary", "MirroredAzureDatabricksCatalog", "Dataflow",
         "WarehouseSnapshot", "DigitalTwinBuilder", "DigitalTwinBuilderFlow", "AnomalyDetector", "Map",
         and "UserDataFunction".
        :paramtype type: str or ~microsoft.fabric.api.mlmodel.models.ItemType
        """
        super().__init__(**kwargs)
        self.id = None
        self.display_name = display_name
        self.description = description
        self.type = type
        self.workspace_id = None
        self.folder_id = None
        self.tags = None


class ItemTag(_serialization.Model):
    """Represents a tag applied on an item.

    All required parameters must be populated in order to send to server.

    :ivar id: The tag ID. Required.
    :vartype id: str
    :ivar display_name: The name of the tag. Required.
    :vartype display_name: str
    """

    _validation = {
        "id": {"required": True},
        "display_name": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "display_name": {"key": "displayName", "type": "str"},
    }

    def __init__(self, *, id: str, display_name: str, **kwargs: Any) -> None:  # pylint: disable=redefined-builtin
        """
        :keyword id: The tag ID. Required.
        :paramtype id: str
        :keyword display_name: The name of the tag. Required.
        :paramtype display_name: str
        """
        super().__init__(**kwargs)
        self.id = id
        self.display_name = display_name


class MLModel(Item):
    """A machine learning model object.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: The item ID.
    :vartype id: str
    :ivar display_name: The item display name.
    :vartype display_name: str
    :ivar description: The item description.
    :vartype description: str
    :ivar type: The item type. Required. Known values are: "Dashboard", "Report", "SemanticModel",
     "PaginatedReport", "Datamart", "Lakehouse", "Eventhouse", "Environment", "KQLDatabase",
     "KQLQueryset", "KQLDashboard", "DataPipeline", "Notebook", "SparkJobDefinition",
     "MLExperiment", "MLModel", "Warehouse", "Eventstream", "SQLEndpoint", "MirroredWarehouse",
     "MirroredDatabase", "Reflex", "GraphQLApi", "MountedDataFactory", "ApacheAirflowJob",
     "SQLDatabase", "CopyJob", "VariableLibrary", "MirroredAzureDatabricksCatalog", "Dataflow",
     "WarehouseSnapshot", "DigitalTwinBuilder", "DigitalTwinBuilderFlow", "AnomalyDetector", "Map",
     and "UserDataFunction".
    :vartype type: str or ~microsoft.fabric.api.mlmodel.models.ItemType
    :ivar workspace_id: The workspace ID.
    :vartype workspace_id: str
    :ivar folder_id: The folder ID.
    :vartype folder_id: str
    :ivar tags: List of applied tags.
    :vartype tags: list[~microsoft.fabric.api.mlmodel.models.ItemTag]
    """


class MLModelDataSchema(_serialization.Model):
    """Machine learning model data schema.

    All required parameters must be populated in order to send to server.

    :ivar type: The type of the signature. Required.
    :vartype type: str
    :ivar name: The name of the signature. Required.
    :vartype name: str
    :ivar required: The boolean value to indicate if the signature is required or no. True -
     Required, False - Not Required. Required.
    :vartype required: bool
    """

    _validation = {
        "type": {"required": True},
        "name": {"required": True},
        "required": {"required": True},
    }

    _attribute_map = {
        "type": {"key": "type", "type": "str"},
        "name": {"key": "name", "type": "str"},
        "required": {"key": "required", "type": "bool"},
    }

    def __init__(self, *, type: str, name: str, required: bool, **kwargs: Any) -> None:
        """
        :keyword type: The type of the signature. Required.
        :paramtype type: str
        :keyword name: The name of the signature. Required.
        :paramtype name: str
        :keyword required: The boolean value to indicate if the signature is required or no. True -
         Required, False - Not Required. Required.
        :paramtype required: bool
        """
        super().__init__(**kwargs)
        self.type = type
        self.name = name
        self.required = required


class MLModelEndpoint(_serialization.Model):
    """A machine learning model endpoint object.

    All required parameters must be populated in order to send to server.

    :ivar default_version_assignment_behavior: The default version assignment behavior of a given
     machine learning model endpoint. Additional EndpointDefaultVersionConfigurationPolicy types may
     be added over time. Required. Known values are: "StaticallyConfigured" and "NotConfigured".
    :vartype default_version_assignment_behavior: str or
     ~microsoft.fabric.api.mlmodel.models.EndpointDefaultVersionConfigurationPolicy
    :ivar default_version_name: Default machine learning model endpoint version name. Required.
    :vartype default_version_name: str
    :ivar default_version_info: Machine Learning Model Endpoint version information. Required.
    :vartype default_version_info: ~microsoft.fabric.api.mlmodel.models.MLModelEndpointVersionInfo
    """

    _validation = {
        "default_version_assignment_behavior": {"required": True},
        "default_version_name": {"required": True},
        "default_version_info": {"required": True},
    }

    _attribute_map = {
        "default_version_assignment_behavior": {"key": "defaultVersionAssignmentBehavior", "type": "str"},
        "default_version_name": {"key": "defaultVersionName", "type": "str"},
        "default_version_info": {"key": "defaultVersionInfo", "type": "MLModelEndpointVersionInfo"},
    }

    def __init__(
        self,
        *,
        default_version_assignment_behavior: Union[str, "_models.EndpointDefaultVersionConfigurationPolicy"],
        default_version_name: str,
        default_version_info: "_models.MLModelEndpointVersionInfo",
        **kwargs: Any
    ) -> None:
        """
        :keyword default_version_assignment_behavior: The default version assignment behavior of a
         given machine learning model endpoint. Additional EndpointDefaultVersionConfigurationPolicy
         types may be added over time. Required. Known values are: "StaticallyConfigured" and
         "NotConfigured".
        :paramtype default_version_assignment_behavior: str or
         ~microsoft.fabric.api.mlmodel.models.EndpointDefaultVersionConfigurationPolicy
        :keyword default_version_name: Default machine learning model endpoint version name. Required.
        :paramtype default_version_name: str
        :keyword default_version_info: Machine Learning Model Endpoint version information. Required.
        :paramtype default_version_info:
         ~microsoft.fabric.api.mlmodel.models.MLModelEndpointVersionInfo
        """
        super().__init__(**kwargs)
        self.default_version_assignment_behavior = default_version_assignment_behavior
        self.default_version_name = default_version_name
        self.default_version_info = default_version_info


class MLModelEndpointVersionInfo(_serialization.Model):
    """Machine Learning Model Endpoint version information.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar version_name: The machine learning model version name. Required.
    :vartype version_name: str
    :ivar status: The status of a given machine learning model endpoint version. Additional
     ModelEndpointVersionStatus types may be added over time. Required. Known values are:
     "Deactivated", "Activating", "Deactivating", "Active", and "Failed".
    :vartype status: str or ~microsoft.fabric.api.mlmodel.models.ModelEndpointVersionStatus
    :ivar input_signature: The input signature for this version of the machine learning model.
    :vartype input_signature: list[~microsoft.fabric.api.mlmodel.models.MLModelDataSchema]
    :ivar output_signature: The output signature for this version of the machine learning model.
    :vartype output_signature: list[~microsoft.fabric.api.mlmodel.models.MLModelDataSchema]
    :ivar scale_rule: Machine learning model endpoint scale rule. Additional ScaleRule types may be
     added over time. Known values are: "AlwaysOn" and "AllowScaleToZero".
    :vartype scale_rule: str or ~microsoft.fabric.api.mlmodel.models.ScaleRule
    """

    _validation = {
        "version_name": {"required": True, "readonly": True},
        "status": {"required": True, "readonly": True},
        "input_signature": {"readonly": True},
        "output_signature": {"readonly": True},
    }

    _attribute_map = {
        "version_name": {"key": "versionName", "type": "str"},
        "status": {"key": "status", "type": "str"},
        "input_signature": {"key": "inputSignature", "type": "[MLModelDataSchema]"},
        "output_signature": {"key": "outputSignature", "type": "[MLModelDataSchema]"},
        "scale_rule": {"key": "scaleRule", "type": "str"},
    }

    def __init__(self, *, scale_rule: Optional[Union[str, "_models.ScaleRule"]] = None, **kwargs: Any) -> None:
        """
        :keyword scale_rule: Machine learning model endpoint scale rule. Additional ScaleRule types may
         be added over time. Known values are: "AlwaysOn" and "AllowScaleToZero".
        :paramtype scale_rule: str or ~microsoft.fabric.api.mlmodel.models.ScaleRule
        """
        super().__init__(**kwargs)
        self.version_name = None
        self.status = None
        self.input_signature = None
        self.output_signature = None
        self.scale_rule = scale_rule


class PaginatedResponse(_serialization.Model):
    """PaginatedResponse.

    :ivar continuation_token: The token for the next result set batch. If there are no more
     records, it's removed from the response.
    :vartype continuation_token: str
    :ivar continuation_uri: The URI of the next result set batch. If there are no more records,
     it's removed from the response.
    :vartype continuation_uri: str
    """

    _attribute_map = {
        "continuation_token": {"key": "continuationToken", "type": "str"},
        "continuation_uri": {"key": "continuationUri", "type": "str"},
    }

    def __init__(
        self, *, continuation_token: Optional[str] = None, continuation_uri: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword continuation_token: The token for the next result set batch. If there are no more
         records, it's removed from the response.
        :paramtype continuation_token: str
        :keyword continuation_uri: The URI of the next result set batch. If there are no more records,
         it's removed from the response.
        :paramtype continuation_uri: str
        """
        super().__init__(**kwargs)
        self.continuation_token = continuation_token
        self.continuation_uri = continuation_uri


class MLModelEndpointVersions(PaginatedResponse):
    """All MLModel Versions Endpoints info.

    All required parameters must be populated in order to send to server.

    :ivar continuation_token: The token for the next result set batch. If there are no more
     records, it's removed from the response.
    :vartype continuation_token: str
    :ivar continuation_uri: The URI of the next result set batch. If there are no more records,
     it's removed from the response.
    :vartype continuation_uri: str
    :ivar value: The information about all versions available as endpoint for this MLModel.
     Required.
    :vartype value: list[~microsoft.fabric.api.mlmodel.models.MLModelEndpointVersionInfo]
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "continuation_token": {"key": "continuationToken", "type": "str"},
        "continuation_uri": {"key": "continuationUri", "type": "str"},
        "value": {"key": "value", "type": "[MLModelEndpointVersionInfo]"},
    }

    def __init__(
        self,
        *,
        value: List["_models.MLModelEndpointVersionInfo"],
        continuation_token: Optional[str] = None,
        continuation_uri: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword continuation_token: The token for the next result set batch. If there are no more
         records, it's removed from the response.
        :paramtype continuation_token: str
        :keyword continuation_uri: The URI of the next result set batch. If there are no more records,
         it's removed from the response.
        :paramtype continuation_uri: str
        :keyword value: The information about all versions available as endpoint for this MLModel.
         Required.
        :paramtype value: list[~microsoft.fabric.api.mlmodel.models.MLModelEndpointVersionInfo]
        """
        super().__init__(continuation_token=continuation_token, continuation_uri=continuation_uri, **kwargs)
        self.value = value


class MLModels(PaginatedResponse):
    """A list of machine learning models.

    All required parameters must be populated in order to send to server.

    :ivar continuation_token: The token for the next result set batch. If there are no more
     records, it's removed from the response.
    :vartype continuation_token: str
    :ivar continuation_uri: The URI of the next result set batch. If there are no more records,
     it's removed from the response.
    :vartype continuation_uri: str
    :ivar value: A list of machine learning models. Required.
    :vartype value: list[~microsoft.fabric.api.mlmodel.models.MLModel]
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "continuation_token": {"key": "continuationToken", "type": "str"},
        "continuation_uri": {"key": "continuationUri", "type": "str"},
        "value": {"key": "value", "type": "[MLModel]"},
    }

    def __init__(
        self,
        *,
        value: List["_models.MLModel"],
        continuation_token: Optional[str] = None,
        continuation_uri: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword continuation_token: The token for the next result set batch. If there are no more
         records, it's removed from the response.
        :paramtype continuation_token: str
        :keyword continuation_uri: The URI of the next result set batch. If there are no more records,
         it's removed from the response.
        :paramtype continuation_uri: str
        :keyword value: A list of machine learning models. Required.
        :paramtype value: list[~microsoft.fabric.api.mlmodel.models.MLModel]
        """
        super().__init__(continuation_token=continuation_token, continuation_uri=continuation_uri, **kwargs)
        self.value = value


class ScoreDataRequest(_serialization.Model):
    """Machine learning model endpoint request to score the given input data.

    All required parameters must be populated in order to send to server.

    :ivar format_type: Format type of data. Additional Format types may be added over time.
     "dataframe"
    :vartype format_type: str or ~microsoft.fabric.api.mlmodel.models.FormatType
    :ivar orientation: Orientation of data. Additional Orientation types may be added over time.
     Known values are: "split", "values", "record", "index", and "table".
    :vartype orientation: str or ~microsoft.fabric.api.mlmodel.models.Orientation
    :ivar inputs: Machine learning inputs to score in the form of Pandas dataset arrays that can
     include strings, numbers, integers and booleans. Required.
    :vartype inputs: list[list[JSON]]
    """

    _validation = {
        "inputs": {"required": True},
    }

    _attribute_map = {
        "format_type": {"key": "formatType", "type": "str"},
        "orientation": {"key": "orientation", "type": "str"},
        "inputs": {"key": "inputs", "type": "[[object]]"},
    }

    def __init__(
        self,
        *,
        inputs: List[List[JSON]],
        format_type: Optional[Union[str, "_models.FormatType"]] = None,
        orientation: Optional[Union[str, "_models.Orientation"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword format_type: Format type of data. Additional Format types may be added over time.
         "dataframe"
        :paramtype format_type: str or ~microsoft.fabric.api.mlmodel.models.FormatType
        :keyword orientation: Orientation of data. Additional Orientation types may be added over time.
         Known values are: "split", "values", "record", "index", and "table".
        :paramtype orientation: str or ~microsoft.fabric.api.mlmodel.models.Orientation
        :keyword inputs: Machine learning inputs to score in the form of Pandas dataset arrays that can
         include strings, numbers, integers and booleans. Required.
        :paramtype inputs: list[list[JSON]]
        """
        super().__init__(**kwargs)
        self.format_type = format_type
        self.orientation = orientation
        self.inputs = inputs


class ScoreDataResponse(_serialization.Model):
    """Machine learning model endpoint response to score the given input data.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar format_type: Format type of data. Additional Format types may be added over time.
     Required. "dataframe"
    :vartype format_type: str or ~microsoft.fabric.api.mlmodel.models.FormatType
    :ivar orientation: Orientation of data. Additional Orientation types may be added over time.
     Required. Known values are: "split", "values", "record", "index", and "table".
    :vartype orientation: str or ~microsoft.fabric.api.mlmodel.models.Orientation
    :ivar predictions: Machine learning predictions represented in the form of Pandas dataset
     arrays that can include strings, numbers, integers and booleans. Required.
    :vartype predictions: list[list[JSON]]
    """

    _validation = {
        "format_type": {"required": True},
        "orientation": {"required": True},
        "predictions": {"required": True, "readonly": True},
    }

    _attribute_map = {
        "format_type": {"key": "formatType", "type": "str"},
        "orientation": {"key": "orientation", "type": "str"},
        "predictions": {"key": "predictions", "type": "[[object]]"},
    }

    def __init__(
        self,
        *,
        format_type: Union[str, "_models.FormatType"],
        orientation: Union[str, "_models.Orientation"],
        **kwargs: Any
    ) -> None:
        """
        :keyword format_type: Format type of data. Additional Format types may be added over time.
         Required. "dataframe"
        :paramtype format_type: str or ~microsoft.fabric.api.mlmodel.models.FormatType
        :keyword orientation: Orientation of data. Additional Orientation types may be added over time.
         Required. Known values are: "split", "values", "record", "index", and "table".
        :paramtype orientation: str or ~microsoft.fabric.api.mlmodel.models.Orientation
        """
        super().__init__(**kwargs)
        self.format_type = format_type
        self.orientation = orientation
        self.predictions = None


class UpdateMLModelEndpointRequest(_serialization.Model):
    """Machine learning model endpoint request body to update Model Endpoint properties.

    :ivar default_version_name: Default machine learning model endpoint version name.
    :vartype default_version_name: str
    :ivar default_version_assignment_behavior: The default version assignment behavior of a given
     machine learning model endpoint. Additional EndpointDefaultVersionConfigurationPolicy types may
     be added over time. Known values are: "StaticallyConfigured" and "NotConfigured".
    :vartype default_version_assignment_behavior: str or
     ~microsoft.fabric.api.mlmodel.models.EndpointDefaultVersionConfigurationPolicy
    """

    _attribute_map = {
        "default_version_name": {"key": "defaultVersionName", "type": "str"},
        "default_version_assignment_behavior": {"key": "defaultVersionAssignmentBehavior", "type": "str"},
    }

    def __init__(
        self,
        *,
        default_version_name: Optional[str] = None,
        default_version_assignment_behavior: Optional[
            Union[str, "_models.EndpointDefaultVersionConfigurationPolicy"]
        ] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword default_version_name: Default machine learning model endpoint version name.
        :paramtype default_version_name: str
        :keyword default_version_assignment_behavior: The default version assignment behavior of a
         given machine learning model endpoint. Additional EndpointDefaultVersionConfigurationPolicy
         types may be added over time. Known values are: "StaticallyConfigured" and "NotConfigured".
        :paramtype default_version_assignment_behavior: str or
         ~microsoft.fabric.api.mlmodel.models.EndpointDefaultVersionConfigurationPolicy
        """
        super().__init__(**kwargs)
        self.default_version_name = default_version_name
        self.default_version_assignment_behavior = default_version_assignment_behavior


class UpdateMLModelEndpointVersionRequest(_serialization.Model):
    """Machine learning model endpoint version configuration info.

    :ivar scale_rule: Machine learning model endpoint scale rule. Additional ScaleRule types may be
     added over time. Known values are: "AlwaysOn" and "AllowScaleToZero".
    :vartype scale_rule: str or ~microsoft.fabric.api.mlmodel.models.ScaleRule
    """

    _attribute_map = {
        "scale_rule": {"key": "scaleRule", "type": "str"},
    }

    def __init__(self, *, scale_rule: Optional[Union[str, "_models.ScaleRule"]] = None, **kwargs: Any) -> None:
        """
        :keyword scale_rule: Machine learning model endpoint scale rule. Additional ScaleRule types may
         be added over time. Known values are: "AlwaysOn" and "AllowScaleToZero".
        :paramtype scale_rule: str or ~microsoft.fabric.api.mlmodel.models.ScaleRule
        """
        super().__init__(**kwargs)
        self.scale_rule = scale_rule


class UpdateMLModelRequest(_serialization.Model):
    """Update machine learning model request.

    :ivar description: The machine learning model description. Maximum length is 256 characters.
    :vartype description: str
    """

    _attribute_map = {
        "description": {"key": "description", "type": "str"},
    }

    def __init__(self, *, description: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword description: The machine learning model description. Maximum length is 256 characters.
        :paramtype description: str
        """
        super().__init__(**kwargs)
        self.description = description
