# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.10.3, generator: @autorest/python@6.15.0)
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from enum import Enum
from azure.core import CaseInsensitiveEnumMeta


class EndpointDefaultVersionConfigurationPolicy(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The default version assignment behavior of a given machine learning model endpoint. Additional
    EndpointDefaultVersionConfigurationPolicy types may be added over time.
    """

    STATICALLY_CONFIGURED = "StaticallyConfigured"
    """The default version is statically configured."""
    NOT_CONFIGURED = "NotConfigured"
    """No default version has been configured."""


class FormatType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Format type of data. Additional Format types may be added over time."""

    DATAFRAME = "dataframe"
    """Dataframe format type."""


class ItemType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The type of the item. Additional item types may be added over time."""

    DASHBOARD = "Dashboard"
    """PowerBI dashboard."""
    REPORT = "Report"
    """PowerBI report."""
    SEMANTIC_MODEL = "SemanticModel"
    """PowerBI semantic model."""
    PAGINATED_REPORT = "PaginatedReport"
    """PowerBI paginated report."""
    DATAMART = "Datamart"
    """PowerBI datamart."""
    LAKEHOUSE = "Lakehouse"
    """A lakehouse."""
    EVENTHOUSE = "Eventhouse"
    """An eventhouse."""
    ENVIRONMENT = "Environment"
    """An environment."""
    KQL_DATABASE = "KQLDatabase"
    """A KQL database."""
    KQL_QUERYSET = "KQLQueryset"
    """A KQL queryset."""
    KQL_DASHBOARD = "KQLDashboard"
    """A KQL dashboard."""
    DATA_PIPELINE = "DataPipeline"
    """A data pipeline."""
    NOTEBOOK = "Notebook"
    """A notebook."""
    SPARK_JOB_DEFINITION = "SparkJobDefinition"
    """A spark job definition."""
    ML_EXPERIMENT = "MLExperiment"
    """A machine learning experiment."""
    ML_MODEL = "MLModel"
    """A machine learning model."""
    WAREHOUSE = "Warehouse"
    """A warehouse."""
    EVENTSTREAM = "Eventstream"
    """An eventstream."""
    SQL_ENDPOINT = "SQLEndpoint"
    """An SQL endpoint."""
    MIRRORED_WAREHOUSE = "MirroredWarehouse"
    """A mirrored warehouse."""
    MIRRORED_DATABASE = "MirroredDatabase"
    """A mirrored database."""
    REFLEX = "Reflex"
    """A Reflex."""
    GRAPH_QL_API = "GraphQLApi"
    """An API for GraphQL item."""
    MOUNTED_DATA_FACTORY = "MountedDataFactory"
    """A MountedDataFactory."""
    APACHE_AIRFLOW_JOB = "ApacheAirflowJob"
    """An ApacheAirflowJob."""
    SQL_DATABASE = "SQLDatabase"
    """A SQLDatabase."""
    COPY_JOB = "CopyJob"
    """A Copy job."""
    VARIABLE_LIBRARY = "VariableLibrary"
    """A VariableLibrary."""
    MIRRORED_AZURE_DATABRICKS_CATALOG = "MirroredAzureDatabricksCatalog"
    """A mirrored azure databricks catalog."""
    DATAFLOW = "Dataflow"
    """A Dataflow."""
    WAREHOUSE_SNAPSHOT = "WarehouseSnapshot"
    """A Warehouse snapshot."""
    DIGITAL_TWIN_BUILDER = "DigitalTwinBuilder"
    """A DigitalTwinBuilder."""
    DIGITAL_TWIN_BUILDER_FLOW = "DigitalTwinBuilderFlow"
    """A Digital Twin Builder Flow."""
    ANOMALY_DETECTOR = "AnomalyDetector"
    """An Anomaly Detector."""
    MAP = "Map"
    """A Map."""
    USER_DATA_FUNCTION = "UserDataFunction"
    """A User Data Function."""


class ModelEndpointVersionStatus(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The status of a given machine learning model endpoint version. Additional
    ModelEndpointVersionStatus types may be added over time.
    """

    DEACTIVATED = "Deactivated"
    """All resources are deactivated."""
    ACTIVATING = "Activating"
    """Machine learning model endpoint activation is under progress."""
    DEACTIVATING = "Deactivating"
    """Machine learning model endpoint deactivation is in progress."""
    ACTIVE = "Active"
    """Machine learning model endpoint is available to serve score requests."""
    FAILED = "Failed"
    """Machine learning model endpoint is in failed state."""


class Orientation(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Orientation of data. Additional Orientation types may be added over time."""

    SPLIT = "split"
    """Split orientation."""
    VALUES = "values"
    """Values orientation."""
    RECORD = "record"
    """Record orientation."""
    INDEX = "index"
    """Index orientation."""
    TABLE = "table"
    """Table orientation."""


class ScaleRule(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Machine learning model endpoint scale rule. Additional ScaleRule types may be added over time."""

    ALWAYS_ON = "AlwaysOn"
    """Machine learning model endpoint should be AlwaysOn."""
    ALLOW_SCALE_TO_ZERO = "AllowScaleToZero"
    """Machine learning model endpoint can be scaled to zero after a period of inactivity."""
