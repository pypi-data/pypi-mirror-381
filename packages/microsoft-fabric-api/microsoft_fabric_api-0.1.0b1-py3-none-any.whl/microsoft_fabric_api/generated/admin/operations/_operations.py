# pylint: disable=too-many-lines,too-many-statements
# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.10.3, generator: @autorest/python@6.15.0)
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------
from io import IOBase
import sys
from typing import Any, Callable, Dict, IO, Iterable, Iterator, Optional, Type, TypeVar, Union, cast, overload

from azure.core.exceptions import (
    ClientAuthenticationError,
    HttpResponseError,
    ResourceExistsError,
    ResourceNotFoundError,
    ResourceNotModifiedError,
    map_error,
)
from azure.core.paging import ItemPaged
from azure.core.pipeline import PipelineResponse
from azure.core.polling import LROPoller, NoPolling, PollingMethod
from azure.core.polling.base_polling import LROBasePolling
from azure.core.rest import HttpRequest, HttpResponse
from azure.core.tracing.decorator import distributed_trace
from azure.core.utils import case_insensitive_dict

from .. import models as _models
from .._serialization import Serializer

if sys.version_info >= (3, 9):
    from collections.abc import MutableMapping
else:
    from typing import MutableMapping  # type: ignore  # pylint: disable=ungrouped-imports
T = TypeVar("T")
ClsType = Optional[Callable[[PipelineResponse[HttpRequest, HttpResponse], T, Dict[str, Any]], Any]]

_SERIALIZER = Serializer()
_SERIALIZER.client_side_validation = False


def build_tenants_list_tenant_settings_request(  # pylint: disable=name-too-long
    *, continuation_token_parameter: Optional[str] = None, **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    accept = _headers.pop("Accept", "application/json")

    # Construct URL
    _url = "/tenantsettings"

    # Construct parameters
    if continuation_token_parameter is not None:
        _params["continuationToken"] = _SERIALIZER.query(
            "continuation_token_parameter", continuation_token_parameter, "str"
        )

    # Construct headers
    _headers["Accept"] = _SERIALIZER.header("accept", accept, "str")

    return HttpRequest(method="GET", url=_url, params=_params, headers=_headers, **kwargs)


def build_tenants_update_tenant_setting_request(  # pylint: disable=name-too-long
    tenant_setting_name: str, **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})

    content_type: Optional[str] = kwargs.pop("content_type", _headers.pop("Content-Type", None))
    accept = _headers.pop("Accept", "application/json")

    # Construct URL
    _url = "/tenantsettings/{tenantSettingName}/update"
    path_format_arguments = {
        "tenantSettingName": _SERIALIZER.url("tenant_setting_name", tenant_setting_name, "str"),
    }

    _url: str = _url.format(**path_format_arguments)  # type: ignore

    # Construct headers
    if content_type is not None:
        _headers["Content-Type"] = _SERIALIZER.header("content_type", content_type, "str")
    _headers["Accept"] = _SERIALIZER.header("accept", accept, "str")

    return HttpRequest(method="POST", url=_url, headers=_headers, **kwargs)


def build_tenants_list_capacities_tenant_settings_overrides_request(  # pylint: disable=name-too-long
    *, continuation_token_parameter: Optional[str] = None, **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    accept = _headers.pop("Accept", "application/json")

    # Construct URL
    _url = "/capacities/delegatedTenantSettingOverrides"

    # Construct parameters
    if continuation_token_parameter is not None:
        _params["continuationToken"] = _SERIALIZER.query(
            "continuation_token_parameter", continuation_token_parameter, "str"
        )

    # Construct headers
    _headers["Accept"] = _SERIALIZER.header("accept", accept, "str")

    return HttpRequest(method="GET", url=_url, params=_params, headers=_headers, **kwargs)


def build_tenants_list_capacity_tenant_settings_overrides_by_capacity_id_request(  # pylint: disable=name-too-long
    capacity_id: str, *, continuation_token_parameter: Optional[str] = None, **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    accept = _headers.pop("Accept", "application/json")

    # Construct URL
    _url = "/capacities/{capacityId}/delegatedTenantSettingOverrides"
    path_format_arguments = {
        "capacityId": _SERIALIZER.url("capacity_id", capacity_id, "str"),
    }

    _url: str = _url.format(**path_format_arguments)  # type: ignore

    # Construct parameters
    if continuation_token_parameter is not None:
        _params["continuationToken"] = _SERIALIZER.query(
            "continuation_token_parameter", continuation_token_parameter, "str"
        )

    # Construct headers
    _headers["Accept"] = _SERIALIZER.header("accept", accept, "str")

    return HttpRequest(method="GET", url=_url, params=_params, headers=_headers, **kwargs)


def build_tenants_delete_capacity_tenant_setting_override_request(  # pylint: disable=name-too-long
    capacity_id: str, tenant_setting_name: str, **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})

    accept = _headers.pop("Accept", "application/json")

    # Construct URL
    _url = "/capacities/{capacityId}/delegatedTenantSettingOverrides/{tenantSettingName}"
    path_format_arguments = {
        "capacityId": _SERIALIZER.url("capacity_id", capacity_id, "str"),
        "tenantSettingName": _SERIALIZER.url("tenant_setting_name", tenant_setting_name, "str"),
    }

    _url: str = _url.format(**path_format_arguments)  # type: ignore

    # Construct headers
    _headers["Accept"] = _SERIALIZER.header("accept", accept, "str")

    return HttpRequest(method="DELETE", url=_url, headers=_headers, **kwargs)


def build_tenants_update_capacity_tenant_setting_override_request(  # pylint: disable=name-too-long
    capacity_id: str, tenant_setting_name: str, **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})

    content_type: Optional[str] = kwargs.pop("content_type", _headers.pop("Content-Type", None))
    accept = _headers.pop("Accept", "application/json")

    # Construct URL
    _url = "/capacities/{capacityId}/delegatedTenantSettingOverrides/{tenantSettingName}/update"
    path_format_arguments = {
        "capacityId": _SERIALIZER.url("capacity_id", capacity_id, "str"),
        "tenantSettingName": _SERIALIZER.url("tenant_setting_name", tenant_setting_name, "str"),
    }

    _url: str = _url.format(**path_format_arguments)  # type: ignore

    # Construct headers
    if content_type is not None:
        _headers["Content-Type"] = _SERIALIZER.header("content_type", content_type, "str")
    _headers["Accept"] = _SERIALIZER.header("accept", accept, "str")

    return HttpRequest(method="POST", url=_url, headers=_headers, **kwargs)


def build_tenants_list_domains_tenant_settings_overrides_request(  # pylint: disable=name-too-long
    *, continuation_token_parameter: Optional[str] = None, **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    accept = _headers.pop("Accept", "application/json")

    # Construct URL
    _url = "/domains/delegatedTenantSettingOverrides"

    # Construct parameters
    if continuation_token_parameter is not None:
        _params["continuationToken"] = _SERIALIZER.query(
            "continuation_token_parameter", continuation_token_parameter, "str"
        )

    # Construct headers
    _headers["Accept"] = _SERIALIZER.header("accept", accept, "str")

    return HttpRequest(method="GET", url=_url, params=_params, headers=_headers, **kwargs)


def build_tenants_list_workspaces_tenant_settings_overrides_request(  # pylint: disable=name-too-long
    *, continuation_token_parameter: Optional[str] = None, **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    accept = _headers.pop("Accept", "application/json")

    # Construct URL
    _url = "/workspaces/delegatedTenantSettingOverrides"

    # Construct parameters
    if continuation_token_parameter is not None:
        _params["continuationToken"] = _SERIALIZER.query(
            "continuation_token_parameter", continuation_token_parameter, "str"
        )

    # Construct headers
    _headers["Accept"] = _SERIALIZER.header("accept", accept, "str")

    return HttpRequest(method="GET", url=_url, params=_params, headers=_headers, **kwargs)


def build_workspaces_list_workspaces_request(
    *,
    type: Optional[str] = None,
    capacity_id: Optional[str] = None,
    name: Optional[str] = None,
    state: Optional[str] = None,
    continuation_token_parameter: Optional[str] = None,
    **kwargs: Any,
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    accept = _headers.pop("Accept", "application/json")

    # Construct URL
    _url = "/workspaces"

    # Construct parameters
    if type is not None:
        _params["type"] = _SERIALIZER.query("type", type, "str")
    if capacity_id is not None:
        _params["capacityId"] = _SERIALIZER.query("capacity_id", capacity_id, "str")
    if name is not None:
        _params["name"] = _SERIALIZER.query("name", name, "str")
    if state is not None:
        _params["state"] = _SERIALIZER.query("state", state, "str")
    if continuation_token_parameter is not None:
        _params["continuationToken"] = _SERIALIZER.query(
            "continuation_token_parameter", continuation_token_parameter, "str"
        )

    # Construct headers
    _headers["Accept"] = _SERIALIZER.header("accept", accept, "str")

    return HttpRequest(method="GET", url=_url, params=_params, headers=_headers, **kwargs)


def build_workspaces_list_git_connections_request(  # pylint: disable=name-too-long
    *, continuation_token_parameter: Optional[str] = None, **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    accept = _headers.pop("Accept", "application/json")

    # Construct URL
    _url = "/workspaces/discoverGitConnections"

    # Construct parameters
    if continuation_token_parameter is not None:
        _params["continuationToken"] = _SERIALIZER.query(
            "continuation_token_parameter", continuation_token_parameter, "str"
        )

    # Construct headers
    _headers["Accept"] = _SERIALIZER.header("accept", accept, "str")

    return HttpRequest(method="GET", url=_url, params=_params, headers=_headers, **kwargs)


def build_workspaces_get_workspace_request(workspace_id: str, **kwargs: Any) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})

    accept = _headers.pop("Accept", "application/json")

    # Construct URL
    _url = "/workspaces/{workspaceId}"
    path_format_arguments = {
        "workspaceId": _SERIALIZER.url("workspace_id", workspace_id, "str"),
    }

    _url: str = _url.format(**path_format_arguments)  # type: ignore

    # Construct headers
    _headers["Accept"] = _SERIALIZER.header("accept", accept, "str")

    return HttpRequest(method="GET", url=_url, headers=_headers, **kwargs)


def build_workspaces_list_workspace_access_details_request(  # pylint: disable=name-too-long
    workspace_id: str, **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})

    accept = _headers.pop("Accept", "application/json")

    # Construct URL
    _url = "/workspaces/{workspaceId}/users"
    path_format_arguments = {
        "workspaceId": _SERIALIZER.url("workspace_id", workspace_id, "str"),
    }

    _url: str = _url.format(**path_format_arguments)  # type: ignore

    # Construct headers
    _headers["Accept"] = _SERIALIZER.header("accept", accept, "str")

    return HttpRequest(method="GET", url=_url, headers=_headers, **kwargs)


def build_workspaces_restore_workspace_request(  # pylint: disable=name-too-long
    workspace_id: str, **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})

    content_type: Optional[str] = kwargs.pop("content_type", _headers.pop("Content-Type", None))
    accept = _headers.pop("Accept", "application/json")

    # Construct URL
    _url = "/workspaces/{workspaceId}/restore"
    path_format_arguments = {
        "workspaceId": _SERIALIZER.url("workspace_id", workspace_id, "str"),
    }

    _url: str = _url.format(**path_format_arguments)  # type: ignore

    # Construct headers
    if content_type is not None:
        _headers["Content-Type"] = _SERIALIZER.header("content_type", content_type, "str")
    _headers["Accept"] = _SERIALIZER.header("accept", accept, "str")

    return HttpRequest(method="POST", url=_url, headers=_headers, **kwargs)


def build_items_list_items_request(
    *,
    workspace_id: Optional[str] = None,
    capacity_id: Optional[str] = None,
    state: Optional[str] = None,
    type: Optional[str] = None,
    continuation_token_parameter: Optional[str] = None,
    **kwargs: Any,
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    accept = _headers.pop("Accept", "application/json")

    # Construct URL
    _url = "/items"

    # Construct parameters
    if workspace_id is not None:
        _params["workspaceId"] = _SERIALIZER.query("workspace_id", workspace_id, "str")
    if capacity_id is not None:
        _params["capacityId"] = _SERIALIZER.query("capacity_id", capacity_id, "str")
    if state is not None:
        _params["state"] = _SERIALIZER.query("state", state, "str")
    if type is not None:
        _params["type"] = _SERIALIZER.query("type", type, "str")
    if continuation_token_parameter is not None:
        _params["continuationToken"] = _SERIALIZER.query(
            "continuation_token_parameter", continuation_token_parameter, "str"
        )

    # Construct headers
    _headers["Accept"] = _SERIALIZER.header("accept", accept, "str")

    return HttpRequest(method="GET", url=_url, params=_params, headers=_headers, **kwargs)


def build_items_get_item_request(
    workspace_id: str, item_id: str, *, type: Optional[str] = None, **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    accept = _headers.pop("Accept", "application/json")

    # Construct URL
    _url = "/workspaces/{workspaceId}/items/{itemId}"
    path_format_arguments = {
        "workspaceId": _SERIALIZER.url("workspace_id", workspace_id, "str"),
        "itemId": _SERIALIZER.url("item_id", item_id, "str"),
    }

    _url: str = _url.format(**path_format_arguments)  # type: ignore

    # Construct parameters
    if type is not None:
        _params["type"] = _SERIALIZER.query("type", type, "str")

    # Construct headers
    _headers["Accept"] = _SERIALIZER.header("accept", accept, "str")

    return HttpRequest(method="GET", url=_url, params=_params, headers=_headers, **kwargs)


def build_items_list_item_access_details_request(  # pylint: disable=name-too-long
    workspace_id: str, item_id: str, *, type: Optional[str] = None, **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    accept = _headers.pop("Accept", "application/json")

    # Construct URL
    _url = "/workspaces/{workspaceId}/items/{itemId}/users"
    path_format_arguments = {
        "workspaceId": _SERIALIZER.url("workspace_id", workspace_id, "str"),
        "itemId": _SERIALIZER.url("item_id", item_id, "str"),
    }

    _url: str = _url.format(**path_format_arguments)  # type: ignore

    # Construct parameters
    if type is not None:
        _params["type"] = _SERIALIZER.query("type", type, "str")

    # Construct headers
    _headers["Accept"] = _SERIALIZER.header("accept", accept, "str")

    return HttpRequest(method="GET", url=_url, params=_params, headers=_headers, **kwargs)


def build_users_list_access_entities_request(
    user_id: str, *, type: Optional[str] = None, continuation_token_parameter: Optional[str] = None, **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    accept = _headers.pop("Accept", "application/json")

    # Construct URL
    _url = "/users/{userId}/access"
    path_format_arguments = {
        "userId": _SERIALIZER.url("user_id", user_id, "str"),
    }

    _url: str = _url.format(**path_format_arguments)  # type: ignore

    # Construct parameters
    if type is not None:
        _params["type"] = _SERIALIZER.query("type", type, "str")
    if continuation_token_parameter is not None:
        _params["continuationToken"] = _SERIALIZER.query(
            "continuation_token_parameter", continuation_token_parameter, "str"
        )

    # Construct headers
    _headers["Accept"] = _SERIALIZER.header("accept", accept, "str")

    return HttpRequest(method="GET", url=_url, params=_params, headers=_headers, **kwargs)


def build_domains_list_domains_preview_request(  # pylint: disable=name-too-long
    *, preview: bool, non_empty_only: Optional[bool] = None, **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    accept = _headers.pop("Accept", "application/json")

    # Construct URL
    _url = "/domains"

    # Construct parameters
    if non_empty_only is not None:
        _params["nonEmptyOnly"] = _SERIALIZER.query("non_empty_only", non_empty_only, "bool")
    _params["preview"] = _SERIALIZER.query("preview", preview, "bool")

    # Construct headers
    _headers["Accept"] = _SERIALIZER.header("accept", accept, "str")

    return HttpRequest(method="GET", url=_url, params=_params, headers=_headers, **kwargs)


def build_domains_create_domain_preview_request(  # pylint: disable=name-too-long
    *, preview: bool, **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    content_type: Optional[str] = kwargs.pop("content_type", _headers.pop("Content-Type", None))
    accept = _headers.pop("Accept", "application/json")

    # Construct URL
    _url = "/domains"

    # Construct parameters
    _params["preview"] = _SERIALIZER.query("preview", preview, "bool")

    # Construct headers
    if content_type is not None:
        _headers["Content-Type"] = _SERIALIZER.header("content_type", content_type, "str")
    _headers["Accept"] = _SERIALIZER.header("accept", accept, "str")

    return HttpRequest(method="POST", url=_url, params=_params, headers=_headers, **kwargs)


def build_domains_list_domains_request(
    *, preview: bool, non_empty_only: Optional[bool] = None, **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    accept = _headers.pop("Accept", "application/json")

    # Construct URL
    _url = "/domains"

    # Construct parameters
    if non_empty_only is not None:
        _params["nonEmptyOnly"] = _SERIALIZER.query("non_empty_only", non_empty_only, "bool")
    _params["preview"] = _SERIALIZER.query("preview", preview, "bool")

    # Construct headers
    _headers["Accept"] = _SERIALIZER.header("accept", accept, "str")

    return HttpRequest(method="GET", url=_url, params=_params, headers=_headers, **kwargs)


def build_domains_create_domain_request(*, preview: bool, **kwargs: Any) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    content_type: Optional[str] = kwargs.pop("content_type", _headers.pop("Content-Type", None))
    accept = _headers.pop("Accept", "application/json")

    # Construct URL
    _url = "/domains"

    # Construct parameters
    _params["preview"] = _SERIALIZER.query("preview", preview, "bool")

    # Construct headers
    if content_type is not None:
        _headers["Content-Type"] = _SERIALIZER.header("content_type", content_type, "str")
    _headers["Accept"] = _SERIALIZER.header("accept", accept, "str")

    return HttpRequest(method="POST", url=_url, params=_params, headers=_headers, **kwargs)


def build_domains_get_domain_preview_request(domain_id: str, *, preview: bool, **kwargs: Any) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    accept = _headers.pop("Accept", "application/json")

    # Construct URL
    _url = "/domains/{domainId}"
    path_format_arguments = {
        "domainId": _SERIALIZER.url("domain_id", domain_id, "str"),
    }

    _url: str = _url.format(**path_format_arguments)  # type: ignore

    # Construct parameters
    _params["preview"] = _SERIALIZER.query("preview", preview, "bool")

    # Construct headers
    _headers["Accept"] = _SERIALIZER.header("accept", accept, "str")

    return HttpRequest(method="GET", url=_url, params=_params, headers=_headers, **kwargs)


def build_domains_update_domain_preview_request(  # pylint: disable=name-too-long
    domain_id: str, *, preview: bool, **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    content_type: Optional[str] = kwargs.pop("content_type", _headers.pop("Content-Type", None))
    accept = _headers.pop("Accept", "application/json")

    # Construct URL
    _url = "/domains/{domainId}"
    path_format_arguments = {
        "domainId": _SERIALIZER.url("domain_id", domain_id, "str"),
    }

    _url: str = _url.format(**path_format_arguments)  # type: ignore

    # Construct parameters
    _params["preview"] = _SERIALIZER.query("preview", preview, "bool")

    # Construct headers
    if content_type is not None:
        _headers["Content-Type"] = _SERIALIZER.header("content_type", content_type, "str")
    _headers["Accept"] = _SERIALIZER.header("accept", accept, "str")

    return HttpRequest(method="PATCH", url=_url, params=_params, headers=_headers, **kwargs)


def build_domains_delete_domain_request(domain_id: str, **kwargs: Any) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})

    accept = _headers.pop("Accept", "application/json")

    # Construct URL
    _url = "/domains/{domainId}"
    path_format_arguments = {
        "domainId": _SERIALIZER.url("domain_id", domain_id, "str"),
    }

    _url: str = _url.format(**path_format_arguments)  # type: ignore

    # Construct headers
    _headers["Accept"] = _SERIALIZER.header("accept", accept, "str")

    return HttpRequest(method="DELETE", url=_url, headers=_headers, **kwargs)


def build_domains_get_domain_request(domain_id: str, *, preview: bool, **kwargs: Any) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    accept = _headers.pop("Accept", "application/json")

    # Construct URL
    _url = "/domains/{domainId}"
    path_format_arguments = {
        "domainId": _SERIALIZER.url("domain_id", domain_id, "str"),
    }

    _url: str = _url.format(**path_format_arguments)  # type: ignore

    # Construct parameters
    _params["preview"] = _SERIALIZER.query("preview", preview, "bool")

    # Construct headers
    _headers["Accept"] = _SERIALIZER.header("accept", accept, "str")

    return HttpRequest(method="GET", url=_url, params=_params, headers=_headers, **kwargs)


def build_domains_update_domain_request(domain_id: str, *, preview: bool, **kwargs: Any) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    content_type: Optional[str] = kwargs.pop("content_type", _headers.pop("Content-Type", None))
    accept = _headers.pop("Accept", "application/json")

    # Construct URL
    _url = "/domains/{domainId}"
    path_format_arguments = {
        "domainId": _SERIALIZER.url("domain_id", domain_id, "str"),
    }

    _url: str = _url.format(**path_format_arguments)  # type: ignore

    # Construct parameters
    _params["preview"] = _SERIALIZER.query("preview", preview, "bool")

    # Construct headers
    if content_type is not None:
        _headers["Content-Type"] = _SERIALIZER.header("content_type", content_type, "str")
    _headers["Accept"] = _SERIALIZER.header("accept", accept, "str")

    return HttpRequest(method="PATCH", url=_url, params=_params, headers=_headers, **kwargs)


def build_domains_list_domain_workspaces_request(  # pylint: disable=name-too-long
    domain_id: str, *, continuation_token_parameter: Optional[str] = None, **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    accept = _headers.pop("Accept", "application/json")

    # Construct URL
    _url = "/domains/{domainId}/workspaces"
    path_format_arguments = {
        "domainId": _SERIALIZER.url("domain_id", domain_id, "str"),
    }

    _url: str = _url.format(**path_format_arguments)  # type: ignore

    # Construct parameters
    if continuation_token_parameter is not None:
        _params["continuationToken"] = _SERIALIZER.query(
            "continuation_token_parameter", continuation_token_parameter, "str"
        )

    # Construct headers
    _headers["Accept"] = _SERIALIZER.header("accept", accept, "str")

    return HttpRequest(method="GET", url=_url, params=_params, headers=_headers, **kwargs)


def build_domains_assign_domain_workspaces_by_ids_request(  # pylint: disable=name-too-long
    domain_id: str, **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})

    content_type: Optional[str] = kwargs.pop("content_type", _headers.pop("Content-Type", None))
    accept = _headers.pop("Accept", "application/json")

    # Construct URL
    _url = "/domains/{domainId}/assignWorkspaces"
    path_format_arguments = {
        "domainId": _SERIALIZER.url("domain_id", domain_id, "str"),
    }

    _url: str = _url.format(**path_format_arguments)  # type: ignore

    # Construct headers
    if content_type is not None:
        _headers["Content-Type"] = _SERIALIZER.header("content_type", content_type, "str")
    _headers["Accept"] = _SERIALIZER.header("accept", accept, "str")

    return HttpRequest(method="POST", url=_url, headers=_headers, **kwargs)


def build_domains_unassign_domain_workspaces_by_ids_request(  # pylint: disable=name-too-long
    domain_id: str, **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})

    content_type: Optional[str] = kwargs.pop("content_type", _headers.pop("Content-Type", None))
    accept = _headers.pop("Accept", "application/json")

    # Construct URL
    _url = "/domains/{domainId}/unassignWorkspaces"
    path_format_arguments = {
        "domainId": _SERIALIZER.url("domain_id", domain_id, "str"),
    }

    _url: str = _url.format(**path_format_arguments)  # type: ignore

    # Construct headers
    if content_type is not None:
        _headers["Content-Type"] = _SERIALIZER.header("content_type", content_type, "str")
    _headers["Accept"] = _SERIALIZER.header("accept", accept, "str")

    return HttpRequest(method="POST", url=_url, headers=_headers, **kwargs)


def build_domains_unassign_all_domain_workspaces_request(  # pylint: disable=name-too-long
    domain_id: str, **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})

    accept = _headers.pop("Accept", "application/json")

    # Construct URL
    _url = "/domains/{domainId}/unassignAllWorkspaces"
    path_format_arguments = {
        "domainId": _SERIALIZER.url("domain_id", domain_id, "str"),
    }

    _url: str = _url.format(**path_format_arguments)  # type: ignore

    # Construct headers
    _headers["Accept"] = _SERIALIZER.header("accept", accept, "str")

    return HttpRequest(method="POST", url=_url, headers=_headers, **kwargs)


def build_domains_list_role_assignments_request(  # pylint: disable=name-too-long
    domain_id: str, *, continuation_token_parameter: Optional[str] = None, **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    accept = _headers.pop("Accept", "application/json")

    # Construct URL
    _url = "/domains/{domainId}/roleAssignments"
    path_format_arguments = {
        "domainId": _SERIALIZER.url("domain_id", domain_id, "str"),
    }

    _url: str = _url.format(**path_format_arguments)  # type: ignore

    # Construct parameters
    if continuation_token_parameter is not None:
        _params["continuationToken"] = _SERIALIZER.query(
            "continuation_token_parameter", continuation_token_parameter, "str"
        )

    # Construct headers
    _headers["Accept"] = _SERIALIZER.header("accept", accept, "str")

    return HttpRequest(method="GET", url=_url, params=_params, headers=_headers, **kwargs)


def build_domains_role_assignments_bulk_assign_request(  # pylint: disable=name-too-long
    domain_id: str, **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})

    content_type: Optional[str] = kwargs.pop("content_type", _headers.pop("Content-Type", None))
    accept = _headers.pop("Accept", "application/json")

    # Construct URL
    _url = "/domains/{domainId}/roleAssignments/bulkAssign"
    path_format_arguments = {
        "domainId": _SERIALIZER.url("domain_id", domain_id, "str"),
    }

    _url: str = _url.format(**path_format_arguments)  # type: ignore

    # Construct headers
    if content_type is not None:
        _headers["Content-Type"] = _SERIALIZER.header("content_type", content_type, "str")
    _headers["Accept"] = _SERIALIZER.header("accept", accept, "str")

    return HttpRequest(method="POST", url=_url, headers=_headers, **kwargs)


def build_domains_role_assignments_bulk_unassign_request(  # pylint: disable=name-too-long
    domain_id: str, **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})

    content_type: Optional[str] = kwargs.pop("content_type", _headers.pop("Content-Type", None))
    accept = _headers.pop("Accept", "application/json")

    # Construct URL
    _url = "/domains/{domainId}/roleAssignments/bulkUnassign"
    path_format_arguments = {
        "domainId": _SERIALIZER.url("domain_id", domain_id, "str"),
    }

    _url: str = _url.format(**path_format_arguments)  # type: ignore

    # Construct headers
    if content_type is not None:
        _headers["Content-Type"] = _SERIALIZER.header("content_type", content_type, "str")
    _headers["Accept"] = _SERIALIZER.header("accept", accept, "str")

    return HttpRequest(method="POST", url=_url, headers=_headers, **kwargs)


def build_domains_sync_role_assignments_to_subdomains_request(  # pylint: disable=name-too-long
    domain_id: str, **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})

    content_type: Optional[str] = kwargs.pop("content_type", _headers.pop("Content-Type", None))
    accept = _headers.pop("Accept", "application/json")

    # Construct URL
    _url = "/domains/{domainId}/roleAssignments/syncToSubdomains"
    path_format_arguments = {
        "domainId": _SERIALIZER.url("domain_id", domain_id, "str"),
    }

    _url: str = _url.format(**path_format_arguments)  # type: ignore

    # Construct headers
    if content_type is not None:
        _headers["Content-Type"] = _SERIALIZER.header("content_type", content_type, "str")
    _headers["Accept"] = _SERIALIZER.header("accept", accept, "str")

    return HttpRequest(method="POST", url=_url, headers=_headers, **kwargs)


def build_domains_assign_domain_workspaces_by_capacities_request(  # pylint: disable=name-too-long
    domain_id: str, **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})

    content_type: Optional[str] = kwargs.pop("content_type", _headers.pop("Content-Type", None))
    accept = _headers.pop("Accept", "application/json")

    # Construct URL
    _url = "/domains/{domainId}/assignWorkspacesByCapacities"
    path_format_arguments = {
        "domainId": _SERIALIZER.url("domain_id", domain_id, "str"),
    }

    _url: str = _url.format(**path_format_arguments)  # type: ignore

    # Construct headers
    if content_type is not None:
        _headers["Content-Type"] = _SERIALIZER.header("content_type", content_type, "str")
    _headers["Accept"] = _SERIALIZER.header("accept", accept, "str")

    return HttpRequest(method="POST", url=_url, headers=_headers, **kwargs)


def build_domains_assign_domain_workspaces_by_principals_request(  # pylint: disable=name-too-long
    domain_id: str, **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})

    content_type: Optional[str] = kwargs.pop("content_type", _headers.pop("Content-Type", None))
    accept = _headers.pop("Accept", "application/json")

    # Construct URL
    _url = "/domains/{domainId}/assignWorkspacesByPrincipals"
    path_format_arguments = {
        "domainId": _SERIALIZER.url("domain_id", domain_id, "str"),
    }

    _url: str = _url.format(**path_format_arguments)  # type: ignore

    # Construct headers
    if content_type is not None:
        _headers["Content-Type"] = _SERIALIZER.header("content_type", content_type, "str")
    _headers["Accept"] = _SERIALIZER.header("accept", accept, "str")

    return HttpRequest(method="POST", url=_url, headers=_headers, **kwargs)


def build_tags_list_tags_request(*, continuation_token_parameter: Optional[str] = None, **kwargs: Any) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    accept = _headers.pop("Accept", "application/json")

    # Construct URL
    _url = "/tags"

    # Construct parameters
    if continuation_token_parameter is not None:
        _params["continuationToken"] = _SERIALIZER.query(
            "continuation_token_parameter", continuation_token_parameter, "str"
        )

    # Construct headers
    _headers["Accept"] = _SERIALIZER.header("accept", accept, "str")

    return HttpRequest(method="GET", url=_url, params=_params, headers=_headers, **kwargs)


def build_tags_bulk_create_tags_request(**kwargs: Any) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})

    content_type: Optional[str] = kwargs.pop("content_type", _headers.pop("Content-Type", None))
    accept = _headers.pop("Accept", "application/json")

    # Construct URL
    _url = "/tags/bulkCreateTags"

    # Construct headers
    if content_type is not None:
        _headers["Content-Type"] = _SERIALIZER.header("content_type", content_type, "str")
    _headers["Accept"] = _SERIALIZER.header("accept", accept, "str")

    return HttpRequest(method="POST", url=_url, headers=_headers, **kwargs)


def build_tags_delete_tag_request(tag_id: str, **kwargs: Any) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})

    accept = _headers.pop("Accept", "application/json")

    # Construct URL
    _url = "/tags/{tagId}"
    path_format_arguments = {
        "tagId": _SERIALIZER.url("tag_id", tag_id, "str"),
    }

    _url: str = _url.format(**path_format_arguments)  # type: ignore

    # Construct headers
    _headers["Accept"] = _SERIALIZER.header("accept", accept, "str")

    return HttpRequest(method="DELETE", url=_url, headers=_headers, **kwargs)


def build_tags_update_tag_request(tag_id: str, **kwargs: Any) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})

    content_type: Optional[str] = kwargs.pop("content_type", _headers.pop("Content-Type", None))
    accept = _headers.pop("Accept", "application/json")

    # Construct URL
    _url = "/tags/{tagId}"
    path_format_arguments = {
        "tagId": _SERIALIZER.url("tag_id", tag_id, "str"),
    }

    _url: str = _url.format(**path_format_arguments)  # type: ignore

    # Construct headers
    if content_type is not None:
        _headers["Content-Type"] = _SERIALIZER.header("content_type", content_type, "str")
    _headers["Accept"] = _SERIALIZER.header("accept", accept, "str")

    return HttpRequest(method="PATCH", url=_url, headers=_headers, **kwargs)


def build_labels_bulk_remove_labels_request(**kwargs: Any) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})

    content_type: Optional[str] = kwargs.pop("content_type", _headers.pop("Content-Type", None))
    accept = _headers.pop("Accept", "application/json")

    # Construct URL
    _url = "/items/bulkRemoveLabels"

    # Construct headers
    if content_type is not None:
        _headers["Content-Type"] = _SERIALIZER.header("content_type", content_type, "str")
    _headers["Accept"] = _SERIALIZER.header("accept", accept, "str")

    return HttpRequest(method="POST", url=_url, headers=_headers, **kwargs)


def build_labels_bulk_set_labels_request(**kwargs: Any) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})

    content_type: Optional[str] = kwargs.pop("content_type", _headers.pop("Content-Type", None))
    accept = _headers.pop("Accept", "application/json")

    # Construct URL
    _url = "/items/bulkSetLabels"

    # Construct headers
    if content_type is not None:
        _headers["Content-Type"] = _SERIALIZER.header("content_type", content_type, "str")
    _headers["Accept"] = _SERIALIZER.header("accept", accept, "str")

    return HttpRequest(method="POST", url=_url, headers=_headers, **kwargs)


def build_external_data_shares_provider_list_external_data_shares_request(  # pylint: disable=name-too-long
    *, continuation_token_parameter: Optional[str] = None, **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
    _params = case_insensitive_dict(kwargs.pop("params", {}) or {})

    accept = _headers.pop("Accept", "application/json")

    # Construct URL
    _url = "/items/externalDataShares"

    # Construct parameters
    if continuation_token_parameter is not None:
        _params["continuationToken"] = _SERIALIZER.query(
            "continuation_token_parameter", continuation_token_parameter, "str"
        )

    # Construct headers
    _headers["Accept"] = _SERIALIZER.header("accept", accept, "str")

    return HttpRequest(method="GET", url=_url, params=_params, headers=_headers, **kwargs)


def build_external_data_shares_provider_revoke_external_data_share_request(  # pylint: disable=name-too-long
    workspace_id: str, item_id: str, external_data_share_id: str, **kwargs: Any
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})

    accept = _headers.pop("Accept", "application/json")

    # Construct URL
    _url = "/workspaces/{workspaceId}/items/{itemId}/externalDataShares/{externalDataShareId}/revoke"
    path_format_arguments = {
        "workspaceId": _SERIALIZER.url("workspace_id", workspace_id, "str"),
        "itemId": _SERIALIZER.url("item_id", item_id, "str"),
        "externalDataShareId": _SERIALIZER.url("external_data_share_id", external_data_share_id, "str"),
    }

    _url: str = _url.format(**path_format_arguments)  # type: ignore

    # Construct headers
    _headers["Accept"] = _SERIALIZER.header("accept", accept, "str")

    return HttpRequest(method="POST", url=_url, headers=_headers, **kwargs)


def build_sharing_links_remove_all_sharing_links_request(**kwargs: Any) -> HttpRequest:  # pylint: disable=name-too-long
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})

    content_type: Optional[str] = kwargs.pop("content_type", _headers.pop("Content-Type", None))
    accept = _headers.pop("Accept", "application/json")

    # Construct URL
    _url = "/items/removeAllSharingLinks"

    # Construct headers
    if content_type is not None:
        _headers["Content-Type"] = _SERIALIZER.header("content_type", content_type, "str")
    _headers["Accept"] = _SERIALIZER.header("accept", accept, "str")

    return HttpRequest(method="POST", url=_url, headers=_headers, **kwargs)


def build_sharing_links_bulk_remove_sharing_links_request(  # pylint: disable=name-too-long
    **kwargs: Any,
) -> HttpRequest:
    _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})

    content_type: Optional[str] = kwargs.pop("content_type", _headers.pop("Content-Type", None))
    accept = _headers.pop("Accept", "application/json")

    # Construct URL
    _url = "/items/bulkRemoveSharingLinks"

    # Construct headers
    if content_type is not None:
        _headers["Content-Type"] = _SERIALIZER.header("content_type", content_type, "str")
    _headers["Accept"] = _SERIALIZER.header("accept", accept, "str")

    return HttpRequest(method="POST", url=_url, headers=_headers, **kwargs)


class TenantsOperations:
    """
    .. warning::
        **DO NOT** instantiate this class directly.

        Instead, you should access the following operations through
        :class:`~microsoft.fabric.api.admin.FabricAdminClient`'s
        :attr:`tenants` attribute.
    """

    models = _models

    def __init__(self, *args, **kwargs):
        input_args = list(args)
        self._client = input_args.pop(0) if input_args else kwargs.pop("client")
        self._config = input_args.pop(0) if input_args else kwargs.pop("config")
        self._serialize = input_args.pop(0) if input_args else kwargs.pop("serializer")
        self._deserialize = input_args.pop(0) if input_args else kwargs.pop("deserializer")

    @distributed_trace
    def list_tenant_settings(
        self, *, continuation_token_parameter: Optional[str] = None, **kwargs: Any
    ) -> Iterable["_models.TenantSetting"]:
        """Returns a list of the tenant settings.

        Permissions
        -----------

        The caller must be a Fabric administrator or authenticate using a service principal.

        Required Delegated Scopes
        -------------------------

        Tenant.Read.All or Tenant.ReadWrite.All

        Limitations
        -----------

        Maximum 25 requests per minute.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :keyword continuation_token_parameter: A token for retrieving the next page of results. Default
         value is None.
        :paramtype continuation_token_parameter: str
        :return: An iterator like instance of TenantSetting
        :rtype: ~azure.core.paging.ItemPaged[~microsoft.fabric.api.admin.models.TenantSetting]
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls: ClsType[_models._models.TenantSettings] = kwargs.pop("cls", None)  # pylint: disable=protected-access

        error_map: MutableMapping[int, Type[HttpResponseError]] = {
            401: ClientAuthenticationError,
            404: ResourceNotFoundError,
            409: ResourceExistsError,
            304: ResourceNotModifiedError,
        }
        error_map.update(kwargs.pop("error_map", {}) or {})

        def prepare_request(next_link=None):
            if not next_link:

                _request = build_tenants_list_tenant_settings_request(
                    continuation_token_parameter=continuation_token_parameter,
                    headers=_headers,
                    params=_params,
                )
                _request.url = self._client.format_url(_request.url)

            else:
                _request = HttpRequest("GET", next_link)
                _request.url = self._client.format_url(_request.url)

            return _request

        def extract_data(pipeline_response):
            deserialized = self._deserialize(
                _models._models.TenantSettings, pipeline_response  # pylint: disable=protected-access
            )
            list_of_elem = deserialized.value
            if cls:
                list_of_elem = cls(list_of_elem)  # type: ignore
            return deserialized.continuation_uri or None, iter(list_of_elem)

        def get_next(next_link=None):
            _request = prepare_request(next_link)

            _stream = False
            pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
                _request, stream=_stream, **kwargs
            )
            response = pipeline_response.http_response

            if response.status_code not in [200]:
                map_error(status_code=response.status_code, response=response, error_map=error_map)
                error = self._deserialize.failsafe_deserialize(_models.ErrorResponse, pipeline_response)
                raise HttpResponseError(response=response, model=error)

            return pipeline_response

        return ItemPaged(get_next, extract_data)

    @overload
    def update_tenant_setting(
        self,
        tenant_setting_name: str,
        update_tenant_setting_request: _models.UpdateTenantSettingRequest,
        *,
        content_type: str = "application/json",
        **kwargs: Any,
    ) -> _models.UpdateTenantSettingResponse:
        """Update a given tenant setting.

        ..

           [!NOTE]
           This API is part of a Preview release and is provided for evaluation and development
        purposes only. It may change based on feedback and is not recommended for production use.


        Permissions
        -----------

        The caller must be a Fabric administrator or authenticate using a service principal.

        Required Delegated Scopes
        -------------------------

         Tenant.ReadWrite.All

        Limitations
        -----------

        Maximum 25 requests per minute.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param tenant_setting_name: The name of tenant setting. Required.
        :type tenant_setting_name: str
        :param update_tenant_setting_request: The request payload for updating a tenant setting.
         Required.
        :type update_tenant_setting_request:
         ~microsoft.fabric.api.admin.models.UpdateTenantSettingRequest
        :keyword content_type: Body Parameter content-type. Content type parameter for JSON body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: UpdateTenantSettingResponse
        :rtype: ~microsoft.fabric.api.admin.models.UpdateTenantSettingResponse
        :raises ~azure.core.exceptions.HttpResponseError:
        """

    @overload
    def update_tenant_setting(
        self,
        tenant_setting_name: str,
        update_tenant_setting_request: IO[bytes],
        *,
        content_type: str = "application/json",
        **kwargs: Any,
    ) -> _models.UpdateTenantSettingResponse:
        """Update a given tenant setting.

        ..

           [!NOTE]
           This API is part of a Preview release and is provided for evaluation and development
        purposes only. It may change based on feedback and is not recommended for production use.


        Permissions
        -----------

        The caller must be a Fabric administrator or authenticate using a service principal.

        Required Delegated Scopes
        -------------------------

         Tenant.ReadWrite.All

        Limitations
        -----------

        Maximum 25 requests per minute.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param tenant_setting_name: The name of tenant setting. Required.
        :type tenant_setting_name: str
        :param update_tenant_setting_request: The request payload for updating a tenant setting.
         Required.
        :type update_tenant_setting_request: IO[bytes]
        :keyword content_type: Body Parameter content-type. Content type parameter for binary body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: UpdateTenantSettingResponse
        :rtype: ~microsoft.fabric.api.admin.models.UpdateTenantSettingResponse
        :raises ~azure.core.exceptions.HttpResponseError:
        """

    @distributed_trace
    def update_tenant_setting(
        self,
        tenant_setting_name: str,
        update_tenant_setting_request: Union[_models.UpdateTenantSettingRequest, IO[bytes]],
        **kwargs: Any,
    ) -> _models.UpdateTenantSettingResponse:
        """Update a given tenant setting.

        ..

           [!NOTE]
           This API is part of a Preview release and is provided for evaluation and development
        purposes only. It may change based on feedback and is not recommended for production use.


        Permissions
        -----------

        The caller must be a Fabric administrator or authenticate using a service principal.

        Required Delegated Scopes
        -------------------------

         Tenant.ReadWrite.All

        Limitations
        -----------

        Maximum 25 requests per minute.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param tenant_setting_name: The name of tenant setting. Required.
        :type tenant_setting_name: str
        :param update_tenant_setting_request: The request payload for updating a tenant setting. Is
         either a UpdateTenantSettingRequest type or a IO[bytes] type. Required.
        :type update_tenant_setting_request:
         ~microsoft.fabric.api.admin.models.UpdateTenantSettingRequest or IO[bytes]
        :return: UpdateTenantSettingResponse
        :rtype: ~microsoft.fabric.api.admin.models.UpdateTenantSettingResponse
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        error_map: MutableMapping[int, Type[HttpResponseError]] = {
            401: ClientAuthenticationError,
            404: ResourceNotFoundError,
            409: ResourceExistsError,
            304: ResourceNotModifiedError,
        }
        error_map.update(kwargs.pop("error_map", {}) or {})

        _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
        _params = kwargs.pop("params", {}) or {}

        content_type: Optional[str] = kwargs.pop("content_type", _headers.pop("Content-Type", None))
        cls: ClsType[_models.UpdateTenantSettingResponse] = kwargs.pop("cls", None)

        content_type = content_type or "application/json"
        _json = None
        _content = None
        if isinstance(update_tenant_setting_request, (IOBase, bytes)):
            _content = update_tenant_setting_request
        else:
            _json = self._serialize.body(update_tenant_setting_request, "UpdateTenantSettingRequest")

        _request = build_tenants_update_tenant_setting_request(
            tenant_setting_name=tenant_setting_name,
            content_type=content_type,
            json=_json,
            content=_content,
            headers=_headers,
            params=_params,
        )
        _request.url = self._client.format_url(_request.url)

        _stream = False
        pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
            _request, stream=_stream, **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize.failsafe_deserialize(_models.ErrorResponse, pipeline_response)
            raise HttpResponseError(response=response, model=error)

        deserialized = self._deserialize("UpdateTenantSettingResponse", pipeline_response.http_response)

        if cls:
            return cls(pipeline_response, deserialized, {})  # type: ignore

        return deserialized  # type: ignore

    @distributed_trace
    def list_capacities_tenant_settings_overrides(  # pylint: disable=name-too-long
        self, *, continuation_token_parameter: Optional[str] = None, **kwargs: Any
    ) -> Iterable["_models.CapacityTenantSettingOverride"]:
        """Returns list of tenant setting overrides that override at the capacities.

        ..

           [!NOTE]
           This API is part of a Preview release and is provided for evaluation and development
        purposes only. It may change based on feedback and is not recommended for production use.


        This API supports `pagination </rest/api/fabric/articles/pagination>`_. A maximum of 10,000
        records can be returned per request. With the continuation token provided in the response, you
        can get the next 10,000 records.

        The user must be a Fabric Service Administrator or authenticate using a service principal.

        Required Delegated Scopes
        -------------------------

        Tenant.Read.All or Tenant.ReadWrite.All

        Limitations
        -----------

        Maximum 25 requests per minute.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :keyword continuation_token_parameter: A token for retrieving the next page of results. Default
         value is None.
        :paramtype continuation_token_parameter: str
        :return: An iterator like instance of CapacityTenantSettingOverride
        :rtype:
         ~azure.core.paging.ItemPaged[~microsoft.fabric.api.admin.models.CapacityTenantSettingOverride]
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls: ClsType[_models._models.CapacityTenantSettingOverrides] = kwargs.pop(  # pylint: disable=protected-access
            "cls", None
        )

        error_map: MutableMapping[int, Type[HttpResponseError]] = {
            401: ClientAuthenticationError,
            404: ResourceNotFoundError,
            409: ResourceExistsError,
            304: ResourceNotModifiedError,
        }
        error_map.update(kwargs.pop("error_map", {}) or {})

        def prepare_request(next_link=None):
            if not next_link:

                _request = build_tenants_list_capacities_tenant_settings_overrides_request(
                    continuation_token_parameter=continuation_token_parameter,
                    headers=_headers,
                    params=_params,
                )
                _request.url = self._client.format_url(_request.url)

            else:
                _request = HttpRequest("GET", next_link)
                _request.url = self._client.format_url(_request.url)

            return _request

        def extract_data(pipeline_response):
            deserialized = self._deserialize(
                _models._models.CapacityTenantSettingOverrides, pipeline_response  # pylint: disable=protected-access
            )
            list_of_elem = deserialized.value
            if cls:
                list_of_elem = cls(list_of_elem)  # type: ignore
            return deserialized.continuation_uri or None, iter(list_of_elem)

        def get_next(next_link=None):
            _request = prepare_request(next_link)

            _stream = False
            pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
                _request, stream=_stream, **kwargs
            )
            response = pipeline_response.http_response

            if response.status_code not in [200]:
                map_error(status_code=response.status_code, response=response, error_map=error_map)
                error = self._deserialize.failsafe_deserialize(_models.ErrorResponse, pipeline_response)
                raise HttpResponseError(response=response, model=error)

            return pipeline_response

        return ItemPaged(get_next, extract_data)

    @distributed_trace
    def list_capacity_tenant_settings_overrides_by_capacity_id(  # pylint: disable=name-too-long
        self, capacity_id: str, *, continuation_token_parameter: Optional[str] = None, **kwargs: Any
    ) -> Iterable["_models.CapacityTenantSetting"]:
        """Returns list of tenant setting overrides that override for given capacity Id.

        ..

           [!NOTE]
           This API is part of a Preview release and is provided for evaluation and development
        purposes only. It may change based on feedback and is not recommended for production use.


        Permissions
        -----------

        The caller must be a Fabric administrator or authenticate using a service principal.

        Required Delegated Scopes
        -------------------------

        Tenant.Read.All or Tenant.ReadWrite.All

        Limitations
        -----------

        Maximum 100 requests per minute.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param capacity_id: The capacity ID. Required.
        :type capacity_id: str
        :keyword continuation_token_parameter: A token for retrieving the next page of results. Default
         value is None.
        :paramtype continuation_token_parameter: str
        :return: An iterator like instance of CapacityTenantSetting
        :rtype: ~azure.core.paging.ItemPaged[~microsoft.fabric.api.admin.models.CapacityTenantSetting]
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls: ClsType[_models._models.CapacityTenantSettingsByCapacityIdResponse] = kwargs.pop(
            "cls", None
        )  # pylint: disable=protected-access

        error_map: MutableMapping[int, Type[HttpResponseError]] = {
            401: ClientAuthenticationError,
            404: ResourceNotFoundError,
            409: ResourceExistsError,
            304: ResourceNotModifiedError,
        }
        error_map.update(kwargs.pop("error_map", {}) or {})

        def prepare_request(next_link=None):
            if not next_link:

                _request = build_tenants_list_capacity_tenant_settings_overrides_by_capacity_id_request(
                    capacity_id=capacity_id,
                    continuation_token_parameter=continuation_token_parameter,
                    headers=_headers,
                    params=_params,
                )
                _request.url = self._client.format_url(_request.url)

            else:
                _request = HttpRequest("GET", next_link)
                _request.url = self._client.format_url(_request.url)

            return _request

        def extract_data(pipeline_response):
            deserialized = self._deserialize(
                _models._models.CapacityTenantSettingsByCapacityIdResponse,  # pylint: disable=protected-access
                pipeline_response,
            )
            list_of_elem = deserialized.value
            if cls:
                list_of_elem = cls(list_of_elem)  # type: ignore
            return deserialized.continuation_uri or None, iter(list_of_elem)

        def get_next(next_link=None):
            _request = prepare_request(next_link)

            _stream = False
            pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
                _request, stream=_stream, **kwargs
            )
            response = pipeline_response.http_response

            if response.status_code not in [200]:
                map_error(status_code=response.status_code, response=response, error_map=error_map)
                error = self._deserialize.failsafe_deserialize(_models.ErrorResponse, pipeline_response)
                raise HttpResponseError(response=response, model=error)

            return pipeline_response

        return ItemPaged(get_next, extract_data)

    @distributed_trace
    def delete_capacity_tenant_setting_override(  # pylint: disable=inconsistent-return-statements
        self, capacity_id: str, tenant_setting_name: str, **kwargs: Any
    ) -> None:
        """Remove given tenant setting override for given capacity Id.

        ..

           [!NOTE]
           This API is part of a Preview release and is provided for evaluation and development
        purposes only. It may change based on feedback and is not recommended for production use.


        Permissions
        -----------

        The caller must be a Fabric administrator or authenticate using a service principal.

        Required Delegated Scopes
        -------------------------

        Tenant.ReadWrite.All

        Limitations
        -----------

        Maximum 25 requests per minute.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param capacity_id: The capacity ID. Required.
        :type capacity_id: str
        :param tenant_setting_name: The name of tenant setting. Required.
        :type tenant_setting_name: str
        :return: None
        :rtype: None
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        error_map: MutableMapping[int, Type[HttpResponseError]] = {
            401: ClientAuthenticationError,
            404: ResourceNotFoundError,
            409: ResourceExistsError,
            304: ResourceNotModifiedError,
        }
        error_map.update(kwargs.pop("error_map", {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls: ClsType[None] = kwargs.pop("cls", None)

        _request = build_tenants_delete_capacity_tenant_setting_override_request(
            capacity_id=capacity_id,
            tenant_setting_name=tenant_setting_name,
            headers=_headers,
            params=_params,
        )
        _request.url = self._client.format_url(_request.url)

        _stream = False
        pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
            _request, stream=_stream, **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize.failsafe_deserialize(_models.ErrorResponse, pipeline_response)
            raise HttpResponseError(response=response, model=error)

        if cls:
            return cls(pipeline_response, None, {})  # type: ignore

    @overload
    def update_capacity_tenant_setting_override(
        self,
        capacity_id: str,
        tenant_setting_name: str,
        update_tenant_setting_override_request: _models.UpdateCapacityTenantSettingOverrideRequest,
        *,
        content_type: str = "application/json",
        **kwargs: Any,
    ) -> _models.UpdateCapacityTenantSettingOverrideResponse:
        """Update given tenant setting override for given capacity Id.

        ..

           [!NOTE]
           This API is part of a Preview release and is provided for evaluation and development
        purposes only. It may change based on feedback and is not recommended for production use.


        Permissions
        -----------

        The caller must be a Fabric administrator or authenticate using a service principal.

        Required Delegated Scopes
        -------------------------

        Tenant.ReadWrite.All

        Limitations
        -----------

        Maximum 25 requests per minute.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param capacity_id: The capacity ID. Required.
        :type capacity_id: str
        :param tenant_setting_name: The name of tenant setting. Required.
        :type tenant_setting_name: str
        :param update_tenant_setting_override_request: The request payload for updating the tenant
         setting override. Required.
        :type update_tenant_setting_override_request:
         ~microsoft.fabric.api.admin.models.UpdateCapacityTenantSettingOverrideRequest
        :keyword content_type: Body Parameter content-type. Content type parameter for JSON body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: UpdateCapacityTenantSettingOverrideResponse
        :rtype: ~microsoft.fabric.api.admin.models.UpdateCapacityTenantSettingOverrideResponse
        :raises ~azure.core.exceptions.HttpResponseError:
        """

    @overload
    def update_capacity_tenant_setting_override(
        self,
        capacity_id: str,
        tenant_setting_name: str,
        update_tenant_setting_override_request: IO[bytes],
        *,
        content_type: str = "application/json",
        **kwargs: Any,
    ) -> _models.UpdateCapacityTenantSettingOverrideResponse:
        """Update given tenant setting override for given capacity Id.

        ..

           [!NOTE]
           This API is part of a Preview release and is provided for evaluation and development
        purposes only. It may change based on feedback and is not recommended for production use.


        Permissions
        -----------

        The caller must be a Fabric administrator or authenticate using a service principal.

        Required Delegated Scopes
        -------------------------

        Tenant.ReadWrite.All

        Limitations
        -----------

        Maximum 25 requests per minute.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param capacity_id: The capacity ID. Required.
        :type capacity_id: str
        :param tenant_setting_name: The name of tenant setting. Required.
        :type tenant_setting_name: str
        :param update_tenant_setting_override_request: The request payload for updating the tenant
         setting override. Required.
        :type update_tenant_setting_override_request: IO[bytes]
        :keyword content_type: Body Parameter content-type. Content type parameter for binary body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: UpdateCapacityTenantSettingOverrideResponse
        :rtype: ~microsoft.fabric.api.admin.models.UpdateCapacityTenantSettingOverrideResponse
        :raises ~azure.core.exceptions.HttpResponseError:
        """

    @distributed_trace
    def update_capacity_tenant_setting_override(
        self,
        capacity_id: str,
        tenant_setting_name: str,
        update_tenant_setting_override_request: Union[_models.UpdateCapacityTenantSettingOverrideRequest, IO[bytes]],
        **kwargs: Any,
    ) -> _models.UpdateCapacityTenantSettingOverrideResponse:
        """Update given tenant setting override for given capacity Id.

        ..

           [!NOTE]
           This API is part of a Preview release and is provided for evaluation and development
        purposes only. It may change based on feedback and is not recommended for production use.


        Permissions
        -----------

        The caller must be a Fabric administrator or authenticate using a service principal.

        Required Delegated Scopes
        -------------------------

        Tenant.ReadWrite.All

        Limitations
        -----------

        Maximum 25 requests per minute.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param capacity_id: The capacity ID. Required.
        :type capacity_id: str
        :param tenant_setting_name: The name of tenant setting. Required.
        :type tenant_setting_name: str
        :param update_tenant_setting_override_request: The request payload for updating the tenant
         setting override. Is either a UpdateCapacityTenantSettingOverrideRequest type or a IO[bytes]
         type. Required.
        :type update_tenant_setting_override_request:
         ~microsoft.fabric.api.admin.models.UpdateCapacityTenantSettingOverrideRequest or IO[bytes]
        :return: UpdateCapacityTenantSettingOverrideResponse
        :rtype: ~microsoft.fabric.api.admin.models.UpdateCapacityTenantSettingOverrideResponse
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        error_map: MutableMapping[int, Type[HttpResponseError]] = {
            401: ClientAuthenticationError,
            404: ResourceNotFoundError,
            409: ResourceExistsError,
            304: ResourceNotModifiedError,
        }
        error_map.update(kwargs.pop("error_map", {}) or {})

        _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
        _params = kwargs.pop("params", {}) or {}

        content_type: Optional[str] = kwargs.pop("content_type", _headers.pop("Content-Type", None))
        cls: ClsType[_models.UpdateCapacityTenantSettingOverrideResponse] = kwargs.pop("cls", None)

        content_type = content_type or "application/json"
        _json = None
        _content = None
        if isinstance(update_tenant_setting_override_request, (IOBase, bytes)):
            _content = update_tenant_setting_override_request
        else:
            _json = self._serialize.body(
                update_tenant_setting_override_request, "UpdateCapacityTenantSettingOverrideRequest"
            )

        _request = build_tenants_update_capacity_tenant_setting_override_request(
            capacity_id=capacity_id,
            tenant_setting_name=tenant_setting_name,
            content_type=content_type,
            json=_json,
            content=_content,
            headers=_headers,
            params=_params,
        )
        _request.url = self._client.format_url(_request.url)

        _stream = False
        pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
            _request, stream=_stream, **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize.failsafe_deserialize(_models.ErrorResponse, pipeline_response)
            raise HttpResponseError(response=response, model=error)

        deserialized = self._deserialize("UpdateCapacityTenantSettingOverrideResponse", pipeline_response.http_response)

        if cls:
            return cls(pipeline_response, deserialized, {})  # type: ignore

        return deserialized  # type: ignore

    @distributed_trace
    def list_domains_tenant_settings_overrides(
        self, *, continuation_token_parameter: Optional[str] = None, **kwargs: Any
    ) -> Iterable["_models.DomainTenantSettingOverride"]:
        """Returns list of domain delegation setting overrides.

        ..

           [!NOTE]
           This API is part of a Preview release and is provided for evaluation and development
        purposes only. It may change based on feedback and is not recommended for production use.


        This API supports `pagination </rest/api/fabric/articles/pagination>`_. A maximum of 10,000
        records can be returned per request. With the continuation token provided in the response, you
        can get the next 10,000 records.

        The user must be a Fabric Service Administrator or authenticate using a service principal.

        Required Delegated Scopes
        -------------------------

        Tenant.Read.All or Tenant.ReadWrite.All

        Limitations
        -----------

        Maximum 25 requests per minute.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :keyword continuation_token_parameter: A token for retrieving the next page of results. Default
         value is None.
        :paramtype continuation_token_parameter: str
        :return: An iterator like instance of DomainTenantSettingOverride
        :rtype:
         ~azure.core.paging.ItemPaged[~microsoft.fabric.api.admin.models.DomainTenantSettingOverride]
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls: ClsType[_models._models.DomainTenantSettingOverrides] = kwargs.pop(  # pylint: disable=protected-access
            "cls", None
        )

        error_map: MutableMapping[int, Type[HttpResponseError]] = {
            401: ClientAuthenticationError,
            404: ResourceNotFoundError,
            409: ResourceExistsError,
            304: ResourceNotModifiedError,
        }
        error_map.update(kwargs.pop("error_map", {}) or {})

        def prepare_request(next_link=None):
            if not next_link:

                _request = build_tenants_list_domains_tenant_settings_overrides_request(
                    continuation_token_parameter=continuation_token_parameter,
                    headers=_headers,
                    params=_params,
                )
                _request.url = self._client.format_url(_request.url)

            else:
                _request = HttpRequest("GET", next_link)
                _request.url = self._client.format_url(_request.url)

            return _request

        def extract_data(pipeline_response):
            deserialized = self._deserialize(
                _models._models.DomainTenantSettingOverrides, pipeline_response  # pylint: disable=protected-access
            )
            list_of_elem = deserialized.value
            if cls:
                list_of_elem = cls(list_of_elem)  # type: ignore
            return deserialized.continuation_uri or None, iter(list_of_elem)

        def get_next(next_link=None):
            _request = prepare_request(next_link)

            _stream = False
            pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
                _request, stream=_stream, **kwargs
            )
            response = pipeline_response.http_response

            if response.status_code not in [200]:
                map_error(status_code=response.status_code, response=response, error_map=error_map)
                error = self._deserialize.failsafe_deserialize(_models.ErrorResponse, pipeline_response)
                raise HttpResponseError(response=response, model=error)

            return pipeline_response

        return ItemPaged(get_next, extract_data)

    @distributed_trace
    def list_workspaces_tenant_settings_overrides(  # pylint: disable=name-too-long
        self, *, continuation_token_parameter: Optional[str] = None, **kwargs: Any
    ) -> Iterable["_models.WorkspaceTenantSettingOverride"]:
        """Returns list of workspace delegation setting overrides.

        ..

           [!NOTE]
           This API is part of a Preview release and is provided for evaluation and development
        purposes only. It may change based on feedback and is not recommended for production use.


        This API supports `pagination </rest/api/fabric/articles/pagination>`_. A maximum of 10,000
        records can be returned per request. With the continuation token provided in the response, you
        can get the next 10,000 records.

        The user must be a Fabric Service Administrator or authenticate using a service principal.

        Required Delegated Scopes
        -------------------------

        Tenant.Read.All or Tenant.ReadWrite.All

        Limitations
        -----------

        Maximum 25 requests per minute.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :keyword continuation_token_parameter: A token for retrieving the next page of results. Default
         value is None.
        :paramtype continuation_token_parameter: str
        :return: An iterator like instance of WorkspaceTenantSettingOverride
        :rtype:
         ~azure.core.paging.ItemPaged[~microsoft.fabric.api.admin.models.WorkspaceTenantSettingOverride]
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls: ClsType[_models._models.WorkspaceTenantSettingOverrides] = kwargs.pop(  # pylint: disable=protected-access
            "cls", None
        )

        error_map: MutableMapping[int, Type[HttpResponseError]] = {
            401: ClientAuthenticationError,
            404: ResourceNotFoundError,
            409: ResourceExistsError,
            304: ResourceNotModifiedError,
        }
        error_map.update(kwargs.pop("error_map", {}) or {})

        def prepare_request(next_link=None):
            if not next_link:

                _request = build_tenants_list_workspaces_tenant_settings_overrides_request(
                    continuation_token_parameter=continuation_token_parameter,
                    headers=_headers,
                    params=_params,
                )
                _request.url = self._client.format_url(_request.url)

            else:
                _request = HttpRequest("GET", next_link)
                _request.url = self._client.format_url(_request.url)

            return _request

        def extract_data(pipeline_response):
            deserialized = self._deserialize(
                _models._models.WorkspaceTenantSettingOverrides, pipeline_response  # pylint: disable=protected-access
            )
            list_of_elem = deserialized.value
            if cls:
                list_of_elem = cls(list_of_elem)  # type: ignore
            return deserialized.continuation_uri or None, iter(list_of_elem)

        def get_next(next_link=None):
            _request = prepare_request(next_link)

            _stream = False
            pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
                _request, stream=_stream, **kwargs
            )
            response = pipeline_response.http_response

            if response.status_code not in [200]:
                map_error(status_code=response.status_code, response=response, error_map=error_map)
                error = self._deserialize.failsafe_deserialize(_models.ErrorResponse, pipeline_response)
                raise HttpResponseError(response=response, model=error)

            return pipeline_response

        return ItemPaged(get_next, extract_data)


class WorkspacesOperations:
    """
    .. warning::
        **DO NOT** instantiate this class directly.

        Instead, you should access the following operations through
        :class:`~microsoft.fabric.api.admin.FabricAdminClient`'s
        :attr:`workspaces` attribute.
    """

    models = _models

    def __init__(self, *args, **kwargs):
        input_args = list(args)
        self._client = input_args.pop(0) if input_args else kwargs.pop("client")
        self._config = input_args.pop(0) if input_args else kwargs.pop("config")
        self._serialize = input_args.pop(0) if input_args else kwargs.pop("serializer")
        self._deserialize = input_args.pop(0) if input_args else kwargs.pop("deserializer")

    @distributed_trace
    def list_workspaces(
        self,
        *,
        type: Optional[str] = None,
        capacity_id: Optional[str] = None,
        name: Optional[str] = None,
        state: Optional[str] = None,
        continuation_token_parameter: Optional[str] = None,
        **kwargs: Any,
    ) -> Iterable["_models.Workspace"]:
        """Returns a list of workspaces.

        ..

           [!NOTE]
           This API is part of a Preview release and is provided for evaluation and development
        purposes only. It may change based on feedback and is not recommended for production use.


        This API supports `pagination </rest/api/fabric/articles/pagination>`_. A maximum of 10,000
        records can be returned per request. With the continuous token provided in the response, you
        can get the next 10,000 records.

        Permissions
        -----------

        The caller must be a Fabric administrator or authenticate using a service principal.

        Required Delegated Scopes
        -------------------------

        Tenant.Read.All or Tenant.ReadWrite.All

        Limitations
        -----------

        Maximum 200 requests per hour.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :keyword type: The workspace type. Supported types are personal, workspace, adminworkspace.
         Default value is None.
        :paramtype type: str
        :keyword capacity_id: The capacity ID of the workspace. Default value is None.
        :paramtype capacity_id: str
        :keyword name: The workspace name. Default value is None.
        :paramtype name: str
        :keyword state: The workspace state. Supported states are active and deleted. Default value is
         None.
        :paramtype state: str
        :keyword continuation_token_parameter: Continuation token. Used to get the next items in the
         list. Default value is None.
        :paramtype continuation_token_parameter: str
        :return: An iterator like instance of Workspace
        :rtype: ~azure.core.paging.ItemPaged[~microsoft.fabric.api.admin.models.Workspace]
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls: ClsType[_models._models.Workspaces] = kwargs.pop("cls", None)  # pylint: disable=protected-access

        error_map: MutableMapping[int, Type[HttpResponseError]] = {
            401: ClientAuthenticationError,
            404: ResourceNotFoundError,
            409: ResourceExistsError,
            304: ResourceNotModifiedError,
        }
        error_map.update(kwargs.pop("error_map", {}) or {})

        def prepare_request(next_link=None):
            if not next_link:

                _request = build_workspaces_list_workspaces_request(
                    type=type,
                    capacity_id=capacity_id,
                    name=name,
                    state=state,
                    continuation_token_parameter=continuation_token_parameter,
                    headers=_headers,
                    params=_params,
                )
                _request.url = self._client.format_url(_request.url)

            else:
                _request = HttpRequest("GET", next_link)
                _request.url = self._client.format_url(_request.url)

            return _request

        def extract_data(pipeline_response):
            deserialized = self._deserialize(
                _models._models.Workspaces, pipeline_response  # pylint: disable=protected-access
            )
            list_of_elem = deserialized.workspaces
            if cls:
                list_of_elem = cls(list_of_elem)  # type: ignore
            return deserialized.continuation_uri or None, iter(list_of_elem)

        def get_next(next_link=None):
            _request = prepare_request(next_link)

            _stream = False
            pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
                _request, stream=_stream, **kwargs
            )
            response = pipeline_response.http_response

            if response.status_code not in [200]:
                map_error(status_code=response.status_code, response=response, error_map=error_map)
                error = self._deserialize.failsafe_deserialize(_models.ErrorResponse, pipeline_response)
                raise HttpResponseError(response=response, model=error)

            return pipeline_response

        return ItemPaged(get_next, extract_data)

    @distributed_trace
    def list_git_connections(
        self, *, continuation_token_parameter: Optional[str] = None, **kwargs: Any
    ) -> Iterable["_models.GitConnectionDetails"]:
        """Returns a list of Git connections.

        ..

           [!NOTE]
           This API is part of a Preview release and is provided for evaluation and development
        purposes only. It may change based on feedback and is not recommended for production use.


        This API supports `pagination </rest/api/fabric/articles/pagination>`_. A maximum of 1,000
        records can be returned per request. With the continuous token provided in the response, you
        can get the next 1,000 records.

        Permissions
        -----------

        The caller must be a Fabric administrator or authenticate using a service principal.

        Required Delegated Scopes
        -------------------------

        Tenant.Read.All or Tenant.ReadWrite.All

        Limitations
        -----------

        Maximum 25 requests per minute.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :keyword continuation_token_parameter: A token for retrieving the next page of results. Default
         value is None.
        :paramtype continuation_token_parameter: str
        :return: An iterator like instance of GitConnectionDetails
        :rtype: ~azure.core.paging.ItemPaged[~microsoft.fabric.api.admin.models.GitConnectionDetails]
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls: ClsType[_models._models.GitConnections] = kwargs.pop("cls", None)  # pylint: disable=protected-access

        error_map: MutableMapping[int, Type[HttpResponseError]] = {
            401: ClientAuthenticationError,
            404: ResourceNotFoundError,
            409: ResourceExistsError,
            304: ResourceNotModifiedError,
        }
        error_map.update(kwargs.pop("error_map", {}) or {})

        def prepare_request(next_link=None):
            if not next_link:

                _request = build_workspaces_list_git_connections_request(
                    continuation_token_parameter=continuation_token_parameter,
                    headers=_headers,
                    params=_params,
                )
                _request.url = self._client.format_url(_request.url)

            else:
                _request = HttpRequest("GET", next_link)
                _request.url = self._client.format_url(_request.url)

            return _request

        def extract_data(pipeline_response):
            deserialized = self._deserialize(
                _models._models.GitConnections, pipeline_response  # pylint: disable=protected-access
            )
            list_of_elem = deserialized.value
            if cls:
                list_of_elem = cls(list_of_elem)  # type: ignore
            return deserialized.continuation_uri or None, iter(list_of_elem)

        def get_next(next_link=None):
            _request = prepare_request(next_link)

            _stream = False
            pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
                _request, stream=_stream, **kwargs
            )
            response = pipeline_response.http_response

            if response.status_code not in [200]:
                map_error(status_code=response.status_code, response=response, error_map=error_map)
                error = self._deserialize.failsafe_deserialize(_models.ErrorResponse, pipeline_response)
                raise HttpResponseError(response=response, model=error)

            return pipeline_response

        return ItemPaged(get_next, extract_data)

    @distributed_trace
    def get_workspace(self, workspace_id: str, **kwargs: Any) -> _models.Workspace:
        """Returns the specified workspace.

        ..

           [!NOTE]
           This API is part of a Preview release and is provided for evaluation and development
        purposes only. It may change based on feedback and is not recommended for production use.


        Permissions
        -----------

        The caller must be a Fabric administrator or authenticate using a service principal.

        Required Delegated Scopes
        -------------------------

        Tenant.Read.All or Tenant.ReadWrite.All

        Limitations
        -----------

        Maximum 200 requests per hour.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param workspace_id: The workspace ID. Required.
        :type workspace_id: str
        :return: Workspace
        :rtype: ~microsoft.fabric.api.admin.models.Workspace
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        error_map: MutableMapping[int, Type[HttpResponseError]] = {
            401: ClientAuthenticationError,
            404: ResourceNotFoundError,
            409: ResourceExistsError,
            304: ResourceNotModifiedError,
        }
        error_map.update(kwargs.pop("error_map", {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls: ClsType[_models.Workspace] = kwargs.pop("cls", None)

        _request = build_workspaces_get_workspace_request(
            workspace_id=workspace_id,
            headers=_headers,
            params=_params,
        )
        _request.url = self._client.format_url(_request.url)

        _stream = False
        pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
            _request, stream=_stream, **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize.failsafe_deserialize(_models.ErrorResponse, pipeline_response)
            raise HttpResponseError(response=response, model=error)

        deserialized = self._deserialize("Workspace", pipeline_response.http_response)

        if cls:
            return cls(pipeline_response, deserialized, {})  # type: ignore

        return deserialized  # type: ignore

    @distributed_trace
    def list_workspace_access_details(self, workspace_id: str, **kwargs: Any) -> _models.WorkspaceAccessDetailsResponse:
        """Returns a list of users (including groups and ServicePrincipals) that have access to the
        specified workspace.

        ..

           [!NOTE]
           This API is part of a Preview release and is provided for evaluation and development
        purposes only. It may change based on feedback and is not recommended for production use.


        Permissions
        -----------

        The caller must be a Fabric administrator or authenticate using a service principal.

        Required Delegated Scopes
        -------------------------

        Tenant.Read.All or Tenant.ReadWrite.All

        Limitations
        -----------

        Maximum 200 requests per hour.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param workspace_id: The workspace ID. Required.
        :type workspace_id: str
        :return: WorkspaceAccessDetailsResponse
        :rtype: ~microsoft.fabric.api.admin.models.WorkspaceAccessDetailsResponse
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        error_map: MutableMapping[int, Type[HttpResponseError]] = {
            401: ClientAuthenticationError,
            404: ResourceNotFoundError,
            409: ResourceExistsError,
            304: ResourceNotModifiedError,
        }
        error_map.update(kwargs.pop("error_map", {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls: ClsType[_models.WorkspaceAccessDetailsResponse] = kwargs.pop("cls", None)

        _request = build_workspaces_list_workspace_access_details_request(
            workspace_id=workspace_id,
            headers=_headers,
            params=_params,
        )
        _request.url = self._client.format_url(_request.url)

        _stream = False
        pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
            _request, stream=_stream, **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize.failsafe_deserialize(_models.ErrorResponse, pipeline_response)
            raise HttpResponseError(response=response, model=error)

        deserialized = self._deserialize("WorkspaceAccessDetailsResponse", pipeline_response.http_response)

        if cls:
            return cls(pipeline_response, deserialized, {})  # type: ignore

        return deserialized  # type: ignore

    @overload
    def restore_workspace(  # pylint: disable=inconsistent-return-statements
        self,
        workspace_id: str,
        restore_workspace_request: _models.RestoreWorkspaceRequest,
        *,
        content_type: str = "application/json",
        **kwargs: Any,
    ) -> None:
        """Restores a deleted workspace.

        ..

           [!NOTE]
           This API is part of a Preview release and is provided for evaluation and development
        purposes only. It may change based on feedback and is not recommended for production use.


        Permissions
        -----------

        The caller must have Fabric administrator rights.

        Required Delegated Scopes
        -------------------------

        Tenant.ReadWrite.All.

        Limitations
        -----------

        Maximum ten requests per minute.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param workspace_id: The workspace ID. Required.
        :type workspace_id: str
        :param restore_workspace_request: The request payload for restoring the deleted workspace.
         Required.
        :type restore_workspace_request: ~microsoft.fabric.api.admin.models.RestoreWorkspaceRequest
        :keyword content_type: Body Parameter content-type. Content type parameter for JSON body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: None
        :rtype: None
        :raises ~azure.core.exceptions.HttpResponseError:
        """

    @overload
    def restore_workspace(  # pylint: disable=inconsistent-return-statements
        self,
        workspace_id: str,
        restore_workspace_request: IO[bytes],
        *,
        content_type: str = "application/json",
        **kwargs: Any,
    ) -> None:
        """Restores a deleted workspace.

        ..

           [!NOTE]
           This API is part of a Preview release and is provided for evaluation and development
        purposes only. It may change based on feedback and is not recommended for production use.


        Permissions
        -----------

        The caller must have Fabric administrator rights.

        Required Delegated Scopes
        -------------------------

        Tenant.ReadWrite.All.

        Limitations
        -----------

        Maximum ten requests per minute.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param workspace_id: The workspace ID. Required.
        :type workspace_id: str
        :param restore_workspace_request: The request payload for restoring the deleted workspace.
         Required.
        :type restore_workspace_request: IO[bytes]
        :keyword content_type: Body Parameter content-type. Content type parameter for binary body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: None
        :rtype: None
        :raises ~azure.core.exceptions.HttpResponseError:
        """

    @distributed_trace
    def restore_workspace(  # pylint: disable=inconsistent-return-statements
        self,
        workspace_id: str,
        restore_workspace_request: Union[_models.RestoreWorkspaceRequest, IO[bytes]],
        **kwargs: Any,
    ) -> None:
        """Restores a deleted workspace.

        ..

           [!NOTE]
           This API is part of a Preview release and is provided for evaluation and development
        purposes only. It may change based on feedback and is not recommended for production use.


        Permissions
        -----------

        The caller must have Fabric administrator rights.

        Required Delegated Scopes
        -------------------------

        Tenant.ReadWrite.All.

        Limitations
        -----------

        Maximum ten requests per minute.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param workspace_id: The workspace ID. Required.
        :type workspace_id: str
        :param restore_workspace_request: The request payload for restoring the deleted workspace. Is
         either a RestoreWorkspaceRequest type or a IO[bytes] type. Required.
        :type restore_workspace_request: ~microsoft.fabric.api.admin.models.RestoreWorkspaceRequest or
         IO[bytes]
        :return: None
        :rtype: None
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        error_map: MutableMapping[int, Type[HttpResponseError]] = {
            401: ClientAuthenticationError,
            404: ResourceNotFoundError,
            409: ResourceExistsError,
            304: ResourceNotModifiedError,
        }
        error_map.update(kwargs.pop("error_map", {}) or {})

        _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
        _params = kwargs.pop("params", {}) or {}

        content_type: Optional[str] = kwargs.pop("content_type", _headers.pop("Content-Type", None))
        cls: ClsType[None] = kwargs.pop("cls", None)

        content_type = content_type or "application/json"
        _json = None
        _content = None
        if isinstance(restore_workspace_request, (IOBase, bytes)):
            _content = restore_workspace_request
        else:
            _json = self._serialize.body(restore_workspace_request, "RestoreWorkspaceRequest")

        _request = build_workspaces_restore_workspace_request(
            workspace_id=workspace_id,
            content_type=content_type,
            json=_json,
            content=_content,
            headers=_headers,
            params=_params,
        )
        _request.url = self._client.format_url(_request.url)

        _stream = False
        pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
            _request, stream=_stream, **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize.failsafe_deserialize(_models.ErrorResponse, pipeline_response)
            raise HttpResponseError(response=response, model=error)

        if cls:
            return cls(pipeline_response, None, {})  # type: ignore


class ItemsOperations:
    """
    .. warning::
        **DO NOT** instantiate this class directly.

        Instead, you should access the following operations through
        :class:`~microsoft.fabric.api.admin.FabricAdminClient`'s
        :attr:`items` attribute.
    """

    models = _models

    def __init__(self, *args, **kwargs):
        input_args = list(args)
        self._client = input_args.pop(0) if input_args else kwargs.pop("client")
        self._config = input_args.pop(0) if input_args else kwargs.pop("config")
        self._serialize = input_args.pop(0) if input_args else kwargs.pop("serializer")
        self._deserialize = input_args.pop(0) if input_args else kwargs.pop("deserializer")

    @distributed_trace
    def list_items(
        self,
        *,
        workspace_id: Optional[str] = None,
        capacity_id: Optional[str] = None,
        state: Optional[str] = None,
        type: Optional[str] = None,
        continuation_token_parameter: Optional[str] = None,
        **kwargs: Any,
    ) -> Iterable["_models.Item"]:
        """Returns a list of active Fabric and PowerBI items.

        ..

           [!NOTE]
           This API is part of a Preview release and is provided for evaluation and development
        purposes only. It may change based on feedback and is not recommended for production use.


        This API supports `pagination </rest/api/fabric/articles/pagination>`_. A maximum of 10,000
        records can be returned per request. With the continuous token provided in the response, you
        can get the next 10,000 records.

        Page order:


        #. Fabric items
        #. Datamarts
        #. Reports
        #. Dashboards
        #. SemanticModels
        #. Apps
        #. Dataflows

        Permissions
        -----------

        The caller must be a Fabric administrator or authenticate using a service principal.

        Required Delegated Scopes
        -------------------------

        Tenant.Read.All or Tenant.ReadWrite.All

        Limitations
        -----------

        Maximum 200 requests per hour.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :keyword workspace_id: The workspace ID. Default value is None.
        :paramtype workspace_id: str
        :keyword capacity_id: The capacity ID of the workspace. Default value is None.
        :paramtype capacity_id: str
        :keyword state: The item state. Supported states are active. Default value is None.
        :paramtype state: str
        :keyword type: The item type. Default value is None.
        :paramtype type: str
        :keyword continuation_token_parameter: Continuous token used to get the next page items.
         Default value is None.
        :paramtype continuation_token_parameter: str
        :return: An iterator like instance of Item
        :rtype: ~azure.core.paging.ItemPaged[~microsoft.fabric.api.admin.models.Item]
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls: ClsType[_models._models.Items] = kwargs.pop("cls", None)  # pylint: disable=protected-access

        error_map: MutableMapping[int, Type[HttpResponseError]] = {
            401: ClientAuthenticationError,
            404: ResourceNotFoundError,
            409: ResourceExistsError,
            304: ResourceNotModifiedError,
        }
        error_map.update(kwargs.pop("error_map", {}) or {})

        def prepare_request(next_link=None):
            if not next_link:

                _request = build_items_list_items_request(
                    workspace_id=workspace_id,
                    capacity_id=capacity_id,
                    state=state,
                    type=type,
                    continuation_token_parameter=continuation_token_parameter,
                    headers=_headers,
                    params=_params,
                )
                _request.url = self._client.format_url(_request.url)

            else:
                _request = HttpRequest("GET", next_link)
                _request.url = self._client.format_url(_request.url)

            return _request

        def extract_data(pipeline_response):
            deserialized = self._deserialize(
                _models._models.Items, pipeline_response  # pylint: disable=protected-access
            )
            list_of_elem = deserialized.item_entities
            if cls:
                list_of_elem = cls(list_of_elem)  # type: ignore
            return deserialized.continuation_uri or None, iter(list_of_elem)

        def get_next(next_link=None):
            _request = prepare_request(next_link)

            _stream = False
            pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
                _request, stream=_stream, **kwargs
            )
            response = pipeline_response.http_response

            if response.status_code not in [200]:
                map_error(status_code=response.status_code, response=response, error_map=error_map)
                error = self._deserialize.failsafe_deserialize(_models.ErrorResponse, pipeline_response)
                raise HttpResponseError(response=response, model=error)

            return pipeline_response

        return ItemPaged(get_next, extract_data)

    @distributed_trace
    def get_item(self, workspace_id: str, item_id: str, *, type: Optional[str] = None, **kwargs: Any) -> _models.Item:
        """Returns the specified Fabric or PowerBI item.

        ..

           [!NOTE]
           This API is part of a Preview release and is provided for evaluation and development
        purposes only. It may change based on feedback and is not recommended for production use.


        Permissions
        -----------

        The caller must be a Fabric administrator or authenticate using a service principal.

        Required Delegated Scopes
        -------------------------

        Tenant.Read.All or Tenant.ReadWrite.All

        Limitations
        -----------

        Maximum 200 requests per hour.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param workspace_id: The workspace ID. Required.
        :type workspace_id: str
        :param item_id: The item ID. Required.
        :type item_id: str
        :keyword type: The type of the item.
          When querying for the following types, this parameter is required:


         *
           Report

         *
           Dashboard

         *
           SemanticModel

         *
           App

         *
           Dataflow. Default value is None.
        :paramtype type: str
        :return: Item
        :rtype: ~microsoft.fabric.api.admin.models.Item
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        error_map: MutableMapping[int, Type[HttpResponseError]] = {
            401: ClientAuthenticationError,
            404: ResourceNotFoundError,
            409: ResourceExistsError,
            304: ResourceNotModifiedError,
        }
        error_map.update(kwargs.pop("error_map", {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls: ClsType[_models.Item] = kwargs.pop("cls", None)

        _request = build_items_get_item_request(
            workspace_id=workspace_id,
            item_id=item_id,
            type=type,
            headers=_headers,
            params=_params,
        )
        _request.url = self._client.format_url(_request.url)

        _stream = False
        pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
            _request, stream=_stream, **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize.failsafe_deserialize(_models.ErrorResponse, pipeline_response)
            raise HttpResponseError(response=response, model=error)

        deserialized = self._deserialize("Item", pipeline_response.http_response)

        if cls:
            return cls(pipeline_response, deserialized, {})  # type: ignore

        return deserialized  # type: ignore

    @distributed_trace
    def list_item_access_details(
        self, workspace_id: str, item_id: str, *, type: Optional[str] = None, **kwargs: Any
    ) -> _models.ItemAccessDetailsResponse:
        """Returns a list of users (including groups and service principals) and lists their workspace
        roles.

        ..

           [!NOTE]
           This API is part of a Preview release and is provided for evaluation and development
        purposes only. It may change based on feedback and is not recommended for production use.


        Permissions
        -----------

        The caller must be a Fabric administrator or authenticate using a service principal.

        Required Delegated Scopes
        -------------------------

        Tenant.Read.All or Tenant.ReadWrite.All

        Limitations
        -----------

        Maximum 200 requests per hour.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param workspace_id: The workspace ID. Required.
        :type workspace_id: str
        :param item_id: The item ID. Required.
        :type item_id: str
        :keyword type: The type of the item.
          When querying for the following types, this parameter is required:


         *
           Report

         *
           Dashboard

         *
           SemanticModel

         *
           App

         *
           Dataflow. Default value is None.
        :paramtype type: str
        :return: ItemAccessDetailsResponse
        :rtype: ~microsoft.fabric.api.admin.models.ItemAccessDetailsResponse
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        error_map: MutableMapping[int, Type[HttpResponseError]] = {
            401: ClientAuthenticationError,
            404: ResourceNotFoundError,
            409: ResourceExistsError,
            304: ResourceNotModifiedError,
        }
        error_map.update(kwargs.pop("error_map", {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls: ClsType[_models.ItemAccessDetailsResponse] = kwargs.pop("cls", None)

        _request = build_items_list_item_access_details_request(
            workspace_id=workspace_id,
            item_id=item_id,
            type=type,
            headers=_headers,
            params=_params,
        )
        _request.url = self._client.format_url(_request.url)

        _stream = False
        pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
            _request, stream=_stream, **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize.failsafe_deserialize(_models.ErrorResponse, pipeline_response)
            raise HttpResponseError(response=response, model=error)

        deserialized = self._deserialize("ItemAccessDetailsResponse", pipeline_response.http_response)

        if cls:
            return cls(pipeline_response, deserialized, {})  # type: ignore

        return deserialized  # type: ignore


class UsersOperations:
    """
    .. warning::
        **DO NOT** instantiate this class directly.

        Instead, you should access the following operations through
        :class:`~microsoft.fabric.api.admin.FabricAdminClient`'s
        :attr:`users` attribute.
    """

    models = _models

    def __init__(self, *args, **kwargs):
        input_args = list(args)
        self._client = input_args.pop(0) if input_args else kwargs.pop("client")
        self._config = input_args.pop(0) if input_args else kwargs.pop("config")
        self._serialize = input_args.pop(0) if input_args else kwargs.pop("serializer")
        self._deserialize = input_args.pop(0) if input_args else kwargs.pop("deserializer")

    @distributed_trace
    def list_access_entities(
        self,
        user_id: str,
        *,
        type: Optional[str] = None,
        continuation_token_parameter: Optional[str] = None,
        **kwargs: Any,
    ) -> Iterable["_models.AccessEntity"]:
        """Returns a list of permission details for Fabric and PowerBI items the specified user can
        access.

        ..

           [!NOTE]
           This API is part of a Preview release and is provided for evaluation and development
        purposes only. It may change based on feedback and is not recommended for production use.


        This API supports `pagination </rest/api/fabric/articles/pagination>`_. A maximum of 10,000
        records can be returned per request. With the continuous token provided in the response, you
        can get the next 10,000 records.

        Page order:


        #. Fabric items
        #. Datamarts
        #. Reports
        #. Dashboards
        #. SemanticModels
        #. Apps
        #. Dataflows

        Permissions
        -----------

        The caller must be a Fabric administrator or authenticate using a service principal.

        Required Delegated Scopes
        -------------------------

        Tenant.Read.All or Tenant.ReadWrite.All

        Limitations
        -----------

        Maximum 200 requests per hour.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param user_id: The user graph ID or User Principal Name (UPN). Required.
        :type user_id: str
        :keyword type: The item type. Default value is None.
        :paramtype type: str
        :keyword continuation_token_parameter: Continuous token used to get the next page items.
         Default value is None.
        :paramtype continuation_token_parameter: str
        :return: An iterator like instance of AccessEntity
        :rtype: ~azure.core.paging.ItemPaged[~microsoft.fabric.api.admin.models.AccessEntity]
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls: ClsType[_models._models.AccessEntityResponse] = kwargs.pop("cls", None)  # pylint: disable=protected-access

        error_map: MutableMapping[int, Type[HttpResponseError]] = {
            401: ClientAuthenticationError,
            404: ResourceNotFoundError,
            409: ResourceExistsError,
            304: ResourceNotModifiedError,
        }
        error_map.update(kwargs.pop("error_map", {}) or {})

        def prepare_request(next_link=None):
            if not next_link:

                _request = build_users_list_access_entities_request(
                    user_id=user_id,
                    type=type,
                    continuation_token_parameter=continuation_token_parameter,
                    headers=_headers,
                    params=_params,
                )
                _request.url = self._client.format_url(_request.url)

            else:
                _request = HttpRequest("GET", next_link)
                _request.url = self._client.format_url(_request.url)

            return _request

        def extract_data(pipeline_response):
            deserialized = self._deserialize(
                _models._models.AccessEntityResponse, pipeline_response  # pylint: disable=protected-access
            )
            list_of_elem = deserialized.access_entities
            if cls:
                list_of_elem = cls(list_of_elem)  # type: ignore
            return deserialized.continuation_uri or None, iter(list_of_elem)

        def get_next(next_link=None):
            _request = prepare_request(next_link)

            _stream = False
            pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
                _request, stream=_stream, **kwargs
            )
            response = pipeline_response.http_response

            if response.status_code not in [200]:
                map_error(status_code=response.status_code, response=response, error_map=error_map)
                error = self._deserialize.failsafe_deserialize(_models.ErrorResponse, pipeline_response)
                raise HttpResponseError(response=response, model=error)

            return pipeline_response

        return ItemPaged(get_next, extract_data)


class DomainsOperations:  # pylint: disable=too-many-public-methods
    """
    .. warning::
        **DO NOT** instantiate this class directly.

        Instead, you should access the following operations through
        :class:`~microsoft.fabric.api.admin.FabricAdminClient`'s
        :attr:`domains` attribute.
    """

    models = _models

    def __init__(self, *args, **kwargs):
        input_args = list(args)
        self._client = input_args.pop(0) if input_args else kwargs.pop("client")
        self._config = input_args.pop(0) if input_args else kwargs.pop("config")
        self._serialize = input_args.pop(0) if input_args else kwargs.pop("serializer")
        self._deserialize = input_args.pop(0) if input_args else kwargs.pop("deserializer")

    @distributed_trace
    def list_domains_preview(
        self, *, preview: bool, non_empty_only: Optional[bool] = None, **kwargs: Any
    ) -> _models.DomainsResponsePreview:
        """Returns info for all domains (preview).

        ..

           [!NOTE]
           This preview API will be deprecated on March 31, 2026, and replaced by a stable version,
        available `here </rest/api/fabric/admin/domains/list-domains>`_.
           The new version introduces breaking changes and is not backward compatible. **When calling
        this API, callers must specify ``true`` as the value for the query parameter ``preview``.**


        Deprecation Notice
        ------------------

        A new query parameter ``preview`` has been introduced to facilitate this transition:


        * The ``preview`` query parameter currently defaults to ``true``.
        * Set the value of the ``preview`` query parameter to ``false`` to use the Release version of
        this API.
        * Starting March 31, 2026, the default value for ``preview`` will change to ``false``.

        It is recommended to migrate your integration to use the Release version as soon as possible by
        specifying ``false`` for the ``preview`` query parameter (\\ **the default value for the
        ``preview`` query parameter will be set to ``false`` on API's deprecation date**\\ ).

        The following incompatible changes were introduced in the Release version:


        * Response property ``contributorsScope`` was removed.

        Permissions
        -----------

        The caller must be a Fabric administrator.

        Required Delegated Scopes
        -------------------------

        Tenant.Read.All or Tenant.ReadWrite.All.

        Limitations
        -----------

        Maximum 25 requests per one minute per principal.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :keyword preview: This parameter specifies which version of the API to use. Set to ``true`` to
         use the preview version described on this page, or to ``false`` to use the Release version
         detailed `here </rest/api/fabric/admin/domains/list-domains>`_.
         Starting March 31, 2026, the default value for ``preview`` will change to ``false``. Required.
        :paramtype preview: bool
        :keyword non_empty_only: When true, only return domains that have at least one workspace
         containing an item. Default: false. Default value is None.
        :paramtype non_empty_only: bool
        :return: DomainsResponsePreview
        :rtype: ~microsoft.fabric.api.admin.models.DomainsResponsePreview
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        error_map: MutableMapping[int, Type[HttpResponseError]] = {
            401: ClientAuthenticationError,
            404: ResourceNotFoundError,
            409: ResourceExistsError,
            304: ResourceNotModifiedError,
        }
        error_map.update(kwargs.pop("error_map", {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls: ClsType[_models.DomainsResponsePreview] = kwargs.pop("cls", None)

        _request = build_domains_list_domains_preview_request(
            preview=preview,
            non_empty_only=non_empty_only,
            headers=_headers,
            params=_params,
        )
        _request.url = self._client.format_url(_request.url)

        _stream = False
        pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
            _request, stream=_stream, **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize.failsafe_deserialize(_models.ErrorResponse, pipeline_response)
            raise HttpResponseError(response=response, model=error)

        deserialized = self._deserialize("DomainsResponsePreview", pipeline_response.http_response)

        if cls:
            return cls(pipeline_response, deserialized, {})  # type: ignore

        return deserialized  # type: ignore

    @overload
    def create_domain_preview(
        self,
        create_domain_request: _models.CreateDomainRequest,
        *,
        preview: bool,
        content_type: str = "application/json",
        **kwargs: Any,
    ) -> _models.DomainPreview:
        """Creates a new domain (preview).

        ..

           [!NOTE]
           This preview API will be deprecated on March 31, 2026, and replaced by a stable version,
        available `here </rest/api/fabric/admin/domains/create-domain>`_. The new version introduces
        breaking changes and is not backward compatible. **When calling this API, callers must specify
        ``true`` as the value for the query parameter ``preview``.**


        Deprecation Notice
        ------------------

        A new query parameter ``preview`` has been introduced to facilitate this transition:


        * The ``preview`` query parameter currently defaults to ``true``.
        * Set the value of the ``preview`` query parameter to ``false`` to use the Release version of
        this API.
        * Starting March 31, 2026, the default value for ``preview`` will change to ``false``.

        It is recommended to migrate your integration to use the Release version as soon as possible by
        specifying ``false`` for the ``preview`` query parameter (\\ **the default value for the
        ``preview`` query parameter will be set to ``false`` on API's deprecation date**\\ ).

        The following incompatible changes were introduced in the Release version:


        * Response property ``contributorsScope`` was removed.

        Permissions
        -----------

        The caller must be a Fabric administrator.

        Required Delegated Scopes
        -------------------------

        Tenant.Read.All or Tenant.ReadWrite.All.

        Limitations
        -----------

        Maximum 25 requests per one minute per principal.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param create_domain_request: The request payload for creating the domain. Required.
        :type create_domain_request: ~microsoft.fabric.api.admin.models.CreateDomainRequest
        :keyword preview: This parameter specifies which version of the API to use. Set to ``true`` to
         use the preview version described on this page, or to ``false`` to use the Release version
         detailed `here </rest/api/fabric/admin/domains/create-domain>`_.
         Starting March 31, 2026, the default value for ``preview`` will change to ``false``. Required.
        :paramtype preview: bool
        :keyword content_type: Body Parameter content-type. Content type parameter for JSON body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: DomainPreview
        :rtype: ~microsoft.fabric.api.admin.models.DomainPreview
        :raises ~azure.core.exceptions.HttpResponseError:
        """

    @overload
    def create_domain_preview(
        self, create_domain_request: IO[bytes], *, preview: bool, content_type: str = "application/json", **kwargs: Any
    ) -> _models.DomainPreview:
        """Creates a new domain (preview).

        ..

           [!NOTE]
           This preview API will be deprecated on March 31, 2026, and replaced by a stable version,
        available `here </rest/api/fabric/admin/domains/create-domain>`_. The new version introduces
        breaking changes and is not backward compatible. **When calling this API, callers must specify
        ``true`` as the value for the query parameter ``preview``.**


        Deprecation Notice
        ------------------

        A new query parameter ``preview`` has been introduced to facilitate this transition:


        * The ``preview`` query parameter currently defaults to ``true``.
        * Set the value of the ``preview`` query parameter to ``false`` to use the Release version of
        this API.
        * Starting March 31, 2026, the default value for ``preview`` will change to ``false``.

        It is recommended to migrate your integration to use the Release version as soon as possible by
        specifying ``false`` for the ``preview`` query parameter (\\ **the default value for the
        ``preview`` query parameter will be set to ``false`` on API's deprecation date**\\ ).

        The following incompatible changes were introduced in the Release version:


        * Response property ``contributorsScope`` was removed.

        Permissions
        -----------

        The caller must be a Fabric administrator.

        Required Delegated Scopes
        -------------------------

        Tenant.Read.All or Tenant.ReadWrite.All.

        Limitations
        -----------

        Maximum 25 requests per one minute per principal.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param create_domain_request: The request payload for creating the domain. Required.
        :type create_domain_request: IO[bytes]
        :keyword preview: This parameter specifies which version of the API to use. Set to ``true`` to
         use the preview version described on this page, or to ``false`` to use the Release version
         detailed `here </rest/api/fabric/admin/domains/create-domain>`_.
         Starting March 31, 2026, the default value for ``preview`` will change to ``false``. Required.
        :paramtype preview: bool
        :keyword content_type: Body Parameter content-type. Content type parameter for binary body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: DomainPreview
        :rtype: ~microsoft.fabric.api.admin.models.DomainPreview
        :raises ~azure.core.exceptions.HttpResponseError:
        """

    @distributed_trace
    def create_domain_preview(
        self, create_domain_request: Union[_models.CreateDomainRequest, IO[bytes]], *, preview: bool, **kwargs: Any
    ) -> _models.DomainPreview:
        """Creates a new domain (preview).

        ..

           [!NOTE]
           This preview API will be deprecated on March 31, 2026, and replaced by a stable version,
        available `here </rest/api/fabric/admin/domains/create-domain>`_. The new version introduces
        breaking changes and is not backward compatible. **When calling this API, callers must specify
        ``true`` as the value for the query parameter ``preview``.**


        Deprecation Notice
        ------------------

        A new query parameter ``preview`` has been introduced to facilitate this transition:


        * The ``preview`` query parameter currently defaults to ``true``.
        * Set the value of the ``preview`` query parameter to ``false`` to use the Release version of
        this API.
        * Starting March 31, 2026, the default value for ``preview`` will change to ``false``.

        It is recommended to migrate your integration to use the Release version as soon as possible by
        specifying ``false`` for the ``preview`` query parameter (\\ **the default value for the
        ``preview`` query parameter will be set to ``false`` on API's deprecation date**\\ ).

        The following incompatible changes were introduced in the Release version:


        * Response property ``contributorsScope`` was removed.

        Permissions
        -----------

        The caller must be a Fabric administrator.

        Required Delegated Scopes
        -------------------------

        Tenant.Read.All or Tenant.ReadWrite.All.

        Limitations
        -----------

        Maximum 25 requests per one minute per principal.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param create_domain_request: The request payload for creating the domain. Is either a
         CreateDomainRequest type or a IO[bytes] type. Required.
        :type create_domain_request: ~microsoft.fabric.api.admin.models.CreateDomainRequest or
         IO[bytes]
        :keyword preview: This parameter specifies which version of the API to use. Set to ``true`` to
         use the preview version described on this page, or to ``false`` to use the Release version
         detailed `here </rest/api/fabric/admin/domains/create-domain>`_.
         Starting March 31, 2026, the default value for ``preview`` will change to ``false``. Required.
        :paramtype preview: bool
        :return: DomainPreview
        :rtype: ~microsoft.fabric.api.admin.models.DomainPreview
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        error_map: MutableMapping[int, Type[HttpResponseError]] = {
            401: ClientAuthenticationError,
            404: ResourceNotFoundError,
            409: ResourceExistsError,
            304: ResourceNotModifiedError,
        }
        error_map.update(kwargs.pop("error_map", {}) or {})

        _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
        _params = kwargs.pop("params", {}) or {}

        content_type: Optional[str] = kwargs.pop("content_type", _headers.pop("Content-Type", None))
        cls: ClsType[_models.DomainPreview] = kwargs.pop("cls", None)

        content_type = content_type or "application/json"
        _json = None
        _content = None
        if isinstance(create_domain_request, (IOBase, bytes)):
            _content = create_domain_request
        else:
            _json = self._serialize.body(create_domain_request, "CreateDomainRequest")

        _request = build_domains_create_domain_preview_request(
            preview=preview,
            content_type=content_type,
            json=_json,
            content=_content,
            headers=_headers,
            params=_params,
        )
        _request.url = self._client.format_url(_request.url)

        _stream = False
        pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
            _request, stream=_stream, **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [201]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize.failsafe_deserialize(_models.ErrorResponse, pipeline_response)
            raise HttpResponseError(response=response, model=error)

        deserialized = self._deserialize("DomainPreview", pipeline_response.http_response)

        if cls:
            return cls(pipeline_response, deserialized, {})  # type: ignore

        return deserialized  # type: ignore

    @distributed_trace
    def list_domains(
        self, *, preview: bool, non_empty_only: Optional[bool] = None, **kwargs: Any
    ) -> _models.DomainsResponse:
        """Returns info for all domains.

        ..

           [!NOTE]
           This API is a release version of a preview version due to be deprecated on March 31, 2026.
           **When calling this API - callers must set the query parameter ``preview`` to the value
        ``false``\\ **


        Permissions
        -----------

        The caller must be a Fabric administrator.

        Required Delegated Scopes
        -------------------------

        Tenant.Read.All or Tenant.ReadWrite.All.

        Limitations
        -----------

        Maximum 25 requests per one minute per principal.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :keyword preview: This parameter specifies which version of the API to use. Set to ``false`` to
         use the release version. Required.
        :paramtype preview: bool
        :keyword non_empty_only: When true, only return domains that have at least one workspace
         containing an item. Default: false. Default value is None.
        :paramtype non_empty_only: bool
        :return: DomainsResponse
        :rtype: ~microsoft.fabric.api.admin.models.DomainsResponse
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        error_map: MutableMapping[int, Type[HttpResponseError]] = {
            401: ClientAuthenticationError,
            404: ResourceNotFoundError,
            409: ResourceExistsError,
            304: ResourceNotModifiedError,
        }
        error_map.update(kwargs.pop("error_map", {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls: ClsType[_models.DomainsResponse] = kwargs.pop("cls", None)

        _request = build_domains_list_domains_request(
            preview=preview,
            non_empty_only=non_empty_only,
            headers=_headers,
            params=_params,
        )
        _request.url = self._client.format_url(_request.url)

        _stream = False
        pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
            _request, stream=_stream, **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize.failsafe_deserialize(_models.ErrorResponse, pipeline_response)
            raise HttpResponseError(response=response, model=error)

        deserialized = self._deserialize("DomainsResponse", pipeline_response.http_response)

        if cls:
            return cls(pipeline_response, deserialized, {})  # type: ignore

        return deserialized  # type: ignore

    @overload
    def create_domain(
        self,
        create_domain_request: _models.CreateDomainRequest,
        *,
        preview: bool,
        content_type: str = "application/json",
        **kwargs: Any,
    ) -> _models.Domain:
        """Creates a new domain.

        ..

           [!NOTE]
           This API is a release version of a preview version due to be deprecated on March 31, 2026.
           **When calling this API - callers must set the query parameter ``preview`` to the value
        ``false``\\ **


        Permissions
        -----------

        The caller must be a Fabric administrator.

        Required Delegated Scopes
        -------------------------

        Tenant.ReadWrite.All.

        Limitations
        -----------

        Maximum 25 requests per one minute per principal.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param create_domain_request: The request payload for creating the domain. Required.
        :type create_domain_request: ~microsoft.fabric.api.admin.models.CreateDomainRequest
        :keyword preview: This parameter specifies which version of the API to use. Set to ``false`` to
         use the release version. Required.
        :paramtype preview: bool
        :keyword content_type: Body Parameter content-type. Content type parameter for JSON body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: Domain
        :rtype: ~microsoft.fabric.api.admin.models.Domain
        :raises ~azure.core.exceptions.HttpResponseError:
        """

    @overload
    def create_domain(
        self, create_domain_request: IO[bytes], *, preview: bool, content_type: str = "application/json", **kwargs: Any
    ) -> _models.Domain:
        """Creates a new domain.

        ..

           [!NOTE]
           This API is a release version of a preview version due to be deprecated on March 31, 2026.
           **When calling this API - callers must set the query parameter ``preview`` to the value
        ``false``\\ **


        Permissions
        -----------

        The caller must be a Fabric administrator.

        Required Delegated Scopes
        -------------------------

        Tenant.ReadWrite.All.

        Limitations
        -----------

        Maximum 25 requests per one minute per principal.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param create_domain_request: The request payload for creating the domain. Required.
        :type create_domain_request: IO[bytes]
        :keyword preview: This parameter specifies which version of the API to use. Set to ``false`` to
         use the release version. Required.
        :paramtype preview: bool
        :keyword content_type: Body Parameter content-type. Content type parameter for binary body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: Domain
        :rtype: ~microsoft.fabric.api.admin.models.Domain
        :raises ~azure.core.exceptions.HttpResponseError:
        """

    @distributed_trace
    def create_domain(
        self, create_domain_request: Union[_models.CreateDomainRequest, IO[bytes]], *, preview: bool, **kwargs: Any
    ) -> _models.Domain:
        """Creates a new domain.

        ..

           [!NOTE]
           This API is a release version of a preview version due to be deprecated on March 31, 2026.
           **When calling this API - callers must set the query parameter ``preview`` to the value
        ``false``\\ **


        Permissions
        -----------

        The caller must be a Fabric administrator.

        Required Delegated Scopes
        -------------------------

        Tenant.ReadWrite.All.

        Limitations
        -----------

        Maximum 25 requests per one minute per principal.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param create_domain_request: The request payload for creating the domain. Is either a
         CreateDomainRequest type or a IO[bytes] type. Required.
        :type create_domain_request: ~microsoft.fabric.api.admin.models.CreateDomainRequest or
         IO[bytes]
        :keyword preview: This parameter specifies which version of the API to use. Set to ``false`` to
         use the release version. Required.
        :paramtype preview: bool
        :return: Domain
        :rtype: ~microsoft.fabric.api.admin.models.Domain
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        error_map: MutableMapping[int, Type[HttpResponseError]] = {
            401: ClientAuthenticationError,
            404: ResourceNotFoundError,
            409: ResourceExistsError,
            304: ResourceNotModifiedError,
        }
        error_map.update(kwargs.pop("error_map", {}) or {})

        _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
        _params = kwargs.pop("params", {}) or {}

        content_type: Optional[str] = kwargs.pop("content_type", _headers.pop("Content-Type", None))
        cls: ClsType[_models.Domain] = kwargs.pop("cls", None)

        content_type = content_type or "application/json"
        _json = None
        _content = None
        if isinstance(create_domain_request, (IOBase, bytes)):
            _content = create_domain_request
        else:
            _json = self._serialize.body(create_domain_request, "CreateDomainRequest")

        _request = build_domains_create_domain_request(
            preview=preview,
            content_type=content_type,
            json=_json,
            content=_content,
            headers=_headers,
            params=_params,
        )
        _request.url = self._client.format_url(_request.url)

        _stream = False
        pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
            _request, stream=_stream, **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [201]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize.failsafe_deserialize(_models.ErrorResponse, pipeline_response)
            raise HttpResponseError(response=response, model=error)

        deserialized = self._deserialize("Domain", pipeline_response.http_response)

        if cls:
            return cls(pipeline_response, deserialized, {})  # type: ignore

        return deserialized  # type: ignore

    @distributed_trace
    def get_domain_preview(self, domain_id: str, *, preview: bool, **kwargs: Any) -> _models.DomainPreview:
        """Returns the specified domain info (preview).

        ..

           [!NOTE]
           This preview API will be deprecated on March 31, 2026, and replaced by a stable version,
        available `here </rest/api/fabric/admin/domains/get-domain>`_. The new version introduces
        breaking changes and is not backward compatible. **When calling this API, callers must specify
        ``true`` as the value for the query parameter ``preview``.**


        Deprecation Notice
        ------------------

        A new query parameter ``preview`` has been introduced to facilitate this transition:


        * The ``preview`` query parameter currently defaults to ``true``.
        * Set the value of the ``preview`` query parameter to ``false`` to use the Release version of
        this API.
        * Starting March 31, 2026, the default value for ``preview`` will change to ``false``.

        It is recommended to migrate your integration to use the Release version as soon as possible by
        specifying ``false`` for the ``preview`` query parameter (\\ **the default value for the
        ``preview`` query parameter will be set to ``false`` on API's deprecation date**\\ ).

        The following incompatible changes were introduced in the Release version:


        * Response property ``contributorsScope`` was removed.

        Permissions
        -----------

        The caller must be a Fabric administrator.

        Required Delegated Scopes
        -------------------------

        Tenant.Read.All or Tenant.ReadWrite.All.

        Limitations
        -----------

        Maximum 25 requests per one minute per principal.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param domain_id: The domain ID. Required.
        :type domain_id: str
        :keyword preview: This parameter specifies which version of the API to use. Set to ``true`` to
         use the preview version described on this page, or to ``false`` to use the Release version
         detailed `here </rest/api/fabric/admin/domains/get-domain>`_.
         Starting March 31, 2026, the default value for ``preview`` will change to ``false``. Required.
        :paramtype preview: bool
        :return: DomainPreview
        :rtype: ~microsoft.fabric.api.admin.models.DomainPreview
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        error_map: MutableMapping[int, Type[HttpResponseError]] = {
            401: ClientAuthenticationError,
            404: ResourceNotFoundError,
            409: ResourceExistsError,
            304: ResourceNotModifiedError,
        }
        error_map.update(kwargs.pop("error_map", {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls: ClsType[_models.DomainPreview] = kwargs.pop("cls", None)

        _request = build_domains_get_domain_preview_request(
            domain_id=domain_id,
            preview=preview,
            headers=_headers,
            params=_params,
        )
        _request.url = self._client.format_url(_request.url)

        _stream = False
        pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
            _request, stream=_stream, **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize.failsafe_deserialize(_models.ErrorResponse, pipeline_response)
            raise HttpResponseError(response=response, model=error)

        deserialized = self._deserialize("DomainPreview", pipeline_response.http_response)

        if cls:
            return cls(pipeline_response, deserialized, {})  # type: ignore

        return deserialized  # type: ignore

    @overload
    def update_domain_preview(
        self,
        domain_id: str,
        update_domain_request: _models.UpdateDomainRequestPreview,
        *,
        preview: bool,
        content_type: str = "application/json",
        **kwargs: Any,
    ) -> _models.DomainPreview:
        """Updates the specified domain info (preview).

        ..

           [!NOTE]
           This preview API will be deprecated on March 31, 2026, and replaced by a stable version,
        available `here </rest/api/fabric/admin/domains/update-domain>`_. The new version introduces
        breaking changes and is not backward compatible. **When calling this API, callers must specify
        ``true`` as the value for the query parameter ``preview``.**


        Deprecation Notice
        ------------------

        A new query parameter ``preview`` has been introduced to facilitate this transition:


        * The ``preview`` query parameter currently defaults to ``true``.
        * Set the value of the ``preview`` query parameter to ``false`` to use the Release version of
        this API.
        * Starting March 31, 2026, the default value for ``preview`` will change to ``false``.

        It is recommended to migrate your integration to use the Release version as soon as possible by
        specifying ``false`` for the ``preview`` query parameter (\\ **the default value for the
        ``preview`` query parameter will be set to ``false`` on API's deprecation date**\\ ).

        The following incompatible changes were introduced in the Release version:


        * Request property ``contributorsScope`` was removed.
        * Response property ``contributorsScope`` was removed.

        Permissions
        -----------

        The caller must be a Fabric administrator.

        Required Delegated Scopes
        -------------------------

        Tenant.ReadWrite.All.

        Limitations
        -----------

        Maximum 25 requests per one minute per principal.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param domain_id: The domain ID. Required.
        :type domain_id: str
        :param update_domain_request: The request payload for updating the domain. Required.
        :type update_domain_request: ~microsoft.fabric.api.admin.models.UpdateDomainRequestPreview
        :keyword preview: This parameter specifies which version of the API to use. Set to ``true`` to
         use the preview version described on this page, or to ``false`` to use the Release version
         detailed `here </rest/api/fabric/admin/domains/update-domain>`_.
         Starting March 31, 2026, the default value for ``preview`` will change to ``false``. Required.
        :paramtype preview: bool
        :keyword content_type: Body Parameter content-type. Content type parameter for JSON body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: DomainPreview
        :rtype: ~microsoft.fabric.api.admin.models.DomainPreview
        :raises ~azure.core.exceptions.HttpResponseError:
        """

    @overload
    def update_domain_preview(
        self,
        domain_id: str,
        update_domain_request: IO[bytes],
        *,
        preview: bool,
        content_type: str = "application/json",
        **kwargs: Any,
    ) -> _models.DomainPreview:
        """Updates the specified domain info (preview).

        ..

           [!NOTE]
           This preview API will be deprecated on March 31, 2026, and replaced by a stable version,
        available `here </rest/api/fabric/admin/domains/update-domain>`_. The new version introduces
        breaking changes and is not backward compatible. **When calling this API, callers must specify
        ``true`` as the value for the query parameter ``preview``.**


        Deprecation Notice
        ------------------

        A new query parameter ``preview`` has been introduced to facilitate this transition:


        * The ``preview`` query parameter currently defaults to ``true``.
        * Set the value of the ``preview`` query parameter to ``false`` to use the Release version of
        this API.
        * Starting March 31, 2026, the default value for ``preview`` will change to ``false``.

        It is recommended to migrate your integration to use the Release version as soon as possible by
        specifying ``false`` for the ``preview`` query parameter (\\ **the default value for the
        ``preview`` query parameter will be set to ``false`` on API's deprecation date**\\ ).

        The following incompatible changes were introduced in the Release version:


        * Request property ``contributorsScope`` was removed.
        * Response property ``contributorsScope`` was removed.

        Permissions
        -----------

        The caller must be a Fabric administrator.

        Required Delegated Scopes
        -------------------------

        Tenant.ReadWrite.All.

        Limitations
        -----------

        Maximum 25 requests per one minute per principal.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param domain_id: The domain ID. Required.
        :type domain_id: str
        :param update_domain_request: The request payload for updating the domain. Required.
        :type update_domain_request: IO[bytes]
        :keyword preview: This parameter specifies which version of the API to use. Set to ``true`` to
         use the preview version described on this page, or to ``false`` to use the Release version
         detailed `here </rest/api/fabric/admin/domains/update-domain>`_.
         Starting March 31, 2026, the default value for ``preview`` will change to ``false``. Required.
        :paramtype preview: bool
        :keyword content_type: Body Parameter content-type. Content type parameter for binary body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: DomainPreview
        :rtype: ~microsoft.fabric.api.admin.models.DomainPreview
        :raises ~azure.core.exceptions.HttpResponseError:
        """

    @distributed_trace
    def update_domain_preview(
        self,
        domain_id: str,
        update_domain_request: Union[_models.UpdateDomainRequestPreview, IO[bytes]],
        *,
        preview: bool,
        **kwargs: Any,
    ) -> _models.DomainPreview:
        """Updates the specified domain info (preview).

        ..

           [!NOTE]
           This preview API will be deprecated on March 31, 2026, and replaced by a stable version,
        available `here </rest/api/fabric/admin/domains/update-domain>`_. The new version introduces
        breaking changes and is not backward compatible. **When calling this API, callers must specify
        ``true`` as the value for the query parameter ``preview``.**


        Deprecation Notice
        ------------------

        A new query parameter ``preview`` has been introduced to facilitate this transition:


        * The ``preview`` query parameter currently defaults to ``true``.
        * Set the value of the ``preview`` query parameter to ``false`` to use the Release version of
        this API.
        * Starting March 31, 2026, the default value for ``preview`` will change to ``false``.

        It is recommended to migrate your integration to use the Release version as soon as possible by
        specifying ``false`` for the ``preview`` query parameter (\\ **the default value for the
        ``preview`` query parameter will be set to ``false`` on API's deprecation date**\\ ).

        The following incompatible changes were introduced in the Release version:


        * Request property ``contributorsScope`` was removed.
        * Response property ``contributorsScope`` was removed.

        Permissions
        -----------

        The caller must be a Fabric administrator.

        Required Delegated Scopes
        -------------------------

        Tenant.ReadWrite.All.

        Limitations
        -----------

        Maximum 25 requests per one minute per principal.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param domain_id: The domain ID. Required.
        :type domain_id: str
        :param update_domain_request: The request payload for updating the domain. Is either a
         UpdateDomainRequestPreview type or a IO[bytes] type. Required.
        :type update_domain_request: ~microsoft.fabric.api.admin.models.UpdateDomainRequestPreview or
         IO[bytes]
        :keyword preview: This parameter specifies which version of the API to use. Set to ``true`` to
         use the preview version described on this page, or to ``false`` to use the Release version
         detailed `here </rest/api/fabric/admin/domains/update-domain>`_.
         Starting March 31, 2026, the default value for ``preview`` will change to ``false``. Required.
        :paramtype preview: bool
        :return: DomainPreview
        :rtype: ~microsoft.fabric.api.admin.models.DomainPreview
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        error_map: MutableMapping[int, Type[HttpResponseError]] = {
            401: ClientAuthenticationError,
            404: ResourceNotFoundError,
            409: ResourceExistsError,
            304: ResourceNotModifiedError,
        }
        error_map.update(kwargs.pop("error_map", {}) or {})

        _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
        _params = kwargs.pop("params", {}) or {}

        content_type: Optional[str] = kwargs.pop("content_type", _headers.pop("Content-Type", None))
        cls: ClsType[_models.DomainPreview] = kwargs.pop("cls", None)

        content_type = content_type or "application/json"
        _json = None
        _content = None
        if isinstance(update_domain_request, (IOBase, bytes)):
            _content = update_domain_request
        else:
            _json = self._serialize.body(update_domain_request, "UpdateDomainRequestPreview")

        _request = build_domains_update_domain_preview_request(
            domain_id=domain_id,
            preview=preview,
            content_type=content_type,
            json=_json,
            content=_content,
            headers=_headers,
            params=_params,
        )
        _request.url = self._client.format_url(_request.url)

        _stream = False
        pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
            _request, stream=_stream, **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize.failsafe_deserialize(_models.ErrorResponse, pipeline_response)
            raise HttpResponseError(response=response, model=error)

        deserialized = self._deserialize("DomainPreview", pipeline_response.http_response)

        if cls:
            return cls(pipeline_response, deserialized, {})  # type: ignore

        return deserialized  # type: ignore

    @distributed_trace
    def delete_domain(self, domain_id: str, **kwargs: Any) -> None:  # pylint: disable=inconsistent-return-statements
        """Deletes the specified domain.

        Permissions
        -----------

        The caller must be a Fabric administrator.

        Required Delegated Scopes
        -------------------------

        Tenant.ReadWrite.All.

        Limitations
        -----------

        Maximum 25 requests per one minute per principal.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param domain_id: The domain ID. Required.
        :type domain_id: str
        :return: None
        :rtype: None
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        error_map: MutableMapping[int, Type[HttpResponseError]] = {
            401: ClientAuthenticationError,
            404: ResourceNotFoundError,
            409: ResourceExistsError,
            304: ResourceNotModifiedError,
        }
        error_map.update(kwargs.pop("error_map", {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls: ClsType[None] = kwargs.pop("cls", None)

        _request = build_domains_delete_domain_request(
            domain_id=domain_id,
            headers=_headers,
            params=_params,
        )
        _request.url = self._client.format_url(_request.url)

        _stream = False
        pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
            _request, stream=_stream, **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize.failsafe_deserialize(_models.ErrorResponse, pipeline_response)
            raise HttpResponseError(response=response, model=error)

        if cls:
            return cls(pipeline_response, None, {})  # type: ignore

    @distributed_trace
    def get_domain(self, domain_id: str, *, preview: bool, **kwargs: Any) -> _models.Domain:
        """Returns the specified domain info.

        ..

           [!NOTE]
           This API is a release version of a preview version due to be deprecated on March 31, 2026.
           **When calling this API - callers must set the query parameter ``preview`` to the value
        ``false``\\ **


        Permissions
        -----------

        The caller must be a Fabric administrator.

        Required Delegated Scopes
        -------------------------

        Tenant.Read.All or Tenant.ReadWrite.All.

        Limitations
        -----------

        Maximum 25 requests per one minute per principal.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param domain_id: The domain ID. Required.
        :type domain_id: str
        :keyword preview: This parameter specifies which version of the API to use. Set to ``false`` to
         use the release version. Required.
        :paramtype preview: bool
        :return: Domain
        :rtype: ~microsoft.fabric.api.admin.models.Domain
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        error_map: MutableMapping[int, Type[HttpResponseError]] = {
            401: ClientAuthenticationError,
            404: ResourceNotFoundError,
            409: ResourceExistsError,
            304: ResourceNotModifiedError,
        }
        error_map.update(kwargs.pop("error_map", {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls: ClsType[_models.Domain] = kwargs.pop("cls", None)

        _request = build_domains_get_domain_request(
            domain_id=domain_id,
            preview=preview,
            headers=_headers,
            params=_params,
        )
        _request.url = self._client.format_url(_request.url)

        _stream = False
        pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
            _request, stream=_stream, **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize.failsafe_deserialize(_models.ErrorResponse, pipeline_response)
            raise HttpResponseError(response=response, model=error)

        deserialized = self._deserialize("Domain", pipeline_response.http_response)

        if cls:
            return cls(pipeline_response, deserialized, {})  # type: ignore

        return deserialized  # type: ignore

    @overload
    def update_domain(
        self,
        domain_id: str,
        update_domain_request: _models.UpdateDomainRequest,
        *,
        preview: bool,
        content_type: str = "application/json",
        **kwargs: Any,
    ) -> _models.Domain:
        """Updates the specified domain info.

        ..

           [!NOTE]
           This API is a release version of a preview version due to be deprecated on March 31, 2026.
           **When calling this API - callers must set the query parameter ``preview`` to the value
        ``false``\\ **


        Permissions
        -----------

        The caller must be a Fabric administrator.

        Required Delegated Scopes
        -------------------------

        Tenant.ReadWrite.All.

        Limitations
        -----------

        Maximum 25 requests per one minute per principal.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param domain_id: The domain ID. Required.
        :type domain_id: str
        :param update_domain_request: The request payload for updating the domain. Required.
        :type update_domain_request: ~microsoft.fabric.api.admin.models.UpdateDomainRequest
        :keyword preview: This parameter specifies which version of the API to use. Set to ``false`` to
         use the release version. Required.
        :paramtype preview: bool
        :keyword content_type: Body Parameter content-type. Content type parameter for JSON body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: Domain
        :rtype: ~microsoft.fabric.api.admin.models.Domain
        :raises ~azure.core.exceptions.HttpResponseError:
        """

    @overload
    def update_domain(
        self,
        domain_id: str,
        update_domain_request: IO[bytes],
        *,
        preview: bool,
        content_type: str = "application/json",
        **kwargs: Any,
    ) -> _models.Domain:
        """Updates the specified domain info.

        ..

           [!NOTE]
           This API is a release version of a preview version due to be deprecated on March 31, 2026.
           **When calling this API - callers must set the query parameter ``preview`` to the value
        ``false``\\ **


        Permissions
        -----------

        The caller must be a Fabric administrator.

        Required Delegated Scopes
        -------------------------

        Tenant.ReadWrite.All.

        Limitations
        -----------

        Maximum 25 requests per one minute per principal.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param domain_id: The domain ID. Required.
        :type domain_id: str
        :param update_domain_request: The request payload for updating the domain. Required.
        :type update_domain_request: IO[bytes]
        :keyword preview: This parameter specifies which version of the API to use. Set to ``false`` to
         use the release version. Required.
        :paramtype preview: bool
        :keyword content_type: Body Parameter content-type. Content type parameter for binary body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: Domain
        :rtype: ~microsoft.fabric.api.admin.models.Domain
        :raises ~azure.core.exceptions.HttpResponseError:
        """

    @distributed_trace
    def update_domain(
        self,
        domain_id: str,
        update_domain_request: Union[_models.UpdateDomainRequest, IO[bytes]],
        *,
        preview: bool,
        **kwargs: Any,
    ) -> _models.Domain:
        """Updates the specified domain info.

        ..

           [!NOTE]
           This API is a release version of a preview version due to be deprecated on March 31, 2026.
           **When calling this API - callers must set the query parameter ``preview`` to the value
        ``false``\\ **


        Permissions
        -----------

        The caller must be a Fabric administrator.

        Required Delegated Scopes
        -------------------------

        Tenant.ReadWrite.All.

        Limitations
        -----------

        Maximum 25 requests per one minute per principal.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param domain_id: The domain ID. Required.
        :type domain_id: str
        :param update_domain_request: The request payload for updating the domain. Is either a
         UpdateDomainRequest type or a IO[bytes] type. Required.
        :type update_domain_request: ~microsoft.fabric.api.admin.models.UpdateDomainRequest or
         IO[bytes]
        :keyword preview: This parameter specifies which version of the API to use. Set to ``false`` to
         use the release version. Required.
        :paramtype preview: bool
        :return: Domain
        :rtype: ~microsoft.fabric.api.admin.models.Domain
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        error_map: MutableMapping[int, Type[HttpResponseError]] = {
            401: ClientAuthenticationError,
            404: ResourceNotFoundError,
            409: ResourceExistsError,
            304: ResourceNotModifiedError,
        }
        error_map.update(kwargs.pop("error_map", {}) or {})

        _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
        _params = kwargs.pop("params", {}) or {}

        content_type: Optional[str] = kwargs.pop("content_type", _headers.pop("Content-Type", None))
        cls: ClsType[_models.Domain] = kwargs.pop("cls", None)

        content_type = content_type or "application/json"
        _json = None
        _content = None
        if isinstance(update_domain_request, (IOBase, bytes)):
            _content = update_domain_request
        else:
            _json = self._serialize.body(update_domain_request, "UpdateDomainRequest")

        _request = build_domains_update_domain_request(
            domain_id=domain_id,
            preview=preview,
            content_type=content_type,
            json=_json,
            content=_content,
            headers=_headers,
            params=_params,
        )
        _request.url = self._client.format_url(_request.url)

        _stream = False
        pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
            _request, stream=_stream, **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize.failsafe_deserialize(_models.ErrorResponse, pipeline_response)
            raise HttpResponseError(response=response, model=error)

        deserialized = self._deserialize("Domain", pipeline_response.http_response)

        if cls:
            return cls(pipeline_response, deserialized, {})  # type: ignore

        return deserialized  # type: ignore

    @distributed_trace
    def list_domain_workspaces(
        self, domain_id: str, *, continuation_token_parameter: Optional[str] = None, **kwargs: Any
    ) -> Iterable["_models.DomainWorkspace"]:
        """Returns a list of the workspaces assigned to the specified domain.

        This API supports `pagination </rest/api/fabric/articles/pagination>`_.

        Permissions
        -----------

        The caller must be a Fabric administrator.

        Required Delegated Scopes
        -------------------------

        Tenant.Read.All or Tenant.ReadWrite.All.

        Limitations
        -----------

        Maximum 25 requests per one minute per principal.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param domain_id: The domain ID. Required.
        :type domain_id: str
        :keyword continuation_token_parameter: A token for retrieving the next page of results. Default
         value is None.
        :paramtype continuation_token_parameter: str
        :return: An iterator like instance of DomainWorkspace
        :rtype: ~azure.core.paging.ItemPaged[~microsoft.fabric.api.admin.models.DomainWorkspace]
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls: ClsType[_models._models.DomainWorkspaces] = kwargs.pop("cls", None)  # pylint: disable=protected-access

        error_map: MutableMapping[int, Type[HttpResponseError]] = {
            401: ClientAuthenticationError,
            404: ResourceNotFoundError,
            409: ResourceExistsError,
            304: ResourceNotModifiedError,
        }
        error_map.update(kwargs.pop("error_map", {}) or {})

        def prepare_request(next_link=None):
            if not next_link:

                _request = build_domains_list_domain_workspaces_request(
                    domain_id=domain_id,
                    continuation_token_parameter=continuation_token_parameter,
                    headers=_headers,
                    params=_params,
                )
                _request.url = self._client.format_url(_request.url)

            else:
                _request = HttpRequest("GET", next_link)
                _request.url = self._client.format_url(_request.url)

            return _request

        def extract_data(pipeline_response):
            deserialized = self._deserialize(
                _models._models.DomainWorkspaces, pipeline_response  # pylint: disable=protected-access
            )
            list_of_elem = deserialized.value
            if cls:
                list_of_elem = cls(list_of_elem)  # type: ignore
            return deserialized.continuation_uri or None, iter(list_of_elem)

        def get_next(next_link=None):
            _request = prepare_request(next_link)

            _stream = False
            pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
                _request, stream=_stream, **kwargs
            )
            response = pipeline_response.http_response

            if response.status_code not in [200]:
                map_error(status_code=response.status_code, response=response, error_map=error_map)
                raise HttpResponseError(response=response)

            return pipeline_response

        return ItemPaged(get_next, extract_data)

    @overload
    def assign_domain_workspaces_by_ids(  # pylint: disable=inconsistent-return-statements
        self,
        domain_id: str,
        assign_domain_workspaces_by_ids_request: _models.AssignDomainWorkspacesByIdsRequest,
        *,
        content_type: str = "application/json",
        **kwargs: Any,
    ) -> None:
        """Assign workspaces to the specified domain by workspace ID.

        Preexisting domain assignments will be overridden unless bulk reassignment is blocked by domain
        management tenant settings.

        Permissions
        -----------

        The caller must be a Fabric administrator.

        Required Delegated Scopes
        -------------------------

        Tenant.ReadWrite.All.

        Limitations
        -----------

        Maximum 10 requests per one minute per principal.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param domain_id: The domain ID. Required.
        :type domain_id: str
        :param assign_domain_workspaces_by_ids_request: The request payload for assigning workspaces to
         the domain by workspace ID. Required.
        :type assign_domain_workspaces_by_ids_request:
         ~microsoft.fabric.api.admin.models.AssignDomainWorkspacesByIdsRequest
        :keyword content_type: Body Parameter content-type. Content type parameter for JSON body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: None
        :rtype: None
        :raises ~azure.core.exceptions.HttpResponseError:
        """

    @overload
    def assign_domain_workspaces_by_ids(  # pylint: disable=inconsistent-return-statements
        self,
        domain_id: str,
        assign_domain_workspaces_by_ids_request: IO[bytes],
        *,
        content_type: str = "application/json",
        **kwargs: Any,
    ) -> None:
        """Assign workspaces to the specified domain by workspace ID.

        Preexisting domain assignments will be overridden unless bulk reassignment is blocked by domain
        management tenant settings.

        Permissions
        -----------

        The caller must be a Fabric administrator.

        Required Delegated Scopes
        -------------------------

        Tenant.ReadWrite.All.

        Limitations
        -----------

        Maximum 10 requests per one minute per principal.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param domain_id: The domain ID. Required.
        :type domain_id: str
        :param assign_domain_workspaces_by_ids_request: The request payload for assigning workspaces to
         the domain by workspace ID. Required.
        :type assign_domain_workspaces_by_ids_request: IO[bytes]
        :keyword content_type: Body Parameter content-type. Content type parameter for binary body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: None
        :rtype: None
        :raises ~azure.core.exceptions.HttpResponseError:
        """

    @distributed_trace
    def assign_domain_workspaces_by_ids(  # pylint: disable=inconsistent-return-statements
        self,
        domain_id: str,
        assign_domain_workspaces_by_ids_request: Union[_models.AssignDomainWorkspacesByIdsRequest, IO[bytes]],
        **kwargs: Any,
    ) -> None:
        """Assign workspaces to the specified domain by workspace ID.

        Preexisting domain assignments will be overridden unless bulk reassignment is blocked by domain
        management tenant settings.

        Permissions
        -----------

        The caller must be a Fabric administrator.

        Required Delegated Scopes
        -------------------------

        Tenant.ReadWrite.All.

        Limitations
        -----------

        Maximum 10 requests per one minute per principal.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param domain_id: The domain ID. Required.
        :type domain_id: str
        :param assign_domain_workspaces_by_ids_request: The request payload for assigning workspaces to
         the domain by workspace ID. Is either a AssignDomainWorkspacesByIdsRequest type or a IO[bytes]
         type. Required.
        :type assign_domain_workspaces_by_ids_request:
         ~microsoft.fabric.api.admin.models.AssignDomainWorkspacesByIdsRequest or IO[bytes]
        :return: None
        :rtype: None
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        error_map: MutableMapping[int, Type[HttpResponseError]] = {
            401: ClientAuthenticationError,
            404: ResourceNotFoundError,
            409: ResourceExistsError,
            304: ResourceNotModifiedError,
        }
        error_map.update(kwargs.pop("error_map", {}) or {})

        _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
        _params = kwargs.pop("params", {}) or {}

        content_type: Optional[str] = kwargs.pop("content_type", _headers.pop("Content-Type", None))
        cls: ClsType[None] = kwargs.pop("cls", None)

        content_type = content_type or "application/json"
        _json = None
        _content = None
        if isinstance(assign_domain_workspaces_by_ids_request, (IOBase, bytes)):
            _content = assign_domain_workspaces_by_ids_request
        else:
            _json = self._serialize.body(assign_domain_workspaces_by_ids_request, "AssignDomainWorkspacesByIdsRequest")

        _request = build_domains_assign_domain_workspaces_by_ids_request(
            domain_id=domain_id,
            content_type=content_type,
            json=_json,
            content=_content,
            headers=_headers,
            params=_params,
        )
        _request.url = self._client.format_url(_request.url)

        _stream = False
        pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
            _request, stream=_stream, **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize.failsafe_deserialize(_models.ErrorResponse, pipeline_response)
            raise HttpResponseError(response=response, model=error)

        if cls:
            return cls(pipeline_response, None, {})  # type: ignore

    @overload
    def unassign_domain_workspaces_by_ids(  # pylint: disable=inconsistent-return-statements
        self,
        domain_id: str,
        unassign_domain_workspaces_by_ids_request: Optional[_models.UnassignDomainWorkspacesByIdsRequest] = None,
        *,
        content_type: str = "application/json",
        **kwargs: Any,
    ) -> None:
        """Unassign workspaces from the specified domain by workspace ID.

        Permissions
        -----------

        The caller must be a Fabric administrator.

        Required Delegated Scopes
        -------------------------

        Tenant.ReadWrite.All.

        Limitations
        -----------

        Maximum 25 requests per one minute per principal.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param domain_id: The domain ID. Required.
        :type domain_id: str
        :param unassign_domain_workspaces_by_ids_request: The request payload for unassigning
         workspaces from the domain by workspace ID. Default value is None.
        :type unassign_domain_workspaces_by_ids_request:
         ~microsoft.fabric.api.admin.models.UnassignDomainWorkspacesByIdsRequest
        :keyword content_type: Body Parameter content-type. Content type parameter for JSON body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: None
        :rtype: None
        :raises ~azure.core.exceptions.HttpResponseError:
        """

    @overload
    def unassign_domain_workspaces_by_ids(  # pylint: disable=inconsistent-return-statements
        self,
        domain_id: str,
        unassign_domain_workspaces_by_ids_request: Optional[IO[bytes]] = None,
        *,
        content_type: str = "application/json",
        **kwargs: Any,
    ) -> None:
        """Unassign workspaces from the specified domain by workspace ID.

        Permissions
        -----------

        The caller must be a Fabric administrator.

        Required Delegated Scopes
        -------------------------

        Tenant.ReadWrite.All.

        Limitations
        -----------

        Maximum 25 requests per one minute per principal.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param domain_id: The domain ID. Required.
        :type domain_id: str
        :param unassign_domain_workspaces_by_ids_request: The request payload for unassigning
         workspaces from the domain by workspace ID. Default value is None.
        :type unassign_domain_workspaces_by_ids_request: IO[bytes]
        :keyword content_type: Body Parameter content-type. Content type parameter for binary body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: None
        :rtype: None
        :raises ~azure.core.exceptions.HttpResponseError:
        """

    @distributed_trace
    def unassign_domain_workspaces_by_ids(  # pylint: disable=inconsistent-return-statements
        self,
        domain_id: str,
        unassign_domain_workspaces_by_ids_request: Optional[
            Union[_models.UnassignDomainWorkspacesByIdsRequest, IO[bytes]]
        ] = None,
        **kwargs: Any,
    ) -> None:
        """Unassign workspaces from the specified domain by workspace ID.

        Permissions
        -----------

        The caller must be a Fabric administrator.

        Required Delegated Scopes
        -------------------------

        Tenant.ReadWrite.All.

        Limitations
        -----------

        Maximum 25 requests per one minute per principal.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param domain_id: The domain ID. Required.
        :type domain_id: str
        :param unassign_domain_workspaces_by_ids_request: The request payload for unassigning
         workspaces from the domain by workspace ID. Is either a UnassignDomainWorkspacesByIdsRequest
         type or a IO[bytes] type. Default value is None.
        :type unassign_domain_workspaces_by_ids_request:
         ~microsoft.fabric.api.admin.models.UnassignDomainWorkspacesByIdsRequest or IO[bytes]
        :return: None
        :rtype: None
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        error_map: MutableMapping[int, Type[HttpResponseError]] = {
            401: ClientAuthenticationError,
            404: ResourceNotFoundError,
            409: ResourceExistsError,
            304: ResourceNotModifiedError,
        }
        error_map.update(kwargs.pop("error_map", {}) or {})

        _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
        _params = kwargs.pop("params", {}) or {}

        content_type: Optional[str] = kwargs.pop("content_type", _headers.pop("Content-Type", None))
        cls: ClsType[None] = kwargs.pop("cls", None)

        content_type = content_type or "application/json"
        _json = None
        _content = None
        if isinstance(unassign_domain_workspaces_by_ids_request, (IOBase, bytes)):
            _content = unassign_domain_workspaces_by_ids_request
        else:
            if unassign_domain_workspaces_by_ids_request is not None:
                _json = self._serialize.body(
                    unassign_domain_workspaces_by_ids_request, "UnassignDomainWorkspacesByIdsRequest"
                )
            else:
                _json = None

        _request = build_domains_unassign_domain_workspaces_by_ids_request(
            domain_id=domain_id,
            content_type=content_type,
            json=_json,
            content=_content,
            headers=_headers,
            params=_params,
        )
        _request.url = self._client.format_url(_request.url)

        _stream = False
        pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
            _request, stream=_stream, **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize.failsafe_deserialize(_models.ErrorResponse, pipeline_response)
            raise HttpResponseError(response=response, model=error)

        if cls:
            return cls(pipeline_response, None, {})  # type: ignore

    @distributed_trace
    def unassign_all_domain_workspaces(  # pylint: disable=inconsistent-return-statements
        self, domain_id: str, **kwargs: Any
    ) -> None:
        """Unassign all workspaces from the specified domain.

        Permissions
        -----------

        The caller must be a Fabric administrator.

        Required Delegated Scopes
        -------------------------

        Tenant.ReadWrite.All.

        Limitations
        -----------

        Maximum 10 requests per one minute per principal.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param domain_id: The domain ID. Required.
        :type domain_id: str
        :return: None
        :rtype: None
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        error_map: MutableMapping[int, Type[HttpResponseError]] = {
            401: ClientAuthenticationError,
            404: ResourceNotFoundError,
            409: ResourceExistsError,
            304: ResourceNotModifiedError,
        }
        error_map.update(kwargs.pop("error_map", {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls: ClsType[None] = kwargs.pop("cls", None)

        _request = build_domains_unassign_all_domain_workspaces_request(
            domain_id=domain_id,
            headers=_headers,
            params=_params,
        )
        _request.url = self._client.format_url(_request.url)

        _stream = False
        pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
            _request, stream=_stream, **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize.failsafe_deserialize(_models.ErrorResponse, pipeline_response)
            raise HttpResponseError(response=response, model=error)

        if cls:
            return cls(pipeline_response, None, {})  # type: ignore

    @distributed_trace
    def list_role_assignments(
        self, domain_id: str, *, continuation_token_parameter: Optional[str] = None, **kwargs: Any
    ) -> Iterable["_models.DomainRoleAssignment"]:
        """Returns a list of domain role assignments.

        Permissions
        -----------

        The caller must be a Fabric administrator.

        Required Delegated Scopes
        -------------------------

        Tenant.Read.All or Tenant.ReadWrite.All.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param domain_id: The domain ID. Required.
        :type domain_id: str
        :keyword continuation_token_parameter: A token for retrieving the next page of results. Default
         value is None.
        :paramtype continuation_token_parameter: str
        :return: An iterator like instance of DomainRoleAssignment
        :rtype: ~azure.core.paging.ItemPaged[~microsoft.fabric.api.admin.models.DomainRoleAssignment]
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls: ClsType[_models._models.DomainRoleAssignments] = kwargs.pop(  # pylint: disable=protected-access
            "cls", None
        )

        error_map: MutableMapping[int, Type[HttpResponseError]] = {
            401: ClientAuthenticationError,
            404: ResourceNotFoundError,
            409: ResourceExistsError,
            304: ResourceNotModifiedError,
        }
        error_map.update(kwargs.pop("error_map", {}) or {})

        def prepare_request(next_link=None):
            if not next_link:

                _request = build_domains_list_role_assignments_request(
                    domain_id=domain_id,
                    continuation_token_parameter=continuation_token_parameter,
                    headers=_headers,
                    params=_params,
                )
                _request.url = self._client.format_url(_request.url)

            else:
                _request = HttpRequest("GET", next_link)
                _request.url = self._client.format_url(_request.url)

            return _request

        def extract_data(pipeline_response):
            deserialized = self._deserialize(
                _models._models.DomainRoleAssignments, pipeline_response  # pylint: disable=protected-access
            )
            list_of_elem = deserialized.value
            if cls:
                list_of_elem = cls(list_of_elem)  # type: ignore
            return deserialized.continuation_uri or None, iter(list_of_elem)

        def get_next(next_link=None):
            _request = prepare_request(next_link)

            _stream = False
            pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
                _request, stream=_stream, **kwargs
            )
            response = pipeline_response.http_response

            if response.status_code not in [200]:
                map_error(status_code=response.status_code, response=response, error_map=error_map)
                error = self._deserialize.failsafe_deserialize(_models.ErrorResponse, pipeline_response)
                raise HttpResponseError(response=response, model=error)

            return pipeline_response

        return ItemPaged(get_next, extract_data)

    @overload
    def role_assignments_bulk_assign(  # pylint: disable=inconsistent-return-statements
        self,
        domain_id: str,
        domain_role_assignment_request: _models.DomainRoleAssignmentRequest,
        *,
        content_type: str = "application/json",
        **kwargs: Any,
    ) -> None:
        """Assign the specified admins or contributors to the domain.

        Permissions
        -----------

        The caller must be a Fabric administrator.

        Required Delegated Scopes
        -------------------------

        Tenant.ReadWrite.All.

        Limitations
        -----------

        Maximum 25 requests per one minute per principal.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param domain_id: The domain ID. Required.
        :type domain_id: str
        :param domain_role_assignment_request: The request payload for assigning domain members to the
         domain by principal. Required.
        :type domain_role_assignment_request:
         ~microsoft.fabric.api.admin.models.DomainRoleAssignmentRequest
        :keyword content_type: Body Parameter content-type. Content type parameter for JSON body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: None
        :rtype: None
        :raises ~azure.core.exceptions.HttpResponseError:
        """

    @overload
    def role_assignments_bulk_assign(  # pylint: disable=inconsistent-return-statements
        self,
        domain_id: str,
        domain_role_assignment_request: IO[bytes],
        *,
        content_type: str = "application/json",
        **kwargs: Any,
    ) -> None:
        """Assign the specified admins or contributors to the domain.

        Permissions
        -----------

        The caller must be a Fabric administrator.

        Required Delegated Scopes
        -------------------------

        Tenant.ReadWrite.All.

        Limitations
        -----------

        Maximum 25 requests per one minute per principal.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param domain_id: The domain ID. Required.
        :type domain_id: str
        :param domain_role_assignment_request: The request payload for assigning domain members to the
         domain by principal. Required.
        :type domain_role_assignment_request: IO[bytes]
        :keyword content_type: Body Parameter content-type. Content type parameter for binary body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: None
        :rtype: None
        :raises ~azure.core.exceptions.HttpResponseError:
        """

    @distributed_trace
    def role_assignments_bulk_assign(  # pylint: disable=inconsistent-return-statements
        self,
        domain_id: str,
        domain_role_assignment_request: Union[_models.DomainRoleAssignmentRequest, IO[bytes]],
        **kwargs: Any,
    ) -> None:
        """Assign the specified admins or contributors to the domain.

        Permissions
        -----------

        The caller must be a Fabric administrator.

        Required Delegated Scopes
        -------------------------

        Tenant.ReadWrite.All.

        Limitations
        -----------

        Maximum 25 requests per one minute per principal.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param domain_id: The domain ID. Required.
        :type domain_id: str
        :param domain_role_assignment_request: The request payload for assigning domain members to the
         domain by principal. Is either a DomainRoleAssignmentRequest type or a IO[bytes] type.
         Required.
        :type domain_role_assignment_request:
         ~microsoft.fabric.api.admin.models.DomainRoleAssignmentRequest or IO[bytes]
        :return: None
        :rtype: None
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        error_map: MutableMapping[int, Type[HttpResponseError]] = {
            401: ClientAuthenticationError,
            404: ResourceNotFoundError,
            409: ResourceExistsError,
            304: ResourceNotModifiedError,
        }
        error_map.update(kwargs.pop("error_map", {}) or {})

        _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
        _params = kwargs.pop("params", {}) or {}

        content_type: Optional[str] = kwargs.pop("content_type", _headers.pop("Content-Type", None))
        cls: ClsType[None] = kwargs.pop("cls", None)

        content_type = content_type or "application/json"
        _json = None
        _content = None
        if isinstance(domain_role_assignment_request, (IOBase, bytes)):
            _content = domain_role_assignment_request
        else:
            _json = self._serialize.body(domain_role_assignment_request, "DomainRoleAssignmentRequest")

        _request = build_domains_role_assignments_bulk_assign_request(
            domain_id=domain_id,
            content_type=content_type,
            json=_json,
            content=_content,
            headers=_headers,
            params=_params,
        )
        _request.url = self._client.format_url(_request.url)

        _stream = False
        pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
            _request, stream=_stream, **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize.failsafe_deserialize(_models.ErrorResponse, pipeline_response)
            raise HttpResponseError(response=response, model=error)

        if cls:
            return cls(pipeline_response, None, {})  # type: ignore

    @overload
    def role_assignments_bulk_unassign(  # pylint: disable=inconsistent-return-statements
        self,
        domain_id: str,
        domain_role_unassignment_request: _models.DomainRoleUnassignmentRequest,
        *,
        content_type: str = "application/json",
        **kwargs: Any,
    ) -> None:
        """Unassign the specified admins or contributors from the domain.

        Permissions
        -----------

        The caller must be a Fabric administrator.

        Required Delegated Scopes
        -------------------------

        Tenant.ReadWrite.All.

        Limitations
        -----------

        Maximum 25 requests per one minute per principal.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param domain_id: The domain ID. Required.
        :type domain_id: str
        :param domain_role_unassignment_request: The request payload for unassigning domain members
         from the domain by principal. Required.
        :type domain_role_unassignment_request:
         ~microsoft.fabric.api.admin.models.DomainRoleUnassignmentRequest
        :keyword content_type: Body Parameter content-type. Content type parameter for JSON body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: None
        :rtype: None
        :raises ~azure.core.exceptions.HttpResponseError:
        """

    @overload
    def role_assignments_bulk_unassign(  # pylint: disable=inconsistent-return-statements
        self,
        domain_id: str,
        domain_role_unassignment_request: IO[bytes],
        *,
        content_type: str = "application/json",
        **kwargs: Any,
    ) -> None:
        """Unassign the specified admins or contributors from the domain.

        Permissions
        -----------

        The caller must be a Fabric administrator.

        Required Delegated Scopes
        -------------------------

        Tenant.ReadWrite.All.

        Limitations
        -----------

        Maximum 25 requests per one minute per principal.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param domain_id: The domain ID. Required.
        :type domain_id: str
        :param domain_role_unassignment_request: The request payload for unassigning domain members
         from the domain by principal. Required.
        :type domain_role_unassignment_request: IO[bytes]
        :keyword content_type: Body Parameter content-type. Content type parameter for binary body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: None
        :rtype: None
        :raises ~azure.core.exceptions.HttpResponseError:
        """

    @distributed_trace
    def role_assignments_bulk_unassign(  # pylint: disable=inconsistent-return-statements
        self,
        domain_id: str,
        domain_role_unassignment_request: Union[_models.DomainRoleUnassignmentRequest, IO[bytes]],
        **kwargs: Any,
    ) -> None:
        """Unassign the specified admins or contributors from the domain.

        Permissions
        -----------

        The caller must be a Fabric administrator.

        Required Delegated Scopes
        -------------------------

        Tenant.ReadWrite.All.

        Limitations
        -----------

        Maximum 25 requests per one minute per principal.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param domain_id: The domain ID. Required.
        :type domain_id: str
        :param domain_role_unassignment_request: The request payload for unassigning domain members
         from the domain by principal. Is either a DomainRoleUnassignmentRequest type or a IO[bytes]
         type. Required.
        :type domain_role_unassignment_request:
         ~microsoft.fabric.api.admin.models.DomainRoleUnassignmentRequest or IO[bytes]
        :return: None
        :rtype: None
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        error_map: MutableMapping[int, Type[HttpResponseError]] = {
            401: ClientAuthenticationError,
            404: ResourceNotFoundError,
            409: ResourceExistsError,
            304: ResourceNotModifiedError,
        }
        error_map.update(kwargs.pop("error_map", {}) or {})

        _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
        _params = kwargs.pop("params", {}) or {}

        content_type: Optional[str] = kwargs.pop("content_type", _headers.pop("Content-Type", None))
        cls: ClsType[None] = kwargs.pop("cls", None)

        content_type = content_type or "application/json"
        _json = None
        _content = None
        if isinstance(domain_role_unassignment_request, (IOBase, bytes)):
            _content = domain_role_unassignment_request
        else:
            _json = self._serialize.body(domain_role_unassignment_request, "DomainRoleUnassignmentRequest")

        _request = build_domains_role_assignments_bulk_unassign_request(
            domain_id=domain_id,
            content_type=content_type,
            json=_json,
            content=_content,
            headers=_headers,
            params=_params,
        )
        _request.url = self._client.format_url(_request.url)

        _stream = False
        pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
            _request, stream=_stream, **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize.failsafe_deserialize(_models.ErrorResponse, pipeline_response)
            raise HttpResponseError(response=response, model=error)

        if cls:
            return cls(pipeline_response, None, {})  # type: ignore

    @overload
    def sync_role_assignments_to_subdomains(  # pylint: disable=inconsistent-return-statements
        self,
        domain_id: str,
        sync_role_assignments_to_subdomains_request: _models.SyncRoleAssignmentsToSubdomainsRequest,
        *,
        content_type: str = "application/json",
        **kwargs: Any,
    ) -> None:
        """Sync the role assignments from the specified domain to its subdomains.

        Permissions
        -----------

        The caller must be a Fabric administrator.

        Required Delegated Scopes
        -------------------------

        Tenant.ReadWrite.All.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param domain_id: The domain ID. Required.
        :type domain_id: str
        :param sync_role_assignments_to_subdomains_request: The request payload for syncing domain
         members to its subdomains. Required.
        :type sync_role_assignments_to_subdomains_request:
         ~microsoft.fabric.api.admin.models.SyncRoleAssignmentsToSubdomainsRequest
        :keyword content_type: Body Parameter content-type. Content type parameter for JSON body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: None
        :rtype: None
        :raises ~azure.core.exceptions.HttpResponseError:
        """

    @overload
    def sync_role_assignments_to_subdomains(  # pylint: disable=inconsistent-return-statements
        self,
        domain_id: str,
        sync_role_assignments_to_subdomains_request: IO[bytes],
        *,
        content_type: str = "application/json",
        **kwargs: Any,
    ) -> None:
        """Sync the role assignments from the specified domain to its subdomains.

        Permissions
        -----------

        The caller must be a Fabric administrator.

        Required Delegated Scopes
        -------------------------

        Tenant.ReadWrite.All.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param domain_id: The domain ID. Required.
        :type domain_id: str
        :param sync_role_assignments_to_subdomains_request: The request payload for syncing domain
         members to its subdomains. Required.
        :type sync_role_assignments_to_subdomains_request: IO[bytes]
        :keyword content_type: Body Parameter content-type. Content type parameter for binary body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: None
        :rtype: None
        :raises ~azure.core.exceptions.HttpResponseError:
        """

    @distributed_trace
    def sync_role_assignments_to_subdomains(  # pylint: disable=inconsistent-return-statements
        self,
        domain_id: str,
        sync_role_assignments_to_subdomains_request: Union[_models.SyncRoleAssignmentsToSubdomainsRequest, IO[bytes]],
        **kwargs: Any,
    ) -> None:
        """Sync the role assignments from the specified domain to its subdomains.

        Permissions
        -----------

        The caller must be a Fabric administrator.

        Required Delegated Scopes
        -------------------------

        Tenant.ReadWrite.All.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param domain_id: The domain ID. Required.
        :type domain_id: str
        :param sync_role_assignments_to_subdomains_request: The request payload for syncing domain
         members to its subdomains. Is either a SyncRoleAssignmentsToSubdomainsRequest type or a
         IO[bytes] type. Required.
        :type sync_role_assignments_to_subdomains_request:
         ~microsoft.fabric.api.admin.models.SyncRoleAssignmentsToSubdomainsRequest or IO[bytes]
        :return: None
        :rtype: None
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        error_map: MutableMapping[int, Type[HttpResponseError]] = {
            401: ClientAuthenticationError,
            404: ResourceNotFoundError,
            409: ResourceExistsError,
            304: ResourceNotModifiedError,
        }
        error_map.update(kwargs.pop("error_map", {}) or {})

        _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
        _params = kwargs.pop("params", {}) or {}

        content_type: Optional[str] = kwargs.pop("content_type", _headers.pop("Content-Type", None))
        cls: ClsType[None] = kwargs.pop("cls", None)

        content_type = content_type or "application/json"
        _json = None
        _content = None
        if isinstance(sync_role_assignments_to_subdomains_request, (IOBase, bytes)):
            _content = sync_role_assignments_to_subdomains_request
        else:
            _json = self._serialize.body(
                sync_role_assignments_to_subdomains_request, "SyncRoleAssignmentsToSubdomainsRequest"
            )

        _request = build_domains_sync_role_assignments_to_subdomains_request(
            domain_id=domain_id,
            content_type=content_type,
            json=_json,
            content=_content,
            headers=_headers,
            params=_params,
        )
        _request.url = self._client.format_url(_request.url)

        _stream = False
        pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
            _request, stream=_stream, **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize.failsafe_deserialize(_models.ErrorResponse, pipeline_response)
            raise HttpResponseError(response=response, model=error)

        if cls:
            return cls(pipeline_response, None, {})  # type: ignore

    def _assign_domain_workspaces_by_capacities_initial(  # pylint: disable=name-too-long
        self,
        domain_id: str,
        assign_domain_workspaces_by_capacities_request: Union[
            _models.AssignDomainWorkspacesByCapacitiesRequest, IO[bytes]
        ],
        **kwargs: Any,
    ) -> Iterator[bytes]:
        error_map: MutableMapping[int, Type[HttpResponseError]] = {
            401: ClientAuthenticationError,
            404: ResourceNotFoundError,
            409: ResourceExistsError,
            304: ResourceNotModifiedError,
        }
        error_map.update(kwargs.pop("error_map", {}) or {})

        _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
        _params = kwargs.pop("params", {}) or {}

        content_type: Optional[str] = kwargs.pop("content_type", _headers.pop("Content-Type", None))
        cls: ClsType[Iterator[bytes]] = kwargs.pop("cls", None)

        content_type = content_type or "application/json"
        _json = None
        _content = None
        if isinstance(assign_domain_workspaces_by_capacities_request, (IOBase, bytes)):
            _content = assign_domain_workspaces_by_capacities_request
        else:
            _json = self._serialize.body(
                assign_domain_workspaces_by_capacities_request, "AssignDomainWorkspacesByCapacitiesRequest"
            )

        _request = build_domains_assign_domain_workspaces_by_capacities_request(
            domain_id=domain_id,
            content_type=content_type,
            json=_json,
            content=_content,
            headers=_headers,
            params=_params,
        )
        _request.url = self._client.format_url(_request.url)

        _stream = True
        pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
            _request, stream=_stream, **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [202]:
            response.read()  # Load the body in memory and close the socket
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize.failsafe_deserialize(_models.ErrorResponse, pipeline_response)
            raise HttpResponseError(response=response, model=error)

        response_headers = {}
        response_headers["Location"] = self._deserialize("str", response.headers.get("Location"))
        response_headers["Retry-After"] = self._deserialize("int", response.headers.get("Retry-After"))
        response_headers["x-ms-operation-id"] = self._deserialize("str", response.headers.get("x-ms-operation-id"))

        deserialized = response.iter_bytes()

        if cls:
            return cls(pipeline_response, deserialized, response_headers)  # type: ignore

        return deserialized  # type: ignore

    @overload
    def begin_assign_domain_workspaces_by_capacities(  # pylint: disable=name-too-long
        self,
        domain_id: str,
        assign_domain_workspaces_by_capacities_request: _models.AssignDomainWorkspacesByCapacitiesRequest,
        *,
        content_type: str = "application/json",
        **kwargs: Any,
    ) -> LROPoller[None]:
        """Assign all workspaces that reside on the specified capacities to the specified domain.

        Preexisting domain assignments will be overridden unless bulk reassignment is blocked by domain
        management tenant settings.

        This API supports `long running operations (LRO)
        </rest/api/fabric/articles/long-running-operation>`_.

        Permissions
        -----------

        The caller must be a Fabric administrator.

        Required Delegated Scopes
        -------------------------

        Tenant.ReadWrite.All.

        Limitations
        -----------

        Maximum 10 requests per one minute per principal.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param domain_id: The domain ID. Required.
        :type domain_id: str
        :param assign_domain_workspaces_by_capacities_request: The request payload for assigning
         workspaces to the domain by capacity. Required.
        :type assign_domain_workspaces_by_capacities_request:
         ~microsoft.fabric.api.admin.models.AssignDomainWorkspacesByCapacitiesRequest
        :keyword content_type: Body Parameter content-type. Content type parameter for JSON body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: An instance of LROPoller that returns None
        :rtype: ~azure.core.polling.LROPoller[None]
        :raises ~azure.core.exceptions.HttpResponseError:
        """

    @overload
    def begin_assign_domain_workspaces_by_capacities(  # pylint: disable=name-too-long
        self,
        domain_id: str,
        assign_domain_workspaces_by_capacities_request: IO[bytes],
        *,
        content_type: str = "application/json",
        **kwargs: Any,
    ) -> LROPoller[None]:
        """Assign all workspaces that reside on the specified capacities to the specified domain.

        Preexisting domain assignments will be overridden unless bulk reassignment is blocked by domain
        management tenant settings.

        This API supports `long running operations (LRO)
        </rest/api/fabric/articles/long-running-operation>`_.

        Permissions
        -----------

        The caller must be a Fabric administrator.

        Required Delegated Scopes
        -------------------------

        Tenant.ReadWrite.All.

        Limitations
        -----------

        Maximum 10 requests per one minute per principal.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param domain_id: The domain ID. Required.
        :type domain_id: str
        :param assign_domain_workspaces_by_capacities_request: The request payload for assigning
         workspaces to the domain by capacity. Required.
        :type assign_domain_workspaces_by_capacities_request: IO[bytes]
        :keyword content_type: Body Parameter content-type. Content type parameter for binary body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: An instance of LROPoller that returns None
        :rtype: ~azure.core.polling.LROPoller[None]
        :raises ~azure.core.exceptions.HttpResponseError:
        """

    @distributed_trace
    def begin_assign_domain_workspaces_by_capacities(  # pylint: disable=name-too-long
        self,
        domain_id: str,
        assign_domain_workspaces_by_capacities_request: Union[
            _models.AssignDomainWorkspacesByCapacitiesRequest, IO[bytes]
        ],
        **kwargs: Any,
    ) -> LROPoller[None]:
        """Assign all workspaces that reside on the specified capacities to the specified domain.

        Preexisting domain assignments will be overridden unless bulk reassignment is blocked by domain
        management tenant settings.

        This API supports `long running operations (LRO)
        </rest/api/fabric/articles/long-running-operation>`_.

        Permissions
        -----------

        The caller must be a Fabric administrator.

        Required Delegated Scopes
        -------------------------

        Tenant.ReadWrite.All.

        Limitations
        -----------

        Maximum 10 requests per one minute per principal.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param domain_id: The domain ID. Required.
        :type domain_id: str
        :param assign_domain_workspaces_by_capacities_request: The request payload for assigning
         workspaces to the domain by capacity. Is either a AssignDomainWorkspacesByCapacitiesRequest
         type or a IO[bytes] type. Required.
        :type assign_domain_workspaces_by_capacities_request:
         ~microsoft.fabric.api.admin.models.AssignDomainWorkspacesByCapacitiesRequest or IO[bytes]
        :return: An instance of LROPoller that returns None
        :rtype: ~azure.core.polling.LROPoller[None]
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
        _params = kwargs.pop("params", {}) or {}

        content_type: Optional[str] = kwargs.pop("content_type", _headers.pop("Content-Type", None))
        cls: ClsType[None] = kwargs.pop("cls", None)
        polling: Union[bool, PollingMethod] = kwargs.pop("polling", True)
        lro_delay = kwargs.pop("polling_interval", self._config.polling_interval)
        cont_token: Optional[str] = kwargs.pop("continuation_token", None)
        if cont_token is None:
            raw_result = self._assign_domain_workspaces_by_capacities_initial(
                domain_id=domain_id,
                assign_domain_workspaces_by_capacities_request=assign_domain_workspaces_by_capacities_request,
                content_type=content_type,
                cls=lambda x, y, z: x,
                headers=_headers,
                params=_params,
                **kwargs,
            )
            raw_result.http_response.read()  # type: ignore
        kwargs.pop("error_map", None)

        def get_long_running_output(pipeline_response):  # pylint: disable=inconsistent-return-statements
            if cls:
                return cls(pipeline_response, None, {})  # type: ignore

        if polling is True:
            polling_method: PollingMethod = cast(PollingMethod, LROBasePolling(lro_delay, **kwargs))
        elif polling is False:
            polling_method = cast(PollingMethod, NoPolling())
        else:
            polling_method = polling
        if cont_token:
            return LROPoller[None].from_continuation_token(
                polling_method=polling_method,
                continuation_token=cont_token,
                client=self._client,
                deserialization_callback=get_long_running_output,
            )
        return LROPoller[None](self._client, raw_result, get_long_running_output, polling_method)  # type: ignore

    def _assign_domain_workspaces_by_principals_initial(  # pylint: disable=name-too-long
        self,
        domain_id: str,
        assign_domain_workspaces_by_principals_request: Union[
            _models.AssignDomainWorkspacesByPrincipalsRequest, IO[bytes]
        ],
        **kwargs: Any,
    ) -> Iterator[bytes]:
        error_map: MutableMapping[int, Type[HttpResponseError]] = {
            401: ClientAuthenticationError,
            404: ResourceNotFoundError,
            409: ResourceExistsError,
            304: ResourceNotModifiedError,
        }
        error_map.update(kwargs.pop("error_map", {}) or {})

        _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
        _params = kwargs.pop("params", {}) or {}

        content_type: Optional[str] = kwargs.pop("content_type", _headers.pop("Content-Type", None))
        cls: ClsType[Iterator[bytes]] = kwargs.pop("cls", None)

        content_type = content_type or "application/json"
        _json = None
        _content = None
        if isinstance(assign_domain_workspaces_by_principals_request, (IOBase, bytes)):
            _content = assign_domain_workspaces_by_principals_request
        else:
            _json = self._serialize.body(
                assign_domain_workspaces_by_principals_request, "AssignDomainWorkspacesByPrincipalsRequest"
            )

        _request = build_domains_assign_domain_workspaces_by_principals_request(
            domain_id=domain_id,
            content_type=content_type,
            json=_json,
            content=_content,
            headers=_headers,
            params=_params,
        )
        _request.url = self._client.format_url(_request.url)

        _stream = True
        pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
            _request, stream=_stream, **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [202]:
            response.read()  # Load the body in memory and close the socket
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize.failsafe_deserialize(_models.ErrorResponse, pipeline_response)
            raise HttpResponseError(response=response, model=error)

        response_headers = {}
        response_headers["Location"] = self._deserialize("str", response.headers.get("Location"))
        response_headers["Retry-After"] = self._deserialize("int", response.headers.get("Retry-After"))
        response_headers["x-ms-operation-id"] = self._deserialize("str", response.headers.get("x-ms-operation-id"))

        deserialized = response.iter_bytes()

        if cls:
            return cls(pipeline_response, deserialized, response_headers)  # type: ignore

        return deserialized  # type: ignore

    @overload
    def begin_assign_domain_workspaces_by_principals(  # pylint: disable=name-too-long
        self,
        domain_id: str,
        assign_domain_workspaces_by_principals_request: _models.AssignDomainWorkspacesByPrincipalsRequest,
        *,
        content_type: str = "application/json",
        **kwargs: Any,
    ) -> LROPoller[None]:
        """Assign workspaces to the specified domain, when one of the specified principals has admin
        permission in the workspace.

        Preexisting domain assignments will be overridden unless bulk reassignment is blocked by domain
        management tenant settings.

        This API supports `long running operations (LRO)
        </rest/api/fabric/articles/long-running-operation>`_.

        Permissions
        -----------

        The caller must be a Fabric administrator.

        Required Delegated Scopes
        -------------------------

        Tenant.ReadWrite.All.

        Limitations
        -----------

        Maximum 10 requests per one minute per principal.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param domain_id: The domain ID. Required.
        :type domain_id: str
        :param assign_domain_workspaces_by_principals_request: The request payload for assigning
         workspaces to the domain by principal. Required.
        :type assign_domain_workspaces_by_principals_request:
         ~microsoft.fabric.api.admin.models.AssignDomainWorkspacesByPrincipalsRequest
        :keyword content_type: Body Parameter content-type. Content type parameter for JSON body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: An instance of LROPoller that returns None
        :rtype: ~azure.core.polling.LROPoller[None]
        :raises ~azure.core.exceptions.HttpResponseError:
        """

    @overload
    def begin_assign_domain_workspaces_by_principals(  # pylint: disable=name-too-long
        self,
        domain_id: str,
        assign_domain_workspaces_by_principals_request: IO[bytes],
        *,
        content_type: str = "application/json",
        **kwargs: Any,
    ) -> LROPoller[None]:
        """Assign workspaces to the specified domain, when one of the specified principals has admin
        permission in the workspace.

        Preexisting domain assignments will be overridden unless bulk reassignment is blocked by domain
        management tenant settings.

        This API supports `long running operations (LRO)
        </rest/api/fabric/articles/long-running-operation>`_.

        Permissions
        -----------

        The caller must be a Fabric administrator.

        Required Delegated Scopes
        -------------------------

        Tenant.ReadWrite.All.

        Limitations
        -----------

        Maximum 10 requests per one minute per principal.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param domain_id: The domain ID. Required.
        :type domain_id: str
        :param assign_domain_workspaces_by_principals_request: The request payload for assigning
         workspaces to the domain by principal. Required.
        :type assign_domain_workspaces_by_principals_request: IO[bytes]
        :keyword content_type: Body Parameter content-type. Content type parameter for binary body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: An instance of LROPoller that returns None
        :rtype: ~azure.core.polling.LROPoller[None]
        :raises ~azure.core.exceptions.HttpResponseError:
        """

    @distributed_trace
    def begin_assign_domain_workspaces_by_principals(  # pylint: disable=name-too-long
        self,
        domain_id: str,
        assign_domain_workspaces_by_principals_request: Union[
            _models.AssignDomainWorkspacesByPrincipalsRequest, IO[bytes]
        ],
        **kwargs: Any,
    ) -> LROPoller[None]:
        """Assign workspaces to the specified domain, when one of the specified principals has admin
        permission in the workspace.

        Preexisting domain assignments will be overridden unless bulk reassignment is blocked by domain
        management tenant settings.

        This API supports `long running operations (LRO)
        </rest/api/fabric/articles/long-running-operation>`_.

        Permissions
        -----------

        The caller must be a Fabric administrator.

        Required Delegated Scopes
        -------------------------

        Tenant.ReadWrite.All.

        Limitations
        -----------

        Maximum 10 requests per one minute per principal.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param domain_id: The domain ID. Required.
        :type domain_id: str
        :param assign_domain_workspaces_by_principals_request: The request payload for assigning
         workspaces to the domain by principal. Is either a AssignDomainWorkspacesByPrincipalsRequest
         type or a IO[bytes] type. Required.
        :type assign_domain_workspaces_by_principals_request:
         ~microsoft.fabric.api.admin.models.AssignDomainWorkspacesByPrincipalsRequest or IO[bytes]
        :return: An instance of LROPoller that returns None
        :rtype: ~azure.core.polling.LROPoller[None]
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
        _params = kwargs.pop("params", {}) or {}

        content_type: Optional[str] = kwargs.pop("content_type", _headers.pop("Content-Type", None))
        cls: ClsType[None] = kwargs.pop("cls", None)
        polling: Union[bool, PollingMethod] = kwargs.pop("polling", True)
        lro_delay = kwargs.pop("polling_interval", self._config.polling_interval)
        cont_token: Optional[str] = kwargs.pop("continuation_token", None)
        if cont_token is None:
            raw_result = self._assign_domain_workspaces_by_principals_initial(
                domain_id=domain_id,
                assign_domain_workspaces_by_principals_request=assign_domain_workspaces_by_principals_request,
                content_type=content_type,
                cls=lambda x, y, z: x,
                headers=_headers,
                params=_params,
                **kwargs,
            )
            raw_result.http_response.read()  # type: ignore
        kwargs.pop("error_map", None)

        def get_long_running_output(pipeline_response):  # pylint: disable=inconsistent-return-statements
            if cls:
                return cls(pipeline_response, None, {})  # type: ignore

        if polling is True:
            polling_method: PollingMethod = cast(PollingMethod, LROBasePolling(lro_delay, **kwargs))
        elif polling is False:
            polling_method = cast(PollingMethod, NoPolling())
        else:
            polling_method = polling
        if cont_token:
            return LROPoller[None].from_continuation_token(
                polling_method=polling_method,
                continuation_token=cont_token,
                client=self._client,
                deserialization_callback=get_long_running_output,
            )
        return LROPoller[None](self._client, raw_result, get_long_running_output, polling_method)  # type: ignore


class TagsOperations:
    """
    .. warning::
        **DO NOT** instantiate this class directly.

        Instead, you should access the following operations through
        :class:`~microsoft.fabric.api.admin.FabricAdminClient`'s
        :attr:`tags` attribute.
    """

    models = _models

    def __init__(self, *args, **kwargs):
        input_args = list(args)
        self._client = input_args.pop(0) if input_args else kwargs.pop("client")
        self._config = input_args.pop(0) if input_args else kwargs.pop("config")
        self._serialize = input_args.pop(0) if input_args else kwargs.pop("serializer")
        self._deserialize = input_args.pop(0) if input_args else kwargs.pop("deserializer")

    @distributed_trace
    def list_tags(
        self, *, continuation_token_parameter: Optional[str] = None, **kwargs: Any
    ) -> Iterable["_models.AdminTagInfo"]:
        """Returns a list of all the tenant's tags.

        ..

           [!NOTE]
           This API is part of a Preview release and is provided for evaluation and development
        purposes only. It may change based on feedback and is not recommended for production use.


        Required Delegated Scopes
        -------------------------

        Tenant.Read.All or Tenant.ReadWrite.All

        Limitations
        -----------

        Maximum 25 requests per one minute per principal.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :keyword continuation_token_parameter: A token for retrieving the next page of results. Default
         value is None.
        :paramtype continuation_token_parameter: str
        :return: An iterator like instance of AdminTagInfo
        :rtype: ~azure.core.paging.ItemPaged[~microsoft.fabric.api.admin.models.AdminTagInfo]
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls: ClsType[_models._models.AdminTagsInfo] = kwargs.pop("cls", None)  # pylint: disable=protected-access

        error_map: MutableMapping[int, Type[HttpResponseError]] = {
            401: ClientAuthenticationError,
            404: ResourceNotFoundError,
            409: ResourceExistsError,
            304: ResourceNotModifiedError,
        }
        error_map.update(kwargs.pop("error_map", {}) or {})

        def prepare_request(next_link=None):
            if not next_link:

                _request = build_tags_list_tags_request(
                    continuation_token_parameter=continuation_token_parameter,
                    headers=_headers,
                    params=_params,
                )
                _request.url = self._client.format_url(_request.url)

            else:
                _request = HttpRequest("GET", next_link)
                _request.url = self._client.format_url(_request.url)

            return _request

        def extract_data(pipeline_response):
            deserialized = self._deserialize(
                _models._models.AdminTagsInfo, pipeline_response  # pylint: disable=protected-access
            )
            list_of_elem = deserialized.value
            if cls:
                list_of_elem = cls(list_of_elem)  # type: ignore
            return deserialized.continuation_uri or None, iter(list_of_elem)

        def get_next(next_link=None):
            _request = prepare_request(next_link)

            _stream = False
            pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
                _request, stream=_stream, **kwargs
            )
            response = pipeline_response.http_response

            if response.status_code not in [200]:
                map_error(status_code=response.status_code, response=response, error_map=error_map)
                error = self._deserialize.failsafe_deserialize(_models.ErrorResponse, pipeline_response)
                raise HttpResponseError(response=response, model=error)

            return pipeline_response

        return ItemPaged(get_next, extract_data)

    @overload
    def bulk_create_tags(
        self, create_tags_request: _models.CreateTagsRequest, *, content_type: str = "application/json", **kwargs: Any
    ) -> _models.CreateTagsResponse:
        """Create new tags.

        ..

           [!NOTE]
           This API is part of a Preview release and is provided for evaluation and development
        purposes only. It may change based on feedback and is not recommended for production use.


        Permissions
        -----------

        The caller must have administrator rights such as Fabric administrator.

        Required Delegated Scopes
        -------------------------

        Tenant.ReadWrite.All.

        Limitations
        -----------

        Maximum 25 requests per one minute per principal.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param create_tags_request: The request payload for creating tags. Required.
        :type create_tags_request: ~microsoft.fabric.api.admin.models.CreateTagsRequest
        :keyword content_type: Body Parameter content-type. Content type parameter for JSON body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: CreateTagsResponse
        :rtype: ~microsoft.fabric.api.admin.models.CreateTagsResponse
        :raises ~azure.core.exceptions.HttpResponseError:
        """

    @overload
    def bulk_create_tags(
        self, create_tags_request: IO[bytes], *, content_type: str = "application/json", **kwargs: Any
    ) -> _models.CreateTagsResponse:
        """Create new tags.

        ..

           [!NOTE]
           This API is part of a Preview release and is provided for evaluation and development
        purposes only. It may change based on feedback and is not recommended for production use.


        Permissions
        -----------

        The caller must have administrator rights such as Fabric administrator.

        Required Delegated Scopes
        -------------------------

        Tenant.ReadWrite.All.

        Limitations
        -----------

        Maximum 25 requests per one minute per principal.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param create_tags_request: The request payload for creating tags. Required.
        :type create_tags_request: IO[bytes]
        :keyword content_type: Body Parameter content-type. Content type parameter for binary body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: CreateTagsResponse
        :rtype: ~microsoft.fabric.api.admin.models.CreateTagsResponse
        :raises ~azure.core.exceptions.HttpResponseError:
        """

    @distributed_trace
    def bulk_create_tags(
        self, create_tags_request: Union[_models.CreateTagsRequest, IO[bytes]], **kwargs: Any
    ) -> _models.CreateTagsResponse:
        """Create new tags.

        ..

           [!NOTE]
           This API is part of a Preview release and is provided for evaluation and development
        purposes only. It may change based on feedback and is not recommended for production use.


        Permissions
        -----------

        The caller must have administrator rights such as Fabric administrator.

        Required Delegated Scopes
        -------------------------

        Tenant.ReadWrite.All.

        Limitations
        -----------

        Maximum 25 requests per one minute per principal.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param create_tags_request: The request payload for creating tags. Is either a
         CreateTagsRequest type or a IO[bytes] type. Required.
        :type create_tags_request: ~microsoft.fabric.api.admin.models.CreateTagsRequest or IO[bytes]
        :return: CreateTagsResponse
        :rtype: ~microsoft.fabric.api.admin.models.CreateTagsResponse
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        error_map: MutableMapping[int, Type[HttpResponseError]] = {
            401: ClientAuthenticationError,
            404: ResourceNotFoundError,
            409: ResourceExistsError,
            304: ResourceNotModifiedError,
        }
        error_map.update(kwargs.pop("error_map", {}) or {})

        _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
        _params = kwargs.pop("params", {}) or {}

        content_type: Optional[str] = kwargs.pop("content_type", _headers.pop("Content-Type", None))
        cls: ClsType[_models.CreateTagsResponse] = kwargs.pop("cls", None)

        content_type = content_type or "application/json"
        _json = None
        _content = None
        if isinstance(create_tags_request, (IOBase, bytes)):
            _content = create_tags_request
        else:
            _json = self._serialize.body(create_tags_request, "CreateTagsRequest")

        _request = build_tags_bulk_create_tags_request(
            content_type=content_type,
            json=_json,
            content=_content,
            headers=_headers,
            params=_params,
        )
        _request.url = self._client.format_url(_request.url)

        _stream = False
        pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
            _request, stream=_stream, **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [201]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize.failsafe_deserialize(_models.ErrorResponse, pipeline_response)
            raise HttpResponseError(response=response, model=error)

        deserialized = self._deserialize("CreateTagsResponse", pipeline_response.http_response)

        if cls:
            return cls(pipeline_response, deserialized, {})  # type: ignore

        return deserialized  # type: ignore

    @distributed_trace
    def delete_tag(self, tag_id: str, **kwargs: Any) -> None:  # pylint: disable=inconsistent-return-statements
        """Delete the specified tag.

        ..

           [!NOTE]
           This API is part of a Preview release and is provided for evaluation and development
        purposes only. It may change based on feedback and is not recommended for production use.


        Permissions
        -----------

        The caller must have administrator rights such as Fabric administrator.

        Required Delegated Scopes
        -------------------------

        Tenant.ReadWrite.All.

        Limitations
        -----------

        Maximum 10 requests per one minute per principal.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param tag_id: The tag ID. Required.
        :type tag_id: str
        :return: None
        :rtype: None
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        error_map: MutableMapping[int, Type[HttpResponseError]] = {
            401: ClientAuthenticationError,
            404: ResourceNotFoundError,
            409: ResourceExistsError,
            304: ResourceNotModifiedError,
        }
        error_map.update(kwargs.pop("error_map", {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls: ClsType[None] = kwargs.pop("cls", None)

        _request = build_tags_delete_tag_request(
            tag_id=tag_id,
            headers=_headers,
            params=_params,
        )
        _request.url = self._client.format_url(_request.url)

        _stream = False
        pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
            _request, stream=_stream, **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize.failsafe_deserialize(_models.ErrorResponse, pipeline_response)
            raise HttpResponseError(response=response, model=error)

        if cls:
            return cls(pipeline_response, None, {})  # type: ignore

    @overload
    def update_tag(
        self,
        tag_id: str,
        update_tag_request: _models.UpdateTagRequest,
        *,
        content_type: str = "application/json",
        **kwargs: Any,
    ) -> _models.Tag:
        """Updates the specified tag.

        ..

           [!NOTE]
           This API is part of a Preview release and is provided for evaluation and development
        purposes only. It may change based on feedback and is not recommended for production use.


        Permissions
        -----------

        The caller must have administrator rights such as Fabric administrator.

        Required Delegated Scopes
        -------------------------

        Tenant.ReadWrite.All.

        Limitations
        -----------

        Maximum 25 requests per one minute per principal.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param tag_id: The tag ID. Required.
        :type tag_id: str
        :param update_tag_request: The request payload for updating the tag. Required.
        :type update_tag_request: ~microsoft.fabric.api.admin.models.UpdateTagRequest
        :keyword content_type: Body Parameter content-type. Content type parameter for JSON body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: Tag
        :rtype: ~microsoft.fabric.api.admin.models.Tag
        :raises ~azure.core.exceptions.HttpResponseError:
        """

    @overload
    def update_tag(
        self, tag_id: str, update_tag_request: IO[bytes], *, content_type: str = "application/json", **kwargs: Any
    ) -> _models.Tag:
        """Updates the specified tag.

        ..

           [!NOTE]
           This API is part of a Preview release and is provided for evaluation and development
        purposes only. It may change based on feedback and is not recommended for production use.


        Permissions
        -----------

        The caller must have administrator rights such as Fabric administrator.

        Required Delegated Scopes
        -------------------------

        Tenant.ReadWrite.All.

        Limitations
        -----------

        Maximum 25 requests per one minute per principal.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param tag_id: The tag ID. Required.
        :type tag_id: str
        :param update_tag_request: The request payload for updating the tag. Required.
        :type update_tag_request: IO[bytes]
        :keyword content_type: Body Parameter content-type. Content type parameter for binary body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: Tag
        :rtype: ~microsoft.fabric.api.admin.models.Tag
        :raises ~azure.core.exceptions.HttpResponseError:
        """

    @distributed_trace
    def update_tag(
        self, tag_id: str, update_tag_request: Union[_models.UpdateTagRequest, IO[bytes]], **kwargs: Any
    ) -> _models.Tag:
        """Updates the specified tag.

        ..

           [!NOTE]
           This API is part of a Preview release and is provided for evaluation and development
        purposes only. It may change based on feedback and is not recommended for production use.


        Permissions
        -----------

        The caller must have administrator rights such as Fabric administrator.

        Required Delegated Scopes
        -------------------------

        Tenant.ReadWrite.All.

        Limitations
        -----------

        Maximum 25 requests per one minute per principal.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param tag_id: The tag ID. Required.
        :type tag_id: str
        :param update_tag_request: The request payload for updating the tag. Is either a
         UpdateTagRequest type or a IO[bytes] type. Required.
        :type update_tag_request: ~microsoft.fabric.api.admin.models.UpdateTagRequest or IO[bytes]
        :return: Tag
        :rtype: ~microsoft.fabric.api.admin.models.Tag
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        error_map: MutableMapping[int, Type[HttpResponseError]] = {
            401: ClientAuthenticationError,
            404: ResourceNotFoundError,
            409: ResourceExistsError,
            304: ResourceNotModifiedError,
        }
        error_map.update(kwargs.pop("error_map", {}) or {})

        _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
        _params = kwargs.pop("params", {}) or {}

        content_type: Optional[str] = kwargs.pop("content_type", _headers.pop("Content-Type", None))
        cls: ClsType[_models.Tag] = kwargs.pop("cls", None)

        content_type = content_type or "application/json"
        _json = None
        _content = None
        if isinstance(update_tag_request, (IOBase, bytes)):
            _content = update_tag_request
        else:
            _json = self._serialize.body(update_tag_request, "UpdateTagRequest")

        _request = build_tags_update_tag_request(
            tag_id=tag_id,
            content_type=content_type,
            json=_json,
            content=_content,
            headers=_headers,
            params=_params,
        )
        _request.url = self._client.format_url(_request.url)

        _stream = False
        pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
            _request, stream=_stream, **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize.failsafe_deserialize(_models.ErrorResponse, pipeline_response)
            raise HttpResponseError(response=response, model=error)

        deserialized = self._deserialize("Tag", pipeline_response.http_response)

        if cls:
            return cls(pipeline_response, deserialized, {})  # type: ignore

        return deserialized  # type: ignore


class LabelsOperations:
    """
    .. warning::
        **DO NOT** instantiate this class directly.

        Instead, you should access the following operations through
        :class:`~microsoft.fabric.api.admin.FabricAdminClient`'s
        :attr:`labels` attribute.
    """

    models = _models

    def __init__(self, *args, **kwargs):
        input_args = list(args)
        self._client = input_args.pop(0) if input_args else kwargs.pop("client")
        self._config = input_args.pop(0) if input_args else kwargs.pop("config")
        self._serialize = input_args.pop(0) if input_args else kwargs.pop("serializer")
        self._deserialize = input_args.pop(0) if input_args else kwargs.pop("deserializer")

    @overload
    def bulk_remove_labels(
        self,
        remove_labels_request: _models.RemoveLabelsRequest,
        *,
        content_type: str = "application/json",
        **kwargs: Any,
    ) -> _models.ItemsChangeLabelResponse:
        """Remove sensitivity labels from Fabric items (such as lakehouses and reports) by item ID. The
        sensitivity labels of the autogenerated items linked to the items in the call, are removed and
        their IDs aren't returned. Items with linked autogenerated items that are supported are:
        Lakehouse, Warehouse, Datamart, SQLDatabase, MirroredDatabase.

        For a usage example, see `Set or remove sensitivity labels
        </power-bi/admin/service-security-sensitivity-label-inheritance-set-remove-api>`_.

        Permissions
        -----------


        * The user must be a Fabric Administrator.
        * The admin user must have sufficient `usage rights
        </azure/information-protection/configure-usage-rights>`_ to delete labels.

        Required Scope
        --------------

        Tenant.ReadWrite.All

        Limitations
        -----------


        * Maximum 25 requests per hour.
        * Each request can update up to 2,000 Fabric items.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - No


        Interface
        ---------.

        :param remove_labels_request: A list of items. Required.
        :type remove_labels_request: ~microsoft.fabric.api.admin.models.RemoveLabelsRequest
        :keyword content_type: Body Parameter content-type. Content type parameter for JSON body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: ItemsChangeLabelResponse
        :rtype: ~microsoft.fabric.api.admin.models.ItemsChangeLabelResponse
        :raises ~azure.core.exceptions.HttpResponseError:
        """

    @overload
    def bulk_remove_labels(
        self, remove_labels_request: IO[bytes], *, content_type: str = "application/json", **kwargs: Any
    ) -> _models.ItemsChangeLabelResponse:
        """Remove sensitivity labels from Fabric items (such as lakehouses and reports) by item ID. The
        sensitivity labels of the autogenerated items linked to the items in the call, are removed and
        their IDs aren't returned. Items with linked autogenerated items that are supported are:
        Lakehouse, Warehouse, Datamart, SQLDatabase, MirroredDatabase.

        For a usage example, see `Set or remove sensitivity labels
        </power-bi/admin/service-security-sensitivity-label-inheritance-set-remove-api>`_.

        Permissions
        -----------


        * The user must be a Fabric Administrator.
        * The admin user must have sufficient `usage rights
        </azure/information-protection/configure-usage-rights>`_ to delete labels.

        Required Scope
        --------------

        Tenant.ReadWrite.All

        Limitations
        -----------


        * Maximum 25 requests per hour.
        * Each request can update up to 2,000 Fabric items.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - No


        Interface
        ---------.

        :param remove_labels_request: A list of items. Required.
        :type remove_labels_request: IO[bytes]
        :keyword content_type: Body Parameter content-type. Content type parameter for binary body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: ItemsChangeLabelResponse
        :rtype: ~microsoft.fabric.api.admin.models.ItemsChangeLabelResponse
        :raises ~azure.core.exceptions.HttpResponseError:
        """

    @distributed_trace
    def bulk_remove_labels(
        self, remove_labels_request: Union[_models.RemoveLabelsRequest, IO[bytes]], **kwargs: Any
    ) -> _models.ItemsChangeLabelResponse:
        """Remove sensitivity labels from Fabric items (such as lakehouses and reports) by item ID. The
        sensitivity labels of the autogenerated items linked to the items in the call, are removed and
        their IDs aren't returned. Items with linked autogenerated items that are supported are:
        Lakehouse, Warehouse, Datamart, SQLDatabase, MirroredDatabase.

        For a usage example, see `Set or remove sensitivity labels
        </power-bi/admin/service-security-sensitivity-label-inheritance-set-remove-api>`_.

        Permissions
        -----------


        * The user must be a Fabric Administrator.
        * The admin user must have sufficient `usage rights
        </azure/information-protection/configure-usage-rights>`_ to delete labels.

        Required Scope
        --------------

        Tenant.ReadWrite.All

        Limitations
        -----------


        * Maximum 25 requests per hour.
        * Each request can update up to 2,000 Fabric items.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - No


        Interface
        ---------.

        :param remove_labels_request: A list of items. Is either a RemoveLabelsRequest type or a
         IO[bytes] type. Required.
        :type remove_labels_request: ~microsoft.fabric.api.admin.models.RemoveLabelsRequest or
         IO[bytes]
        :return: ItemsChangeLabelResponse
        :rtype: ~microsoft.fabric.api.admin.models.ItemsChangeLabelResponse
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        error_map: MutableMapping[int, Type[HttpResponseError]] = {
            401: ClientAuthenticationError,
            404: ResourceNotFoundError,
            409: ResourceExistsError,
            304: ResourceNotModifiedError,
        }
        error_map.update(kwargs.pop("error_map", {}) or {})

        _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
        _params = kwargs.pop("params", {}) or {}

        content_type: Optional[str] = kwargs.pop("content_type", _headers.pop("Content-Type", None))
        cls: ClsType[_models.ItemsChangeLabelResponse] = kwargs.pop("cls", None)

        content_type = content_type or "application/json"
        _json = None
        _content = None
        if isinstance(remove_labels_request, (IOBase, bytes)):
            _content = remove_labels_request
        else:
            _json = self._serialize.body(remove_labels_request, "RemoveLabelsRequest")

        _request = build_labels_bulk_remove_labels_request(
            content_type=content_type,
            json=_json,
            content=_content,
            headers=_headers,
            params=_params,
        )
        _request.url = self._client.format_url(_request.url)

        _stream = False
        pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
            _request, stream=_stream, **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize.failsafe_deserialize(_models.ErrorResponse, pipeline_response)
            raise HttpResponseError(response=response, model=error)

        deserialized = self._deserialize("ItemsChangeLabelResponse", pipeline_response.http_response)

        if cls:
            return cls(pipeline_response, deserialized, {})  # type: ignore

        return deserialized  # type: ignore

    @overload
    def bulk_set_labels(
        self, set_labels_request: _models.SetLabelsRequest, *, content_type: str = "application/json", **kwargs: Any
    ) -> _models.ItemsChangeLabelResponse:
        """Set sensitivity labels on Fabric items, such as lakehouses and reports, by item ID. The
        sensitivity labels are applied to the autogenerated items related to the requested items, and
        their IDs aren't returned. Items with linked autogenerated items that are supported are:
        Lakehouse, Warehouse, Datamart, SQLDatabase and MirroredDatabase.

        To set a sensitivity label using this API the admin user or the delegated user, if provided,
        must have the label included in their `label policy
        </purview/create-sensitivity-labels?view=o365-worldwide>`_. For a usage example see: `Set or
        remove sensitivity labels
        </power-bi/admin/service-security-sensitivity-label-inheritance-set-remove-api>`_.

        Permissions
        -----------


        * The user must be a Fabric Administrator.
        * The admin user and the delegated user, if provided, must have sufficient `usage rights
        </azure/information-protection/configure-usage-rights>`_ to set labels.

        Required Scope
        --------------

        Tenant.ReadWrite.All

        Limitations
        -----------


        * Maximum 25 requests per hour.
        * Each request can update up to 2,000 Fabric items.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - No


        Interface
        ---------.

        :param set_labels_request: Set label details. Required.
        :type set_labels_request: ~microsoft.fabric.api.admin.models.SetLabelsRequest
        :keyword content_type: Body Parameter content-type. Content type parameter for JSON body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: ItemsChangeLabelResponse
        :rtype: ~microsoft.fabric.api.admin.models.ItemsChangeLabelResponse
        :raises ~azure.core.exceptions.HttpResponseError:
        """

    @overload
    def bulk_set_labels(
        self, set_labels_request: IO[bytes], *, content_type: str = "application/json", **kwargs: Any
    ) -> _models.ItemsChangeLabelResponse:
        """Set sensitivity labels on Fabric items, such as lakehouses and reports, by item ID. The
        sensitivity labels are applied to the autogenerated items related to the requested items, and
        their IDs aren't returned. Items with linked autogenerated items that are supported are:
        Lakehouse, Warehouse, Datamart, SQLDatabase and MirroredDatabase.

        To set a sensitivity label using this API the admin user or the delegated user, if provided,
        must have the label included in their `label policy
        </purview/create-sensitivity-labels?view=o365-worldwide>`_. For a usage example see: `Set or
        remove sensitivity labels
        </power-bi/admin/service-security-sensitivity-label-inheritance-set-remove-api>`_.

        Permissions
        -----------


        * The user must be a Fabric Administrator.
        * The admin user and the delegated user, if provided, must have sufficient `usage rights
        </azure/information-protection/configure-usage-rights>`_ to set labels.

        Required Scope
        --------------

        Tenant.ReadWrite.All

        Limitations
        -----------


        * Maximum 25 requests per hour.
        * Each request can update up to 2,000 Fabric items.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - No


        Interface
        ---------.

        :param set_labels_request: Set label details. Required.
        :type set_labels_request: IO[bytes]
        :keyword content_type: Body Parameter content-type. Content type parameter for binary body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: ItemsChangeLabelResponse
        :rtype: ~microsoft.fabric.api.admin.models.ItemsChangeLabelResponse
        :raises ~azure.core.exceptions.HttpResponseError:
        """

    @distributed_trace
    def bulk_set_labels(
        self, set_labels_request: Union[_models.SetLabelsRequest, IO[bytes]], **kwargs: Any
    ) -> _models.ItemsChangeLabelResponse:
        """Set sensitivity labels on Fabric items, such as lakehouses and reports, by item ID. The
        sensitivity labels are applied to the autogenerated items related to the requested items, and
        their IDs aren't returned. Items with linked autogenerated items that are supported are:
        Lakehouse, Warehouse, Datamart, SQLDatabase and MirroredDatabase.

        To set a sensitivity label using this API the admin user or the delegated user, if provided,
        must have the label included in their `label policy
        </purview/create-sensitivity-labels?view=o365-worldwide>`_. For a usage example see: `Set or
        remove sensitivity labels
        </power-bi/admin/service-security-sensitivity-label-inheritance-set-remove-api>`_.

        Permissions
        -----------


        * The user must be a Fabric Administrator.
        * The admin user and the delegated user, if provided, must have sufficient `usage rights
        </azure/information-protection/configure-usage-rights>`_ to set labels.

        Required Scope
        --------------

        Tenant.ReadWrite.All

        Limitations
        -----------


        * Maximum 25 requests per hour.
        * Each request can update up to 2,000 Fabric items.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - No


        Interface
        ---------.

        :param set_labels_request: Set label details. Is either a SetLabelsRequest type or a IO[bytes]
         type. Required.
        :type set_labels_request: ~microsoft.fabric.api.admin.models.SetLabelsRequest or IO[bytes]
        :return: ItemsChangeLabelResponse
        :rtype: ~microsoft.fabric.api.admin.models.ItemsChangeLabelResponse
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        error_map: MutableMapping[int, Type[HttpResponseError]] = {
            401: ClientAuthenticationError,
            404: ResourceNotFoundError,
            409: ResourceExistsError,
            304: ResourceNotModifiedError,
        }
        error_map.update(kwargs.pop("error_map", {}) or {})

        _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
        _params = kwargs.pop("params", {}) or {}

        content_type: Optional[str] = kwargs.pop("content_type", _headers.pop("Content-Type", None))
        cls: ClsType[_models.ItemsChangeLabelResponse] = kwargs.pop("cls", None)

        content_type = content_type or "application/json"
        _json = None
        _content = None
        if isinstance(set_labels_request, (IOBase, bytes)):
            _content = set_labels_request
        else:
            _json = self._serialize.body(set_labels_request, "SetLabelsRequest")

        _request = build_labels_bulk_set_labels_request(
            content_type=content_type,
            json=_json,
            content=_content,
            headers=_headers,
            params=_params,
        )
        _request.url = self._client.format_url(_request.url)

        _stream = False
        pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
            _request, stream=_stream, **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize.failsafe_deserialize(_models.ErrorResponse, pipeline_response)
            raise HttpResponseError(response=response, model=error)

        deserialized = self._deserialize("ItemsChangeLabelResponse", pipeline_response.http_response)

        if cls:
            return cls(pipeline_response, deserialized, {})  # type: ignore

        return deserialized  # type: ignore


class ExternalDataSharesProviderOperations:
    """
    .. warning::
        **DO NOT** instantiate this class directly.

        Instead, you should access the following operations through
        :class:`~microsoft.fabric.api.admin.FabricAdminClient`'s
        :attr:`external_data_shares_provider` attribute.
    """

    models = _models

    def __init__(self, *args, **kwargs):
        input_args = list(args)
        self._client = input_args.pop(0) if input_args else kwargs.pop("client")
        self._config = input_args.pop(0) if input_args else kwargs.pop("config")
        self._serialize = input_args.pop(0) if input_args else kwargs.pop("serializer")
        self._deserialize = input_args.pop(0) if input_args else kwargs.pop("deserializer")

    @distributed_trace
    def list_external_data_shares(
        self, *, continuation_token_parameter: Optional[str] = None, **kwargs: Any
    ) -> Iterable["_models.ExternalDataShare"]:
        """Lists the external data shares in the tenant.

        This API supports `pagination </rest/api/fabric/articles/pagination>`_.

        Permissions
        -----------

        The caller must be a Fabric administrator or authenticate using a service principal.

        Required Delegated Scopes
        -------------------------

        Tenant.ReadWrite.All

        Required Tenant Settings
        ------------------------

        To use this API, enable the *External data sharing* admin switch for the calling principal.

        Limitations
        -----------

        Maximum 10 requests per minute.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :keyword continuation_token_parameter: A token for retrieving the next page of results. Default
         value is None.
        :paramtype continuation_token_parameter: str
        :return: An iterator like instance of ExternalDataShare
        :rtype: ~azure.core.paging.ItemPaged[~microsoft.fabric.api.admin.models.ExternalDataShare]
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls: ClsType[_models._models.ExternalDataShares] = kwargs.pop("cls", None)  # pylint: disable=protected-access

        error_map: MutableMapping[int, Type[HttpResponseError]] = {
            401: ClientAuthenticationError,
            404: ResourceNotFoundError,
            409: ResourceExistsError,
            304: ResourceNotModifiedError,
        }
        error_map.update(kwargs.pop("error_map", {}) or {})

        def prepare_request(next_link=None):
            if not next_link:

                _request = build_external_data_shares_provider_list_external_data_shares_request(
                    continuation_token_parameter=continuation_token_parameter,
                    headers=_headers,
                    params=_params,
                )
                _request.url = self._client.format_url(_request.url)

            else:
                _request = HttpRequest("GET", next_link)
                _request.url = self._client.format_url(_request.url)

            return _request

        def extract_data(pipeline_response):
            deserialized = self._deserialize(
                _models._models.ExternalDataShares, pipeline_response  # pylint: disable=protected-access
            )
            list_of_elem = deserialized.value
            if cls:
                list_of_elem = cls(list_of_elem)  # type: ignore
            return deserialized.continuation_uri or None, iter(list_of_elem)

        def get_next(next_link=None):
            _request = prepare_request(next_link)

            _stream = False
            pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
                _request, stream=_stream, **kwargs
            )
            response = pipeline_response.http_response

            if response.status_code not in [200]:
                map_error(status_code=response.status_code, response=response, error_map=error_map)
                error = self._deserialize.failsafe_deserialize(_models.ErrorResponse, pipeline_response)
                raise HttpResponseError(response=response, model=error)

            return pipeline_response

        return ItemPaged(get_next, extract_data)

    @distributed_trace
    def revoke_external_data_share(  # pylint: disable=inconsistent-return-statements
        self, workspace_id: str, item_id: str, external_data_share_id: str, **kwargs: Any
    ) -> None:
        """Revokes the specified external data share. This action cannot be undone.

        Permissions
        -----------

        The caller must be a Fabric administrator.

        Required Delegated Scopes
        -------------------------

        Tenant.ReadWrite.All

        Required Tenant Settings
        ------------------------

        To use this API, enable the *External data sharing* admin switch for the calling principal.

        Limitations
        -----------

        Maximum 10 requests per minute.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param workspace_id: The workspace ID. Required.
        :type workspace_id: str
        :param item_id: The item ID. Required.
        :type item_id: str
        :param external_data_share_id: The external data share ID. Required.
        :type external_data_share_id: str
        :return: None
        :rtype: None
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        error_map: MutableMapping[int, Type[HttpResponseError]] = {
            401: ClientAuthenticationError,
            404: ResourceNotFoundError,
            409: ResourceExistsError,
            304: ResourceNotModifiedError,
        }
        error_map.update(kwargs.pop("error_map", {}) or {})

        _headers = kwargs.pop("headers", {}) or {}
        _params = kwargs.pop("params", {}) or {}

        cls: ClsType[None] = kwargs.pop("cls", None)

        _request = build_external_data_shares_provider_revoke_external_data_share_request(
            workspace_id=workspace_id,
            item_id=item_id,
            external_data_share_id=external_data_share_id,
            headers=_headers,
            params=_params,
        )
        _request.url = self._client.format_url(_request.url)

        _stream = False
        pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
            _request, stream=_stream, **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200]:
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize.failsafe_deserialize(_models.ErrorResponse, pipeline_response)
            raise HttpResponseError(response=response, model=error)

        if cls:
            return cls(pipeline_response, None, {})  # type: ignore


class SharingLinksOperations:
    """
    .. warning::
        **DO NOT** instantiate this class directly.

        Instead, you should access the following operations through
        :class:`~microsoft.fabric.api.admin.FabricAdminClient`'s
        :attr:`sharing_links` attribute.
    """

    models = _models

    def __init__(self, *args, **kwargs):
        input_args = list(args)
        self._client = input_args.pop(0) if input_args else kwargs.pop("client")
        self._config = input_args.pop(0) if input_args else kwargs.pop("config")
        self._serialize = input_args.pop(0) if input_args else kwargs.pop("serializer")
        self._deserialize = input_args.pop(0) if input_args else kwargs.pop("deserializer")

    def _remove_all_sharing_links_initial(
        self, remove_all_sharing_links_request: Union[_models.RemoveAllSharingLinksRequest, IO[bytes]], **kwargs: Any
    ) -> Iterator[bytes]:
        error_map: MutableMapping[int, Type[HttpResponseError]] = {
            401: ClientAuthenticationError,
            404: ResourceNotFoundError,
            409: ResourceExistsError,
            304: ResourceNotModifiedError,
        }
        error_map.update(kwargs.pop("error_map", {}) or {})

        _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
        _params = kwargs.pop("params", {}) or {}

        content_type: Optional[str] = kwargs.pop("content_type", _headers.pop("Content-Type", None))
        cls: ClsType[Iterator[bytes]] = kwargs.pop("cls", None)

        content_type = content_type or "application/json"
        _json = None
        _content = None
        if isinstance(remove_all_sharing_links_request, (IOBase, bytes)):
            _content = remove_all_sharing_links_request
        else:
            _json = self._serialize.body(remove_all_sharing_links_request, "RemoveAllSharingLinksRequest")

        _request = build_sharing_links_remove_all_sharing_links_request(
            content_type=content_type,
            json=_json,
            content=_content,
            headers=_headers,
            params=_params,
        )
        _request.url = self._client.format_url(_request.url)

        _stream = True
        pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
            _request, stream=_stream, **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200, 202]:
            response.read()  # Load the body in memory and close the socket
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize.failsafe_deserialize(_models.ErrorResponse, pipeline_response)
            raise HttpResponseError(response=response, model=error)

        response_headers = {}
        if response.status_code == 200:
            deserialized = response.iter_bytes()

        if response.status_code == 202:
            response_headers["Location"] = self._deserialize("str", response.headers.get("Location"))
            response_headers["x-ms-operation-id"] = self._deserialize("str", response.headers.get("x-ms-operation-id"))
            response_headers["Retry-After"] = self._deserialize("int", response.headers.get("Retry-After"))

            deserialized = response.iter_bytes()

        if cls:
            return cls(pipeline_response, deserialized, response_headers)  # type: ignore

        return deserialized  # type: ignore

    @overload
    def begin_remove_all_sharing_links(
        self,
        remove_all_sharing_links_request: _models.RemoveAllSharingLinksRequest,
        *,
        content_type: str = "application/json",
        **kwargs: Any,
    ) -> LROPoller[None]:
        """Deletes all organization sharing links for all Fabric items in the tenant. This action cannot
        be undone.

        ..

           [!NOTE]
           This API is part of a Preview release and is provided for evaluation and development
        purposes only. It may change based on feedback and is not recommended for production use.


        This API supports `long running operations (LRO)
        </rest/api/fabric/articles/long-running-operation>`_.

        Use `LinksSharedToWholeOrganization
        <https://learn.microsoft.com/en-us/rest/api/power-bi/admin>`_ PowerBI Admin REST API to get
        Power BI Reports shared via organizational sharing links.

        Permissions
        -----------

        The caller must be a Fabric administrator.

        Required Delegated Scopes
        -------------------------

        Tenant.ReadWrite.All

        Limitations
        -----------


        * Maximum 10 requests per minute.
        * Only Power BI Reports are supported.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param remove_all_sharing_links_request: Type of sharing links to be removed. Required.
        :type remove_all_sharing_links_request:
         ~microsoft.fabric.api.admin.models.RemoveAllSharingLinksRequest
        :keyword content_type: Body Parameter content-type. Content type parameter for JSON body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: An instance of LROPoller that returns None
        :rtype: ~azure.core.polling.LROPoller[None]
        :raises ~azure.core.exceptions.HttpResponseError:
        """

    @overload
    def begin_remove_all_sharing_links(
        self, remove_all_sharing_links_request: IO[bytes], *, content_type: str = "application/json", **kwargs: Any
    ) -> LROPoller[None]:
        """Deletes all organization sharing links for all Fabric items in the tenant. This action cannot
        be undone.

        ..

           [!NOTE]
           This API is part of a Preview release and is provided for evaluation and development
        purposes only. It may change based on feedback and is not recommended for production use.


        This API supports `long running operations (LRO)
        </rest/api/fabric/articles/long-running-operation>`_.

        Use `LinksSharedToWholeOrganization
        <https://learn.microsoft.com/en-us/rest/api/power-bi/admin>`_ PowerBI Admin REST API to get
        Power BI Reports shared via organizational sharing links.

        Permissions
        -----------

        The caller must be a Fabric administrator.

        Required Delegated Scopes
        -------------------------

        Tenant.ReadWrite.All

        Limitations
        -----------


        * Maximum 10 requests per minute.
        * Only Power BI Reports are supported.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param remove_all_sharing_links_request: Type of sharing links to be removed. Required.
        :type remove_all_sharing_links_request: IO[bytes]
        :keyword content_type: Body Parameter content-type. Content type parameter for binary body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: An instance of LROPoller that returns None
        :rtype: ~azure.core.polling.LROPoller[None]
        :raises ~azure.core.exceptions.HttpResponseError:
        """

    @distributed_trace
    def begin_remove_all_sharing_links(
        self, remove_all_sharing_links_request: Union[_models.RemoveAllSharingLinksRequest, IO[bytes]], **kwargs: Any
    ) -> LROPoller[None]:
        """Deletes all organization sharing links for all Fabric items in the tenant. This action cannot
        be undone.

        ..

           [!NOTE]
           This API is part of a Preview release and is provided for evaluation and development
        purposes only. It may change based on feedback and is not recommended for production use.


        This API supports `long running operations (LRO)
        </rest/api/fabric/articles/long-running-operation>`_.

        Use `LinksSharedToWholeOrganization
        <https://learn.microsoft.com/en-us/rest/api/power-bi/admin>`_ PowerBI Admin REST API to get
        Power BI Reports shared via organizational sharing links.

        Permissions
        -----------

        The caller must be a Fabric administrator.

        Required Delegated Scopes
        -------------------------

        Tenant.ReadWrite.All

        Limitations
        -----------


        * Maximum 10 requests per minute.
        * Only Power BI Reports are supported.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param remove_all_sharing_links_request: Type of sharing links to be removed. Is either a
         RemoveAllSharingLinksRequest type or a IO[bytes] type. Required.
        :type remove_all_sharing_links_request:
         ~microsoft.fabric.api.admin.models.RemoveAllSharingLinksRequest or IO[bytes]
        :return: An instance of LROPoller that returns None
        :rtype: ~azure.core.polling.LROPoller[None]
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
        _params = kwargs.pop("params", {}) or {}

        content_type: Optional[str] = kwargs.pop("content_type", _headers.pop("Content-Type", None))
        cls: ClsType[None] = kwargs.pop("cls", None)
        polling: Union[bool, PollingMethod] = kwargs.pop("polling", True)
        lro_delay = kwargs.pop("polling_interval", self._config.polling_interval)
        cont_token: Optional[str] = kwargs.pop("continuation_token", None)
        if cont_token is None:
            raw_result = self._remove_all_sharing_links_initial(
                remove_all_sharing_links_request=remove_all_sharing_links_request,
                content_type=content_type,
                cls=lambda x, y, z: x,
                headers=_headers,
                params=_params,
                **kwargs,
            )
            raw_result.http_response.read()  # type: ignore
        kwargs.pop("error_map", None)

        def get_long_running_output(pipeline_response):  # pylint: disable=inconsistent-return-statements
            if cls:
                return cls(pipeline_response, None, {})  # type: ignore

        if polling is True:
            polling_method: PollingMethod = cast(PollingMethod, LROBasePolling(lro_delay, **kwargs))
        elif polling is False:
            polling_method = cast(PollingMethod, NoPolling())
        else:
            polling_method = polling
        if cont_token:
            return LROPoller[None].from_continuation_token(
                polling_method=polling_method,
                continuation_token=cont_token,
                client=self._client,
                deserialization_callback=get_long_running_output,
            )
        return LROPoller[None](self._client, raw_result, get_long_running_output, polling_method)  # type: ignore

    def _bulk_remove_sharing_links_initial(
        self, bulk_remove_sharing_links_request: Union[_models.BulkRemoveSharingLinksRequest, IO[bytes]], **kwargs: Any
    ) -> Iterator[bytes]:
        error_map: MutableMapping[int, Type[HttpResponseError]] = {
            401: ClientAuthenticationError,
            404: ResourceNotFoundError,
            409: ResourceExistsError,
            304: ResourceNotModifiedError,
        }
        error_map.update(kwargs.pop("error_map", {}) or {})

        _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
        _params = kwargs.pop("params", {}) or {}

        content_type: Optional[str] = kwargs.pop("content_type", _headers.pop("Content-Type", None))
        cls: ClsType[Iterator[bytes]] = kwargs.pop("cls", None)

        content_type = content_type or "application/json"
        _json = None
        _content = None
        if isinstance(bulk_remove_sharing_links_request, (IOBase, bytes)):
            _content = bulk_remove_sharing_links_request
        else:
            _json = self._serialize.body(bulk_remove_sharing_links_request, "BulkRemoveSharingLinksRequest")

        _request = build_sharing_links_bulk_remove_sharing_links_request(
            content_type=content_type,
            json=_json,
            content=_content,
            headers=_headers,
            params=_params,
        )
        _request.url = self._client.format_url(_request.url)

        _stream = True
        pipeline_response: PipelineResponse = self._client._pipeline.run(  # pylint: disable=protected-access
            _request, stream=_stream, **kwargs
        )

        response = pipeline_response.http_response

        if response.status_code not in [200, 202]:
            response.read()  # Load the body in memory and close the socket
            map_error(status_code=response.status_code, response=response, error_map=error_map)
            error = self._deserialize.failsafe_deserialize(_models.ErrorResponse, pipeline_response)
            raise HttpResponseError(response=response, model=error)

        response_headers = {}
        if response.status_code == 200:
            deserialized = response.iter_bytes()

        if response.status_code == 202:
            response_headers["Location"] = self._deserialize("str", response.headers.get("Location"))
            response_headers["x-ms-operation-id"] = self._deserialize("str", response.headers.get("x-ms-operation-id"))
            response_headers["Retry-After"] = self._deserialize("int", response.headers.get("Retry-After"))

            deserialized = response.iter_bytes()

        if cls:
            return cls(pipeline_response, deserialized, response_headers)  # type: ignore

        return deserialized  # type: ignore

    @overload
    def begin_bulk_remove_sharing_links(
        self,
        bulk_remove_sharing_links_request: _models.BulkRemoveSharingLinksRequest,
        *,
        content_type: str = "application/json",
        **kwargs: Any,
    ) -> LROPoller[_models.BulkRemoveSharingLinksResponse]:
        """Deletes all organization sharing links for the specified Fabric items. This action cannot be
        undone.

        ..

           [!NOTE]
           This API is part of a Preview release and is provided for evaluation and development
        purposes only. It may change based on feedback and is not recommended for production use.


        This API supports `long running operations (LRO)
        </rest/api/fabric/articles/long-running-operation>`_.

        Use `LinksSharedToWholeOrganization
        <https://learn.microsoft.com/en-us/rest/api/power-bi/admin>`_ PowerBI Admin REST API to get
        Power BI Reports shared via organizational sharing links.

        Permissions
        -----------

        The caller must be a Fabric administrator.

        Required Delegated Scopes
        -------------------------

        Tenant.ReadWrite.All

        Limitations
        -----------


        * Maximum 10 requests per minute.
        * Each request can delete organization sharing links for up to 500 Fabric items.
        * Only Power BI Reports are supported.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param bulk_remove_sharing_links_request: A list of items. Required.
        :type bulk_remove_sharing_links_request:
         ~microsoft.fabric.api.admin.models.BulkRemoveSharingLinksRequest
        :keyword content_type: Body Parameter content-type. Content type parameter for JSON body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: An instance of LROPoller that returns BulkRemoveSharingLinksResponse
        :rtype:
         ~azure.core.polling.LROPoller[~microsoft.fabric.api.admin.models.BulkRemoveSharingLinksResponse]
        :raises ~azure.core.exceptions.HttpResponseError:
        """

    @overload
    def begin_bulk_remove_sharing_links(
        self, bulk_remove_sharing_links_request: IO[bytes], *, content_type: str = "application/json", **kwargs: Any
    ) -> LROPoller[_models.BulkRemoveSharingLinksResponse]:
        """Deletes all organization sharing links for the specified Fabric items. This action cannot be
        undone.

        ..

           [!NOTE]
           This API is part of a Preview release and is provided for evaluation and development
        purposes only. It may change based on feedback and is not recommended for production use.


        This API supports `long running operations (LRO)
        </rest/api/fabric/articles/long-running-operation>`_.

        Use `LinksSharedToWholeOrganization
        <https://learn.microsoft.com/en-us/rest/api/power-bi/admin>`_ PowerBI Admin REST API to get
        Power BI Reports shared via organizational sharing links.

        Permissions
        -----------

        The caller must be a Fabric administrator.

        Required Delegated Scopes
        -------------------------

        Tenant.ReadWrite.All

        Limitations
        -----------


        * Maximum 10 requests per minute.
        * Each request can delete organization sharing links for up to 500 Fabric items.
        * Only Power BI Reports are supported.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param bulk_remove_sharing_links_request: A list of items. Required.
        :type bulk_remove_sharing_links_request: IO[bytes]
        :keyword content_type: Body Parameter content-type. Content type parameter for binary body.
         Default value is "application/json".
        :paramtype content_type: str
        :return: An instance of LROPoller that returns BulkRemoveSharingLinksResponse
        :rtype:
         ~azure.core.polling.LROPoller[~microsoft.fabric.api.admin.models.BulkRemoveSharingLinksResponse]
        :raises ~azure.core.exceptions.HttpResponseError:
        """

    @distributed_trace
    def begin_bulk_remove_sharing_links(
        self, bulk_remove_sharing_links_request: Union[_models.BulkRemoveSharingLinksRequest, IO[bytes]], **kwargs: Any
    ) -> LROPoller[_models.BulkRemoveSharingLinksResponse]:
        """Deletes all organization sharing links for the specified Fabric items. This action cannot be
        undone.

        ..

           [!NOTE]
           This API is part of a Preview release and is provided for evaluation and development
        purposes only. It may change based on feedback and is not recommended for production use.


        This API supports `long running operations (LRO)
        </rest/api/fabric/articles/long-running-operation>`_.

        Use `LinksSharedToWholeOrganization
        <https://learn.microsoft.com/en-us/rest/api/power-bi/admin>`_ PowerBI Admin REST API to get
        Power BI Reports shared via organizational sharing links.

        Permissions
        -----------

        The caller must be a Fabric administrator.

        Required Delegated Scopes
        -------------------------

        Tenant.ReadWrite.All

        Limitations
        -----------


        * Maximum 10 requests per minute.
        * Each request can delete organization sharing links for up to 500 Fabric items.
        * Only Power BI Reports are supported.

        Microsoft Entra supported identities
        ------------------------------------

        This API supports the Microsoft `identities </rest/api/fabric/articles/identity-support>`_
        listed in this section.

        .. list-table::
           :header-rows: 1

           * - Identity
             - Support
           * - User
             - Yes
           * - `Service principal
        </entra/identity-platform/app-objects-and-service-principals#service-principal-object>`_ and
        `Managed identities </entra/identity/managed-identities-azure-resources/overview>`_
             - Yes


        Interface
        ---------.

        :param bulk_remove_sharing_links_request: A list of items. Is either a
         BulkRemoveSharingLinksRequest type or a IO[bytes] type. Required.
        :type bulk_remove_sharing_links_request:
         ~microsoft.fabric.api.admin.models.BulkRemoveSharingLinksRequest or IO[bytes]
        :return: An instance of LROPoller that returns BulkRemoveSharingLinksResponse
        :rtype:
         ~azure.core.polling.LROPoller[~microsoft.fabric.api.admin.models.BulkRemoveSharingLinksResponse]
        :raises ~azure.core.exceptions.HttpResponseError:
        """
        _headers = case_insensitive_dict(kwargs.pop("headers", {}) or {})
        _params = kwargs.pop("params", {}) or {}

        content_type: Optional[str] = kwargs.pop("content_type", _headers.pop("Content-Type", None))
        cls: ClsType[_models.BulkRemoveSharingLinksResponse] = kwargs.pop("cls", None)
        polling: Union[bool, PollingMethod] = kwargs.pop("polling", True)
        lro_delay = kwargs.pop("polling_interval", self._config.polling_interval)
        cont_token: Optional[str] = kwargs.pop("continuation_token", None)
        if cont_token is None:
            raw_result = self._bulk_remove_sharing_links_initial(
                bulk_remove_sharing_links_request=bulk_remove_sharing_links_request,
                content_type=content_type,
                cls=lambda x, y, z: x,
                headers=_headers,
                params=_params,
                **kwargs,
            )
            raw_result.http_response.read()  # type: ignore
        kwargs.pop("error_map", None)

        def get_long_running_output(pipeline_response):
            deserialized = self._deserialize("BulkRemoveSharingLinksResponse", pipeline_response.http_response)
            if cls:
                return cls(pipeline_response, deserialized, {})  # type: ignore
            return deserialized

        if polling is True:
            polling_method: PollingMethod = cast(PollingMethod, LROBasePolling(lro_delay, **kwargs))
        elif polling is False:
            polling_method = cast(PollingMethod, NoPolling())
        else:
            polling_method = polling
        if cont_token:
            return LROPoller[_models.BulkRemoveSharingLinksResponse].from_continuation_token(
                polling_method=polling_method,
                continuation_token=cont_token,
                client=self._client,
                deserialization_callback=get_long_running_output,
            )
        return LROPoller[_models.BulkRemoveSharingLinksResponse](
            self._client, raw_result, get_long_running_output, polling_method  # type: ignore
        )
