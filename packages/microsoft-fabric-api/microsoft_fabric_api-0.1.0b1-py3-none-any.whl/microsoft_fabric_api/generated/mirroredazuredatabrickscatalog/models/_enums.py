# coding=utf-8
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.10.3, generator: @autorest/python@6.15.0)
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from enum import Enum
from azure.core import CaseInsensitiveEnumMeta


class AutoSync(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Enable or disable automatic synchronization for the catalog. When enabled, all metadata
    changes, including schemas and tables, are automatically synchronized every 15 minutes. When
    disabled, users must manually refresh the metadata. This setting can only be modified during an
    update request. Additional ``autoSync`` types may be added over time.
    """

    ENABLED = "Enabled"
    """Automatic synchronization is enabled."""
    DISABLED = "Disabled"
    """Automatic synchronization is disabled."""


class CatalogType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The type of the catalog. Additional CatalogType types may be added over time."""

    MANAGED_CATALOG = "MANAGED_CATALOG"
    """Managed Catalog"""


class DataSourceFormat(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The data source format of the table. Additional DataSourceFormat types may be added over time."""

    DELTA = "DELTA"
    """Delta format"""


class ItemType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The type of the item. Additional item types may be added over time."""

    DASHBOARD = "Dashboard"
    """PowerBI dashboard."""
    REPORT = "Report"
    """PowerBI report."""
    SEMANTIC_MODEL = "SemanticModel"
    """PowerBI semantic model."""
    PAGINATED_REPORT = "PaginatedReport"
    """PowerBI paginated report."""
    DATAMART = "Datamart"
    """PowerBI datamart."""
    LAKEHOUSE = "Lakehouse"
    """A lakehouse."""
    EVENTHOUSE = "Eventhouse"
    """An eventhouse."""
    ENVIRONMENT = "Environment"
    """An environment."""
    KQL_DATABASE = "KQLDatabase"
    """A KQL database."""
    KQL_QUERYSET = "KQLQueryset"
    """A KQL queryset."""
    KQL_DASHBOARD = "KQLDashboard"
    """A KQL dashboard."""
    DATA_PIPELINE = "DataPipeline"
    """A data pipeline."""
    NOTEBOOK = "Notebook"
    """A notebook."""
    SPARK_JOB_DEFINITION = "SparkJobDefinition"
    """A spark job definition."""
    ML_EXPERIMENT = "MLExperiment"
    """A machine learning experiment."""
    ML_MODEL = "MLModel"
    """A machine learning model."""
    WAREHOUSE = "Warehouse"
    """A warehouse."""
    EVENTSTREAM = "Eventstream"
    """An eventstream."""
    SQL_ENDPOINT = "SQLEndpoint"
    """An SQL endpoint."""
    MIRRORED_WAREHOUSE = "MirroredWarehouse"
    """A mirrored warehouse."""
    MIRRORED_DATABASE = "MirroredDatabase"
    """A mirrored database."""
    REFLEX = "Reflex"
    """A Reflex."""
    GRAPH_QL_API = "GraphQLApi"
    """An API for GraphQL item."""
    MOUNTED_DATA_FACTORY = "MountedDataFactory"
    """A MountedDataFactory."""
    APACHE_AIRFLOW_JOB = "ApacheAirflowJob"
    """An ApacheAirflowJob."""
    SQL_DATABASE = "SQLDatabase"
    """A SQLDatabase."""
    COPY_JOB = "CopyJob"
    """A Copy job."""
    VARIABLE_LIBRARY = "VariableLibrary"
    """A VariableLibrary."""
    MIRRORED_AZURE_DATABRICKS_CATALOG = "MirroredAzureDatabricksCatalog"
    """A mirrored azure databricks catalog."""
    DATAFLOW = "Dataflow"
    """A Dataflow."""
    WAREHOUSE_SNAPSHOT = "WarehouseSnapshot"
    """A Warehouse snapshot."""
    DIGITAL_TWIN_BUILDER = "DigitalTwinBuilder"
    """A DigitalTwinBuilder."""
    DIGITAL_TWIN_BUILDER_FLOW = "DigitalTwinBuilderFlow"
    """A Digital Twin Builder Flow."""
    ANOMALY_DETECTOR = "AnomalyDetector"
    """An Anomaly Detector."""
    MAP = "Map"
    """A Map."""
    USER_DATA_FUNCTION = "UserDataFunction"
    """A User Data Function."""


class MirroringModes(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Mode for mirroring. Additional mirroringMode may be added over time."""

    FULL = "Full"
    """Mirror everything inside a catalog except specifically excluded schemas and tables. Everything
    is synced by default if no exclusion is provided."""
    PARTIAL = "Partial"
    """Only selected schemas and tables are mirrored. Nothing is synced by default."""


class MirrorStatus(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """Status of mirroring. Additional status may be added over time."""

    MIRRORED = "Mirrored"
    """Indicates that the entire catalog has been successfully mirrored, ensuring that all schemas and
    tables from the source are fully synchronized with the MirroredAzureDatabricksCatalog item."""
    NOT_MIRRORED = "NotMirrored"
    """Indicates that the catalog has not been mirrored yet. No schemas or tables are synchronized by
    default unless explicitly configured."""


class PayloadType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The type of the definition part payload. Additional payload types may be added over time."""

    INLINE_BASE64 = "InlineBase64"
    """Inline Base 64."""


class Status(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The sync status. Additional status may be added over time."""

    NOT_STARTED = "NotStarted"
    """The catalog mirroring is not started yet"""
    IN_PROGRESS = "InProgress"
    """The mirroring process is currently in progress."""
    SUCCESS = "Success"
    """The catalog has been successfully mirrored."""
    FAILED = "Failed"
    """The mirroring process has failed."""


class TableType(str, Enum, metaclass=CaseInsensitiveEnumMeta):
    """The type of the table. Additional TableType types may be added over time."""

    MANAGED = "MANAGED"
    """Managed Table"""
    EXTERNAL = "EXTERNAL"
    """External Table"""
