# coding=utf-8
# pylint: disable=too-many-lines
# --------------------------------------------------------------------------
# Code generated by Microsoft (R) AutoRest Code Generator (autorest: 3.10.3, generator: @autorest/python@6.15.0)
# Changes may cause incorrect behavior and will be lost if the code is regenerated.
# --------------------------------------------------------------------------

from typing import Any, List, Optional, TYPE_CHECKING, Union

from .. import _serialization

if TYPE_CHECKING:
    # pylint: disable=unused-import,ungrouped-imports
    from .. import models as _models


class CreateDigitalTwinBuilderFlowRequest(_serialization.Model):
    """Create Digital Twin Builder Flow request payload.

    All required parameters must be populated in order to send to server.

    :ivar display_name: The Digital Twin Builder Flow display name. The display name must follow
     naming rules according to item type. Required.
    :vartype display_name: str
    :ivar description: The Digital Twin Builder Flow description. Maximum length is 256 characters.
    :vartype description: str
    :ivar creation_payload: The creation payload. Use ``definition`` or ``creationPayload``. You
     can't use both at the same time.
    :vartype creation_payload:
     ~microsoft.fabric.api.digitaltwinbuilderflow.models.DigitalTwinBuilderFlowCreationPayload
    :ivar definition: The Digital Twin Builder Flow public definition.
    :vartype definition:
     ~microsoft.fabric.api.digitaltwinbuilderflow.models.DigitalTwinBuilderFlowPublicDefinition
    """

    _validation = {
        "display_name": {"required": True},
    }

    _attribute_map = {
        "display_name": {"key": "displayName", "type": "str"},
        "description": {"key": "description", "type": "str"},
        "creation_payload": {"key": "creationPayload", "type": "DigitalTwinBuilderFlowCreationPayload"},
        "definition": {"key": "definition", "type": "DigitalTwinBuilderFlowPublicDefinition"},
    }

    def __init__(
        self,
        *,
        display_name: str,
        description: Optional[str] = None,
        creation_payload: Optional["_models.DigitalTwinBuilderFlowCreationPayload"] = None,
        definition: Optional["_models.DigitalTwinBuilderFlowPublicDefinition"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword display_name: The Digital Twin Builder Flow display name. The display name must follow
         naming rules according to item type. Required.
        :paramtype display_name: str
        :keyword description: The Digital Twin Builder Flow description. Maximum length is 256
         characters.
        :paramtype description: str
        :keyword creation_payload: The creation payload. Use ``definition`` or ``creationPayload``. You
         can't use both at the same time.
        :paramtype creation_payload:
         ~microsoft.fabric.api.digitaltwinbuilderflow.models.DigitalTwinBuilderFlowCreationPayload
        :keyword definition: The Digital Twin Builder Flow public definition.
        :paramtype definition:
         ~microsoft.fabric.api.digitaltwinbuilderflow.models.DigitalTwinBuilderFlowPublicDefinition
        """
        super().__init__(**kwargs)
        self.display_name = display_name
        self.description = description
        self.creation_payload = creation_payload
        self.definition = definition


class Item(_serialization.Model):
    """An item object.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: The item ID.
    :vartype id: str
    :ivar display_name: The item display name.
    :vartype display_name: str
    :ivar description: The item description.
    :vartype description: str
    :ivar type: The item type. Required. Known values are: "Dashboard", "Report", "SemanticModel",
     "PaginatedReport", "Datamart", "Lakehouse", "Eventhouse", "Environment", "KQLDatabase",
     "KQLQueryset", "KQLDashboard", "DataPipeline", "Notebook", "SparkJobDefinition",
     "MLExperiment", "MLModel", "Warehouse", "Eventstream", "SQLEndpoint", "MirroredWarehouse",
     "MirroredDatabase", "Reflex", "GraphQLApi", "MountedDataFactory", "ApacheAirflowJob",
     "SQLDatabase", "CopyJob", "VariableLibrary", "MirroredAzureDatabricksCatalog", "Dataflow",
     "WarehouseSnapshot", "DigitalTwinBuilder", "DigitalTwinBuilderFlow", "AnomalyDetector", "Map",
     and "UserDataFunction".
    :vartype type: str or ~microsoft.fabric.api.digitaltwinbuilderflow.models.ItemType
    :ivar workspace_id: The workspace ID.
    :vartype workspace_id: str
    :ivar folder_id: The folder ID.
    :vartype folder_id: str
    :ivar tags: List of applied tags.
    :vartype tags: list[~microsoft.fabric.api.digitaltwinbuilderflow.models.ItemTag]
    """

    _validation = {
        "id": {"readonly": True},
        "type": {"required": True},
        "workspace_id": {"readonly": True},
        "folder_id": {"readonly": True},
        "tags": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "display_name": {"key": "displayName", "type": "str"},
        "description": {"key": "description", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "workspace_id": {"key": "workspaceId", "type": "str"},
        "folder_id": {"key": "folderId", "type": "str"},
        "tags": {"key": "tags", "type": "[ItemTag]"},
    }

    def __init__(
        self,
        *,
        type: Union[str, "_models.ItemType"],
        display_name: Optional[str] = None,
        description: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword display_name: The item display name.
        :paramtype display_name: str
        :keyword description: The item description.
        :paramtype description: str
        :keyword type: The item type. Required. Known values are: "Dashboard", "Report",
         "SemanticModel", "PaginatedReport", "Datamart", "Lakehouse", "Eventhouse", "Environment",
         "KQLDatabase", "KQLQueryset", "KQLDashboard", "DataPipeline", "Notebook", "SparkJobDefinition",
         "MLExperiment", "MLModel", "Warehouse", "Eventstream", "SQLEndpoint", "MirroredWarehouse",
         "MirroredDatabase", "Reflex", "GraphQLApi", "MountedDataFactory", "ApacheAirflowJob",
         "SQLDatabase", "CopyJob", "VariableLibrary", "MirroredAzureDatabricksCatalog", "Dataflow",
         "WarehouseSnapshot", "DigitalTwinBuilder", "DigitalTwinBuilderFlow", "AnomalyDetector", "Map",
         and "UserDataFunction".
        :paramtype type: str or ~microsoft.fabric.api.digitaltwinbuilderflow.models.ItemType
        """
        super().__init__(**kwargs)
        self.id = None
        self.display_name = display_name
        self.description = description
        self.type = type
        self.workspace_id = None
        self.folder_id = None
        self.tags = None


class DigitalTwinBuilderFlow(Item):
    """A Digital Twin Builder Flow object.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar id: The item ID.
    :vartype id: str
    :ivar display_name: The item display name.
    :vartype display_name: str
    :ivar description: The item description.
    :vartype description: str
    :ivar type: The item type. Required. Known values are: "Dashboard", "Report", "SemanticModel",
     "PaginatedReport", "Datamart", "Lakehouse", "Eventhouse", "Environment", "KQLDatabase",
     "KQLQueryset", "KQLDashboard", "DataPipeline", "Notebook", "SparkJobDefinition",
     "MLExperiment", "MLModel", "Warehouse", "Eventstream", "SQLEndpoint", "MirroredWarehouse",
     "MirroredDatabase", "Reflex", "GraphQLApi", "MountedDataFactory", "ApacheAirflowJob",
     "SQLDatabase", "CopyJob", "VariableLibrary", "MirroredAzureDatabricksCatalog", "Dataflow",
     "WarehouseSnapshot", "DigitalTwinBuilder", "DigitalTwinBuilderFlow", "AnomalyDetector", "Map",
     and "UserDataFunction".
    :vartype type: str or ~microsoft.fabric.api.digitaltwinbuilderflow.models.ItemType
    :ivar workspace_id: The workspace ID.
    :vartype workspace_id: str
    :ivar folder_id: The folder ID.
    :vartype folder_id: str
    :ivar tags: List of applied tags.
    :vartype tags: list[~microsoft.fabric.api.digitaltwinbuilderflow.models.ItemTag]
    :ivar properties: The Digital Twin Builder Flow properties.
    :vartype properties:
     ~microsoft.fabric.api.digitaltwinbuilderflow.models.DigitalTwinBuilderFlowProperties
    """

    _validation = {
        "id": {"readonly": True},
        "type": {"required": True},
        "workspace_id": {"readonly": True},
        "folder_id": {"readonly": True},
        "tags": {"readonly": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "display_name": {"key": "displayName", "type": "str"},
        "description": {"key": "description", "type": "str"},
        "type": {"key": "type", "type": "str"},
        "workspace_id": {"key": "workspaceId", "type": "str"},
        "folder_id": {"key": "folderId", "type": "str"},
        "tags": {"key": "tags", "type": "[ItemTag]"},
        "properties": {"key": "properties", "type": "DigitalTwinBuilderFlowProperties"},
    }

    def __init__(
        self,
        *,
        type: Union[str, "_models.ItemType"],
        display_name: Optional[str] = None,
        description: Optional[str] = None,
        properties: Optional["_models.DigitalTwinBuilderFlowProperties"] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword display_name: The item display name.
        :paramtype display_name: str
        :keyword description: The item description.
        :paramtype description: str
        :keyword type: The item type. Required. Known values are: "Dashboard", "Report",
         "SemanticModel", "PaginatedReport", "Datamart", "Lakehouse", "Eventhouse", "Environment",
         "KQLDatabase", "KQLQueryset", "KQLDashboard", "DataPipeline", "Notebook", "SparkJobDefinition",
         "MLExperiment", "MLModel", "Warehouse", "Eventstream", "SQLEndpoint", "MirroredWarehouse",
         "MirroredDatabase", "Reflex", "GraphQLApi", "MountedDataFactory", "ApacheAirflowJob",
         "SQLDatabase", "CopyJob", "VariableLibrary", "MirroredAzureDatabricksCatalog", "Dataflow",
         "WarehouseSnapshot", "DigitalTwinBuilder", "DigitalTwinBuilderFlow", "AnomalyDetector", "Map",
         and "UserDataFunction".
        :paramtype type: str or ~microsoft.fabric.api.digitaltwinbuilderflow.models.ItemType
        :keyword properties: The Digital Twin Builder Flow properties.
        :paramtype properties:
         ~microsoft.fabric.api.digitaltwinbuilderflow.models.DigitalTwinBuilderFlowProperties
        """
        super().__init__(display_name=display_name, description=description, type=type, **kwargs)
        self.properties = properties


class DigitalTwinBuilderFlowCreationPayload(_serialization.Model):
    """The Digital Twin Builder Flow creation payload.

    All required parameters must be populated in order to send to server.

    :ivar digital_twin_builder_item_reference: The Digital Twin Builder Item Reference. Required.
    :vartype digital_twin_builder_item_reference:
     ~microsoft.fabric.api.digitaltwinbuilderflow.models.ItemReference
    """

    _validation = {
        "digital_twin_builder_item_reference": {"required": True},
    }

    _attribute_map = {
        "digital_twin_builder_item_reference": {"key": "digitalTwinBuilderItemReference", "type": "ItemReference"},
    }

    def __init__(self, *, digital_twin_builder_item_reference: "_models.ItemReference", **kwargs: Any) -> None:
        """
        :keyword digital_twin_builder_item_reference: The Digital Twin Builder Item Reference.
         Required.
        :paramtype digital_twin_builder_item_reference:
         ~microsoft.fabric.api.digitaltwinbuilderflow.models.ItemReference
        """
        super().__init__(**kwargs)
        self.digital_twin_builder_item_reference = digital_twin_builder_item_reference


class DigitalTwinBuilderFlowDefinitionResponse(_serialization.Model):
    """The Digital Twin Builder Flow public definition response.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar definition: The Digital Twin Builder Flow public definition object. Refer to this
     `article
     </rest/api/fabric/articles/item-management/definitions/digital-twin-builder-flow-definition>`_
     for more details on how to craft a Digital Twin Builder Flow public definition. Required.
    :vartype definition:
     ~microsoft.fabric.api.digitaltwinbuilderflow.models.DigitalTwinBuilderFlowPublicDefinition
    """

    _validation = {
        "definition": {"required": True, "readonly": True},
    }

    _attribute_map = {
        "definition": {"key": "definition", "type": "DigitalTwinBuilderFlowPublicDefinition"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.definition = None


class DigitalTwinBuilderFlowProperties(_serialization.Model):
    """The Digital Twin Builder Flow properties.

    All required parameters must be populated in order to send to server.

    :ivar digital_twin_builder_item_reference: The Digital Twin Builder Item Reference. Required.
    :vartype digital_twin_builder_item_reference:
     ~microsoft.fabric.api.digitaltwinbuilderflow.models.ItemReference
    """

    _validation = {
        "digital_twin_builder_item_reference": {"required": True},
    }

    _attribute_map = {
        "digital_twin_builder_item_reference": {"key": "digitalTwinBuilderItemReference", "type": "ItemReference"},
    }

    def __init__(self, *, digital_twin_builder_item_reference: "_models.ItemReference", **kwargs: Any) -> None:
        """
        :keyword digital_twin_builder_item_reference: The Digital Twin Builder Item Reference.
         Required.
        :paramtype digital_twin_builder_item_reference:
         ~microsoft.fabric.api.digitaltwinbuilderflow.models.ItemReference
        """
        super().__init__(**kwargs)
        self.digital_twin_builder_item_reference = digital_twin_builder_item_reference


class DigitalTwinBuilderFlowPublicDefinition(_serialization.Model):
    """The Digital Twin Builder Flow public definition object. Refer to this `article
    </rest/api/fabric/articles/item-management/definitions/digital-twin-builder-flow-definition>`_
    for more details on how to craft a Digital Twin Builder Flow public definition.

    All required parameters must be populated in order to send to server.

    :ivar parts: A list of definition parts. Required.
    :vartype parts:
     list[~microsoft.fabric.api.digitaltwinbuilderflow.models.DigitalTwinBuilderFlowPublicDefinitionPart]
    """

    _validation = {
        "parts": {"required": True},
    }

    _attribute_map = {
        "parts": {"key": "parts", "type": "[DigitalTwinBuilderFlowPublicDefinitionPart]"},
    }

    def __init__(self, *, parts: List["_models.DigitalTwinBuilderFlowPublicDefinitionPart"], **kwargs: Any) -> None:
        """
        :keyword parts: A list of definition parts. Required.
        :paramtype parts:
         list[~microsoft.fabric.api.digitaltwinbuilderflow.models.DigitalTwinBuilderFlowPublicDefinitionPart]
        """
        super().__init__(**kwargs)
        self.parts = parts


class DigitalTwinBuilderFlowPublicDefinitionPart(_serialization.Model):  # pylint: disable=name-too-long
    """Digital Twin Builder Flow definition part object.

    :ivar path: The Digital Twin Builder Flow public definition part path.
    :vartype path: str
    :ivar payload: The Digital Twin Builder Flow public definition part payload.
    :vartype payload: str
    :ivar payload_type: The payload type. "InlineBase64"
    :vartype payload_type: str or ~microsoft.fabric.api.digitaltwinbuilderflow.models.PayloadType
    """

    _attribute_map = {
        "path": {"key": "path", "type": "str"},
        "payload": {"key": "payload", "type": "str"},
        "payload_type": {"key": "payloadType", "type": "str"},
    }

    def __init__(
        self,
        *,
        path: Optional[str] = None,
        payload: Optional[str] = None,
        payload_type: Optional[Union[str, "_models.PayloadType"]] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword path: The Digital Twin Builder Flow public definition part path.
        :paramtype path: str
        :keyword payload: The Digital Twin Builder Flow public definition part payload.
        :paramtype payload: str
        :keyword payload_type: The payload type. "InlineBase64"
        :paramtype payload_type: str or ~microsoft.fabric.api.digitaltwinbuilderflow.models.PayloadType
        """
        super().__init__(**kwargs)
        self.path = path
        self.payload = payload
        self.payload_type = payload_type


class PaginatedResponse(_serialization.Model):
    """PaginatedResponse.

    :ivar continuation_token: The token for the next result set batch. If there are no more
     records, it's removed from the response.
    :vartype continuation_token: str
    :ivar continuation_uri: The URI of the next result set batch. If there are no more records,
     it's removed from the response.
    :vartype continuation_uri: str
    """

    _attribute_map = {
        "continuation_token": {"key": "continuationToken", "type": "str"},
        "continuation_uri": {"key": "continuationUri", "type": "str"},
    }

    def __init__(
        self, *, continuation_token: Optional[str] = None, continuation_uri: Optional[str] = None, **kwargs: Any
    ) -> None:
        """
        :keyword continuation_token: The token for the next result set batch. If there are no more
         records, it's removed from the response.
        :paramtype continuation_token: str
        :keyword continuation_uri: The URI of the next result set batch. If there are no more records,
         it's removed from the response.
        :paramtype continuation_uri: str
        """
        super().__init__(**kwargs)
        self.continuation_token = continuation_token
        self.continuation_uri = continuation_uri


class DigitalTwinBuilderFlows(PaginatedResponse):
    """A list of Digital Twin Builder Flows.

    All required parameters must be populated in order to send to server.

    :ivar continuation_token: The token for the next result set batch. If there are no more
     records, it's removed from the response.
    :vartype continuation_token: str
    :ivar continuation_uri: The URI of the next result set batch. If there are no more records,
     it's removed from the response.
    :vartype continuation_uri: str
    :ivar value: A list of Digital Twin Builder Flows. Required.
    :vartype value:
     list[~microsoft.fabric.api.digitaltwinbuilderflow.models.DigitalTwinBuilderFlow]
    """

    _validation = {
        "value": {"required": True},
    }

    _attribute_map = {
        "continuation_token": {"key": "continuationToken", "type": "str"},
        "continuation_uri": {"key": "continuationUri", "type": "str"},
        "value": {"key": "value", "type": "[DigitalTwinBuilderFlow]"},
    }

    def __init__(
        self,
        *,
        value: List["_models.DigitalTwinBuilderFlow"],
        continuation_token: Optional[str] = None,
        continuation_uri: Optional[str] = None,
        **kwargs: Any
    ) -> None:
        """
        :keyword continuation_token: The token for the next result set batch. If there are no more
         records, it's removed from the response.
        :paramtype continuation_token: str
        :keyword continuation_uri: The URI of the next result set batch. If there are no more records,
         it's removed from the response.
        :paramtype continuation_uri: str
        :keyword value: A list of Digital Twin Builder Flows. Required.
        :paramtype value:
         list[~microsoft.fabric.api.digitaltwinbuilderflow.models.DigitalTwinBuilderFlow]
        """
        super().__init__(continuation_token=continuation_token, continuation_uri=continuation_uri, **kwargs)
        self.value = value


class ErrorRelatedResource(_serialization.Model):
    """The error related resource details object.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar resource_id: The resource ID that's involved in the error. Required.
    :vartype resource_id: str
    :ivar resource_type: The type of the resource that's involved in the error. Required.
    :vartype resource_type: str
    """

    _validation = {
        "resource_id": {"required": True, "readonly": True},
        "resource_type": {"required": True, "readonly": True},
    }

    _attribute_map = {
        "resource_id": {"key": "resourceId", "type": "str"},
        "resource_type": {"key": "resourceType", "type": "str"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.resource_id = None
        self.resource_type = None


class ErrorResponseDetails(_serialization.Model):
    """The error response details.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar error_code: A specific identifier that provides information about an error condition,
     allowing for standardized communication between our service and its users. Required.
    :vartype error_code: str
    :ivar message: A human readable representation of the error. Required.
    :vartype message: str
    :ivar related_resource: The error related resource details.
    :vartype related_resource:
     ~microsoft.fabric.api.digitaltwinbuilderflow.models.ErrorRelatedResource
    """

    _validation = {
        "error_code": {"required": True, "readonly": True},
        "message": {"required": True, "readonly": True},
        "related_resource": {"readonly": True},
    }

    _attribute_map = {
        "error_code": {"key": "errorCode", "type": "str"},
        "message": {"key": "message", "type": "str"},
        "related_resource": {"key": "relatedResource", "type": "ErrorRelatedResource"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.error_code = None
        self.message = None
        self.related_resource = None


class ErrorResponse(ErrorResponseDetails):
    """The error response.

    Variables are only populated by the server, and will be ignored when sending a request.

    All required parameters must be populated in order to send to server.

    :ivar error_code: A specific identifier that provides information about an error condition,
     allowing for standardized communication between our service and its users. Required.
    :vartype error_code: str
    :ivar message: A human readable representation of the error. Required.
    :vartype message: str
    :ivar related_resource: The error related resource details.
    :vartype related_resource:
     ~microsoft.fabric.api.digitaltwinbuilderflow.models.ErrorRelatedResource
    :ivar request_id: ID of the request associated with the error.
    :vartype request_id: str
    :ivar more_details: List of additional error details.
    :vartype more_details:
     list[~microsoft.fabric.api.digitaltwinbuilderflow.models.ErrorResponseDetails]
    """

    _validation = {
        "error_code": {"required": True, "readonly": True},
        "message": {"required": True, "readonly": True},
        "related_resource": {"readonly": True},
        "request_id": {"readonly": True},
        "more_details": {"readonly": True},
    }

    _attribute_map = {
        "error_code": {"key": "errorCode", "type": "str"},
        "message": {"key": "message", "type": "str"},
        "related_resource": {"key": "relatedResource", "type": "ErrorRelatedResource"},
        "request_id": {"key": "requestId", "type": "str"},
        "more_details": {"key": "moreDetails", "type": "[ErrorResponseDetails]"},
    }

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.request_id = None
        self.more_details = None


class ItemReference(_serialization.Model):
    """An item reference object.

    You probably want to use the sub-classes and not this class directly. Known sub-classes are:
    ItemReferenceById

    All required parameters must be populated in order to send to server.

    :ivar reference_type: The item reference type. Required. "ById"
    :vartype reference_type: str or
     ~microsoft.fabric.api.digitaltwinbuilderflow.models.ItemReferenceType
    """

    _validation = {
        "reference_type": {"required": True},
    }

    _attribute_map = {
        "reference_type": {"key": "referenceType", "type": "str"},
    }

    _subtype_map = {"reference_type": {"ById": "ItemReferenceById"}}

    def __init__(self, **kwargs: Any) -> None:
        """ """
        super().__init__(**kwargs)
        self.reference_type: Optional[str] = None


class ItemReferenceById(ItemReference):
    """An item reference by ID object.

    All required parameters must be populated in order to send to server.

    :ivar reference_type: The item reference type. Required. "ById"
    :vartype reference_type: str or
     ~microsoft.fabric.api.digitaltwinbuilderflow.models.ItemReferenceType
    :ivar item_id: The ID of the item. Required.
    :vartype item_id: str
    :ivar workspace_id: The workspace ID of the item. Required.
    :vartype workspace_id: str
    """

    _validation = {
        "reference_type": {"required": True},
        "item_id": {"required": True},
        "workspace_id": {"required": True},
    }

    _attribute_map = {
        "reference_type": {"key": "referenceType", "type": "str"},
        "item_id": {"key": "itemId", "type": "str"},
        "workspace_id": {"key": "workspaceId", "type": "str"},
    }

    def __init__(self, *, item_id: str, workspace_id: str, **kwargs: Any) -> None:
        """
        :keyword item_id: The ID of the item. Required.
        :paramtype item_id: str
        :keyword workspace_id: The workspace ID of the item. Required.
        :paramtype workspace_id: str
        """
        super().__init__(**kwargs)
        self.reference_type: str = "ById"
        self.item_id = item_id
        self.workspace_id = workspace_id


class ItemTag(_serialization.Model):
    """Represents a tag applied on an item.

    All required parameters must be populated in order to send to server.

    :ivar id: The tag ID. Required.
    :vartype id: str
    :ivar display_name: The name of the tag. Required.
    :vartype display_name: str
    """

    _validation = {
        "id": {"required": True},
        "display_name": {"required": True},
    }

    _attribute_map = {
        "id": {"key": "id", "type": "str"},
        "display_name": {"key": "displayName", "type": "str"},
    }

    def __init__(self, *, id: str, display_name: str, **kwargs: Any) -> None:  # pylint: disable=redefined-builtin
        """
        :keyword id: The tag ID. Required.
        :paramtype id: str
        :keyword display_name: The name of the tag. Required.
        :paramtype display_name: str
        """
        super().__init__(**kwargs)
        self.id = id
        self.display_name = display_name


class UpdateDigitalTwinBuilderFlowDefinitionRequest(_serialization.Model):  # pylint: disable=name-too-long
    """Update Digital Twin Builder Flow public definition request payload.

    All required parameters must be populated in order to send to server.

    :ivar definition: The Digital Twin Builder Flow public definition object. Refer to this
     `article
     </rest/api/fabric/articles/item-management/definitions/digital-twin-builder-flow-definition>`_
     for more details on how to craft a Digital Twin Builder Flow public definition. Required.
    :vartype definition:
     ~microsoft.fabric.api.digitaltwinbuilderflow.models.DigitalTwinBuilderFlowPublicDefinition
    """

    _validation = {
        "definition": {"required": True},
    }

    _attribute_map = {
        "definition": {"key": "definition", "type": "DigitalTwinBuilderFlowPublicDefinition"},
    }

    def __init__(self, *, definition: "_models.DigitalTwinBuilderFlowPublicDefinition", **kwargs: Any) -> None:
        """
        :keyword definition: The Digital Twin Builder Flow public definition object. Refer to this
         `article
         </rest/api/fabric/articles/item-management/definitions/digital-twin-builder-flow-definition>`_
         for more details on how to craft a Digital Twin Builder Flow public definition. Required.
        :paramtype definition:
         ~microsoft.fabric.api.digitaltwinbuilderflow.models.DigitalTwinBuilderFlowPublicDefinition
        """
        super().__init__(**kwargs)
        self.definition = definition


class UpdateDigitalTwinBuilderFlowRequest(_serialization.Model):
    """Update Digital Twin Builder Flow request.

    :ivar display_name: The Digital Twin Builder Flow display name. The display name must follow
     naming rules according to item type.
    :vartype display_name: str
    :ivar description: The Digital Twin Builder Flow description. Maximum length is 256 characters.
    :vartype description: str
    """

    _attribute_map = {
        "display_name": {"key": "displayName", "type": "str"},
        "description": {"key": "description", "type": "str"},
    }

    def __init__(self, *, display_name: Optional[str] = None, description: Optional[str] = None, **kwargs: Any) -> None:
        """
        :keyword display_name: The Digital Twin Builder Flow display name. The display name must follow
         naming rules according to item type.
        :paramtype display_name: str
        :keyword description: The Digital Twin Builder Flow description. Maximum length is 256
         characters.
        :paramtype description: str
        """
        super().__init__(**kwargs)
        self.display_name = display_name
        self.description = description
