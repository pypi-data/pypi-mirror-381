[build-system]
requires = ["setuptools>=61.0", "setuptools-scm>=6.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "anysecret-io"
dynamic = ["version"]
description = "Universal secret manager for applications and CI/CD tools with CLI interface and multi-cloud support"
authors = [{name = "AnySecret.io Team", email = "hello@anysecret.io"}]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Systems Administration",
    "Topic :: Security",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3 :: Only",
    "Framework :: AsyncIO",
    "Framework :: FastAPI",
]
keywords = ["secrets", "secret-management", "cloud", "aws", "gcp", "azure", "vault", "fastapi", "async"]
dependencies = [
    "cryptography>=3.4.0",
    "pydantic>=2.0.0", 
    "typer>=0.9.0",
    "rich>=13.0.0",
    "aiofiles>=22.0.0",
    "PyYAML>=6.0"
]

[project.optional-dependencies]
gcp = [
    "google-cloud-secret-manager>=2.16.0",
    "google-auth>=2.16.0",
]
aws = [
    "boto3>=1.26.0",
    "botocore>=1.29.0",
]  
azure = [
    "azure-keyvault-secrets>=4.7.0",
    "azure-identity>=1.12.0",
    "azure-appconfiguration>=1.4.0",
]
k8s = [
    "kubernetes>=25.0.0",
]
vault = [
    "hvac>=1.0.0",
]
all = [
    "google-cloud-secret-manager>=2.16.0",
    "google-auth>=2.16.0",
    "boto3>=1.26.0", 
    "botocore>=1.29.0",
    "azure-keyvault-secrets>=4.7.0",
    "azure-identity>=1.12.0",
    "azure-appconfiguration>=1.4.0",
    "kubernetes>=25.0.0",
    "hvac>=1.0.0",
]
dev = [
    "pytest>=7.0.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.0.0",
    "black>=22.0.0",
    "isort>=5.10.0",
    "flake8>=5.0.0",
    "mypy>=1.0.0",
    "pre-commit>=2.20.0",
    "twine>=4.0.0",
    "build>=0.8.0",
]

[project.urls]
Homepage = "https://anysecret.io/"
Documentation = "https://github.com/anysecret-io/anysecret-lib/docs/quickstart.md"
Repository = "https://github.com/anysecret-io/anysecret-lib"
"Bug Tracker" = "https://github.com/anysecret-io/anysecret-lib/issues"

[project.scripts]
anysecret = "anysecret.cli.main:app"

[tool.setuptools.packages.find]
where = ["."]
include = ["anysecret*"]

[tool.setuptools_scm]
fallback_version = "1.1.0"
local_scheme = "no-local-version"

[tool.black]
line-length = 100
target-version = ['py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "-v",
]
markers = [
    "asyncio: marks tests as async",
    "unit: marks tests as unit tests", 
    "integration: marks tests as integration tests",
    "slow: marks tests as slow running",
]
asyncio_mode = "auto"