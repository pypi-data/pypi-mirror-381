name: Build and Publish to PyPI

on:
  push:
    tags:
      - 'v*'  # Triggers on version tags like v1.0.0, v2.1.3, etc.
  
  # Manual trigger with options
  workflow_dispatch:
    inputs:
      version_tag:
        description: 'Version tag to release (e.g., v1.0.0)'
        required: true
        type: string
      publish_to_pypi:
        description: 'Publish to PyPI (uncheck for TestPyPI only)'
        required: false
        type: boolean
        default: true
      create_github_release:
        description: 'Create GitHub release'
        required: false
        type: boolean
        default: true

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -e ".[dev,all]"
        pip install pytest pytest-asyncio

    - name: Run tests
      run: |
        pytest -v tests/

  build-and-publish:
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: write
      id-token: write
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"

    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine

    - name: Build package
      run: |
        python -m build

    - name: Check package
      run: |
        twine check dist/*

    - name: Publish to TestPyPI
      if: |
        (startsWith(github.ref, 'refs/tags/v') && contains(github.ref, 'rc')) ||
        (github.event_name == 'workflow_dispatch' && !inputs.publish_to_pypi)
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.TEST_PYPI_API_TOKEN }}
      run: |
        twine upload --repository testpypi dist/*

    - name: Publish to PyPI  
      if: |
        (startsWith(github.ref, 'refs/tags/v') && !contains(github.ref, 'rc')) ||
        (github.event_name == 'workflow_dispatch' && inputs.publish_to_pypi)
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
      run: |
        twine upload dist/*

    - name: Set version for release
      id: version
      run: |
        if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
          echo "version=${{ inputs.version_tag }}" >> $GITHUB_OUTPUT
        else
          echo "version=${{ github.ref_name }}" >> $GITHUB_OUTPUT
        fi

    - name: Create GitHub Release
      if: |
        startsWith(github.ref, 'refs/tags/v') ||
        (github.event_name == 'workflow_dispatch' && inputs.create_github_release)
      uses: softprops/action-gh-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ steps.version.outputs.version }}
        name: Release ${{ steps.version.outputs.version }}
        body: |
          ## Changes in ${{ steps.version.outputs.version }}
          
          See [CHANGELOG.md](https://github.com/anysecret-io/anysecret-lib/blob/main/CHANGELOG.md) for full details.
          
          ## Installation
          
          ```bash
          pip install anysecret-io
          ```
          
          ## PyPI Package
          
          https://pypi.org/project/anysecret-io/
        draft: false
        prerelease: ${{ contains(steps.version.outputs.version, 'rc') || contains(steps.version.outputs.version, 'alpha') || contains(steps.version.outputs.version, 'beta') }}