[build-system]
requires = ["setuptools>=61.0"]
build-backend = "setuptools.build_meta"

[project]
name = "wordly"
dynamic = ["version"]
authors = [
    { name="Marko MariÄ‡", email="marko@lambdabread.io" },
]
license = "MIT"
license-files = ["LICENSE"]
description = "A simple python client that requests dictionary definitions from a server that implements Dictionary Server Protocol"

readme = "README.md"
requires-python = ">=3.11"
classifiers = [
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Libraries",
    "Topic :: System :: Networking",
]
keywords = ["wordly", "definition", "dictionary", "DICT"]

[project.optional-dependencies]
build = ["build", "twine"]

[project.urls]
Homepage = "https://markom-dot.github.io/wordly/"
Documentation = "https://markom-dot.github.io/wordly/"
Repository = "https://github.com/MarkoM-dot/wordly"
Issues = "https://github.com/MarkoM-dot/wordly/issues"
Changelog = "https://github.com/MarkoM-dot/wordly/blob/main/CHANGELOG.md"

[project.scripts]
wordly = "wordly.__main__:run"

[tool.setuptools.dynamic]
version = { attr = "wordly.__version__" }

[tool.setuptools.packages.find]
where = ["src"]
include = ["wordly"]

[tool.ruff]

exclude = [
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "build",
    "dist",
    "site-packages",
]

line-length = 88
indent-width = 4
target-version = "py312"  # Target Python version for pyupgrade checks
fix = true

[tool.ruff.lint]
extend-select = [
    "ANN", # flake8 annotations
    "F",  # Pyflakes
    "B",  # flake8-bugbear
    "I",  # flake8-isort & isort
    "TID",  # flake8-tidy-imports
    "S",  # flake8-bandit
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "D",  # pycodestyle docstring
    "C901", # McCabe complexity
    "UP",  # pyupgrade
]
ignore = [
    "D106",  # Missing docstring in public nested class
    "S310", # Audit URL open for permitted schemes. Allowing use of `file:` or custom schemes is often unexpected.
]

[tool.ruff.lint.flake8-tidy-imports]
ban-relative-imports = "all"

[tool.ruff.lint.isort]
required-imports = ["from __future__ import annotations"]

[tool.ruff.lint.pydocstyle]
convention = "pep257"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"
docstring-code-format = false
docstring-code-line-length = "dynamic"

[tool.commitizen]
name = "cz_conventional_commits"
tag_format = "v$version"
version = "0.2.3"
version_scheme = "semver2"
version_provider = "commitizen"
version_files = ["src/wordly/__init__.py"]
update_changelog_on_bump = true
major_version_zero = true

[dependency-groups]
dev = [
    "commitizen>=4.6.0",
    "pre-commit>=4.2.0",
]
docs = [
    "mkdocs>=1.6.1",
    "mkdocs-material>=9.6.12",
    "mkdocstrings[python]>=0.29.1",
]
