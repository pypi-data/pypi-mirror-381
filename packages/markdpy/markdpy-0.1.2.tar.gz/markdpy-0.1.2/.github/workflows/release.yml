name: Release - markdpy

on:
  push:
    tags:
      - 'v*.*.*'  # Trigger on version tags like v1.0.0

permissions:
  contents: write
  id-token: write

jobs:
  lint:
    uses: ./.github/workflows/lint.yml

  build:
    needs: lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install build deps
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Build distributions
        run: |
          python -m build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: markdpy-dist
          path: dist/*

      - name: Generate changelog
        uses: mikepenz/release-changelog-builder-action@v5
        id: github_release
        with:
          configuration: ".github/changelog-config.json"
          outputFile: CHANGELOG.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Create Release
        uses: mikepenz/action-gh-release@v1
        with:
          body: ${{steps.github_release.outputs.changelog}}

  publish-pypi:
    name: Publish to PyPI
    needs: build
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/v')
    environment: pypi-production
    runs-on: ubuntu-latest
    steps:
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: markdpy-dist
          path: dist/

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install twine
        run: |
          python -m pip install --upgrade pip
          pip install twine

      - name: Publish to PyPI with twine
        env:
          TWINE_USERNAME: __token__
          TWINE_PASSWORD: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          twine upload --non-interactive --skip-existing --verbose dist/*