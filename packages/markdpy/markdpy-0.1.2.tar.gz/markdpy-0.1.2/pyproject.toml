[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "markdpy"
version = "0.1.2"
description = "Python-based markdown preview server with live reload, themes, and static export"
readme = "README.md"
requires-python = ">=3.10"
license = {text = "MIT"}
authors = [
    {name = "markdpy contributors"}
]
keywords = ["markdown", "preview", "server", "live-reload", "documentation"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Documentation",
    "Topic :: Software Development :: Documentation",
]
dependencies = [
    "fastapi>=0.118.0",
    "uvicorn[standard]>=0.37.0",
    "typer>=0.19.2",
    "markdown>=3.9.0",
    "pymdown-extensions>=10.3.0",
    "pygments>=2.19.2",
    "jinja2>=3.1.6",
    "watchdog>=6.0.0",
    "aiofiles>=24.1.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.3.5",
    "pytest-asyncio>=0.26.0",
    "pytest-cov>=7.0.0",
    "pytest-xdist>=3.8.0",
    "pyright>=1.1.399",
    "pre-commit>=4.2.0",
    "ruff>=0.11.6",
    "black>=25.9.0",
    "mypy>=1.18.2",
    "httpx>=0.28.0",
]

[project.scripts]
markdpy = "markdpy.cli.main:app"

[project.urls]
Homepage = "https://github.com/eosho/markdpy"
Documentation = "https://github.com/eosho/markdpy#readme"
Repository = "https://github.com/eosho/markdpy"
Issues = "https://github.com/eosho/markdpy/issues"

[tool.hatch.build.targets.wheel]
packages = ["src/markdpy"]

[tool.ruff]
line-length = 100
target-version = "py310"
exclude = [
    ".git",
    ".mypy_cache",
    ".pytest_cache",
    ".ruff_cache",
    "__pycache__",
    "build",
    "dist",
]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "I",   # isort
    "N",   # pep8-naming
    "W",   # pycodestyle warnings
    "UP",  # pyupgrade
]
ignore = []

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]

[tool.black]
line-length = 100
target-version = ["py310", "py311", "py312"]
exclude = '''
/(
    \.git
  | \.mypy_cache
  | \.pytest_cache
  | \.ruff_cache
  | __pycache__
  | build
  | dist
)/
'''

[tool.pyright]
pythonVersion = "3.12"
pythonPlatform = "All"
venv = ".venv"
typeCheckingMode = "standard"
include = [
    "src"
]
exclude = [
    "**/__pycache__",
    ".pytest_cache",
    ".ruff_cache",
    ".venv"
]

[tool.mypy]
python_version = "3.10"
strict = true
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
show_error_codes = true
show_column_numbers = true

[[tool.mypy.overrides]]
module = [
    "markdown.*",
    "pymdownx.*",
    "watchdog.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
minversion = "7.0"
testpaths = ["tests"]
asyncio_mode = "auto"
addopts = [
    "-ra",
    "--strict-markers",
    "--strict-config",
    "--cov=markdpy",
    "--cov-report=term-missing:skip-covered",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.coverage.run]
source = ["src/markdpy"]
branch = true
parallel = true
omit = [
    "*/tests/*",
    "*/__pycache__/*",
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "@abstractmethod",
]
