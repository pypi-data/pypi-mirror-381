"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class AesTest(google.protobuf.message.Message):
    """A single AES test. Can be used for both encryption and decryption, and also for AEAD
    modes (aad and tag fields).
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    COMMENT_FIELD_NUMBER: builtins.int
    FLAGS_FIELD_NUMBER: builtins.int
    KEY_FIELD_NUMBER: builtins.int
    PT_FIELD_NUMBER: builtins.int
    CT_FIELD_NUMBER: builtins.int
    IV_FIELD_NUMBER: builtins.int
    AAD_FIELD_NUMBER: builtins.int
    TAG_FIELD_NUMBER: builtins.int
    id: builtins.int
    """The test ID, unique in its set of vectors."""
    type: builtins.str
    """The type of test. One of: valid, invalid, acceptable."""
    comment: builtins.str
    """A comment on the test."""
    key: builtins.bytes
    """The symmetric key."""
    pt: builtins.bytes
    """The plaintext."""
    ct: builtins.bytes
    """The ciphertext."""
    iv: builtins.bytes
    """The IV or nonce."""
    aad: builtins.bytes
    """The associated data for AEAD modes."""
    tag: builtins.bytes
    """The MAC tag for AEAD modes."""
    @property
    def flags(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Flags that categorize this test."""

    def __init__(
        self,
        *,
        id: builtins.int = ...,
        type: builtins.str = ...,
        comment: builtins.str = ...,
        flags: collections.abc.Iterable[builtins.str] | None = ...,
        key: builtins.bytes = ...,
        pt: builtins.bytes = ...,
        ct: builtins.bytes = ...,
        iv: builtins.bytes = ...,
        aad: builtins.bytes = ...,
        tag: builtins.bytes = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["aad", b"aad", "comment", b"comment", "ct", b"ct", "flags", b"flags", "id", b"id", "iv", b"iv", "key", b"key", "pt", b"pt", "tag", b"tag", "type", b"type"]) -> None: ...

global___AesTest = AesTest

@typing.final
class AesVectors(google.protobuf.message.Message):
    """A set of AES test vectors."""

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class NotesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    SOURCE_FIELD_NUMBER: builtins.int
    SOURCE_DESC_FIELD_NUMBER: builtins.int
    SOURCE_URL_FIELD_NUMBER: builtins.int
    COMPLIANCE_FIELD_NUMBER: builtins.int
    NOTES_FIELD_NUMBER: builtins.int
    TESTS_FIELD_NUMBER: builtins.int
    MODE_FIELD_NUMBER: builtins.int
    KEYLEN_FIELD_NUMBER: builtins.int
    ENCRYPT_FIELD_NUMBER: builtins.int
    DECRYPT_FIELD_NUMBER: builtins.int
    source: builtins.str
    """The source of the test vectors."""
    source_desc: builtins.str
    """Description of the source."""
    source_url: builtins.str
    """The URL of the source."""
    compliance: builtins.bool
    """Whether these are compliance test vectors or not."""
    mode: builtins.str
    """The mode of operation."""
    keylen: builtins.int
    """The size of the keys used, in bits. All tests in this set shall have the same bit
    length.
    """
    encrypt: builtins.bool
    """Whether these tests can be used to test encryption."""
    decrypt: builtins.bool
    """Whether these tests can be used to test decryption."""
    @property
    def notes(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]:
        """A dictionary of test flags and their description."""

    @property
    def tests(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___AesTest]:
        """The test vectors."""

    def __init__(
        self,
        *,
        source: builtins.str = ...,
        source_desc: builtins.str = ...,
        source_url: builtins.str = ...,
        compliance: builtins.bool = ...,
        notes: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
        tests: collections.abc.Iterable[global___AesTest] | None = ...,
        mode: builtins.str = ...,
        keylen: builtins.int = ...,
        encrypt: builtins.bool = ...,
        decrypt: builtins.bool = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["compliance", b"compliance", "decrypt", b"decrypt", "encrypt", b"encrypt", "keylen", b"keylen", "mode", b"mode", "notes", b"notes", "source", b"source", "source_desc", b"source_desc", "source_url", b"source_url", "tests", b"tests"]) -> None: ...

global___AesVectors = AesVectors
