# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: _hqc/hqc.proto
# Protobuf Python Version: 5.26.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0e_hqc/hqc.proto\x12\rcrypto_condor\"s\n\x07HqcTest\x12\n\n\x02id\x18\x01 \x01(\x05\x12\x0c\n\x04type\x18\x02 \x01(\t\x12\x0f\n\x07\x63omment\x18\x03 \x01(\t\x12\r\n\x05\x66lags\x18\x04 \x03(\t\x12\n\n\x02pk\x18\x05 \x01(\x0c\x12\n\n\x02sk\x18\x06 \x01(\x0c\x12\n\n\x02\x63t\x18\x07 \x01(\x0c\x12\n\n\x02ss\x18\x08 \x01(\x0c\"\xf5\x01\n\nHqcVectors\x12\x0e\n\x06source\x18\x01 \x01(\t\x12\x13\n\x0bsource_desc\x18\x02 \x01(\t\x12\x12\n\nsource_url\x18\x03 \x01(\t\x12\x12\n\ncompliance\x18\x04 \x01(\x08\x12\x33\n\x05notes\x18\x05 \x03(\x0b\x32$.crypto_condor.HqcVectors.NotesEntry\x12%\n\x05tests\x18\x06 \x03(\x0b\x32\x16.crypto_condor.HqcTest\x12\x10\n\x08paramset\x18\x07 \x01(\t\x1a,\n\nNotesEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\x62\x06proto3')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, '_hqc.hqc_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  DESCRIPTOR._loaded_options = None
  _globals['_HQCVECTORS_NOTESENTRY']._loaded_options = None
  _globals['_HQCVECTORS_NOTESENTRY']._serialized_options = b'8\001'
  _globals['_HQCTEST']._serialized_start=33
  _globals['_HQCTEST']._serialized_end=148
  _globals['_HQCVECTORS']._serialized_start=151
  _globals['_HQCVECTORS']._serialized_end=396
  _globals['_HQCVECTORS_NOTESENTRY']._serialized_start=352
  _globals['_HQCVECTORS_NOTESENTRY']._serialized_end=396
# @@protoc_insertion_point(module_scope)
