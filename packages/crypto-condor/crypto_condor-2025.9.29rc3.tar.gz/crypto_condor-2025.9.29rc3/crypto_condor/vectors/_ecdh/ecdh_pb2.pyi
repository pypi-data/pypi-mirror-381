"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import builtins
import collections.abc
import google.protobuf.descriptor
import google.protobuf.internal.containers
import google.protobuf.message
import typing

DESCRIPTOR: google.protobuf.descriptor.FileDescriptor

@typing.final
class EcdhTest(google.protobuf.message.Message):
    """A single ECDH test.

    A test for a single key exchange with the private key derived from the private value
    ``d`` and the public key. The public key can be either a X.509 SubjectPublicKeyInfo
    or the uncompressed coordinates of the point.

    The ``ss`` and ``d`` fields are required. One of ``peer_point`` and ``peer_x509`` are
    also required.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    ID_FIELD_NUMBER: builtins.int
    TYPE_FIELD_NUMBER: builtins.int
    COMMENT_FIELD_NUMBER: builtins.int
    FLAGS_FIELD_NUMBER: builtins.int
    SS_FIELD_NUMBER: builtins.int
    D_FIELD_NUMBER: builtins.int
    PEER_POINT_FIELD_NUMBER: builtins.int
    PEER_X509_FIELD_NUMBER: builtins.int
    id: builtins.int
    """The test ID, unique in its set of vectors."""
    type: builtins.str
    """The type of test. One of: valid, invalid, acceptable."""
    comment: builtins.str
    """A comment on the test."""
    ss: builtins.bytes
    """The resulting shared secret."""
    d: builtins.bytes
    """The private value of party A."""
    peer_point: builtins.bytes
    """The peer's public key point."""
    peer_x509: builtins.bytes
    """The peer's public X509 key."""
    @property
    def flags(self) -> google.protobuf.internal.containers.RepeatedScalarFieldContainer[builtins.str]:
        """Flags that categorize this test."""

    def __init__(
        self,
        *,
        id: builtins.int = ...,
        type: builtins.str = ...,
        comment: builtins.str = ...,
        flags: collections.abc.Iterable[builtins.str] | None = ...,
        ss: builtins.bytes = ...,
        d: builtins.bytes = ...,
        peer_point: builtins.bytes = ...,
        peer_x509: builtins.bytes = ...,
    ) -> None: ...
    def HasField(self, field_name: typing.Literal["oneof_pk", b"oneof_pk", "peer_point", b"peer_point", "peer_x509", b"peer_x509"]) -> builtins.bool: ...
    def ClearField(self, field_name: typing.Literal["comment", b"comment", "d", b"d", "flags", b"flags", "id", b"id", "oneof_pk", b"oneof_pk", "peer_point", b"peer_point", "peer_x509", b"peer_x509", "ss", b"ss", "type", b"type"]) -> None: ...
    def WhichOneof(self, oneof_group: typing.Literal["oneof_pk", b"oneof_pk"]) -> typing.Literal["peer_point", "peer_x509"] | None: ...

global___EcdhTest = EcdhTest

@typing.final
class EcdhVectors(google.protobuf.message.Message):
    """A set of ECDH test vectors.

    It is categorized by its `curve` and `public_type` fields.
    """

    DESCRIPTOR: google.protobuf.descriptor.Descriptor

    @typing.final
    class NotesEntry(google.protobuf.message.Message):
        DESCRIPTOR: google.protobuf.descriptor.Descriptor

        KEY_FIELD_NUMBER: builtins.int
        VALUE_FIELD_NUMBER: builtins.int
        key: builtins.str
        value: builtins.str
        def __init__(
            self,
            *,
            key: builtins.str = ...,
            value: builtins.str = ...,
        ) -> None: ...
        def ClearField(self, field_name: typing.Literal["key", b"key", "value", b"value"]) -> None: ...

    SOURCE_FIELD_NUMBER: builtins.int
    SOURCE_DESC_FIELD_NUMBER: builtins.int
    SOURCE_URL_FIELD_NUMBER: builtins.int
    COMPLIANCE_FIELD_NUMBER: builtins.int
    NOTES_FIELD_NUMBER: builtins.int
    TESTS_FIELD_NUMBER: builtins.int
    CURVE_FIELD_NUMBER: builtins.int
    PUBLIC_TYPE_FIELD_NUMBER: builtins.int
    source: builtins.str
    """The source of the test vectors."""
    source_desc: builtins.str
    """Description of the source."""
    source_url: builtins.str
    """The URL of the source."""
    compliance: builtins.bool
    """Whether these are compliance test vectors or not."""
    curve: builtins.str
    """The elliptic curve used for these vectors."""
    public_type: builtins.str
    """The type of public key available. One of: "x509", "point"."""
    @property
    def notes(self) -> google.protobuf.internal.containers.ScalarMap[builtins.str, builtins.str]:
        """A dictionary of test flags and their description."""

    @property
    def tests(self) -> google.protobuf.internal.containers.RepeatedCompositeFieldContainer[global___EcdhTest]:
        """The test vectors."""

    def __init__(
        self,
        *,
        source: builtins.str = ...,
        source_desc: builtins.str = ...,
        source_url: builtins.str = ...,
        compliance: builtins.bool = ...,
        notes: collections.abc.Mapping[builtins.str, builtins.str] | None = ...,
        tests: collections.abc.Iterable[global___EcdhTest] | None = ...,
        curve: builtins.str = ...,
        public_type: builtins.str = ...,
    ) -> None: ...
    def ClearField(self, field_name: typing.Literal["compliance", b"compliance", "curve", b"curve", "notes", b"notes", "public_type", b"public_type", "source", b"source", "source_desc", b"source_desc", "source_url", b"source_url", "tests", b"tests"]) -> None: ...

global___EcdhVectors = EcdhVectors
