syntax = "proto3";

package crypto_condor;

// A single SLH-DSA test vector.
message SlhdsaTest{
	// The test ID, unique in its set of vectors.
	int32 id = 1;
	// The type of test. One of: valid, invalid, acceptable.
	string type = 2;
	// A comment on the test.
	string comment = 3;
	// Flags that categorize this test.
	repeated string flags = 4;

    // The secret key.
    bytes sk = 5;
    // The public key.
    bytes pk = 6;
    // The message to sign.
    bytes msg = 7;
    // The signature.
    bytes sig = 8;
    // The context string.
    bytes ctx = 9;
    // For HashSLH-DSA, the hash function or XOF used.
    string ph = 10;
    // For keygen, the secret seed.
    bytes skseed = 11;
    // For keygen, the secret PRF key.
    bytes skprf = 12;
    // For keygen, the public seed.
    bytes pkseed = 13;
}

// A set of SLH-DSA test vectors.
message SlhdsaVectors{
	// The source of the test vectors.
	string source = 1;
	// Description of the source.
	string source_desc = 2;
	// The URL of the source.
	string source_url = 3;
	// Whether these are compliance test vectors or not.
	bool compliance = 4;
	// A dictionary of test flags and their description.
    map<string, string> notes = 5;
	// The test vectors.
	repeated SlhdsaTest tests = 6;

    // The operation being tested. One of: keygen, siggen, sigver.
    string operation = 7;
    // The parameter set.
    string paramset = 8;
    // True for HashSLH-DSA, False otherwise.
    bool prehash = 9;
}
