"use strict";(self.webpackChunkjupyterpack=self.webpackChunkjupyterpack||[]).push([[587],{587:(e,t,n)=>{n.r(t),n.d(t,{default:()=>S});var s,a,i=n(529),o=n(256);!function(e){e.REACT="react",e.DASH="dash"}(s||(s={})),function(e){e.INIT="INIT"}(a||(a={}));var r=n(621);class c extends o.Widget{constructor(){super(),this.addClass("jupyterpack-iframe-panel"),this._iframe=document.createElement("iframe"),this._spinner=document.createElement("div"),this._spinner.classList.add("jupyterpack-spinner"),this.node.appendChild(this._spinner),this.node.appendChild(this._iframe)}toggleSpinner(e){this._spinner.style.display=e?"unset":"none"}}var l=n(602);class d{constructor(e){this._fileChanged=new l.Signal(this),this._contentManager=e.contentsManager,this._path=e.path,this._contentManager.fileChanged.connect(this._onFileChanged,this)}async getAllFiles(){if(!this._allFiles){const e=await this._contentManager.get(this._path,{content:!0});this._allFiles=await this.flattenDirectory(e)}return this._allFiles}get fileChanged(){return this._fileChanged}async flattenDirectory(e){const t={},n=e.content;for(const e of n)if("file"===e.type){const n=this._removeRoot(e.path);let s=e;s.content||(s=await this._getContent(e.path)),"application/json"===s.mimetype&&"string"!=typeof s.content?t[n]={code:JSON.stringify(s.content)}:t[n]={code:s.content}}else if("directory"===e.type){const n=await this._getContent(e.path),s=await this.flattenDirectory(n);Object.assign(t,s)}return t}async _onFileChanged(e,t){var n,s,a,i,o;switch(t.type){case"save":if(null===(n=t.newValue)||void 0===n?void 0:n.path){const e=await this._getContent(t.newValue.path),n=this._removeRoot(t.newValue.path);this._allFiles&&(this._allFiles[n]={code:e.content})}break;case"delete":if(null===(s=t.oldValue)||void 0===s?void 0:s.path){const e=this._removeRoot(t.oldValue.path);this._allFiles&&delete this._allFiles[e]}break;case"rename":if((null===(a=t.oldValue)||void 0===a?void 0:a.path)&&(null===(i=t.newValue)||void 0===i?void 0:i.path)){const e=this._removeRoot(t.oldValue.path),n=this._removeRoot(t.newValue.path);this._allFiles&&(this._allFiles[n]=this._allFiles[e],delete this._allFiles[n])}break;case"new":if(null===(o=t.newValue)||void 0===o?void 0:o.path){const e=await this._getContent(t.newValue.path),n=this._removeRoot(t.newValue.path);this._allFiles&&(this._allFiles[n]={code:e.content})}}this._allFiles&&this._fileChanged.emit({allFiles:this._allFiles})}_removeRoot(e){return function(e,t){return e.startsWith(t)?e.slice(t.length):e}(e,this._path)}_getContent(e){return this._contentManager.get(e,{content:!0})}}class h extends c{constructor(e){super(),this._contentsManager=e.contentsManager,e.context.ready.then((async()=>{await this.init(e.context.localPath)}))}async init(e){const t=e.split("/").slice(0,-1).join("/"),n=new d({contentsManager:this._contentsManager,path:t}),s=await n.getAllFiles();this._spClient=await(0,r.loadSandpackClient)(this._iframe,{files:s},{showLoadingScreen:!0,showOpenInCodeSandbox:!1}),await this.connectSignals(n,this._spClient)}async connectSignals(e,t){e.fileChanged.connect(this._onFileChanged,this),t.listen((e=>{switch(e.type){case"start":this.toggleSpinner(!0);break;case"success":this.toggleSpinner(!1)}}))}_onFileChanged(e,{allFiles:t}){this._spClient&&this._spClient.updateSandbox({files:t})}}class p extends i.DocumentWidget{constructor(e){super(e),this.onResize=e=>{window.dispatchEvent(new Event("resize"))}}dispose(){this.content.dispose(),super.dispose()}}var u=n(262),g=n(23);class _{constructor(e){this._isDisposed=!1,this._sessionConnection=e.sessionConnection}get isDisposed(){return this._isDisposed}async init(e){const{initCode:t,instanceId:n,kernelClientId:s}=e,a=g.PageConfig.getOption("baseUrl"),i=`\n    import os\n    os.environ['DASH_URL_BASE_PATHNAME'] = '${g.URLExt.join(a,"extensions/jupyterpack/static",n,"dash",s,"/")}'\n    `;await this.executeCode({code:i}),t&&await this.executeCode({code:t}),await this.executeCode({code:'\n    import httpx, json, base64\n    __monstra_transport = httpx.WSGITransport(app=app.server)\n    def __monstra_get_response(method, url, headers, content=None, params=None):\n      decoded_content = None\n      if content is not None:\n        content = base64.b64decode(content)\n        decoded_content = content.decode()\n      with httpx.Client(transport=__monstra_transport, base_url="http://testserver") as client:\n        r = client.request(method, url, headers=headers, content=content, params=params)\n        response = {\n          "headers": dict(r.headers),\n          "content": r.text,\n          "status_code": r.status_code,\n          "original_request": {"method": method, "url": url, "content": decoded_content, "params": params, "headers": headers},\n        }\n        json_str = json.dumps(response)\n        b64_str = base64.b64encode(json_str.encode("utf-8")).decode("utf-8")\n        return b64_str\n    '})}async getResponse(e){const{method:t,urlPath:n,requestBody:s,params:a,headers:i}=e,o=s?function(e){let t="";const n=new Uint8Array(e);for(let e=0;e<n.length;e+=32768){const s=n.subarray(e,e+32768);t+=String.fromCharCode(...s)}return btoa(t)}(s):void 0,r=`__monstra_get_response("${t}", "${n}", headers=${JSON.stringify(i)} , content=${o?`"${o}"`:"None"}, params=${a?`"${a}"`:"None"})`,c=await this.executeCode({code:r}),l=atob(c.slice(1,-1));return JSON.parse(l)}async executeCode(e){var t;const n=null===(t=this._sessionConnection)||void 0===t?void 0:t.kernel;if(!n)throw new Error("Session has no kernel.");return new Promise(((t,s)=>{const a=n.requestExecute(e,!1,void 0),i=a.msg.header.msg_id;let o="";a.onIOPub=e=>{switch(e.header.msg_type){case"execute_result":{const t=e.content.data["text/plain"];o+=t;break}case"status":"idle"===e.content.execution_state&&e.parent_header.msg_id===i&&t(o);break;case"stream":{const t=e.content.text;o+=t;break}case"error":console.error("Kernel operation failed",e.content),s(e.content)}}}))}dispose(){this._isDisposed||(this._isDisposed=!0,this._sessionConnection.dispose())}}class m{constructor(e){this._isDisposed=!1,this._kernelStarted=!1,this._context=e.context,this._manager=e.manager,this._connectionManager=e.connectionManager,this._contentsManager=e.contentsManager}get isDisposed(){return this._isDisposed}get connectionManager(){return this._connectionManager}async initialize(){var e;if(this._kernelStarted)return null;const t=this._context.localPath,n=this._context.model.toJSON(),s=g.PathExt.join(g.PathExt.dirname(t),n.entry),a=await this._contentsManager.get(s,{content:!0,format:"text"}),i=this._manager.sessions;await i.ready,await this._manager.kernelspecs.ready;const o=this._manager.kernelspecs.specs;if(!o)return null;const{kernelspecs:r}=o;let c=Object.keys(r)[0];r[o.default]&&(c=o.default),this._sessionConnection=await i.startNew({name:t,path:t,kernel:{name:c},type:"notebook"});const l=new _({sessionConnection:this._sessionConnection}),d=await this._connectionManager.registerConnection(l);await l.init({initCode:a.content,...d});const h=new u.PromiseDelegate,p=(e,t)=>{var n;"idle"===t&&(null===(n=this._sessionConnection.kernel)||void 0===n||n.statusChanged.disconnect(p),h.resolve())};return null===(e=this._sessionConnection.kernel)||void 0===e||e.statusChanged.connect(p),await h.promise,this._kernelStarted=!0,d}dispose(){this._isDisposed=!0}}class w extends c{constructor(e){super(),this._model=e.model,this._model.initialize().then((e=>{if(!e)return;const t=this._iframe,n=g.PageConfig.getOption("fullLabextensionsUrl");t.src=`${n}/jupyterpack/static/${e.instanceId}/dash/${e.kernelClientId}/`,t.addEventListener("load",(()=>{this.toggleSpinner(!1)}))}))}get model(){return this._model}}class y extends i.ABCWidgetFactory{constructor(e){super(e),this.options=e,this._contentsManager=e.manager.contents}createNewWidget(e){const t=new o.Panel;return t.addClass("jp-jupyterpack-document-panel"),e.ready.then((()=>{switch(e.model.toJSON().framework){case s.REACT:{const n=new h({context:e,contentsManager:this._contentsManager});t.addWidget(n);break}case s.DASH:{const n=new m({context:e,manager:this.options.manager,contentsManager:this._contentsManager,connectionManager:this.options.connectionManager}),s=new w({model:n,id:u.UUID.uuid4()});t.addWidget(s);break}default:console.error("Unsupported framework")}})),new p({context:e,content:t})}}const f=new u.Token("jupyterpack:connection-manager"),k="jupyterpack",v={id:"jupyterpack:spkplugin",requires:[f],autoStart:!0,activate:(e,t)=>{const n=new y({name:"jupyterpack",modelName:"text",fileTypes:[k],defaultFor:[k],commands:e.commands,manager:e.serviceManager,connectionManager:t});e.docRegistry.addWidgetFactory(n),e.docRegistry.addFileType({name:k,displayName:"SPK",mimeTypes:["text/json"],extensions:[".spk",".SPK"],fileFormat:"json",contentType:k})}};var C=n(88);class x{constructor(e){this.instanceId=e,this._kernelExecutors=new Map}async registerConnection(e){const t=u.UUID.uuid4();return this._kernelExecutors.set(t,e),{instanceId:this.instanceId,kernelClientId:t}}async generateResponse(e){const{urlPath:t,kernelClientId:n,method:s,params:a,requestBody:i,headers:o}=e,r=this._kernelExecutors.get(n);return r?await r.getResponse({urlPath:t,method:s,params:a,headers:o,requestBody:i}):null}}const b=`${g.PageConfig.getOption("fullLabextensionsUrl")}/jupyterpack/static`,S=[{id:"jupyterpack:service-worker-plugin",description:"jupyterpack service worker plugin",autoStart:!0,provides:f,activate:async e=>{console.log("Activating jupyterpack service worker");const t=await async function(){if(!("serviceWorker"in navigator))return void console.error("Cannot start extension without service worker");const e=`${b}/service-worker.js`;try{const t=await navigator.serviceWorker.register(e);if(!t)return void console.error("Missing service worker registration");if(await t.update(),t.installing){const e=t.installing||t.waiting;e.onstatechange=()=>{"installed"===e.state&&window.location.reload()}}return t.active||console.log("Service worker newly registered",await navigator.serviceWorker.getRegistration(e)),t.active}catch(e){return void console.error("Failed to register service worker",e)}}();if(!t)throw new Error("Failed to register the Service Worker, please make sure to use a browser that supports this feature.");const n=u.UUID.uuid4(),{port1:s,port2:i}=new MessageChannel,o=new x(n);return(0,C.expose)(o,s),t.postMessage({type:a.INIT,data:{instanceId:n}},[i]),setTimeout((()=>{!function(){const e=document.createElement("iframe");e.style.display="none",e.src=g.URLExt.join(b,"__jupyterpack__","ping.html"),document.body.appendChild(e)}()}),1e4),o}},v]}}]);