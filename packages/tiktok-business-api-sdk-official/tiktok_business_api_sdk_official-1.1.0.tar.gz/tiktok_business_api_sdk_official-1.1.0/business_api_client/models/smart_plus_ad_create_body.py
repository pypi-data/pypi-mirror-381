# coding: utf-8

"""
 Copyright 2023 TikTok Pte. Ltd.

 This source code is licensed under the MIT license found in
 the LICENSE file in the root directory of this source tree.
"""
import pprint
import re  # noqa: F401

import six

class SmartPlusAdCreateBody(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'ad_configuration': 'SmartPlusAdCreateBodyAdConfiguration',
        'ad_name': 'str',
        'ad_text_list': 'list[SmartPlusAdCreateBodyAdTextList]',
        'adgroup_id': 'str',
        'advertiser_id': 'str',
        'auto_message_list': 'list[SmartPlusAdCreateBodyAutoMessageList]',
        'call_to_action_list': 'list[SmartPlusAdCreateBodyCallToActionList]',
        'creative_list': 'list[SmartPlusAdCreateBodyCreativeList]',
        'deeplink_list': 'list[SmartPlusAdCreateBodyDeeplinkList]',
        'interactive_add_on_list': 'list[SmartPlusAdCreateBodyInteractiveAddOnList]',
        'landing_page_url_list': 'list[SmartPlusAdCreateBodyLandingPageUrlList]',
        'operation_status': 'str',
        'page_list': 'list[SmartPlusAdCreateBodyPageList]'
    }

    attribute_map = {
        'ad_configuration': 'ad_configuration',
        'ad_name': 'ad_name',
        'ad_text_list': 'ad_text_list',
        'adgroup_id': 'adgroup_id',
        'advertiser_id': 'advertiser_id',
        'auto_message_list': 'auto_message_list',
        'call_to_action_list': 'call_to_action_list',
        'creative_list': 'creative_list',
        'deeplink_list': 'deeplink_list',
        'interactive_add_on_list': 'interactive_add_on_list',
        'landing_page_url_list': 'landing_page_url_list',
        'operation_status': 'operation_status',
        'page_list': 'page_list'
    }

    def __init__(self, ad_configuration=None, ad_name=None, ad_text_list=None, adgroup_id=None, advertiser_id=None, auto_message_list=None, call_to_action_list=None, creative_list=None, deeplink_list=None, interactive_add_on_list=None, landing_page_url_list=None, operation_status='ENABLE', page_list=None):  # noqa: E501
        """SmartPlusAdCreateBody - a model defined in Swagger"""  # noqa: E501
        self._ad_configuration = None
        self._ad_name = None
        self._ad_text_list = None
        self._adgroup_id = None
        self._advertiser_id = None
        self._auto_message_list = None
        self._call_to_action_list = None
        self._creative_list = None
        self._deeplink_list = None
        self._interactive_add_on_list = None
        self._landing_page_url_list = None
        self._operation_status = None
        self._page_list = None
        self.discriminator = None
        if ad_configuration is not None:
            self.ad_configuration = ad_configuration
        self.ad_name = ad_name
        if ad_text_list is not None:
            self.ad_text_list = ad_text_list
        self.adgroup_id = adgroup_id
        self.advertiser_id = advertiser_id
        if auto_message_list is not None:
            self.auto_message_list = auto_message_list
        if call_to_action_list is not None:
            self.call_to_action_list = call_to_action_list
        if creative_list is not None:
            self.creative_list = creative_list
        if deeplink_list is not None:
            self.deeplink_list = deeplink_list
        if interactive_add_on_list is not None:
            self.interactive_add_on_list = interactive_add_on_list
        if landing_page_url_list is not None:
            self.landing_page_url_list = landing_page_url_list
        if operation_status is not None:
            self.operation_status = operation_status
        if page_list is not None:
            self.page_list = page_list

    @property
    def ad_configuration(self):
        """Gets the ad_configuration of this SmartPlusAdCreateBody.  # noqa: E501


        :return: The ad_configuration of this SmartPlusAdCreateBody.  # noqa: E501
        :rtype: SmartPlusAdCreateBodyAdConfiguration
        """
        return self._ad_configuration

    @ad_configuration.setter
    def ad_configuration(self, ad_configuration):
        """Sets the ad_configuration of this SmartPlusAdCreateBody.


        :param ad_configuration: The ad_configuration of this SmartPlusAdCreateBody.  # noqa: E501
        :type: SmartPlusAdCreateBodyAdConfiguration
        """

        self._ad_configuration = ad_configuration

    @property
    def ad_name(self):
        """Gets the ad_name of this SmartPlusAdCreateBody.  # noqa: E501


        :return: The ad_name of this SmartPlusAdCreateBody.  # noqa: E501
        :rtype: str
        """
        return self._ad_name

    @ad_name.setter
    def ad_name(self, ad_name):
        """Sets the ad_name of this SmartPlusAdCreateBody.


        :param ad_name: The ad_name of this SmartPlusAdCreateBody.  # noqa: E501
        :type: str
        """
        if ad_name is None:
            raise ValueError("Invalid value for `ad_name`, must not be `None`")  # noqa: E501

        self._ad_name = ad_name

    @property
    def ad_text_list(self):
        """Gets the ad_text_list of this SmartPlusAdCreateBody.  # noqa: E501


        :return: The ad_text_list of this SmartPlusAdCreateBody.  # noqa: E501
        :rtype: list[SmartPlusAdCreateBodyAdTextList]
        """
        return self._ad_text_list

    @ad_text_list.setter
    def ad_text_list(self, ad_text_list):
        """Sets the ad_text_list of this SmartPlusAdCreateBody.


        :param ad_text_list: The ad_text_list of this SmartPlusAdCreateBody.  # noqa: E501
        :type: list[SmartPlusAdCreateBodyAdTextList]
        """

        self._ad_text_list = ad_text_list

    @property
    def adgroup_id(self):
        """Gets the adgroup_id of this SmartPlusAdCreateBody.  # noqa: E501


        :return: The adgroup_id of this SmartPlusAdCreateBody.  # noqa: E501
        :rtype: str
        """
        return self._adgroup_id

    @adgroup_id.setter
    def adgroup_id(self, adgroup_id):
        """Sets the adgroup_id of this SmartPlusAdCreateBody.


        :param adgroup_id: The adgroup_id of this SmartPlusAdCreateBody.  # noqa: E501
        :type: str
        """
        if adgroup_id is None:
            raise ValueError("Invalid value for `adgroup_id`, must not be `None`")  # noqa: E501

        self._adgroup_id = adgroup_id

    @property
    def advertiser_id(self):
        """Gets the advertiser_id of this SmartPlusAdCreateBody.  # noqa: E501


        :return: The advertiser_id of this SmartPlusAdCreateBody.  # noqa: E501
        :rtype: str
        """
        return self._advertiser_id

    @advertiser_id.setter
    def advertiser_id(self, advertiser_id):
        """Sets the advertiser_id of this SmartPlusAdCreateBody.


        :param advertiser_id: The advertiser_id of this SmartPlusAdCreateBody.  # noqa: E501
        :type: str
        """
        if advertiser_id is None:
            raise ValueError("Invalid value for `advertiser_id`, must not be `None`")  # noqa: E501

        self._advertiser_id = advertiser_id

    @property
    def auto_message_list(self):
        """Gets the auto_message_list of this SmartPlusAdCreateBody.  # noqa: E501


        :return: The auto_message_list of this SmartPlusAdCreateBody.  # noqa: E501
        :rtype: list[SmartPlusAdCreateBodyAutoMessageList]
        """
        return self._auto_message_list

    @auto_message_list.setter
    def auto_message_list(self, auto_message_list):
        """Sets the auto_message_list of this SmartPlusAdCreateBody.


        :param auto_message_list: The auto_message_list of this SmartPlusAdCreateBody.  # noqa: E501
        :type: list[SmartPlusAdCreateBodyAutoMessageList]
        """

        self._auto_message_list = auto_message_list

    @property
    def call_to_action_list(self):
        """Gets the call_to_action_list of this SmartPlusAdCreateBody.  # noqa: E501


        :return: The call_to_action_list of this SmartPlusAdCreateBody.  # noqa: E501
        :rtype: list[SmartPlusAdCreateBodyCallToActionList]
        """
        return self._call_to_action_list

    @call_to_action_list.setter
    def call_to_action_list(self, call_to_action_list):
        """Sets the call_to_action_list of this SmartPlusAdCreateBody.


        :param call_to_action_list: The call_to_action_list of this SmartPlusAdCreateBody.  # noqa: E501
        :type: list[SmartPlusAdCreateBodyCallToActionList]
        """

        self._call_to_action_list = call_to_action_list

    @property
    def creative_list(self):
        """Gets the creative_list of this SmartPlusAdCreateBody.  # noqa: E501


        :return: The creative_list of this SmartPlusAdCreateBody.  # noqa: E501
        :rtype: list[SmartPlusAdCreateBodyCreativeList]
        """
        return self._creative_list

    @creative_list.setter
    def creative_list(self, creative_list):
        """Sets the creative_list of this SmartPlusAdCreateBody.


        :param creative_list: The creative_list of this SmartPlusAdCreateBody.  # noqa: E501
        :type: list[SmartPlusAdCreateBodyCreativeList]
        """

        self._creative_list = creative_list

    @property
    def deeplink_list(self):
        """Gets the deeplink_list of this SmartPlusAdCreateBody.  # noqa: E501


        :return: The deeplink_list of this SmartPlusAdCreateBody.  # noqa: E501
        :rtype: list[SmartPlusAdCreateBodyDeeplinkList]
        """
        return self._deeplink_list

    @deeplink_list.setter
    def deeplink_list(self, deeplink_list):
        """Sets the deeplink_list of this SmartPlusAdCreateBody.


        :param deeplink_list: The deeplink_list of this SmartPlusAdCreateBody.  # noqa: E501
        :type: list[SmartPlusAdCreateBodyDeeplinkList]
        """

        self._deeplink_list = deeplink_list

    @property
    def interactive_add_on_list(self):
        """Gets the interactive_add_on_list of this SmartPlusAdCreateBody.  # noqa: E501


        :return: The interactive_add_on_list of this SmartPlusAdCreateBody.  # noqa: E501
        :rtype: list[SmartPlusAdCreateBodyInteractiveAddOnList]
        """
        return self._interactive_add_on_list

    @interactive_add_on_list.setter
    def interactive_add_on_list(self, interactive_add_on_list):
        """Sets the interactive_add_on_list of this SmartPlusAdCreateBody.


        :param interactive_add_on_list: The interactive_add_on_list of this SmartPlusAdCreateBody.  # noqa: E501
        :type: list[SmartPlusAdCreateBodyInteractiveAddOnList]
        """

        self._interactive_add_on_list = interactive_add_on_list

    @property
    def landing_page_url_list(self):
        """Gets the landing_page_url_list of this SmartPlusAdCreateBody.  # noqa: E501


        :return: The landing_page_url_list of this SmartPlusAdCreateBody.  # noqa: E501
        :rtype: list[SmartPlusAdCreateBodyLandingPageUrlList]
        """
        return self._landing_page_url_list

    @landing_page_url_list.setter
    def landing_page_url_list(self, landing_page_url_list):
        """Sets the landing_page_url_list of this SmartPlusAdCreateBody.


        :param landing_page_url_list: The landing_page_url_list of this SmartPlusAdCreateBody.  # noqa: E501
        :type: list[SmartPlusAdCreateBodyLandingPageUrlList]
        """

        self._landing_page_url_list = landing_page_url_list

    @property
    def operation_status(self):
        """Gets the operation_status of this SmartPlusAdCreateBody.  # noqa: E501


        :return: The operation_status of this SmartPlusAdCreateBody.  # noqa: E501
        :rtype: str
        """
        return self._operation_status

    @operation_status.setter
    def operation_status(self, operation_status):
        """Sets the operation_status of this SmartPlusAdCreateBody.


        :param operation_status: The operation_status of this SmartPlusAdCreateBody.  # noqa: E501
        :type: str
        """

        self._operation_status = operation_status

    @property
    def page_list(self):
        """Gets the page_list of this SmartPlusAdCreateBody.  # noqa: E501


        :return: The page_list of this SmartPlusAdCreateBody.  # noqa: E501
        :rtype: list[SmartPlusAdCreateBodyPageList]
        """
        return self._page_list

    @page_list.setter
    def page_list(self, page_list):
        """Sets the page_list of this SmartPlusAdCreateBody.


        :param page_list: The page_list of this SmartPlusAdCreateBody.  # noqa: E501
        :type: list[SmartPlusAdCreateBodyPageList]
        """

        self._page_list = page_list

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(SmartPlusAdCreateBody, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SmartPlusAdCreateBody):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
