# coding: utf-8

"""
 Copyright 2023 TikTok Pte. Ltd.

 This source code is licensed under the MIT license found in
 the LICENSE file in the root directory of this source tree.
"""
import pprint
import re  # noqa: F401

import six

class SmartPlusAdgroupCreateBodyTargetingSpec(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'actions': 'list[SmartPlusAdgroupCreateBodyTargetingSpecActions]',
        'age_groups': 'list[str]',
        'audience_ids': 'list[str]',
        'blocked_pangle_app_ids': 'list[str]',
        'carrier_ids': 'list[str]',
        'device_model_ids': 'list[str]',
        'device_price_ranges': 'list[int]',
        'excluded_audience_ids': 'list[str]',
        'excluded_pangle_audience_package_ids': 'list[str]',
        'gender': 'str',
        'household_income': 'list[str]',
        'included_pangle_audience_package_ids': 'list[str]',
        'interest_category_ids': 'list[str]',
        'interest_keyword_ids': 'list[str]',
        'isp_ids': 'list[str]',
        'languages': 'list[str]',
        'location_ids': 'list[str]',
        'min_android_version': 'str',
        'min_ios_version': 'str',
        'network_types': 'list[str]',
        'operating_systems': 'list[str]',
        'purchase_intention_keyword_ids': 'list[str]',
        'saved_audience_id': 'str',
        'smart_audience_enabled': 'bool',
        'smart_interest_behavior_enabled': 'bool',
        'spc_audience_age': 'str',
        'spending_power': 'str',
        'zipcode_ids': 'list[str]'
    }

    attribute_map = {
        'actions': 'actions',
        'age_groups': 'age_groups',
        'audience_ids': 'audience_ids',
        'blocked_pangle_app_ids': 'blocked_pangle_app_ids',
        'carrier_ids': 'carrier_ids',
        'device_model_ids': 'device_model_ids',
        'device_price_ranges': 'device_price_ranges',
        'excluded_audience_ids': 'excluded_audience_ids',
        'excluded_pangle_audience_package_ids': 'excluded_pangle_audience_package_ids',
        'gender': 'gender',
        'household_income': 'household_income',
        'included_pangle_audience_package_ids': 'included_pangle_audience_package_ids',
        'interest_category_ids': 'interest_category_ids',
        'interest_keyword_ids': 'interest_keyword_ids',
        'isp_ids': 'isp_ids',
        'languages': 'languages',
        'location_ids': 'location_ids',
        'min_android_version': 'min_android_version',
        'min_ios_version': 'min_ios_version',
        'network_types': 'network_types',
        'operating_systems': 'operating_systems',
        'purchase_intention_keyword_ids': 'purchase_intention_keyword_ids',
        'saved_audience_id': 'saved_audience_id',
        'smart_audience_enabled': 'smart_audience_enabled',
        'smart_interest_behavior_enabled': 'smart_interest_behavior_enabled',
        'spc_audience_age': 'spc_audience_age',
        'spending_power': 'spending_power',
        'zipcode_ids': 'zipcode_ids'
    }

    def __init__(self, actions=None, age_groups=None, audience_ids=None, blocked_pangle_app_ids=None, carrier_ids=None, device_model_ids=None, device_price_ranges=None, excluded_audience_ids=None, excluded_pangle_audience_package_ids=None, gender=None, household_income=None, included_pangle_audience_package_ids=None, interest_category_ids=None, interest_keyword_ids=None, isp_ids=None, languages=None, location_ids=None, min_android_version=None, min_ios_version=None, network_types=None, operating_systems=None, purchase_intention_keyword_ids=None, saved_audience_id=None, smart_audience_enabled=None, smart_interest_behavior_enabled=None, spc_audience_age=None, spending_power=None, zipcode_ids=None):  # noqa: E501
        """SmartPlusAdgroupCreateBodyTargetingSpec - a model defined in Swagger"""  # noqa: E501
        self._actions = None
        self._age_groups = None
        self._audience_ids = None
        self._blocked_pangle_app_ids = None
        self._carrier_ids = None
        self._device_model_ids = None
        self._device_price_ranges = None
        self._excluded_audience_ids = None
        self._excluded_pangle_audience_package_ids = None
        self._gender = None
        self._household_income = None
        self._included_pangle_audience_package_ids = None
        self._interest_category_ids = None
        self._interest_keyword_ids = None
        self._isp_ids = None
        self._languages = None
        self._location_ids = None
        self._min_android_version = None
        self._min_ios_version = None
        self._network_types = None
        self._operating_systems = None
        self._purchase_intention_keyword_ids = None
        self._saved_audience_id = None
        self._smart_audience_enabled = None
        self._smart_interest_behavior_enabled = None
        self._spc_audience_age = None
        self._spending_power = None
        self._zipcode_ids = None
        self.discriminator = None
        if actions is not None:
            self.actions = actions
        if age_groups is not None:
            self.age_groups = age_groups
        if audience_ids is not None:
            self.audience_ids = audience_ids
        if blocked_pangle_app_ids is not None:
            self.blocked_pangle_app_ids = blocked_pangle_app_ids
        if carrier_ids is not None:
            self.carrier_ids = carrier_ids
        if device_model_ids is not None:
            self.device_model_ids = device_model_ids
        if device_price_ranges is not None:
            self.device_price_ranges = device_price_ranges
        if excluded_audience_ids is not None:
            self.excluded_audience_ids = excluded_audience_ids
        if excluded_pangle_audience_package_ids is not None:
            self.excluded_pangle_audience_package_ids = excluded_pangle_audience_package_ids
        if gender is not None:
            self.gender = gender
        if household_income is not None:
            self.household_income = household_income
        if included_pangle_audience_package_ids is not None:
            self.included_pangle_audience_package_ids = included_pangle_audience_package_ids
        if interest_category_ids is not None:
            self.interest_category_ids = interest_category_ids
        if interest_keyword_ids is not None:
            self.interest_keyword_ids = interest_keyword_ids
        if isp_ids is not None:
            self.isp_ids = isp_ids
        if languages is not None:
            self.languages = languages
        if location_ids is not None:
            self.location_ids = location_ids
        if min_android_version is not None:
            self.min_android_version = min_android_version
        if min_ios_version is not None:
            self.min_ios_version = min_ios_version
        if network_types is not None:
            self.network_types = network_types
        if operating_systems is not None:
            self.operating_systems = operating_systems
        if purchase_intention_keyword_ids is not None:
            self.purchase_intention_keyword_ids = purchase_intention_keyword_ids
        if saved_audience_id is not None:
            self.saved_audience_id = saved_audience_id
        if smart_audience_enabled is not None:
            self.smart_audience_enabled = smart_audience_enabled
        if smart_interest_behavior_enabled is not None:
            self.smart_interest_behavior_enabled = smart_interest_behavior_enabled
        if spc_audience_age is not None:
            self.spc_audience_age = spc_audience_age
        if spending_power is not None:
            self.spending_power = spending_power
        if zipcode_ids is not None:
            self.zipcode_ids = zipcode_ids

    @property
    def actions(self):
        """Gets the actions of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501


        :return: The actions of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501
        :rtype: list[SmartPlusAdgroupCreateBodyTargetingSpecActions]
        """
        return self._actions

    @actions.setter
    def actions(self, actions):
        """Sets the actions of this SmartPlusAdgroupCreateBodyTargetingSpec.


        :param actions: The actions of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501
        :type: list[SmartPlusAdgroupCreateBodyTargetingSpecActions]
        """

        self._actions = actions

    @property
    def age_groups(self):
        """Gets the age_groups of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501


        :return: The age_groups of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501
        :rtype: list[str]
        """
        return self._age_groups

    @age_groups.setter
    def age_groups(self, age_groups):
        """Sets the age_groups of this SmartPlusAdgroupCreateBodyTargetingSpec.


        :param age_groups: The age_groups of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501
        :type: list[str]
        """

        self._age_groups = age_groups

    @property
    def audience_ids(self):
        """Gets the audience_ids of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501


        :return: The audience_ids of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501
        :rtype: list[str]
        """
        return self._audience_ids

    @audience_ids.setter
    def audience_ids(self, audience_ids):
        """Sets the audience_ids of this SmartPlusAdgroupCreateBodyTargetingSpec.


        :param audience_ids: The audience_ids of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501
        :type: list[str]
        """

        self._audience_ids = audience_ids

    @property
    def blocked_pangle_app_ids(self):
        """Gets the blocked_pangle_app_ids of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501


        :return: The blocked_pangle_app_ids of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501
        :rtype: list[str]
        """
        return self._blocked_pangle_app_ids

    @blocked_pangle_app_ids.setter
    def blocked_pangle_app_ids(self, blocked_pangle_app_ids):
        """Sets the blocked_pangle_app_ids of this SmartPlusAdgroupCreateBodyTargetingSpec.


        :param blocked_pangle_app_ids: The blocked_pangle_app_ids of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501
        :type: list[str]
        """

        self._blocked_pangle_app_ids = blocked_pangle_app_ids

    @property
    def carrier_ids(self):
        """Gets the carrier_ids of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501


        :return: The carrier_ids of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501
        :rtype: list[str]
        """
        return self._carrier_ids

    @carrier_ids.setter
    def carrier_ids(self, carrier_ids):
        """Sets the carrier_ids of this SmartPlusAdgroupCreateBodyTargetingSpec.


        :param carrier_ids: The carrier_ids of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501
        :type: list[str]
        """

        self._carrier_ids = carrier_ids

    @property
    def device_model_ids(self):
        """Gets the device_model_ids of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501


        :return: The device_model_ids of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501
        :rtype: list[str]
        """
        return self._device_model_ids

    @device_model_ids.setter
    def device_model_ids(self, device_model_ids):
        """Sets the device_model_ids of this SmartPlusAdgroupCreateBodyTargetingSpec.


        :param device_model_ids: The device_model_ids of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501
        :type: list[str]
        """

        self._device_model_ids = device_model_ids

    @property
    def device_price_ranges(self):
        """Gets the device_price_ranges of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501


        :return: The device_price_ranges of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501
        :rtype: list[int]
        """
        return self._device_price_ranges

    @device_price_ranges.setter
    def device_price_ranges(self, device_price_ranges):
        """Sets the device_price_ranges of this SmartPlusAdgroupCreateBodyTargetingSpec.


        :param device_price_ranges: The device_price_ranges of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501
        :type: list[int]
        """

        self._device_price_ranges = device_price_ranges

    @property
    def excluded_audience_ids(self):
        """Gets the excluded_audience_ids of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501


        :return: The excluded_audience_ids of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501
        :rtype: list[str]
        """
        return self._excluded_audience_ids

    @excluded_audience_ids.setter
    def excluded_audience_ids(self, excluded_audience_ids):
        """Sets the excluded_audience_ids of this SmartPlusAdgroupCreateBodyTargetingSpec.


        :param excluded_audience_ids: The excluded_audience_ids of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501
        :type: list[str]
        """

        self._excluded_audience_ids = excluded_audience_ids

    @property
    def excluded_pangle_audience_package_ids(self):
        """Gets the excluded_pangle_audience_package_ids of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501


        :return: The excluded_pangle_audience_package_ids of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501
        :rtype: list[str]
        """
        return self._excluded_pangle_audience_package_ids

    @excluded_pangle_audience_package_ids.setter
    def excluded_pangle_audience_package_ids(self, excluded_pangle_audience_package_ids):
        """Sets the excluded_pangle_audience_package_ids of this SmartPlusAdgroupCreateBodyTargetingSpec.


        :param excluded_pangle_audience_package_ids: The excluded_pangle_audience_package_ids of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501
        :type: list[str]
        """

        self._excluded_pangle_audience_package_ids = excluded_pangle_audience_package_ids

    @property
    def gender(self):
        """Gets the gender of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501


        :return: The gender of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501
        :rtype: str
        """
        return self._gender

    @gender.setter
    def gender(self, gender):
        """Sets the gender of this SmartPlusAdgroupCreateBodyTargetingSpec.


        :param gender: The gender of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501
        :type: str
        """

        self._gender = gender

    @property
    def household_income(self):
        """Gets the household_income of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501


        :return: The household_income of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501
        :rtype: list[str]
        """
        return self._household_income

    @household_income.setter
    def household_income(self, household_income):
        """Sets the household_income of this SmartPlusAdgroupCreateBodyTargetingSpec.


        :param household_income: The household_income of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501
        :type: list[str]
        """

        self._household_income = household_income

    @property
    def included_pangle_audience_package_ids(self):
        """Gets the included_pangle_audience_package_ids of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501


        :return: The included_pangle_audience_package_ids of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501
        :rtype: list[str]
        """
        return self._included_pangle_audience_package_ids

    @included_pangle_audience_package_ids.setter
    def included_pangle_audience_package_ids(self, included_pangle_audience_package_ids):
        """Sets the included_pangle_audience_package_ids of this SmartPlusAdgroupCreateBodyTargetingSpec.


        :param included_pangle_audience_package_ids: The included_pangle_audience_package_ids of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501
        :type: list[str]
        """

        self._included_pangle_audience_package_ids = included_pangle_audience_package_ids

    @property
    def interest_category_ids(self):
        """Gets the interest_category_ids of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501


        :return: The interest_category_ids of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501
        :rtype: list[str]
        """
        return self._interest_category_ids

    @interest_category_ids.setter
    def interest_category_ids(self, interest_category_ids):
        """Sets the interest_category_ids of this SmartPlusAdgroupCreateBodyTargetingSpec.


        :param interest_category_ids: The interest_category_ids of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501
        :type: list[str]
        """

        self._interest_category_ids = interest_category_ids

    @property
    def interest_keyword_ids(self):
        """Gets the interest_keyword_ids of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501


        :return: The interest_keyword_ids of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501
        :rtype: list[str]
        """
        return self._interest_keyword_ids

    @interest_keyword_ids.setter
    def interest_keyword_ids(self, interest_keyword_ids):
        """Sets the interest_keyword_ids of this SmartPlusAdgroupCreateBodyTargetingSpec.


        :param interest_keyword_ids: The interest_keyword_ids of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501
        :type: list[str]
        """

        self._interest_keyword_ids = interest_keyword_ids

    @property
    def isp_ids(self):
        """Gets the isp_ids of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501


        :return: The isp_ids of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501
        :rtype: list[str]
        """
        return self._isp_ids

    @isp_ids.setter
    def isp_ids(self, isp_ids):
        """Sets the isp_ids of this SmartPlusAdgroupCreateBodyTargetingSpec.


        :param isp_ids: The isp_ids of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501
        :type: list[str]
        """

        self._isp_ids = isp_ids

    @property
    def languages(self):
        """Gets the languages of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501


        :return: The languages of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501
        :rtype: list[str]
        """
        return self._languages

    @languages.setter
    def languages(self, languages):
        """Sets the languages of this SmartPlusAdgroupCreateBodyTargetingSpec.


        :param languages: The languages of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501
        :type: list[str]
        """

        self._languages = languages

    @property
    def location_ids(self):
        """Gets the location_ids of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501


        :return: The location_ids of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501
        :rtype: list[str]
        """
        return self._location_ids

    @location_ids.setter
    def location_ids(self, location_ids):
        """Sets the location_ids of this SmartPlusAdgroupCreateBodyTargetingSpec.


        :param location_ids: The location_ids of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501
        :type: list[str]
        """

        self._location_ids = location_ids

    @property
    def min_android_version(self):
        """Gets the min_android_version of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501


        :return: The min_android_version of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501
        :rtype: str
        """
        return self._min_android_version

    @min_android_version.setter
    def min_android_version(self, min_android_version):
        """Sets the min_android_version of this SmartPlusAdgroupCreateBodyTargetingSpec.


        :param min_android_version: The min_android_version of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501
        :type: str
        """

        self._min_android_version = min_android_version

    @property
    def min_ios_version(self):
        """Gets the min_ios_version of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501


        :return: The min_ios_version of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501
        :rtype: str
        """
        return self._min_ios_version

    @min_ios_version.setter
    def min_ios_version(self, min_ios_version):
        """Sets the min_ios_version of this SmartPlusAdgroupCreateBodyTargetingSpec.


        :param min_ios_version: The min_ios_version of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501
        :type: str
        """

        self._min_ios_version = min_ios_version

    @property
    def network_types(self):
        """Gets the network_types of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501


        :return: The network_types of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501
        :rtype: list[str]
        """
        return self._network_types

    @network_types.setter
    def network_types(self, network_types):
        """Sets the network_types of this SmartPlusAdgroupCreateBodyTargetingSpec.


        :param network_types: The network_types of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501
        :type: list[str]
        """

        self._network_types = network_types

    @property
    def operating_systems(self):
        """Gets the operating_systems of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501


        :return: The operating_systems of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501
        :rtype: list[str]
        """
        return self._operating_systems

    @operating_systems.setter
    def operating_systems(self, operating_systems):
        """Sets the operating_systems of this SmartPlusAdgroupCreateBodyTargetingSpec.


        :param operating_systems: The operating_systems of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501
        :type: list[str]
        """

        self._operating_systems = operating_systems

    @property
    def purchase_intention_keyword_ids(self):
        """Gets the purchase_intention_keyword_ids of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501


        :return: The purchase_intention_keyword_ids of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501
        :rtype: list[str]
        """
        return self._purchase_intention_keyword_ids

    @purchase_intention_keyword_ids.setter
    def purchase_intention_keyword_ids(self, purchase_intention_keyword_ids):
        """Sets the purchase_intention_keyword_ids of this SmartPlusAdgroupCreateBodyTargetingSpec.


        :param purchase_intention_keyword_ids: The purchase_intention_keyword_ids of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501
        :type: list[str]
        """

        self._purchase_intention_keyword_ids = purchase_intention_keyword_ids

    @property
    def saved_audience_id(self):
        """Gets the saved_audience_id of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501


        :return: The saved_audience_id of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501
        :rtype: str
        """
        return self._saved_audience_id

    @saved_audience_id.setter
    def saved_audience_id(self, saved_audience_id):
        """Sets the saved_audience_id of this SmartPlusAdgroupCreateBodyTargetingSpec.


        :param saved_audience_id: The saved_audience_id of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501
        :type: str
        """

        self._saved_audience_id = saved_audience_id

    @property
    def smart_audience_enabled(self):
        """Gets the smart_audience_enabled of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501


        :return: The smart_audience_enabled of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501
        :rtype: bool
        """
        return self._smart_audience_enabled

    @smart_audience_enabled.setter
    def smart_audience_enabled(self, smart_audience_enabled):
        """Sets the smart_audience_enabled of this SmartPlusAdgroupCreateBodyTargetingSpec.


        :param smart_audience_enabled: The smart_audience_enabled of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501
        :type: bool
        """

        self._smart_audience_enabled = smart_audience_enabled

    @property
    def smart_interest_behavior_enabled(self):
        """Gets the smart_interest_behavior_enabled of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501


        :return: The smart_interest_behavior_enabled of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501
        :rtype: bool
        """
        return self._smart_interest_behavior_enabled

    @smart_interest_behavior_enabled.setter
    def smart_interest_behavior_enabled(self, smart_interest_behavior_enabled):
        """Sets the smart_interest_behavior_enabled of this SmartPlusAdgroupCreateBodyTargetingSpec.


        :param smart_interest_behavior_enabled: The smart_interest_behavior_enabled of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501
        :type: bool
        """

        self._smart_interest_behavior_enabled = smart_interest_behavior_enabled

    @property
    def spc_audience_age(self):
        """Gets the spc_audience_age of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501


        :return: The spc_audience_age of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501
        :rtype: str
        """
        return self._spc_audience_age

    @spc_audience_age.setter
    def spc_audience_age(self, spc_audience_age):
        """Sets the spc_audience_age of this SmartPlusAdgroupCreateBodyTargetingSpec.


        :param spc_audience_age: The spc_audience_age of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501
        :type: str
        """

        self._spc_audience_age = spc_audience_age

    @property
    def spending_power(self):
        """Gets the spending_power of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501


        :return: The spending_power of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501
        :rtype: str
        """
        return self._spending_power

    @spending_power.setter
    def spending_power(self, spending_power):
        """Sets the spending_power of this SmartPlusAdgroupCreateBodyTargetingSpec.


        :param spending_power: The spending_power of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501
        :type: str
        """

        self._spending_power = spending_power

    @property
    def zipcode_ids(self):
        """Gets the zipcode_ids of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501


        :return: The zipcode_ids of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501
        :rtype: list[str]
        """
        return self._zipcode_ids

    @zipcode_ids.setter
    def zipcode_ids(self, zipcode_ids):
        """Sets the zipcode_ids of this SmartPlusAdgroupCreateBodyTargetingSpec.


        :param zipcode_ids: The zipcode_ids of this SmartPlusAdgroupCreateBodyTargetingSpec.  # noqa: E501
        :type: list[str]
        """

        self._zipcode_ids = zipcode_ids

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(SmartPlusAdgroupCreateBodyTargetingSpec, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SmartPlusAdgroupCreateBodyTargetingSpec):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
