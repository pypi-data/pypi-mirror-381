# coding: utf-8

"""
 Copyright 2023 TikTok Pte. Ltd.

 This source code is licensed under the MIT license found in
 the LICENSE file in the root directory of this source tree.
"""
import pprint
import re  # noqa: F401

import six

class SmartPlusAdgroupCreateBody(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'adgroup_name': 'str',
        'advertiser_id': 'str',
        'app_id': 'str',
        'attribution_event_count': 'str',
        'bid_price': 'float',
        'bid_type': 'str',
        'billing_event': 'str',
        'budget': 'float',
        'budget_mode': 'str',
        'campaign_id': 'str',
        'catalog_authorized_bc_id': 'str',
        'catalog_id': 'str',
        'click_attribution_window': 'str',
        'comment_disabled': 'bool',
        'conversion_bid_price': 'float',
        'custom_conversion_id': 'str',
        'dayparting': 'str',
        'deep_bid_type': 'str',
        'deep_cpabid': 'float',
        'deep_funnel_event_source': 'str',
        'deep_funnel_event_source_id': 'str',
        'deep_funnel_optimization_event': 'str',
        'deep_funnel_optimization_status': 'str',
        'engaged_view_attribution_window': 'str',
        'identity_authorized_bc_id': 'str',
        'identity_id': 'str',
        'identity_type': 'str',
        'message_event_set_id': 'str',
        'messaging_app_account_id': 'str',
        'messaging_app_type': 'str',
        'min_budget': 'float',
        'movie_premiere_date': 'str',
        'open_api_partner': 'str',
        'operation_status': 'str',
        'optimization_event': 'str',
        'optimization_goal': 'str',
        'phone_info': 'SmartPlusAdgroupCreateBodyPhoneInfo',
        'pixel_id': 'str',
        'placement_type': 'str',
        'placements': 'list[str]',
        'product_source': 'str',
        'promotion_target_type': 'str',
        'promotion_type': 'str',
        'promotion_website_type': 'str',
        'request_id': 'str',
        'roas_bid': 'float',
        'schedule_end_time': 'str',
        'schedule_start_time': 'str',
        'schedule_type': 'str',
        'share_disabled': 'bool',
        'suggestion_audience_enabled': 'bool',
        'targeting_optimization_mode': 'str',
        'targeting_spec': 'SmartPlusAdgroupCreateBodyTargetingSpec',
        'vbo_window': 'str',
        'video_download_disabled': 'bool',
        'view_attribution_window': 'str',
        'zalo_id_type': 'str'
    }

    attribute_map = {
        'adgroup_name': 'adgroup_name',
        'advertiser_id': 'advertiser_id',
        'app_id': 'app_id',
        'attribution_event_count': 'attribution_event_count',
        'bid_price': 'bid_price',
        'bid_type': 'bid_type',
        'billing_event': 'billing_event',
        'budget': 'budget',
        'budget_mode': 'budget_mode',
        'campaign_id': 'campaign_id',
        'catalog_authorized_bc_id': 'catalog_authorized_bc_id',
        'catalog_id': 'catalog_id',
        'click_attribution_window': 'click_attribution_window',
        'comment_disabled': 'comment_disabled',
        'conversion_bid_price': 'conversion_bid_price',
        'custom_conversion_id': 'custom_conversion_id',
        'dayparting': 'dayparting',
        'deep_bid_type': 'deep_bid_type',
        'deep_cpabid': 'deep_cpabid',
        'deep_funnel_event_source': 'deep_funnel_event_source',
        'deep_funnel_event_source_id': 'deep_funnel_event_source_id',
        'deep_funnel_optimization_event': 'deep_funnel_optimization_event',
        'deep_funnel_optimization_status': 'deep_funnel_optimization_status',
        'engaged_view_attribution_window': 'engaged_view_attribution_window',
        'identity_authorized_bc_id': 'identity_authorized_bc_id',
        'identity_id': 'identity_id',
        'identity_type': 'identity_type',
        'message_event_set_id': 'message_event_set_id',
        'messaging_app_account_id': 'messaging_app_account_id',
        'messaging_app_type': 'messaging_app_type',
        'min_budget': 'min_budget',
        'movie_premiere_date': 'movie_premiere_date',
        'open_api_partner': 'open_api_partner',
        'operation_status': 'operation_status',
        'optimization_event': 'optimization_event',
        'optimization_goal': 'optimization_goal',
        'phone_info': 'phone_info',
        'pixel_id': 'pixel_id',
        'placement_type': 'placement_type',
        'placements': 'placements',
        'product_source': 'product_source',
        'promotion_target_type': 'promotion_target_type',
        'promotion_type': 'promotion_type',
        'promotion_website_type': 'promotion_website_type',
        'request_id': 'request_id',
        'roas_bid': 'roas_bid',
        'schedule_end_time': 'schedule_end_time',
        'schedule_start_time': 'schedule_start_time',
        'schedule_type': 'schedule_type',
        'share_disabled': 'share_disabled',
        'suggestion_audience_enabled': 'suggestion_audience_enabled',
        'targeting_optimization_mode': 'targeting_optimization_mode',
        'targeting_spec': 'targeting_spec',
        'vbo_window': 'vbo_window',
        'video_download_disabled': 'video_download_disabled',
        'view_attribution_window': 'view_attribution_window',
        'zalo_id_type': 'zalo_id_type'
    }

    def __init__(self, adgroup_name=None, advertiser_id=None, app_id=None, attribution_event_count=None, bid_price=None, bid_type=None, billing_event=None, budget=None, budget_mode=None, campaign_id=None, catalog_authorized_bc_id=None, catalog_id=None, click_attribution_window=None, comment_disabled=False, conversion_bid_price=None, custom_conversion_id=None, dayparting=None, deep_bid_type=None, deep_cpabid=None, deep_funnel_event_source=None, deep_funnel_event_source_id=None, deep_funnel_optimization_event=None, deep_funnel_optimization_status=None, engaged_view_attribution_window=None, identity_authorized_bc_id=None, identity_id=None, identity_type=None, message_event_set_id=None, messaging_app_account_id=None, messaging_app_type=None, min_budget=None, movie_premiere_date=None, open_api_partner=None, operation_status=None, optimization_event=None, optimization_goal=None, phone_info=None, pixel_id=None, placement_type=None, placements=None, product_source=None, promotion_target_type=None, promotion_type=None, promotion_website_type=None, request_id=None, roas_bid=None, schedule_end_time=None, schedule_start_time=None, schedule_type=None, share_disabled=None, suggestion_audience_enabled=None, targeting_optimization_mode=None, targeting_spec=None, vbo_window=None, video_download_disabled=None, view_attribution_window=None, zalo_id_type=None):  # noqa: E501
        """SmartPlusAdgroupCreateBody - a model defined in Swagger"""  # noqa: E501
        self._adgroup_name = None
        self._advertiser_id = None
        self._app_id = None
        self._attribution_event_count = None
        self._bid_price = None
        self._bid_type = None
        self._billing_event = None
        self._budget = None
        self._budget_mode = None
        self._campaign_id = None
        self._catalog_authorized_bc_id = None
        self._catalog_id = None
        self._click_attribution_window = None
        self._comment_disabled = None
        self._conversion_bid_price = None
        self._custom_conversion_id = None
        self._dayparting = None
        self._deep_bid_type = None
        self._deep_cpabid = None
        self._deep_funnel_event_source = None
        self._deep_funnel_event_source_id = None
        self._deep_funnel_optimization_event = None
        self._deep_funnel_optimization_status = None
        self._engaged_view_attribution_window = None
        self._identity_authorized_bc_id = None
        self._identity_id = None
        self._identity_type = None
        self._message_event_set_id = None
        self._messaging_app_account_id = None
        self._messaging_app_type = None
        self._min_budget = None
        self._movie_premiere_date = None
        self._open_api_partner = None
        self._operation_status = None
        self._optimization_event = None
        self._optimization_goal = None
        self._phone_info = None
        self._pixel_id = None
        self._placement_type = None
        self._placements = None
        self._product_source = None
        self._promotion_target_type = None
        self._promotion_type = None
        self._promotion_website_type = None
        self._request_id = None
        self._roas_bid = None
        self._schedule_end_time = None
        self._schedule_start_time = None
        self._schedule_type = None
        self._share_disabled = None
        self._suggestion_audience_enabled = None
        self._targeting_optimization_mode = None
        self._targeting_spec = None
        self._vbo_window = None
        self._video_download_disabled = None
        self._view_attribution_window = None
        self._zalo_id_type = None
        self.discriminator = None
        self.adgroup_name = adgroup_name
        self.advertiser_id = advertiser_id
        if app_id is not None:
            self.app_id = app_id
        if attribution_event_count is not None:
            self.attribution_event_count = attribution_event_count
        if bid_price is not None:
            self.bid_price = bid_price
        if bid_type is not None:
            self.bid_type = bid_type
        self.billing_event = billing_event
        if budget is not None:
            self.budget = budget
        if budget_mode is not None:
            self.budget_mode = budget_mode
        self.campaign_id = campaign_id
        if catalog_authorized_bc_id is not None:
            self.catalog_authorized_bc_id = catalog_authorized_bc_id
        if catalog_id is not None:
            self.catalog_id = catalog_id
        if click_attribution_window is not None:
            self.click_attribution_window = click_attribution_window
        if comment_disabled is not None:
            self.comment_disabled = comment_disabled
        if conversion_bid_price is not None:
            self.conversion_bid_price = conversion_bid_price
        if custom_conversion_id is not None:
            self.custom_conversion_id = custom_conversion_id
        if dayparting is not None:
            self.dayparting = dayparting
        if deep_bid_type is not None:
            self.deep_bid_type = deep_bid_type
        if deep_cpabid is not None:
            self.deep_cpabid = deep_cpabid
        if deep_funnel_event_source is not None:
            self.deep_funnel_event_source = deep_funnel_event_source
        if deep_funnel_event_source_id is not None:
            self.deep_funnel_event_source_id = deep_funnel_event_source_id
        if deep_funnel_optimization_event is not None:
            self.deep_funnel_optimization_event = deep_funnel_optimization_event
        if deep_funnel_optimization_status is not None:
            self.deep_funnel_optimization_status = deep_funnel_optimization_status
        if engaged_view_attribution_window is not None:
            self.engaged_view_attribution_window = engaged_view_attribution_window
        if identity_authorized_bc_id is not None:
            self.identity_authorized_bc_id = identity_authorized_bc_id
        if identity_id is not None:
            self.identity_id = identity_id
        if identity_type is not None:
            self.identity_type = identity_type
        if message_event_set_id is not None:
            self.message_event_set_id = message_event_set_id
        if messaging_app_account_id is not None:
            self.messaging_app_account_id = messaging_app_account_id
        if messaging_app_type is not None:
            self.messaging_app_type = messaging_app_type
        if min_budget is not None:
            self.min_budget = min_budget
        if movie_premiere_date is not None:
            self.movie_premiere_date = movie_premiere_date
        if open_api_partner is not None:
            self.open_api_partner = open_api_partner
        if operation_status is not None:
            self.operation_status = operation_status
        if optimization_event is not None:
            self.optimization_event = optimization_event
        self.optimization_goal = optimization_goal
        if phone_info is not None:
            self.phone_info = phone_info
        if pixel_id is not None:
            self.pixel_id = pixel_id
        if placement_type is not None:
            self.placement_type = placement_type
        if placements is not None:
            self.placements = placements
        if product_source is not None:
            self.product_source = product_source
        if promotion_target_type is not None:
            self.promotion_target_type = promotion_target_type
        self.promotion_type = promotion_type
        if promotion_website_type is not None:
            self.promotion_website_type = promotion_website_type
        self.request_id = request_id
        if roas_bid is not None:
            self.roas_bid = roas_bid
        if schedule_end_time is not None:
            self.schedule_end_time = schedule_end_time
        self.schedule_start_time = schedule_start_time
        self.schedule_type = schedule_type
        if share_disabled is not None:
            self.share_disabled = share_disabled
        if suggestion_audience_enabled is not None:
            self.suggestion_audience_enabled = suggestion_audience_enabled
        if targeting_optimization_mode is not None:
            self.targeting_optimization_mode = targeting_optimization_mode
        self.targeting_spec = targeting_spec
        if vbo_window is not None:
            self.vbo_window = vbo_window
        if video_download_disabled is not None:
            self.video_download_disabled = video_download_disabled
        if view_attribution_window is not None:
            self.view_attribution_window = view_attribution_window
        if zalo_id_type is not None:
            self.zalo_id_type = zalo_id_type

    @property
    def adgroup_name(self):
        """Gets the adgroup_name of this SmartPlusAdgroupCreateBody.  # noqa: E501


        :return: The adgroup_name of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :rtype: str
        """
        return self._adgroup_name

    @adgroup_name.setter
    def adgroup_name(self, adgroup_name):
        """Sets the adgroup_name of this SmartPlusAdgroupCreateBody.


        :param adgroup_name: The adgroup_name of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :type: str
        """
        if adgroup_name is None:
            raise ValueError("Invalid value for `adgroup_name`, must not be `None`")  # noqa: E501

        self._adgroup_name = adgroup_name

    @property
    def advertiser_id(self):
        """Gets the advertiser_id of this SmartPlusAdgroupCreateBody.  # noqa: E501


        :return: The advertiser_id of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :rtype: str
        """
        return self._advertiser_id

    @advertiser_id.setter
    def advertiser_id(self, advertiser_id):
        """Sets the advertiser_id of this SmartPlusAdgroupCreateBody.


        :param advertiser_id: The advertiser_id of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :type: str
        """
        if advertiser_id is None:
            raise ValueError("Invalid value for `advertiser_id`, must not be `None`")  # noqa: E501

        self._advertiser_id = advertiser_id

    @property
    def app_id(self):
        """Gets the app_id of this SmartPlusAdgroupCreateBody.  # noqa: E501


        :return: The app_id of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :rtype: str
        """
        return self._app_id

    @app_id.setter
    def app_id(self, app_id):
        """Sets the app_id of this SmartPlusAdgroupCreateBody.


        :param app_id: The app_id of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :type: str
        """

        self._app_id = app_id

    @property
    def attribution_event_count(self):
        """Gets the attribution_event_count of this SmartPlusAdgroupCreateBody.  # noqa: E501


        :return: The attribution_event_count of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :rtype: str
        """
        return self._attribution_event_count

    @attribution_event_count.setter
    def attribution_event_count(self, attribution_event_count):
        """Sets the attribution_event_count of this SmartPlusAdgroupCreateBody.


        :param attribution_event_count: The attribution_event_count of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :type: str
        """

        self._attribution_event_count = attribution_event_count

    @property
    def bid_price(self):
        """Gets the bid_price of this SmartPlusAdgroupCreateBody.  # noqa: E501


        :return: The bid_price of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :rtype: float
        """
        return self._bid_price

    @bid_price.setter
    def bid_price(self, bid_price):
        """Sets the bid_price of this SmartPlusAdgroupCreateBody.


        :param bid_price: The bid_price of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :type: float
        """

        self._bid_price = bid_price

    @property
    def bid_type(self):
        """Gets the bid_type of this SmartPlusAdgroupCreateBody.  # noqa: E501


        :return: The bid_type of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :rtype: str
        """
        return self._bid_type

    @bid_type.setter
    def bid_type(self, bid_type):
        """Sets the bid_type of this SmartPlusAdgroupCreateBody.


        :param bid_type: The bid_type of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :type: str
        """

        self._bid_type = bid_type

    @property
    def billing_event(self):
        """Gets the billing_event of this SmartPlusAdgroupCreateBody.  # noqa: E501


        :return: The billing_event of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :rtype: str
        """
        return self._billing_event

    @billing_event.setter
    def billing_event(self, billing_event):
        """Sets the billing_event of this SmartPlusAdgroupCreateBody.


        :param billing_event: The billing_event of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :type: str
        """
        if billing_event is None:
            raise ValueError("Invalid value for `billing_event`, must not be `None`")  # noqa: E501

        self._billing_event = billing_event

    @property
    def budget(self):
        """Gets the budget of this SmartPlusAdgroupCreateBody.  # noqa: E501


        :return: The budget of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :rtype: float
        """
        return self._budget

    @budget.setter
    def budget(self, budget):
        """Sets the budget of this SmartPlusAdgroupCreateBody.


        :param budget: The budget of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :type: float
        """

        self._budget = budget

    @property
    def budget_mode(self):
        """Gets the budget_mode of this SmartPlusAdgroupCreateBody.  # noqa: E501


        :return: The budget_mode of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :rtype: str
        """
        return self._budget_mode

    @budget_mode.setter
    def budget_mode(self, budget_mode):
        """Sets the budget_mode of this SmartPlusAdgroupCreateBody.


        :param budget_mode: The budget_mode of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :type: str
        """

        self._budget_mode = budget_mode

    @property
    def campaign_id(self):
        """Gets the campaign_id of this SmartPlusAdgroupCreateBody.  # noqa: E501


        :return: The campaign_id of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :rtype: str
        """
        return self._campaign_id

    @campaign_id.setter
    def campaign_id(self, campaign_id):
        """Sets the campaign_id of this SmartPlusAdgroupCreateBody.


        :param campaign_id: The campaign_id of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :type: str
        """
        if campaign_id is None:
            raise ValueError("Invalid value for `campaign_id`, must not be `None`")  # noqa: E501

        self._campaign_id = campaign_id

    @property
    def catalog_authorized_bc_id(self):
        """Gets the catalog_authorized_bc_id of this SmartPlusAdgroupCreateBody.  # noqa: E501


        :return: The catalog_authorized_bc_id of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :rtype: str
        """
        return self._catalog_authorized_bc_id

    @catalog_authorized_bc_id.setter
    def catalog_authorized_bc_id(self, catalog_authorized_bc_id):
        """Sets the catalog_authorized_bc_id of this SmartPlusAdgroupCreateBody.


        :param catalog_authorized_bc_id: The catalog_authorized_bc_id of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :type: str
        """

        self._catalog_authorized_bc_id = catalog_authorized_bc_id

    @property
    def catalog_id(self):
        """Gets the catalog_id of this SmartPlusAdgroupCreateBody.  # noqa: E501


        :return: The catalog_id of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :rtype: str
        """
        return self._catalog_id

    @catalog_id.setter
    def catalog_id(self, catalog_id):
        """Sets the catalog_id of this SmartPlusAdgroupCreateBody.


        :param catalog_id: The catalog_id of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :type: str
        """

        self._catalog_id = catalog_id

    @property
    def click_attribution_window(self):
        """Gets the click_attribution_window of this SmartPlusAdgroupCreateBody.  # noqa: E501


        :return: The click_attribution_window of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :rtype: str
        """
        return self._click_attribution_window

    @click_attribution_window.setter
    def click_attribution_window(self, click_attribution_window):
        """Sets the click_attribution_window of this SmartPlusAdgroupCreateBody.


        :param click_attribution_window: The click_attribution_window of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :type: str
        """

        self._click_attribution_window = click_attribution_window

    @property
    def comment_disabled(self):
        """Gets the comment_disabled of this SmartPlusAdgroupCreateBody.  # noqa: E501


        :return: The comment_disabled of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :rtype: bool
        """
        return self._comment_disabled

    @comment_disabled.setter
    def comment_disabled(self, comment_disabled):
        """Sets the comment_disabled of this SmartPlusAdgroupCreateBody.


        :param comment_disabled: The comment_disabled of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :type: bool
        """

        self._comment_disabled = comment_disabled

    @property
    def conversion_bid_price(self):
        """Gets the conversion_bid_price of this SmartPlusAdgroupCreateBody.  # noqa: E501


        :return: The conversion_bid_price of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :rtype: float
        """
        return self._conversion_bid_price

    @conversion_bid_price.setter
    def conversion_bid_price(self, conversion_bid_price):
        """Sets the conversion_bid_price of this SmartPlusAdgroupCreateBody.


        :param conversion_bid_price: The conversion_bid_price of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :type: float
        """

        self._conversion_bid_price = conversion_bid_price

    @property
    def custom_conversion_id(self):
        """Gets the custom_conversion_id of this SmartPlusAdgroupCreateBody.  # noqa: E501


        :return: The custom_conversion_id of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :rtype: str
        """
        return self._custom_conversion_id

    @custom_conversion_id.setter
    def custom_conversion_id(self, custom_conversion_id):
        """Sets the custom_conversion_id of this SmartPlusAdgroupCreateBody.


        :param custom_conversion_id: The custom_conversion_id of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :type: str
        """

        self._custom_conversion_id = custom_conversion_id

    @property
    def dayparting(self):
        """Gets the dayparting of this SmartPlusAdgroupCreateBody.  # noqa: E501


        :return: The dayparting of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :rtype: str
        """
        return self._dayparting

    @dayparting.setter
    def dayparting(self, dayparting):
        """Sets the dayparting of this SmartPlusAdgroupCreateBody.


        :param dayparting: The dayparting of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :type: str
        """

        self._dayparting = dayparting

    @property
    def deep_bid_type(self):
        """Gets the deep_bid_type of this SmartPlusAdgroupCreateBody.  # noqa: E501


        :return: The deep_bid_type of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :rtype: str
        """
        return self._deep_bid_type

    @deep_bid_type.setter
    def deep_bid_type(self, deep_bid_type):
        """Sets the deep_bid_type of this SmartPlusAdgroupCreateBody.


        :param deep_bid_type: The deep_bid_type of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :type: str
        """

        self._deep_bid_type = deep_bid_type

    @property
    def deep_cpabid(self):
        """Gets the deep_cpabid of this SmartPlusAdgroupCreateBody.  # noqa: E501


        :return: The deep_cpabid of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :rtype: float
        """
        return self._deep_cpabid

    @deep_cpabid.setter
    def deep_cpabid(self, deep_cpabid):
        """Sets the deep_cpabid of this SmartPlusAdgroupCreateBody.


        :param deep_cpabid: The deep_cpabid of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :type: float
        """

        self._deep_cpabid = deep_cpabid

    @property
    def deep_funnel_event_source(self):
        """Gets the deep_funnel_event_source of this SmartPlusAdgroupCreateBody.  # noqa: E501


        :return: The deep_funnel_event_source of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :rtype: str
        """
        return self._deep_funnel_event_source

    @deep_funnel_event_source.setter
    def deep_funnel_event_source(self, deep_funnel_event_source):
        """Sets the deep_funnel_event_source of this SmartPlusAdgroupCreateBody.


        :param deep_funnel_event_source: The deep_funnel_event_source of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :type: str
        """

        self._deep_funnel_event_source = deep_funnel_event_source

    @property
    def deep_funnel_event_source_id(self):
        """Gets the deep_funnel_event_source_id of this SmartPlusAdgroupCreateBody.  # noqa: E501


        :return: The deep_funnel_event_source_id of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :rtype: str
        """
        return self._deep_funnel_event_source_id

    @deep_funnel_event_source_id.setter
    def deep_funnel_event_source_id(self, deep_funnel_event_source_id):
        """Sets the deep_funnel_event_source_id of this SmartPlusAdgroupCreateBody.


        :param deep_funnel_event_source_id: The deep_funnel_event_source_id of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :type: str
        """

        self._deep_funnel_event_source_id = deep_funnel_event_source_id

    @property
    def deep_funnel_optimization_event(self):
        """Gets the deep_funnel_optimization_event of this SmartPlusAdgroupCreateBody.  # noqa: E501


        :return: The deep_funnel_optimization_event of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :rtype: str
        """
        return self._deep_funnel_optimization_event

    @deep_funnel_optimization_event.setter
    def deep_funnel_optimization_event(self, deep_funnel_optimization_event):
        """Sets the deep_funnel_optimization_event of this SmartPlusAdgroupCreateBody.


        :param deep_funnel_optimization_event: The deep_funnel_optimization_event of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :type: str
        """

        self._deep_funnel_optimization_event = deep_funnel_optimization_event

    @property
    def deep_funnel_optimization_status(self):
        """Gets the deep_funnel_optimization_status of this SmartPlusAdgroupCreateBody.  # noqa: E501


        :return: The deep_funnel_optimization_status of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :rtype: str
        """
        return self._deep_funnel_optimization_status

    @deep_funnel_optimization_status.setter
    def deep_funnel_optimization_status(self, deep_funnel_optimization_status):
        """Sets the deep_funnel_optimization_status of this SmartPlusAdgroupCreateBody.


        :param deep_funnel_optimization_status: The deep_funnel_optimization_status of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :type: str
        """

        self._deep_funnel_optimization_status = deep_funnel_optimization_status

    @property
    def engaged_view_attribution_window(self):
        """Gets the engaged_view_attribution_window of this SmartPlusAdgroupCreateBody.  # noqa: E501


        :return: The engaged_view_attribution_window of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :rtype: str
        """
        return self._engaged_view_attribution_window

    @engaged_view_attribution_window.setter
    def engaged_view_attribution_window(self, engaged_view_attribution_window):
        """Sets the engaged_view_attribution_window of this SmartPlusAdgroupCreateBody.


        :param engaged_view_attribution_window: The engaged_view_attribution_window of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :type: str
        """

        self._engaged_view_attribution_window = engaged_view_attribution_window

    @property
    def identity_authorized_bc_id(self):
        """Gets the identity_authorized_bc_id of this SmartPlusAdgroupCreateBody.  # noqa: E501


        :return: The identity_authorized_bc_id of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :rtype: str
        """
        return self._identity_authorized_bc_id

    @identity_authorized_bc_id.setter
    def identity_authorized_bc_id(self, identity_authorized_bc_id):
        """Sets the identity_authorized_bc_id of this SmartPlusAdgroupCreateBody.


        :param identity_authorized_bc_id: The identity_authorized_bc_id of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :type: str
        """

        self._identity_authorized_bc_id = identity_authorized_bc_id

    @property
    def identity_id(self):
        """Gets the identity_id of this SmartPlusAdgroupCreateBody.  # noqa: E501


        :return: The identity_id of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :rtype: str
        """
        return self._identity_id

    @identity_id.setter
    def identity_id(self, identity_id):
        """Sets the identity_id of this SmartPlusAdgroupCreateBody.


        :param identity_id: The identity_id of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :type: str
        """

        self._identity_id = identity_id

    @property
    def identity_type(self):
        """Gets the identity_type of this SmartPlusAdgroupCreateBody.  # noqa: E501


        :return: The identity_type of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :rtype: str
        """
        return self._identity_type

    @identity_type.setter
    def identity_type(self, identity_type):
        """Sets the identity_type of this SmartPlusAdgroupCreateBody.


        :param identity_type: The identity_type of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :type: str
        """

        self._identity_type = identity_type

    @property
    def message_event_set_id(self):
        """Gets the message_event_set_id of this SmartPlusAdgroupCreateBody.  # noqa: E501


        :return: The message_event_set_id of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :rtype: str
        """
        return self._message_event_set_id

    @message_event_set_id.setter
    def message_event_set_id(self, message_event_set_id):
        """Sets the message_event_set_id of this SmartPlusAdgroupCreateBody.


        :param message_event_set_id: The message_event_set_id of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :type: str
        """

        self._message_event_set_id = message_event_set_id

    @property
    def messaging_app_account_id(self):
        """Gets the messaging_app_account_id of this SmartPlusAdgroupCreateBody.  # noqa: E501


        :return: The messaging_app_account_id of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :rtype: str
        """
        return self._messaging_app_account_id

    @messaging_app_account_id.setter
    def messaging_app_account_id(self, messaging_app_account_id):
        """Sets the messaging_app_account_id of this SmartPlusAdgroupCreateBody.


        :param messaging_app_account_id: The messaging_app_account_id of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :type: str
        """

        self._messaging_app_account_id = messaging_app_account_id

    @property
    def messaging_app_type(self):
        """Gets the messaging_app_type of this SmartPlusAdgroupCreateBody.  # noqa: E501


        :return: The messaging_app_type of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :rtype: str
        """
        return self._messaging_app_type

    @messaging_app_type.setter
    def messaging_app_type(self, messaging_app_type):
        """Sets the messaging_app_type of this SmartPlusAdgroupCreateBody.


        :param messaging_app_type: The messaging_app_type of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :type: str
        """

        self._messaging_app_type = messaging_app_type

    @property
    def min_budget(self):
        """Gets the min_budget of this SmartPlusAdgroupCreateBody.  # noqa: E501


        :return: The min_budget of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :rtype: float
        """
        return self._min_budget

    @min_budget.setter
    def min_budget(self, min_budget):
        """Sets the min_budget of this SmartPlusAdgroupCreateBody.


        :param min_budget: The min_budget of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :type: float
        """

        self._min_budget = min_budget

    @property
    def movie_premiere_date(self):
        """Gets the movie_premiere_date of this SmartPlusAdgroupCreateBody.  # noqa: E501


        :return: The movie_premiere_date of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :rtype: str
        """
        return self._movie_premiere_date

    @movie_premiere_date.setter
    def movie_premiere_date(self, movie_premiere_date):
        """Sets the movie_premiere_date of this SmartPlusAdgroupCreateBody.


        :param movie_premiere_date: The movie_premiere_date of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :type: str
        """

        self._movie_premiere_date = movie_premiere_date

    @property
    def open_api_partner(self):
        """Gets the open_api_partner of this SmartPlusAdgroupCreateBody.  # noqa: E501


        :return: The open_api_partner of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :rtype: str
        """
        return self._open_api_partner

    @open_api_partner.setter
    def open_api_partner(self, open_api_partner):
        """Sets the open_api_partner of this SmartPlusAdgroupCreateBody.


        :param open_api_partner: The open_api_partner of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :type: str
        """

        self._open_api_partner = open_api_partner

    @property
    def operation_status(self):
        """Gets the operation_status of this SmartPlusAdgroupCreateBody.  # noqa: E501


        :return: The operation_status of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :rtype: str
        """
        return self._operation_status

    @operation_status.setter
    def operation_status(self, operation_status):
        """Sets the operation_status of this SmartPlusAdgroupCreateBody.


        :param operation_status: The operation_status of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :type: str
        """

        self._operation_status = operation_status

    @property
    def optimization_event(self):
        """Gets the optimization_event of this SmartPlusAdgroupCreateBody.  # noqa: E501


        :return: The optimization_event of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :rtype: str
        """
        return self._optimization_event

    @optimization_event.setter
    def optimization_event(self, optimization_event):
        """Sets the optimization_event of this SmartPlusAdgroupCreateBody.


        :param optimization_event: The optimization_event of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :type: str
        """

        self._optimization_event = optimization_event

    @property
    def optimization_goal(self):
        """Gets the optimization_goal of this SmartPlusAdgroupCreateBody.  # noqa: E501


        :return: The optimization_goal of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :rtype: str
        """
        return self._optimization_goal

    @optimization_goal.setter
    def optimization_goal(self, optimization_goal):
        """Sets the optimization_goal of this SmartPlusAdgroupCreateBody.


        :param optimization_goal: The optimization_goal of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :type: str
        """
        if optimization_goal is None:
            raise ValueError("Invalid value for `optimization_goal`, must not be `None`")  # noqa: E501

        self._optimization_goal = optimization_goal

    @property
    def phone_info(self):
        """Gets the phone_info of this SmartPlusAdgroupCreateBody.  # noqa: E501


        :return: The phone_info of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :rtype: SmartPlusAdgroupCreateBodyPhoneInfo
        """
        return self._phone_info

    @phone_info.setter
    def phone_info(self, phone_info):
        """Sets the phone_info of this SmartPlusAdgroupCreateBody.


        :param phone_info: The phone_info of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :type: SmartPlusAdgroupCreateBodyPhoneInfo
        """

        self._phone_info = phone_info

    @property
    def pixel_id(self):
        """Gets the pixel_id of this SmartPlusAdgroupCreateBody.  # noqa: E501


        :return: The pixel_id of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :rtype: str
        """
        return self._pixel_id

    @pixel_id.setter
    def pixel_id(self, pixel_id):
        """Sets the pixel_id of this SmartPlusAdgroupCreateBody.


        :param pixel_id: The pixel_id of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :type: str
        """

        self._pixel_id = pixel_id

    @property
    def placement_type(self):
        """Gets the placement_type of this SmartPlusAdgroupCreateBody.  # noqa: E501


        :return: The placement_type of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :rtype: str
        """
        return self._placement_type

    @placement_type.setter
    def placement_type(self, placement_type):
        """Sets the placement_type of this SmartPlusAdgroupCreateBody.


        :param placement_type: The placement_type of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :type: str
        """

        self._placement_type = placement_type

    @property
    def placements(self):
        """Gets the placements of this SmartPlusAdgroupCreateBody.  # noqa: E501


        :return: The placements of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :rtype: list[str]
        """
        return self._placements

    @placements.setter
    def placements(self, placements):
        """Sets the placements of this SmartPlusAdgroupCreateBody.


        :param placements: The placements of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :type: list[str]
        """

        self._placements = placements

    @property
    def product_source(self):
        """Gets the product_source of this SmartPlusAdgroupCreateBody.  # noqa: E501


        :return: The product_source of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :rtype: str
        """
        return self._product_source

    @product_source.setter
    def product_source(self, product_source):
        """Sets the product_source of this SmartPlusAdgroupCreateBody.


        :param product_source: The product_source of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :type: str
        """

        self._product_source = product_source

    @property
    def promotion_target_type(self):
        """Gets the promotion_target_type of this SmartPlusAdgroupCreateBody.  # noqa: E501


        :return: The promotion_target_type of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :rtype: str
        """
        return self._promotion_target_type

    @promotion_target_type.setter
    def promotion_target_type(self, promotion_target_type):
        """Sets the promotion_target_type of this SmartPlusAdgroupCreateBody.


        :param promotion_target_type: The promotion_target_type of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :type: str
        """

        self._promotion_target_type = promotion_target_type

    @property
    def promotion_type(self):
        """Gets the promotion_type of this SmartPlusAdgroupCreateBody.  # noqa: E501


        :return: The promotion_type of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :rtype: str
        """
        return self._promotion_type

    @promotion_type.setter
    def promotion_type(self, promotion_type):
        """Sets the promotion_type of this SmartPlusAdgroupCreateBody.


        :param promotion_type: The promotion_type of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :type: str
        """
        if promotion_type is None:
            raise ValueError("Invalid value for `promotion_type`, must not be `None`")  # noqa: E501

        self._promotion_type = promotion_type

    @property
    def promotion_website_type(self):
        """Gets the promotion_website_type of this SmartPlusAdgroupCreateBody.  # noqa: E501


        :return: The promotion_website_type of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :rtype: str
        """
        return self._promotion_website_type

    @promotion_website_type.setter
    def promotion_website_type(self, promotion_website_type):
        """Sets the promotion_website_type of this SmartPlusAdgroupCreateBody.


        :param promotion_website_type: The promotion_website_type of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :type: str
        """

        self._promotion_website_type = promotion_website_type

    @property
    def request_id(self):
        """Gets the request_id of this SmartPlusAdgroupCreateBody.  # noqa: E501


        :return: The request_id of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :rtype: str
        """
        return self._request_id

    @request_id.setter
    def request_id(self, request_id):
        """Sets the request_id of this SmartPlusAdgroupCreateBody.


        :param request_id: The request_id of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :type: str
        """
        if request_id is None:
            raise ValueError("Invalid value for `request_id`, must not be `None`")  # noqa: E501

        self._request_id = request_id

    @property
    def roas_bid(self):
        """Gets the roas_bid of this SmartPlusAdgroupCreateBody.  # noqa: E501


        :return: The roas_bid of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :rtype: float
        """
        return self._roas_bid

    @roas_bid.setter
    def roas_bid(self, roas_bid):
        """Sets the roas_bid of this SmartPlusAdgroupCreateBody.


        :param roas_bid: The roas_bid of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :type: float
        """

        self._roas_bid = roas_bid

    @property
    def schedule_end_time(self):
        """Gets the schedule_end_time of this SmartPlusAdgroupCreateBody.  # noqa: E501


        :return: The schedule_end_time of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :rtype: str
        """
        return self._schedule_end_time

    @schedule_end_time.setter
    def schedule_end_time(self, schedule_end_time):
        """Sets the schedule_end_time of this SmartPlusAdgroupCreateBody.


        :param schedule_end_time: The schedule_end_time of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :type: str
        """

        self._schedule_end_time = schedule_end_time

    @property
    def schedule_start_time(self):
        """Gets the schedule_start_time of this SmartPlusAdgroupCreateBody.  # noqa: E501


        :return: The schedule_start_time of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :rtype: str
        """
        return self._schedule_start_time

    @schedule_start_time.setter
    def schedule_start_time(self, schedule_start_time):
        """Sets the schedule_start_time of this SmartPlusAdgroupCreateBody.


        :param schedule_start_time: The schedule_start_time of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :type: str
        """
        if schedule_start_time is None:
            raise ValueError("Invalid value for `schedule_start_time`, must not be `None`")  # noqa: E501

        self._schedule_start_time = schedule_start_time

    @property
    def schedule_type(self):
        """Gets the schedule_type of this SmartPlusAdgroupCreateBody.  # noqa: E501


        :return: The schedule_type of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :rtype: str
        """
        return self._schedule_type

    @schedule_type.setter
    def schedule_type(self, schedule_type):
        """Sets the schedule_type of this SmartPlusAdgroupCreateBody.


        :param schedule_type: The schedule_type of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :type: str
        """
        if schedule_type is None:
            raise ValueError("Invalid value for `schedule_type`, must not be `None`")  # noqa: E501

        self._schedule_type = schedule_type

    @property
    def share_disabled(self):
        """Gets the share_disabled of this SmartPlusAdgroupCreateBody.  # noqa: E501


        :return: The share_disabled of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :rtype: bool
        """
        return self._share_disabled

    @share_disabled.setter
    def share_disabled(self, share_disabled):
        """Sets the share_disabled of this SmartPlusAdgroupCreateBody.


        :param share_disabled: The share_disabled of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :type: bool
        """

        self._share_disabled = share_disabled

    @property
    def suggestion_audience_enabled(self):
        """Gets the suggestion_audience_enabled of this SmartPlusAdgroupCreateBody.  # noqa: E501


        :return: The suggestion_audience_enabled of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :rtype: bool
        """
        return self._suggestion_audience_enabled

    @suggestion_audience_enabled.setter
    def suggestion_audience_enabled(self, suggestion_audience_enabled):
        """Sets the suggestion_audience_enabled of this SmartPlusAdgroupCreateBody.


        :param suggestion_audience_enabled: The suggestion_audience_enabled of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :type: bool
        """

        self._suggestion_audience_enabled = suggestion_audience_enabled

    @property
    def targeting_optimization_mode(self):
        """Gets the targeting_optimization_mode of this SmartPlusAdgroupCreateBody.  # noqa: E501


        :return: The targeting_optimization_mode of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :rtype: str
        """
        return self._targeting_optimization_mode

    @targeting_optimization_mode.setter
    def targeting_optimization_mode(self, targeting_optimization_mode):
        """Sets the targeting_optimization_mode of this SmartPlusAdgroupCreateBody.


        :param targeting_optimization_mode: The targeting_optimization_mode of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :type: str
        """

        self._targeting_optimization_mode = targeting_optimization_mode

    @property
    def targeting_spec(self):
        """Gets the targeting_spec of this SmartPlusAdgroupCreateBody.  # noqa: E501


        :return: The targeting_spec of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :rtype: SmartPlusAdgroupCreateBodyTargetingSpec
        """
        return self._targeting_spec

    @targeting_spec.setter
    def targeting_spec(self, targeting_spec):
        """Sets the targeting_spec of this SmartPlusAdgroupCreateBody.


        :param targeting_spec: The targeting_spec of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :type: SmartPlusAdgroupCreateBodyTargetingSpec
        """
        if targeting_spec is None:
            raise ValueError("Invalid value for `targeting_spec`, must not be `None`")  # noqa: E501

        self._targeting_spec = targeting_spec

    @property
    def vbo_window(self):
        """Gets the vbo_window of this SmartPlusAdgroupCreateBody.  # noqa: E501


        :return: The vbo_window of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :rtype: str
        """
        return self._vbo_window

    @vbo_window.setter
    def vbo_window(self, vbo_window):
        """Sets the vbo_window of this SmartPlusAdgroupCreateBody.


        :param vbo_window: The vbo_window of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :type: str
        """

        self._vbo_window = vbo_window

    @property
    def video_download_disabled(self):
        """Gets the video_download_disabled of this SmartPlusAdgroupCreateBody.  # noqa: E501


        :return: The video_download_disabled of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :rtype: bool
        """
        return self._video_download_disabled

    @video_download_disabled.setter
    def video_download_disabled(self, video_download_disabled):
        """Sets the video_download_disabled of this SmartPlusAdgroupCreateBody.


        :param video_download_disabled: The video_download_disabled of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :type: bool
        """

        self._video_download_disabled = video_download_disabled

    @property
    def view_attribution_window(self):
        """Gets the view_attribution_window of this SmartPlusAdgroupCreateBody.  # noqa: E501


        :return: The view_attribution_window of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :rtype: str
        """
        return self._view_attribution_window

    @view_attribution_window.setter
    def view_attribution_window(self, view_attribution_window):
        """Sets the view_attribution_window of this SmartPlusAdgroupCreateBody.


        :param view_attribution_window: The view_attribution_window of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :type: str
        """

        self._view_attribution_window = view_attribution_window

    @property
    def zalo_id_type(self):
        """Gets the zalo_id_type of this SmartPlusAdgroupCreateBody.  # noqa: E501


        :return: The zalo_id_type of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :rtype: str
        """
        return self._zalo_id_type

    @zalo_id_type.setter
    def zalo_id_type(self, zalo_id_type):
        """Sets the zalo_id_type of this SmartPlusAdgroupCreateBody.


        :param zalo_id_type: The zalo_id_type of this SmartPlusAdgroupCreateBody.  # noqa: E501
        :type: str
        """

        self._zalo_id_type = zalo_id_type

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(SmartPlusAdgroupCreateBody, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, SmartPlusAdgroupCreateBody):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
