[tool.poetry]
name = "delphai-utils"
version = "7.1.0"
description = "delphai backend utilities"
authors = ["Barath Kumar <barath@delphai.com>"]
homepage = "https://github.com/delphai/delphai-utils"

[tool.poetry.dependencies]
python = "^3.11"
aiokafka = { version = "0.7.2", optional = true }
dataclasses-avroschema = { version = "^0.30.3", optional = true }
python-schema-registry-client = { version = "^2.4.1", optional = true }
omegaconf = { version = "^2.1.0", optional = true }
python-dotenv = { version = "^0.14.0", optional = true }
coloredlogs = { version = "^14.0", optional = true }
grpcio = {version = "^1.62", optional = true}
starlette = { version = "^0", optional = true }
hypercorn = {version = "^0.17.3", optional = true}
validate_email = { version = "^1.3", optional = true }
ipaddress = { version = "^1.0.23", optional = true }
jinja2 = { version = "^3.1.4", optional = true }
starlette-prometheus = { version = ">=0.7.0 <1.0.0", optional = true }
grpcio-health-checking = {version = "^1.62", optional = true}
grpcio-reflection = {version = "^1.62", optional = true}
googleapis-common-protos = { version = "^1.52.0", optional = true }
elasticsearch = { extras = ["async"], version = "^7.9.1", optional = true }
motor = { version = "^3.6.0", optional = true }
httpx = { version = ">=0.24 <1",  optional = true, extras = ["http2"] }
python-jose = { version = "^3.2.0", optional = true }
grpclib = { version = "^0.4.2", optional = true }
faust-streaming = { version = "^0.6.9", optional = true }
dacite = { version = "^1.6.0", optional = true }
confluent-kafka = { version = "^1.7.0", optional = true }
betterproto = { version = "^2.0.0b3", extras = ["compiler"], optional = true }
protobuf = {version = "^4.25.8", optional = true}
tenacity = { version = "^8",  optional = true}

[tool.poetry.extras]
config = [
  "omegaconf",
  "python-dotenv",
  "coloredlogs",
  "dacite",
]

retry = ["tenacity", "httpx"]

grpc = [
  "protobuf",
  "grpcio",
  "starlette",
  "hypercorn",
  "validate_email",
  "ipaddress",
  "jinja2",
  "starlette-prometheus",
  "grpcio-health-checking",
  "grpcio-reflection",
  "googleapis-common-protos",
  "httpx",
  "python-jose",
]

database = ["motor"]

elasticsearch = ["elasticsearch"]

streaming = [
  "aiokafka",
  "betterproto",
  "confluent-kafka",
  "faust-streaming",
  "grpclib",
  "dataclasses-avroschema",
  "python-schema-registry-client",
]

keycloak = ["httpx", "python-jose"]

[tool.pytest.ini_options]
asyncio_default_fixture_loop_scope = "session"
asyncio_mode = "auto"

[tool.poetry.group.dev.dependencies]
pytest = "^8.2"
poethepoet = "^0.8.0"
black = "^21.10b0"
pytest-asyncio = "^0.24.0"

[tool.poe.tasks]
format = "black ."
test = "ptw -- --verbose"
publish-test = "poetry publish -r testpypi"
publish = [
  { cmd = "poetry version patch" },
  { cmd = "poetry build" },
  { cmd = "poetry publish --username ${PYPI_USERNAME} --password ${PYPI_PASSWORD}" },
  { cmd = "poetry publish --username ${PYPI_USERNAME} --password ${PYPI_PASSWORD} -r testpypi" },
]
[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
