Metadata-Version: 2.4
Name: markitdown-cosense
Version: 0.2.0
Summary: A markitdown plugin for converting Cosense notation to Markdown
Author-email: kazu728 <kazuki.matsuo.728@gmail.com>
License: MIT
Project-URL: Homepage, https://github.com/kazu728/markitdown-cosense
Project-URL: Repository, https://github.com/kazu728/markitdown-cosense
Project-URL: Issues, https://github.com/kazu728/markitdown-cosense/issues
Keywords: markitdown,cosense,markdown,converter,plugin
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Requires-Python: >=3.10
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: markitdown>=0.1.1
Provides-Extra: dev
Requires-Dist: pytest>=8.3.5; extra == "dev"
Requires-Dist: pytest-cov>=4.0.0; extra == "dev"
Requires-Dist: ruff>=0.11.12; extra == "dev"
Requires-Dist: pyright>=1.1.390; extra == "dev"
Dynamic: license-file

# markitdown-cosense

A [MarkItDown](https://github.com/microsoft/markitdown) plugin that converts Cosense notation into Markdown.

## Features
- Headings: `[* Heading]` → `# Heading`
- Text styles: `[/ italic]`, `[** bold]`, `[*/ strong italic]`, `[- strikethrough]`
- Lists: indented bullets using spaces, tabs, or full-width spaces
- Code blocks: `code:language` and fenced ``` ``` sections
- Tables: `table:Title` directives with indented rows
- Links & media: `[Label https://example]`, `[img https://.../image.png]`
- Math: `code:tex` blocks and lightweight inline detection
- Tags: `[tag]` → `<!-- tag: tag -->`

## Installation
```bash
pip install markitdown markitdown-cosense
```

## CLI
```bash
markitdown --use-plugins note.txt > note.md
```

## Python
```python
from markitdown import MarkItDown, StreamInfo
from markitdown_cosense import register_converters

md = MarkItDown()
register_converters(md)

with open("note.txt", "rb") as fh:
    result = md.convert_stream(fh, stream_info=StreamInfo(extension=".txt"))

print(result.text_content)
```

## License
MIT © kazu728
