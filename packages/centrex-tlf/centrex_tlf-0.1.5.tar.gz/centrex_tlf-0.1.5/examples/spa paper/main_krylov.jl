using SIMD
using LinearAlgebra
using Plots
using KrylovKit
using MKL

include("julia_functions.jl")
include("electric_field.jl")

efield_path = "c:/Users/Olivier/Anaconda3/envs/centrex-eql-testing/Lib/site-packages/state_prep/electric_fields/Electric field components vs z-position_SPA_ExpeVer.csv"
# efield_path = "c:/Users/ogras/anaconda3/envs/centrex-eql/Lib/site-packages/state_prep/electric_fields/Electric field components vs z-position_SPA_ExpeVer.csv"

const Ez_interp = make_Ez_interp(efield_path)

function hamiltonian_effective!(H, Ez, Ω0, δ0)
    @inbounds begin
        zero_matrix!(H)
        t0 = Ez .^ 2
        H[1, 1] = -0.203910287276813
        H[1, 5] = 98.8468961775812 * Ez
        H[5, 1] = conj(H[1, 5])
        H[1, 6] = 4719731.80277188 * Ez - 0.352905590484275 * Ω0
        H[6, 1] = conj(H[1, 6])
        H[1, 7] = 3037.686121584 * Ez
        H[7, 1] = conj(H[1, 7])
        H[1, 8] = 64.8184489245145 * Ez
        H[8, 1] = conj(H[1, 8])
        H[1, 9] = -2827.42366898643 * Ez
        H[9, 1] = conj(H[1, 9])
        H[1, 10] = 165447.844974341 * Ez - 0.0123709295072095 * Ω0
        H[10, 1] = conj(H[1, 10])
        H[1, 11] = -2739903.01558743 * Ez + 0.204869075615216 * Ω0
        H[11, 1] = conj(H[1, 11])
        H[1, 12] = -1554.75150117724 * Ez
        H[12, 1] = conj(H[1, 12])
        H[1, 13] = 5459877.56152657 * Ez - 0.408248073511166 * Ω0
        H[13, 1] = conj(H[1, 13])
        H[1, 14] = -60.8047017236989 * Ez
        H[14, 1] = conj(H[1, 14])
        H[1, 15] = 114.347618969987 * Ez
        H[15, 1] = conj(H[1, 15])
        H[2, 5] = -4457973.37816376 * Ez + 0.33333333324764 * Ω0
        H[5, 2] = conj(H[2, 5])
        H[2, 6] = 104.648842317083 * Ez
        H[6, 2] = conj(H[2, 6])
        H[2, 7] = 3.25093675287555 * Ez
        H[7, 2] = conj(H[2, 7])
        H[2, 8] = 0.00141053601389573 * Ez
        H[8, 2] = conj(H[2, 8])
        H[2, 9] = -0.239130882722158 * Ez
        H[9, 2] = conj(H[2, 9])
        H[2, 10] = 14.0628229016998 * Ez
        H[10, 2] = conj(H[2, 10])
        H[2, 11] = -60.1264652246523 * Ez
        H[11, 2] = conj(H[2, 11])
        H[2, 12] = -109.655935971803 * Ez
        H[12, 2] = conj(H[2, 12])
        H[2, 13] = -110.627909708035 * Ez
        H[13, 2] = conj(H[2, 13])
        H[2, 14] = -6304526.74455453 * Ez + 0.471404508408851 * Ω0
        H[14, 2] = conj(H[2, 14])
        H[2, 15] = 1434.99757687073 * Ez
        H[15, 2] = conj(H[2, 15])
        H[2, 16] = -0.00104251434103592 * Ez
        H[16, 2] = conj(H[2, 16])
        H[3, 3] = 0.203802646166878
        H[3, 5] = -0.000222178747142291 * Ez
        H[5, 3] = conj(H[3, 5])
        H[3, 6] = -64.651256265367 * Ez
        H[6, 3] = conj(H[3, 6])
        H[3, 7] = -259.746197103084 * Ez
        H[7, 3] = conj(H[3, 7])
        H[3, 8] = 4719732.00029503 * Ez - 0.352905605253549 * Ω0
        H[8, 3] = conj(H[3, 8])
        H[3, 9] = -2744486.41367571 * Ez + 0.205211787209049 * Ω0
        H[9, 3] = conj(H[3, 9])
        H[3, 10] = -46825.59686497 * Ez
        H[10, 3] = conj(H[3, 10])
        H[3, 11] = 4.60887743701224 * Ez
        H[11, 3] = conj(H[3, 11])
        H[3, 12] = -56.0092003183019 * Ez
        H[12, 3] = conj(H[3, 12])
        H[3, 13] = -114.350568546651 * Ez
        H[13, 3] = conj(H[3, 13])
        H[3, 14] = 1242.74755844634 * Ez
        H[14, 3] = conj(H[3, 14])
        H[3, 15] = 5459882.99991352 * Ez - 0.408248480152315 * Ω0
        H[15, 3] = conj(H[3, 15])
        H[3, 16] = 4.27112786897421 * Ez
        H[16, 3] = conj(H[3, 16])
        H[4, 4] = 83566.3656423294
        H[4, 5] = 1.46724954589485 * Ez
        H[5, 4] = conj(H[4, 5])
        H[4, 6] = -2498.42305101261 * Ez
        H[6, 4] = conj(H[4, 6])
        H[4, 7] = 3881860.40975263 * Ez - 0.290255963104835 * Ω0
        H[7, 4] = conj(H[4, 7])
        H[4, 8] = 213.600427091975 * Ez
        H[8, 4] = conj(H[4, 8])
        H[4, 9] = 113657.535248524 * Ez
        H[9, 4] = conj(H[4, 9])
        H[4, 10] = -6661600.41488043 * Ez + 0.498103754422202 * Ω0
        H[10, 4] = conj(H[4, 10])
        H[4, 11] = -402375.11480976 * Ez + 0.0300865472094521 * Ω0
        H[11, 4] = conj(H[4, 11])
        H[4, 12] = -0.00109434149291348 * Ez
        H[12, 4] = conj(H[4, 12])
        H[4, 13] = -0.000202516419800558 * Ez
        H[13, 4] = conj(H[4, 13])
        H[4, 14] = -10.10344196502 * Ez
        H[14, 4] = conj(H[4, 14])
        H[4, 15] = 0.00238726172107686 * Ez
        H[15, 4] = conj(H[4, 15])
        H[4, 16] = 0.000231751426342522 * Ez
        H[16, 4] = conj(H[4, 16])
        H[5, 5] = -237.199836521643 * t0 - δ0 - 1336622.01037598
        H[5, 7] = 1.01414256782393e-5 * t0
        H[7, 5] = conj(H[5, 7])
        H[5, 9] = -1.13856326637606e-6 * t0
        H[9, 5] = conj(H[5, 9])
        H[5, 10] = 6.69723125237562e-5 * t0
        H[10, 5] = conj(H[5, 10])
        H[5, 11] = 4.03313665650566e-6 * t0
        H[11, 5] = conj(H[5, 11])
        H[5, 12] = -0.000583274033451223 * t0
        H[12, 5] = conj(H[5, 12])
        H[5, 13] = -0.00123277693010631 * t0
        H[13, 5] = conj(H[5, 13])
        H[5, 14] = -33.5451348904492 * t0
        H[14, 5] = conj(H[5, 14])
        H[5, 15] = 0.00763532511183391 * t0
        H[15, 5] = conj(H[5, 15])
        H[6, 6] = -240.067019627495 * t0 - δ0 - 1196891.72532654
        H[6, 7] = -0.00553638490320645 * t0
        H[7, 6] = conj(H[6, 7])
        H[6, 8] = -3.04867995722784e-7 * t0
        H[8, 6] = conj(H[6, 8])
        H[6, 9] = 0.0160546218204309 * t0
        H[9, 6] = conj(H[6, 9])
        H[6, 10] = -0.951870945304418 * t0
        H[10, 6] = conj(H[6, 10])
        H[6, 11] = 15.433249992221 * t0
        H[11, 6] = conj(H[6, 11])
        H[6, 12] = 0.00875824547875171 * t0
        H[12, 6] = conj(H[6, 12])
        H[6, 13] = -30.756617220391 * t0
        H[13, 6] = conj(H[6, 13])
        H[6, 14] = 0.00113004532834626 * t0
        H[14, 6] = conj(H[6, 14])
        H[6, 15] = -0.000223015993653087 * t0
        H[15, 6] = conj(H[6, 15])
        H[7, 7] = -231.465009854807 * t0 - δ0 - 1196891.6182251
        H[7, 8] = 0.000473327912326781 * t0
        H[8, 7] = conj(H[7, 8])
        H[7, 9] = -0.527437598838381 * t0
        H[9, 7] = conj(H[7, 9])
        H[7, 10] = 30.8638491209003 * t0
        H[10, 7] = conj(H[7, 10])
        H[7, 11] = 1.87421437493372 * t0
        H[11, 7] = conj(H[7, 11])
        H[7, 12] = 5.62505649707031e-6 * t0
        H[12, 7] = conj(H[7, 12])
        H[7, 13] = -0.0197954278040043 * t0
        H[13, 7] = conj(H[7, 13])
        H[7, 14] = 7.18792818413206e-5 * t0
        H[14, 7] = conj(H[7, 14])
        H[7, 15] = 0.00169223325862533 * t0
        H[15, 7] = conj(H[7, 15])
        H[8, 8] = -240.067014444058 * t0 - δ0 - 1196891.51123047
        H[8, 9] = 15.4602409980091 * t0
        H[9, 8] = conj(H[8, 9])
        H[8, 10] = 0.265463971027493 * t0
        H[10, 8] = conj(H[8, 10])
        H[8, 11] = 0.00028858882535417 * t0
        H[11, 8] = conj(H[8, 11])
        H[8, 12] = 0.000315631680646084 * t0
        H[12, 8] = conj(H[8, 12])
        H[8, 13] = 0.000221764299550975 * t0
        H[13, 8] = conj(H[8, 13])
        H[8, 14] = -0.00700063589970694 * t0
        H[14, 8] = conj(H[8, 14])
        H[8, 15] = -30.7566491571219 * t0
        H[15, 8] = conj(H[8, 15])
        H[8, 16] = -2.40601458763039e-5 * t0
        H[16, 8] = conj(H[8, 16])
        H[9, 9] = -222.484576414731 * t0 - δ0 - 91349.8672027588
        H[9, 10] = 0.750848319841636 * t0
        H[10, 9] = conj(H[9, 10])
        H[9, 11] = 0.0453527994675924 * t0
        H[11, 9] = conj(H[9, 11])
        H[9, 12] = -0.000188711496145375 * t0
        H[12, 9] = conj(H[9, 12])
        H[9, 13] = 0.0180503845489027 * t0
        H[13, 9] = conj(H[9, 13])
        H[9, 14] = 0.00407013648685071 * t0
        H[14, 9] = conj(H[9, 14])
        H[9, 15] = 17.8845099069506 * t0
        H[15, 9] = conj(H[9, 15])
        H[9, 16] = 1.39905663441601e-5 * t0
        H[16, 9] = conj(H[9, 16])
        H[10, 10] = -266.479859577518 * t0 - δ0 - 91349.8652801514
        H[10, 11] = -2.65818063437989 * t0
        H[11, 10] = conj(H[10, 11])
        H[10, 12] = 0.000303874464923936 * t0
        H[12, 10] = conj(H[10, 12])
        H[10, 13] = -1.07815004488699 * t0
        H[13, 10] = conj(H[10, 13])
        H[10, 14] = 0.000106947976410339 * t0
        H[14, 10] = conj(H[10, 14])
        H[10, 15] = 0.305117505669365 * t0
        H[15, 10] = conj(H[10, 15])
        H[10, 16] = 2.40545971197191e-7 * t0
        H[16, 10] = conj(H[10, 16])
        H[11, 11] = -222.632386741743 * t0 - δ0 - 91349.8637390137
        H[11, 12] = -0.00508428021991898 * t0
        H[12, 11] = conj(H[11, 12])
        H[11, 13] = 17.8546239089218 * t0
        H[13, 11] = conj(H[11, 13])
        H[11, 14] = -0.000656128895881907 * t0
        H[14, 11] = conj(H[11, 14])
        H[11, 15] = 0.000344004245980647 * t0
        H[15, 11] = conj(H[11, 15])
        H[12, 12] = -213.479251876953 * t0 - δ0 - 0.20599365234375
        H[12, 13] = 0.0101315337778995 * t0
        H[13, 12] = conj(H[12, 13])
        H[12, 14] = -0.000825149337731954 * t0
        H[14, 12] = conj(H[12, 14])
        H[12, 15] = 0.000365384953024925 * t0
        H[15, 12] = conj(H[12, 15])
        H[13, 13] = -249.058603444121 * t0 - δ0 - 0.103012084960938
        H[13, 14] = -0.000436029174488983 * t0
        H[14, 13] = conj(H[13, 14])
        H[13, 15] = 2.09436506964754e-7 * t0
        H[15, 13] = conj(H[13, 15])
        H[14, 14] = -260.918438003701 * t0 - δ0
        H[14, 15] = 0.00269943741004 * t0
        H[15, 14] = conj(H[14, 15])
        H[15, 15] = -249.058676766099 * t0 - δ0 + 0.102996826171875
        H[15, 16] = -2.78328794456693e-5 * t0
        H[16, 15] = conj(H[15, 16])
        H[16, 16] = -213.479248973826 * t0 - δ0 + 0.20599365234375
    end
    nothing
end

const σμ = 1.078e-2
const zμ0 = 0.0
const zμ1 = 25.4e-3 * 1.125

Γ = 2π*1.56e6
Ω0 = 1e-3*Γ
δ0 = 5.26e6 * 2π
# δ0 = 0.0
vz = 184
z0 = -0.25
zstop = 0.2
tmax = (zstop - z0) / vz
N = 36
H = zeros(ComplexF64, N, N)

function krylov_eff_step!(ψ::Vector{ComplexF64},
    t::Float64, Δt::Float64, p;
    tol::Float64=1e-3, krydim::Int=20)
    # 2a) compute instantaneous field & drive
    Ω0, δ0, vz, z0 = p
    z = z0 + vz * t
    Ez = Ez_interp(z)
    Ω0val = Ω0 * gaussian_peak(z, zμ0, σμ)

    # 2b) build the full P‐space Hamiltonian H = Hstat + Hdrive
    hamiltonian_effective!(H, Ez, Ω0val, δ0)

    # 2c) apply ψ ← exp(-i Htot Δt)·ψ via KrylovKit
    method = Arnoldi(krylovdim=krydim, tol=tol)
    ψ_new, _ = exponentiate(H, -1im * Δt, ψ, method)

    # 2d) in-place update
    ψ[:] = ψ_new
    return nothing
end

p = (Ω0, δ0, vz, z0)

Δt = 1e-7
times = 0:Δt:tmax
ψ = zeros(ComplexF64, N)
ψ[2] = 1.0 + 0im    # initial state in P‐space
pop = zeros(Float64, length(times), length(ψ))

@time for (k, t) in enumerate(times)
    pop[k, :] = abs2.(ψ)         # record populations
    if k < length(times)
        krylov_eff_step!(ψ, t + Δt / 2, Δt, p)
    end
end

plot(times * vz .+ z0, pop,
    xlabel="z", ylabel="population")
