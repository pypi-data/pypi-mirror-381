[project]
name = "mfcqi"
version = "0.0.2"
description = "MFCQI - Benchmark Analysis Reporting Utility for comprehensive code quality analysis with LLM integration"
readme = "README.md"
license = { text = "MIT" }
authors = [
    { name = "Brian Sam-Bodden", email = "bsbodden@gmail.com" }
]
maintainers = [
    { name = "Brian Sam-Bodden", email = "bsbodden@gmail.com" }
]
requires-python = ">=3.10"
keywords = [
    "code-quality",
    "metrics",
    "static-analysis",
    "llm",
    "ai",
    "testing",
    "tdd",
    "code-analysis",
    "quality-assurance"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Environment :: Console",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Software Development :: Quality Assurance",
    "Topic :: Software Development :: Testing",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Typing :: Typed"
]
dependencies = [
    "bandit>=1.8.6",
    "click>=8.0.0",
    "cognitive-complexity>=1.3.0",
    "detect-secrets>=1.5.0",
    "jinja2>=3.1.2",
    "keyring>=24.0.0",
    "litellm>=1.77.3",
    "pip-audit>=2.7.0",
    "pydantic>=2.11.9",
    "pylint>=3.3.8",
    "pyyaml>=6.0.0",
    "radon>=6.0.1",
    "requests>=2.31.0",
    "rich>=13.0.0",
    "toml>=0.10.2",
]

[project.scripts]
mfcqi = "mfcqi.cli.main:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project.urls]
"Homepage" = "https://github.com/bsbodden/mfcqi"
"Bug Reports" = "https://github.com/bsbodden/mfcqi/issues"
"Source" = "https://github.com/bsbodden/mfcqi"
"Documentation" = "https://mfcqi.readthedocs.io/"

[dependency-groups]
dev = [
    "bandit>=1.8.6",
    "hypothesis>=6.139.2",
    "mypy>=1.18.2",
    "pytest>=8.4.2",
    "pytest-cov>=7.0.0",
    "pytest-timeout>=2.3.1",
    "pytest-watch>=4.2.0",
    "pytest-xdist>=3.8.0",
    "ruff>=0.13.1",
    "types-pyyaml>=6.0.12.20250915",
    "types-requests>=2.32.4.20250913",
    "types-toml>=0.10.8.20240310",
    "vulture>=2.10",
]

[tool.pytest.ini_options]
minversion = "8.0"
testpaths = ["tests"]
filterwarnings = [
    "ignore::DeprecationWarning:httpx.*",
    "ignore::UserWarning:pydantic.*",
    "ignore::DeprecationWarning:litellm.*",
    "ignore:.*Use 'content=.*:DeprecationWarning",
    "ignore:.*There is no current event loop.*:DeprecationWarning",
    # Suppress AST deprecation warnings from Bandit (Python 3.13+)
    "ignore:ast.Str is deprecated.*:DeprecationWarning",
    "ignore:ast.Num is deprecated.*:DeprecationWarning",
    "ignore:ast.Ellipsis is deprecated.*:DeprecationWarning",
    "ignore:ast.NameConstant is deprecated.*:DeprecationWarning",
    "ignore:ast.Bytes is deprecated.*:DeprecationWarning",
    "ignore:Attribute s is deprecated.*:DeprecationWarning",
    "ignore:Attribute n is deprecated.*:DeprecationWarning",
    # Suppress sre_constants deprecation (Python 3.13+)
    "ignore:module 'sre_constants' is deprecated:DeprecationWarning",
]
