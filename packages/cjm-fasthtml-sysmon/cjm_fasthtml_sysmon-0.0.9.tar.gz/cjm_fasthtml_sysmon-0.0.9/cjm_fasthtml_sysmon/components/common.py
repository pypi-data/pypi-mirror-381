"""Common UI components for rendering progress bars and stat cards."""

# AUTOGENERATED! DO NOT EDIT! File to edit: ../../nbs/components/common.ipynb.

# %% auto 0
__all__ = ['render_stat_card', 'render_progress_bar']

# %% ../../nbs/components/common.ipynb 3
from fasthtml.common import FT
from fasthtml.common import Div, Span, Progress
from ..core.utils import get_progress_color

# DaisyUI imports
from cjm_fasthtml_daisyui.components.data_display.stat import stat, stat_title, stat_value, stat_desc
from cjm_fasthtml_daisyui.components.feedback.progress import progress
from cjm_fasthtml_daisyui.utilities.semantic_colors import text_dui

# Tailwind imports
from cjm_fasthtml_tailwind.utilities.spacing import m
from cjm_fasthtml_tailwind.utilities.flexbox_and_grid import justify
from cjm_fasthtml_tailwind.utilities.sizing import w
from cjm_fasthtml_tailwind.utilities.typography import font_size
from cjm_fasthtml_tailwind.core.base import combine_classes

# %% ../../nbs/components/common.ipynb 5
def render_stat_card(
    title_text:str,  # The title text for the stat card
    value_text:str,  # The main value to display in the stat card
    desc_text:str=None,  # Optional description text below the value
    value_color:str=None  # Optional color class for the value text
)-> FT:  # A Div element containing the stat card with consistent styling
    """Render a stat card with consistent styling."""
    value_classes = [stat_value]
    if value_color:
        value_classes.append(value_color)

    return Div(
        Div(title_text, cls=combine_classes(stat_title, text_dui.base_content)),
        Div(value_text, cls=combine_classes(*value_classes)),
        Div(desc_text, cls=str(stat_desc)) if desc_text else None,
        cls=str(stat)
    )

# %% ../../nbs/components/common.ipynb 7
def render_progress_bar(
    value:float,  # The current progress value
    max_value:float=100,  # The maximum value for the progress bar (default: 100)
    label:str=None  # Optional label text to display above the progress bar
)-> FT:  # A Div element containing the progress bar with optional label
    """Render a progress bar with label."""
    color = get_progress_color(value)

    return Div(
        Div(
            Span(label or f"{value:.1f}%", cls=combine_classes(font_size.xs, text_dui.base_content)),
            Span(f"{value:.1f}%", cls=combine_classes(font_size.xs, text_dui.base_content)),
            cls=combine_classes(justify.between, m.b(1), "flex")
        ) if label else None,
        Progress(
            value=str(value),
            max=str(max_value),
            cls=combine_classes(progress, color, w.full)
        )
    )
