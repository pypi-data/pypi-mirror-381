"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .note import Note, NoteTypedDict
from attio.types import BaseModel
from attio.utils import FieldMetadata, QueryParamMetadata
from typing import List, Literal, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


class GetV2NotesRequestTypedDict(TypedDict):
    limit: NotRequired[int]
    offset: NotRequired[int]
    parent_object: NotRequired[str]
    parent_record_id: NotRequired[str]


class GetV2NotesRequest(BaseModel):
    limit: Annotated[
        Optional[int],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None

    offset: Annotated[
        Optional[int],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None

    parent_object: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None

    parent_record_id: Annotated[
        Optional[str],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None


GetV2NotesType = Literal["invalid_request_error",]


GetV2NotesCode = Literal["not_found",]


class GetV2NotesResponseTypedDict(TypedDict):
    r"""Success"""

    data: List[NoteTypedDict]


class GetV2NotesResponse(BaseModel):
    r"""Success"""

    data: List[Note]
