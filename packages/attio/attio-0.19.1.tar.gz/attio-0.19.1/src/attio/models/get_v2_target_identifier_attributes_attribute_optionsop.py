"""Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT."""

from __future__ import annotations
from .select_option import SelectOption, SelectOptionTypedDict
from attio.types import BaseModel
from attio.utils import FieldMetadata, PathParamMetadata, QueryParamMetadata
from typing import List, Literal, Optional
from typing_extensions import Annotated, NotRequired, TypedDict


GetV2TargetIdentifierAttributesAttributeOptionsTarget = Literal[
    "objects",
    "lists",
]
r"""Whether the attribute is on an object or a list."""


class GetV2TargetIdentifierAttributesAttributeOptionsRequestTypedDict(TypedDict):
    target: GetV2TargetIdentifierAttributesAttributeOptionsTarget
    r"""Whether the attribute is on an object or a list."""
    identifier: str
    attribute: str
    show_archived: NotRequired[bool]


class GetV2TargetIdentifierAttributesAttributeOptionsRequest(BaseModel):
    target: Annotated[
        GetV2TargetIdentifierAttributesAttributeOptionsTarget,
        FieldMetadata(path=PathParamMetadata(style="simple", explode=False)),
    ]
    r"""Whether the attribute is on an object or a list."""

    identifier: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]

    attribute: Annotated[
        str, FieldMetadata(path=PathParamMetadata(style="simple", explode=False))
    ]

    show_archived: Annotated[
        Optional[bool],
        FieldMetadata(query=QueryParamMetadata(style="form", explode=True)),
    ] = None


GetV2TargetIdentifierAttributesAttributeOptionsType = Literal["invalid_request_error",]


GetV2TargetIdentifierAttributesAttributeOptionsCode = Literal["not_found",]


class GetV2TargetIdentifierAttributesAttributeOptionsResponseTypedDict(TypedDict):
    r"""Success"""

    data: List[SelectOptionTypedDict]


class GetV2TargetIdentifierAttributesAttributeOptionsResponse(BaseModel):
    r"""Success"""

    data: List[SelectOption]
