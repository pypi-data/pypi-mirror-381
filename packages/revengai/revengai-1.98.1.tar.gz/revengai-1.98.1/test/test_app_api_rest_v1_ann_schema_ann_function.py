# coding: utf-8

"""
    RevEng.AI API

    RevEng.AI is Similarity Search Engine for executable binaries

    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from revengai.models.app_api_rest_v1_ann_schema_ann_function import AppApiRestV1AnnSchemaANNFunction

class TestAppApiRestV1AnnSchemaANNFunction(unittest.TestCase):
    """AppApiRestV1AnnSchemaANNFunction unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> AppApiRestV1AnnSchemaANNFunction:
        """Test AppApiRestV1AnnSchemaANNFunction
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `AppApiRestV1AnnSchemaANNFunction`
        """
        model = AppApiRestV1AnnSchemaANNFunction()
        if include_optional:
            return AppApiRestV1AnnSchemaANNFunction(
                result_per_function = 56,
                distance = 1.337,
                function_id_list = [
                    56
                    ],
                speculative_function_ids = [
                    null
                    ],
                collection = [
                    ''
                    ],
                collection_search_list = [
                    56
                    ],
                debug_mode = True,
                debug_types = [
                    'USER'
                    ],
                binaries_search_list = [
                    56
                    ]
            )
        else:
            return AppApiRestV1AnnSchemaANNFunction(
                function_id_list = [
                    56
                    ],
        )
        """

    def testAppApiRestV1AnnSchemaANNFunction(self):
        """Test AppApiRestV1AnnSchemaANNFunction"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
