[build-system]
requires = ["setuptools>=45", "wheel", "setuptools_scm[toml]>=6.2"]
build-backend = "setuptools.build_meta"

[project]
name = "todo-agent"
dynamic = ["version"]
description = "A natural language interface for todo.sh task management"
readme = "README.md"
license = {text = "GPL-3.0"}
authors = [
    {name = "codeprimate"}
]
maintainers = [
    {name = "codeprimate"}
]
keywords = ["todo", "task-management", "llm", "natural-language", "cli"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: End Users/Desktop",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Office/Business :: Scheduling",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Text Processing :: Linguistic",
]
requires-python = ">=3.8"
dependencies = [
    "requests>=2.32.0",
    "typing-extensions>=4.15.0",
    "types-requests>=2.32.0",
    "rich>=14.0.0",
    "tiktoken>=0.11.0",
    "sympy>=1.12",
]

[project.optional-dependencies]
dev = [
    "ruff>=0.12.0",
    "mypy>=1.17.0",
    "pytest>=8.0.0",
    "pytest-cov>=6.0.0",
    "pre-commit>=4.0.0",
    "bandit>=1.8.0",
    "sphinx>=8.0.0",
    "sphinx-rtd-theme>=3.0.0",
    "radon>=6.0.0",
    "xenon>=0.9.0",
    "build>=1.2.0",
    "twine>=6.0.0",
    "setuptools_scm[toml]>=9.0.0",
]

[project.scripts]
todo-agent = "todo_agent.main:main"

[project.urls]
Homepage = "https://github.com/codeprimate/todo-agent"
Documentation = "https://github.com/codeprimate/todo-agent#readme"
Repository = "https://github.com/codeprimate/todo-agent"
"Bug Tracker" = "https://github.com/codeprimate/todo-agent/issues"

[tool.setuptools_scm]
write_to = "todo_agent/_version.py"

[tool.setuptools.packages.find]
include = ["todo_agent*"]
exclude = ["tests*", "docs*", "logs*", "htmlcov*", "dist*", "build*", "*.egg-info*"]



[tool.ruff]
# Same as Black.
line-length = 88
indent-width = 4

# Assume Python 3.8
target-version = "py38"

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
]

[tool.ruff.lint]
# Enable pycodestyle (`E`), Pyflakes (`F`), and isort (`I`) codes
select = ["E", "F", "I", "B", "C4", "UP", "ARG", "SIM", "TCH", "TID", "Q", "RUF"]
ignore = [
    "E501",  # line too long, handled by formatter
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
    "ARG002",  # unused method arguments (common in interface methods)
    "B904",  # raise exceptions with 'from' (too many to fix right now)
    "SIM117",  # nested with statements (style preference)
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

[tool.ruff.lint.per-file-ignores]
# Ignore unused imports in test files
"tests/*" = ["F401"]
# Ignore f-string issues in specific files
"todo_agent/interface/tools.py" = ["F541"]
"todo_agent/interface/cli.py" = ["F541"]
"todo_agent/infrastructure/todo_shell.py" = ["F541"]

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.ruff.lint.isort]
# Like isort, sort imports using a single line after the import block.
combine-as-imports = true

[tool.mypy]
python_version = "3.11"
warn_return_any = false
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = false
warn_no_return = true
warn_unreachable = true
strict_equality = true
namespace_packages = true
explicit_package_bases = true
ignore_missing_imports = true
allow_redefinition = true

[[tool.mypy.overrides]]
module = [
    "todo_agent.infrastructure.llm_client_factory",
    "todo_agent.infrastructure.inference"
]
allow_redefinition = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=todo_agent",
    "--cov-report=term-missing",
    "--cov-report=html",
]
markers = [
    "integration: marks tests as integration tests",
    "lint: marks tests as linting checks",
]
