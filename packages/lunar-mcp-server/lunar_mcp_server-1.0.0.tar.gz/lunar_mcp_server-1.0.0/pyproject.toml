[project]
name = "lunar-mcp-server"
version = "1.0.0"
description = "A comprehensive Chinese Lunar Calendar MCP server providing traditional Chinese lunar calendar information, auspicious date checking, and festival data"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Lunar MCP Team"}
]
keywords = [
    "mcp",
    "lunar",
    "calendar",
    "chinese",
    "auspicious",
    "zodiac",
    "festival",
    "moon-phase",
    "almanac",
    "fortune",
    "five-elements",
    "model-context-protocol"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Astronomy",
    "Topic :: Religion",
    "Topic :: Utilities",
]
requires-python = ">=3.11"
dependencies = [
    "mcp>=1.0.0",
    "skyfield>=1.48",
    "ephem>=4.1.5",
    "astropy>=6.0.0",
    "lunardate>=0.2.2",
    "zhdate>=0.1",
    "chinese-calendar>=1.9.0",
    "python-dateutil>=2.8.2",
    "pytz>=2023.3",
    "pydantic>=2.5.0",
    "typing-extensions>=4.8.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-asyncio>=0.21.0",
    "pytest-cov>=4.1.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "mypy>=1.6.0",
    "ruff>=0.1.0",
    "pre-commit>=3.5.0",
]

[project.urls]
Homepage = "https://github.com/AngusHsu/lunar-mcp-server"
Repository = "https://github.com/AngusHsu/lunar-mcp-server"
Documentation = "https://github.com/AngusHsu/lunar-mcp-server#readme"
"Bug Tracker" = "https://github.com/AngusHsu/lunar-mcp-server/issues"
Changelog = "https://github.com/AngusHsu/lunar-mcp-server/blob/main/CHANGELOG.md"

[project.scripts]
lunar-mcp-server = "lunar_mcp_server.server:main"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/lunar_mcp_server"]

[tool.hatch.build.targets.sdist]
include = [
    "/src",
    "/data",
    "/README.md",
    "/LICENSE",
]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["lunar_mcp_server"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "ephem.*",
    "lunardate.*",
    "zhdate.*",
    "chinese_calendar.*",
    "pytz.*",
    "skyfield.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--strict-markers",
    "--strict-config",
    "--cov=src/lunar_mcp_server",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]

[tool.ruff]
target-version = "py311"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["B011", "B018"]

[tool.coverage.run]
source = ["src"]
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/.venv/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[dependency-groups]
dev = [
    "black>=25.9.0",
    "isort>=6.0.1",
    "mcp>=1.15.0",
    "mypy>=1.18.2",
    "pre-commit>=4.3.0",
    "pytest>=8.4.2",
    "pytest-asyncio>=1.2.0",
    "pytest-cov>=7.0.0",
    "ruff>=0.13.2",
]
