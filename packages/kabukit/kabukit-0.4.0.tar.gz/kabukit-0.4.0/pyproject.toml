[build-system]
requires = ["uv_build"]
build-backend = "uv_build"

[project]
name = "kabukit"
version = "0.4.0"
description = "A Python toolkit for Japanese financial market data, supporting J-Quants and EDINET APIs."
readme = "README.md"
license = { file = "LICENSE" }
authors = [{ name = "daizutabi", email = "daizutabi@gmail.com" }]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.13",
]
requires-python = ">=3.13"
dependencies = [
  "async-typer>=0.1",
  "holidays>=0.81",
  "httpx>=0.28",
  "platformdirs>=4",
  "polars>=1",
  "python-dotenv>=1",
  "typer>=0.19",
]

[project.scripts]
kabu = "kabukit.cli.app:app"

[project.urls]
Documentation = "https://daizutabi.github.io/kabukit/"
Source = "https://github.com/daizutabi/kabukit"
Issues = "https://github.com/daizutabi/kabukit/issues"

[dependency-groups]
dev = [
  "altair>=5",
  "basedpyright>=1.31.4",
  "marimo[lsp]>=0.16",
  "numpy>=2.3.3",                 # polars 1.33 type hinting workaround,
  "pytest-asyncio>=1.2.0",
  "pytest-clarity>=1.0.1",
  "pytest-cov>=7.0.0",
  "pytest-mock>=3.15.1",
  "pytest-randomly>=4.0.1",
  "pytest-xdist>=3.8.0",
  "rich>=14.1.0",
  "tqdm>=4.67.1",
  "vegafusion-python-embed>=1.6",
  "vegafusion>=2",
  "vl-convert-python>=1.8",
]
docs = ["mkapi>=4.4", "mkdocs-marimo", "mkdocs-material"]

[tool.pytest.ini_options]
addopts = ["--cov=kabukit", "--cov-report=lcov:lcov.info", "--doctest-modules"]
testpaths = ["tests/unit", "tests/integration", "tests/validation"]
markers = [
  "integration: marks tests as integration tests",
  "validation: marks tests as data validation tests",
]

[tool.coverage.report]
exclude_lines = ["no cov", "raise NotImplementedError", "if TYPE_CHECKING:"]
skip_covered = true

[tool.ruff]
line-length = 88
target-version = "py313"
include = ["src", "tests"]

[tool.ruff.lint]
select = ["ALL"]
unfixable = ["F401"]
ignore = [
  "A002",
  "ANN401",
  "D",
  "FBT001",
  "N802",
  "PGH003",
  "PLC0415",
  "PLR0913",
  "PLR2004",
  "RUF002",
  "S603",
  "SIM102",
  "TRY003",
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["ANN", "FBT", "S101", "S607", "PLC2401"]
"schema.py" = ["E501"]
"notebooks/*" = ["F704", "PLE1142"]

[tool.ruff.format]
exclude = ["schema.py"]

[tool.basedpyright]
include = ["src", "tests"]
reportAny = false
reportExplicitAny = false
reportImplicitOverride = false
reportImportCycles = false
reportIncompatibleVariableOverride = false
reportUnusedCallResult = false
reportUnusedImport = false
