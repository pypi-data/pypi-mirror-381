# coding: utf-8

"""
    Gemini Client - Python SDK for Google Gemini AI API

    Python client library for Google Gemini AI API. Easily integrate Gemini's 
    powerful generative AI capabilities into your Python applications.

    Author: Qaadir
    Generated by OpenAPI Generator (https://openapi-generator.tech)
"""  # noqa: E501


from setuptools import setup, find_packages  # noqa: H301

# To install the library, run the following
#
# python setup.py install
#
# prerequisite: setuptools
# http://pypi.python.org/pypi/setuptools
NAME = "gemini-client"
VERSION = "1.0.0"
PYTHON_REQUIRES = ">= 3.9"
REQUIRES = [
    "urllib3 >= 2.1.0, < 3.0.0",
    "python-dateutil >= 2.8.2",
    "pydantic >= 2",
    "typing-extensions >= 4.7.1",
]

setup(
    name=NAME,
    version=VERSION,
    description="Python client library for Google Gemini AI API - GenerativeService API",
    author="Qaadir",
    author_email="qaadireng@gmail.com",
    url="https://github.com/AbQaadir/gemini-client",
    keywords=["Gemini", "AI", "Google", "GenerativeAI", "OpenAI", "Chatbot", "LLM"],
    install_requires=REQUIRES,
    packages=find_packages(exclude=["test", "tests"]),
    include_package_data=True,
    long_description_content_type='text/markdown',
    long_description="""\
    # Gemini Client - Python SDK for Google Gemini AI API

    A comprehensive Python client library for Google's Gemini AI API. This package provides easy-to-use interfaces for:

    ## Features
    - **Text Generation**: Generate human-like text responses
    - **Chat Interface**: Build conversational AI applications  
    - **Embeddings**: Create vector embeddings for text
    - **Multimodal Content**: Work with text, images, and other media
    - **Streaming Responses**: Real-time response streaming
    - **Safety Controls**: Built-in content safety and filtering
    - **Function Calling**: Integrate with external tools and APIs

    ## Quick Start
    ```python
    import openapi_client
    import os

    # Configure API key
    configuration = openapi_client.Configuration()
    configuration.api_key['ApiKeyAuth'] = os.environ["GEMINI_API_KEY"]

    # Create client and send request
    with openapi_client.ApiClient(configuration) as api_client:
        api_instance = openapi_client.GenerativeServiceApi(api_client)
        # Your code here...
    ```

    Visit the [GitHub repository](https://github.com/AbQaadir/gemini-client) for detailed documentation and examples.
    """,  # noqa: E501
    package_data={"openapi_client": ["py.typed"]},
    classifiers=[
        "Development Status :: 4 - Beta",
        "Intended Audience :: Developers",
        "License :: OSI Approved :: MIT License",
        "Programming Language :: Python :: 3",
        "Programming Language :: Python :: 3.9",
        "Programming Language :: Python :: 3.10",
        "Programming Language :: Python :: 3.11",
        "Programming Language :: Python :: 3.12",
        "Topic :: Software Development :: Libraries :: Python Modules",
        "Topic :: Scientific/Engineering :: Artificial Intelligence",
    ],
    python_requires=PYTHON_REQUIRES,
)