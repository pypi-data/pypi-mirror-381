name: CI/CD

on:
  push:
    branches:
      - main
      - "renovate/**"
  pull_request:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  test:
    name: Test
    runs-on: ubuntu-24.04
    permissions:
      contents: read

    strategy:
      matrix:
        python-version: [3.11, 3.12, 3.13]

    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5

      - name: Install uv
        uses: astral-sh/setup-uv@d0cc045d04ccac9d8b7881df0226f9e82c39688e # v6
        with:
          python-version: ${{ matrix.python-version }}
          enable-cache: true
          cache-suffix: ${{ hashFiles('uv.lock') }}

      - name: Install dependencies
        run: uv sync --all-groups --frozen

      - name: Format and fix code
        run: |
          make format
          make fix

      - name: Run linting
        run: make lint

      - name: Run tests with coverage
        run: make test-cov

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7 # v5
        with:
          files: ./coverage.xml
          flags: ${{ matrix.python-version }}
          name: Coverage (${{ matrix.python-version }})
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Clean cache
        run: uv cache prune --ci

  build:
    name: Build
    needs: test
    if: ${{ github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-24.04
    permissions:
      contents: read
    env:
      DIST_DIR: dist
      LOCK_FILE: uv.lock

    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          ref: ${{ github.sha }}
          fetch-depth: 0

      - name: Setup release branch
        run: git checkout -B ${{ github.ref_name }}

      - name: Install uv
        uses: astral-sh/setup-uv@d0cc045d04ccac9d8b7881df0226f9e82c39688e # v6
        with:
          python-version: "3.13"
          enable-cache: true
          cache-suffix: ${{ hashFiles('uv.lock') }}

      - name: Install build dependencies
        run: uv sync --group build --no-default-groups --frozen

      - name: Build package
        id: semantic-release
        env:
          GH_TOKEN: "none"
        run: uv run semantic-release -v version --no-commit --no-tag

      - name: Upload distribution artifacts
        if: ${{ steps.semantic-release.outputs.released == 'true' }}
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: ${{ env.DIST_DIR }}
          path: ${{ format('{0}/**', env.DIST_DIR) }}
          if-no-files-found: error
          retention-days: 2

      - name: Upload lock file
        if: ${{ steps.semantic-release.outputs.released == 'true' }}
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4
        with:
          name: ${{ env.LOCK_FILE }}
          path: ${{ env.LOCK_FILE }}
          if-no-files-found: error
          retention-days: 2

      - name: Clean cache
        run: uv cache prune --ci

    outputs:
      released: ${{ steps.semantic-release.outputs.released }}
      version: ${{ steps.semantic-release.outputs.version }}
      tag: ${{ steps.semantic-release.outputs.tag }}
      is_prerelease: ${{ steps.semantic-release.outputs.is_prerelease }}
      dist_artifacts: ${{ env.DIST_DIR }}
      lock_artifact: ${{ env.LOCK_FILE }}

  e2e:
    name: End-to-End Tests
    needs: build
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          ref: ${{ github.sha }}
          fetch-depth: 1

      - name: Download distribution artifacts
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5
        if: ${{ needs.build.outputs.released == 'true' }}
        id: download-artifacts
        with:
          name: ${{ needs.build.outputs.dist_artifacts }}
          path: ./dist

      - name: Install uv
        uses: astral-sh/setup-uv@d0cc045d04ccac9d8b7881df0226f9e82c39688e # v6
        with:
          python-version: "3.13"
          enable-cache: true
          cache-suffix: ${{ hashFiles('uv.lock') }}

      - name: Install dependencies
        run: uv sync --frozen

      - name: Install distribution artifact
        if: ${{ steps.download-artifacts.outcome == 'success' }}
        run: |
          uv pip uninstall cb-events
          uv pip install dist/cb_events-*.whl

      - name: Run end-to-end tests
        run: make test-e2e

      - name: Clean cache
        run: uv cache prune --ci

  release:
    name: Release
    needs:
      - build
      - e2e
    if: ${{ github.ref == 'refs/heads/main' && needs.build.outputs.released == 'true' }}

    concurrency:
      group: ${{ github.workflow }}-release-${{ github.ref_name }}
      cancel-in-progress: false

    permissions:
      contents: write

    runs-on: ubuntu-24.04

    steps:
      - name: Checkout repository
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5
        with:
          ref: ${{ github.ref_name }}
          fetch-depth: 0

      - name: Reset to workflow SHA
        run: git reset --hard ${{ github.sha }}

      - name: Install uv
        uses: astral-sh/setup-uv@d0cc045d04ccac9d8b7881df0226f9e82c39688e # v6
        with:
          python-version: "3.13"
          enable-cache: true
          cache-suffix: ${{ hashFiles('uv.lock') }}

      - name: Install build dependencies
        run: uv sync --group build --no-default-groups --frozen

      - name: Download distribution artifacts
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5
        id: download-dist
        with:
          name: ${{ needs.build.outputs.dist_artifacts }}
          path: dist

      - name: Download lock file
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5
        with:
          name: ${{ needs.build.outputs.lock_artifact }}

      - name: Stage lock file
        run: git add uv.lock

      - name: Create release
        id: semantic-release
        shell: bash
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          bash .github/workflows/verify_upstream.sh
          uv run semantic-release -v --strict version --skip-build
          uv run semantic-release publish

      - name: Clean cache
        run: uv cache prune --ci

    outputs:
      released: ${{ steps.semantic-release.outputs.released }}
      version: ${{ steps.semantic-release.outputs.version }}
      tag: ${{ steps.semantic-release.outputs.tag }}

  deploy:
    name: Deploy
    runs-on: ubuntu-24.04
    needs:
      - build
      - release
    if: ${{ github.ref == 'refs/heads/main' && needs.release.outputs.released == 'true' && github.repository == 'MountainGod2/cb-events' }}

    environment:
      name: pypi
      url: https://pypi.org/project/cb-events/

    permissions:
      id-token: write

    steps:
      - name: Download distribution artifacts
        uses: actions/download-artifact@634f93cb2916e3fdff6788551b99b062d0335ce0 # v5
        id: download-artifacts
        with:
          name: ${{ needs.build.outputs.dist_artifacts }}
          path: dist

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@76f52bc884231f62b9a034ebfe128415bbaabdfc # v1
        with:
          packages-dir: dist
          print-hash: true
          verbose: true
