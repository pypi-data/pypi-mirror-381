import typing
import collections.abc
import typing_extensions
import numpy.typing as npt

def check(check_ctxt, msgs, key, msgsrc, settings) -> None:
    """Performs a set of checks over the given key (context, message)..."""

def dump_addon_bl_info(msgs, reports, module, settings) -> None: ...
def dump_addon_messages(addon_module_name, do_checks, settings) -> None: ...
def dump_asset_messages(msgs, reports, settings) -> None: ...
def dump_extension_metadata(msgs, reports, settings) -> None: ...
def dump_messages(do_messages, do_checks, settings) -> None: ...
def dump_ocio_config(msgs, reports, settings) -> None: ...
def dump_preset_messages(msgs, reports, settings) -> None: ...
def dump_py_messages(msgs, reports, addons, settings, addons_only=False) -> None: ...
def dump_py_messages_from_files(msgs, reports, files, settings) -> None: ...
def dump_rna_messages(msgs, reports, settings, verbose=False) -> None:
    """Dump into messages dict all RNA-defined UI messages (labels en tooltips)."""

def dump_src_messages(msgs, reports, settings) -> None: ...
def dump_template_messages(msgs, reports, settings) -> None: ...
def init_spell_check(settings, lang="en_US") -> None: ...
def main() -> None: ...
def print_info(reports, pot) -> None: ...
def process_msg(
    msgs, msgctxt, msgid, msgsrc, reports, check_ctxt, settings
) -> None: ...
