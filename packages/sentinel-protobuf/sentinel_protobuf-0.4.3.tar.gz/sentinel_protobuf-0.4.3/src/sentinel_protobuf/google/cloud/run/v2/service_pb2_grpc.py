# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from google.cloud.run.v2 import service_pb2 as google_dot_cloud_dot_run_dot_v2_dot_service__pb2
from google.iam.v1 import iam_policy_pb2 as google_dot_iam_dot_v1_dot_iam__policy__pb2
from google.iam.v1 import policy_pb2 as google_dot_iam_dot_v1_dot_policy__pb2
from google.longrunning import operations_pb2 as google_dot_longrunning_dot_operations__pb2

GRPC_GENERATED_VERSION = '1.71.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in google/cloud/run/v2/service_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class ServicesStub(object):
    """Cloud Run Service Control Plane API
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateService = channel.unary_unary(
                '/google.cloud.run.v2.Services/CreateService',
                request_serializer=google_dot_cloud_dot_run_dot_v2_dot_service__pb2.CreateServiceRequest.SerializeToString,
                response_deserializer=google_dot_longrunning_dot_operations__pb2.Operation.FromString,
                _registered_method=True)
        self.GetService = channel.unary_unary(
                '/google.cloud.run.v2.Services/GetService',
                request_serializer=google_dot_cloud_dot_run_dot_v2_dot_service__pb2.GetServiceRequest.SerializeToString,
                response_deserializer=google_dot_cloud_dot_run_dot_v2_dot_service__pb2.Service.FromString,
                _registered_method=True)
        self.ListServices = channel.unary_unary(
                '/google.cloud.run.v2.Services/ListServices',
                request_serializer=google_dot_cloud_dot_run_dot_v2_dot_service__pb2.ListServicesRequest.SerializeToString,
                response_deserializer=google_dot_cloud_dot_run_dot_v2_dot_service__pb2.ListServicesResponse.FromString,
                _registered_method=True)
        self.UpdateService = channel.unary_unary(
                '/google.cloud.run.v2.Services/UpdateService',
                request_serializer=google_dot_cloud_dot_run_dot_v2_dot_service__pb2.UpdateServiceRequest.SerializeToString,
                response_deserializer=google_dot_longrunning_dot_operations__pb2.Operation.FromString,
                _registered_method=True)
        self.DeleteService = channel.unary_unary(
                '/google.cloud.run.v2.Services/DeleteService',
                request_serializer=google_dot_cloud_dot_run_dot_v2_dot_service__pb2.DeleteServiceRequest.SerializeToString,
                response_deserializer=google_dot_longrunning_dot_operations__pb2.Operation.FromString,
                _registered_method=True)
        self.GetIamPolicy = channel.unary_unary(
                '/google.cloud.run.v2.Services/GetIamPolicy',
                request_serializer=google_dot_iam_dot_v1_dot_iam__policy__pb2.GetIamPolicyRequest.SerializeToString,
                response_deserializer=google_dot_iam_dot_v1_dot_policy__pb2.Policy.FromString,
                _registered_method=True)
        self.SetIamPolicy = channel.unary_unary(
                '/google.cloud.run.v2.Services/SetIamPolicy',
                request_serializer=google_dot_iam_dot_v1_dot_iam__policy__pb2.SetIamPolicyRequest.SerializeToString,
                response_deserializer=google_dot_iam_dot_v1_dot_policy__pb2.Policy.FromString,
                _registered_method=True)
        self.TestIamPermissions = channel.unary_unary(
                '/google.cloud.run.v2.Services/TestIamPermissions',
                request_serializer=google_dot_iam_dot_v1_dot_iam__policy__pb2.TestIamPermissionsRequest.SerializeToString,
                response_deserializer=google_dot_iam_dot_v1_dot_iam__policy__pb2.TestIamPermissionsResponse.FromString,
                _registered_method=True)


class ServicesServicer(object):
    """Cloud Run Service Control Plane API
    """

    def CreateService(self, request, context):
        """Creates a new Service in a given project and location.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetService(self, request, context):
        """Gets information about a Service.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListServices(self, request, context):
        """Lists Services. Results are sorted by creation time, descending.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateService(self, request, context):
        """Updates a Service.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteService(self, request, context):
        """Deletes a Service.
        This will cause the Service to stop serving traffic and will delete all
        revisions.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetIamPolicy(self, request, context):
        """Gets the IAM Access Control policy currently in effect for the given
        Cloud Run Service. This result does not include any inherited policies.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetIamPolicy(self, request, context):
        """Sets the IAM Access control policy for the specified Service. Overwrites
        any existing policy.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TestIamPermissions(self, request, context):
        """Returns permissions that a caller has on the specified Project.

        There are no permissions required for making this API call.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ServicesServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateService': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateService,
                    request_deserializer=google_dot_cloud_dot_run_dot_v2_dot_service__pb2.CreateServiceRequest.FromString,
                    response_serializer=google_dot_longrunning_dot_operations__pb2.Operation.SerializeToString,
            ),
            'GetService': grpc.unary_unary_rpc_method_handler(
                    servicer.GetService,
                    request_deserializer=google_dot_cloud_dot_run_dot_v2_dot_service__pb2.GetServiceRequest.FromString,
                    response_serializer=google_dot_cloud_dot_run_dot_v2_dot_service__pb2.Service.SerializeToString,
            ),
            'ListServices': grpc.unary_unary_rpc_method_handler(
                    servicer.ListServices,
                    request_deserializer=google_dot_cloud_dot_run_dot_v2_dot_service__pb2.ListServicesRequest.FromString,
                    response_serializer=google_dot_cloud_dot_run_dot_v2_dot_service__pb2.ListServicesResponse.SerializeToString,
            ),
            'UpdateService': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateService,
                    request_deserializer=google_dot_cloud_dot_run_dot_v2_dot_service__pb2.UpdateServiceRequest.FromString,
                    response_serializer=google_dot_longrunning_dot_operations__pb2.Operation.SerializeToString,
            ),
            'DeleteService': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteService,
                    request_deserializer=google_dot_cloud_dot_run_dot_v2_dot_service__pb2.DeleteServiceRequest.FromString,
                    response_serializer=google_dot_longrunning_dot_operations__pb2.Operation.SerializeToString,
            ),
            'GetIamPolicy': grpc.unary_unary_rpc_method_handler(
                    servicer.GetIamPolicy,
                    request_deserializer=google_dot_iam_dot_v1_dot_iam__policy__pb2.GetIamPolicyRequest.FromString,
                    response_serializer=google_dot_iam_dot_v1_dot_policy__pb2.Policy.SerializeToString,
            ),
            'SetIamPolicy': grpc.unary_unary_rpc_method_handler(
                    servicer.SetIamPolicy,
                    request_deserializer=google_dot_iam_dot_v1_dot_iam__policy__pb2.SetIamPolicyRequest.FromString,
                    response_serializer=google_dot_iam_dot_v1_dot_policy__pb2.Policy.SerializeToString,
            ),
            'TestIamPermissions': grpc.unary_unary_rpc_method_handler(
                    servicer.TestIamPermissions,
                    request_deserializer=google_dot_iam_dot_v1_dot_iam__policy__pb2.TestIamPermissionsRequest.FromString,
                    response_serializer=google_dot_iam_dot_v1_dot_iam__policy__pb2.TestIamPermissionsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'google.cloud.run.v2.Services', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('google.cloud.run.v2.Services', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class Services(object):
    """Cloud Run Service Control Plane API
    """

    @staticmethod
    def CreateService(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/google.cloud.run.v2.Services/CreateService',
            google_dot_cloud_dot_run_dot_v2_dot_service__pb2.CreateServiceRequest.SerializeToString,
            google_dot_longrunning_dot_operations__pb2.Operation.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetService(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/google.cloud.run.v2.Services/GetService',
            google_dot_cloud_dot_run_dot_v2_dot_service__pb2.GetServiceRequest.SerializeToString,
            google_dot_cloud_dot_run_dot_v2_dot_service__pb2.Service.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListServices(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/google.cloud.run.v2.Services/ListServices',
            google_dot_cloud_dot_run_dot_v2_dot_service__pb2.ListServicesRequest.SerializeToString,
            google_dot_cloud_dot_run_dot_v2_dot_service__pb2.ListServicesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateService(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/google.cloud.run.v2.Services/UpdateService',
            google_dot_cloud_dot_run_dot_v2_dot_service__pb2.UpdateServiceRequest.SerializeToString,
            google_dot_longrunning_dot_operations__pb2.Operation.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteService(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/google.cloud.run.v2.Services/DeleteService',
            google_dot_cloud_dot_run_dot_v2_dot_service__pb2.DeleteServiceRequest.SerializeToString,
            google_dot_longrunning_dot_operations__pb2.Operation.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetIamPolicy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/google.cloud.run.v2.Services/GetIamPolicy',
            google_dot_iam_dot_v1_dot_iam__policy__pb2.GetIamPolicyRequest.SerializeToString,
            google_dot_iam_dot_v1_dot_policy__pb2.Policy.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def SetIamPolicy(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/google.cloud.run.v2.Services/SetIamPolicy',
            google_dot_iam_dot_v1_dot_iam__policy__pb2.SetIamPolicyRequest.SerializeToString,
            google_dot_iam_dot_v1_dot_policy__pb2.Policy.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def TestIamPermissions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/google.cloud.run.v2.Services/TestIamPermissions',
            google_dot_iam_dot_v1_dot_iam__policy__pb2.TestIamPermissionsRequest.SerializeToString,
            google_dot_iam_dot_v1_dot_iam__policy__pb2.TestIamPermissionsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
