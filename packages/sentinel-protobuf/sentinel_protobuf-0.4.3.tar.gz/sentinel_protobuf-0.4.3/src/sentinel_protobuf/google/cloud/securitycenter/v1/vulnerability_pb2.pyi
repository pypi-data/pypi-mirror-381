from google.protobuf import timestamp_pb2 as _timestamp_pb2
from google.protobuf.internal import containers as _containers
from google.protobuf.internal import enum_type_wrapper as _enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from typing import ClassVar as _ClassVar, Iterable as _Iterable, Mapping as _Mapping, Optional as _Optional, Union as _Union
DESCRIPTOR: _descriptor.FileDescriptor

class Vulnerability(_message.Message):
    __slots__ = ('cve', 'offending_package', 'fixed_package', 'security_bulletin')
    CVE_FIELD_NUMBER: _ClassVar[int]
    OFFENDING_PACKAGE_FIELD_NUMBER: _ClassVar[int]
    FIXED_PACKAGE_FIELD_NUMBER: _ClassVar[int]
    SECURITY_BULLETIN_FIELD_NUMBER: _ClassVar[int]
    cve: Cve
    offending_package: Package
    fixed_package: Package
    security_bulletin: SecurityBulletin

    def __init__(self, cve: _Optional[_Union[Cve, _Mapping]]=..., offending_package: _Optional[_Union[Package, _Mapping]]=..., fixed_package: _Optional[_Union[Package, _Mapping]]=..., security_bulletin: _Optional[_Union[SecurityBulletin, _Mapping]]=...) -> None:
        ...

class Cve(_message.Message):
    __slots__ = ('id', 'references', 'cvssv3', 'upstream_fix_available', 'impact', 'exploitation_activity', 'observed_in_the_wild', 'zero_day', 'exploit_release_date')

    class RiskRating(int, metaclass=_enum_type_wrapper.EnumTypeWrapper):
        __slots__ = ()
        RISK_RATING_UNSPECIFIED: _ClassVar[Cve.RiskRating]
        LOW: _ClassVar[Cve.RiskRating]
        MEDIUM: _ClassVar[Cve.RiskRating]
        HIGH: _ClassVar[Cve.RiskRating]
        CRITICAL: _ClassVar[Cve.RiskRating]
    RISK_RATING_UNSPECIFIED: Cve.RiskRating
    LOW: Cve.RiskRating
    MEDIUM: Cve.RiskRating
    HIGH: Cve.RiskRating
    CRITICAL: Cve.RiskRating

    class ExploitationActivity(int, metaclass=_enum_type_wrapper.EnumTypeWrapper):
        __slots__ = ()
        EXPLOITATION_ACTIVITY_UNSPECIFIED: _ClassVar[Cve.ExploitationActivity]
        WIDE: _ClassVar[Cve.ExploitationActivity]
        CONFIRMED: _ClassVar[Cve.ExploitationActivity]
        AVAILABLE: _ClassVar[Cve.ExploitationActivity]
        ANTICIPATED: _ClassVar[Cve.ExploitationActivity]
        NO_KNOWN: _ClassVar[Cve.ExploitationActivity]
    EXPLOITATION_ACTIVITY_UNSPECIFIED: Cve.ExploitationActivity
    WIDE: Cve.ExploitationActivity
    CONFIRMED: Cve.ExploitationActivity
    AVAILABLE: Cve.ExploitationActivity
    ANTICIPATED: Cve.ExploitationActivity
    NO_KNOWN: Cve.ExploitationActivity
    ID_FIELD_NUMBER: _ClassVar[int]
    REFERENCES_FIELD_NUMBER: _ClassVar[int]
    CVSSV3_FIELD_NUMBER: _ClassVar[int]
    UPSTREAM_FIX_AVAILABLE_FIELD_NUMBER: _ClassVar[int]
    IMPACT_FIELD_NUMBER: _ClassVar[int]
    EXPLOITATION_ACTIVITY_FIELD_NUMBER: _ClassVar[int]
    OBSERVED_IN_THE_WILD_FIELD_NUMBER: _ClassVar[int]
    ZERO_DAY_FIELD_NUMBER: _ClassVar[int]
    EXPLOIT_RELEASE_DATE_FIELD_NUMBER: _ClassVar[int]
    id: str
    references: _containers.RepeatedCompositeFieldContainer[Reference]
    cvssv3: Cvssv3
    upstream_fix_available: bool
    impact: Cve.RiskRating
    exploitation_activity: Cve.ExploitationActivity
    observed_in_the_wild: bool
    zero_day: bool
    exploit_release_date: _timestamp_pb2.Timestamp

    def __init__(self, id: _Optional[str]=..., references: _Optional[_Iterable[_Union[Reference, _Mapping]]]=..., cvssv3: _Optional[_Union[Cvssv3, _Mapping]]=..., upstream_fix_available: bool=..., impact: _Optional[_Union[Cve.RiskRating, str]]=..., exploitation_activity: _Optional[_Union[Cve.ExploitationActivity, str]]=..., observed_in_the_wild: bool=..., zero_day: bool=..., exploit_release_date: _Optional[_Union[_timestamp_pb2.Timestamp, _Mapping]]=...) -> None:
        ...

class Reference(_message.Message):
    __slots__ = ('source', 'uri')
    SOURCE_FIELD_NUMBER: _ClassVar[int]
    URI_FIELD_NUMBER: _ClassVar[int]
    source: str
    uri: str

    def __init__(self, source: _Optional[str]=..., uri: _Optional[str]=...) -> None:
        ...

class Cvssv3(_message.Message):
    __slots__ = ('base_score', 'attack_vector', 'attack_complexity', 'privileges_required', 'user_interaction', 'scope', 'confidentiality_impact', 'integrity_impact', 'availability_impact')

    class AttackVector(int, metaclass=_enum_type_wrapper.EnumTypeWrapper):
        __slots__ = ()
        ATTACK_VECTOR_UNSPECIFIED: _ClassVar[Cvssv3.AttackVector]
        ATTACK_VECTOR_NETWORK: _ClassVar[Cvssv3.AttackVector]
        ATTACK_VECTOR_ADJACENT: _ClassVar[Cvssv3.AttackVector]
        ATTACK_VECTOR_LOCAL: _ClassVar[Cvssv3.AttackVector]
        ATTACK_VECTOR_PHYSICAL: _ClassVar[Cvssv3.AttackVector]
    ATTACK_VECTOR_UNSPECIFIED: Cvssv3.AttackVector
    ATTACK_VECTOR_NETWORK: Cvssv3.AttackVector
    ATTACK_VECTOR_ADJACENT: Cvssv3.AttackVector
    ATTACK_VECTOR_LOCAL: Cvssv3.AttackVector
    ATTACK_VECTOR_PHYSICAL: Cvssv3.AttackVector

    class AttackComplexity(int, metaclass=_enum_type_wrapper.EnumTypeWrapper):
        __slots__ = ()
        ATTACK_COMPLEXITY_UNSPECIFIED: _ClassVar[Cvssv3.AttackComplexity]
        ATTACK_COMPLEXITY_LOW: _ClassVar[Cvssv3.AttackComplexity]
        ATTACK_COMPLEXITY_HIGH: _ClassVar[Cvssv3.AttackComplexity]
    ATTACK_COMPLEXITY_UNSPECIFIED: Cvssv3.AttackComplexity
    ATTACK_COMPLEXITY_LOW: Cvssv3.AttackComplexity
    ATTACK_COMPLEXITY_HIGH: Cvssv3.AttackComplexity

    class PrivilegesRequired(int, metaclass=_enum_type_wrapper.EnumTypeWrapper):
        __slots__ = ()
        PRIVILEGES_REQUIRED_UNSPECIFIED: _ClassVar[Cvssv3.PrivilegesRequired]
        PRIVILEGES_REQUIRED_NONE: _ClassVar[Cvssv3.PrivilegesRequired]
        PRIVILEGES_REQUIRED_LOW: _ClassVar[Cvssv3.PrivilegesRequired]
        PRIVILEGES_REQUIRED_HIGH: _ClassVar[Cvssv3.PrivilegesRequired]
    PRIVILEGES_REQUIRED_UNSPECIFIED: Cvssv3.PrivilegesRequired
    PRIVILEGES_REQUIRED_NONE: Cvssv3.PrivilegesRequired
    PRIVILEGES_REQUIRED_LOW: Cvssv3.PrivilegesRequired
    PRIVILEGES_REQUIRED_HIGH: Cvssv3.PrivilegesRequired

    class UserInteraction(int, metaclass=_enum_type_wrapper.EnumTypeWrapper):
        __slots__ = ()
        USER_INTERACTION_UNSPECIFIED: _ClassVar[Cvssv3.UserInteraction]
        USER_INTERACTION_NONE: _ClassVar[Cvssv3.UserInteraction]
        USER_INTERACTION_REQUIRED: _ClassVar[Cvssv3.UserInteraction]
    USER_INTERACTION_UNSPECIFIED: Cvssv3.UserInteraction
    USER_INTERACTION_NONE: Cvssv3.UserInteraction
    USER_INTERACTION_REQUIRED: Cvssv3.UserInteraction

    class Scope(int, metaclass=_enum_type_wrapper.EnumTypeWrapper):
        __slots__ = ()
        SCOPE_UNSPECIFIED: _ClassVar[Cvssv3.Scope]
        SCOPE_UNCHANGED: _ClassVar[Cvssv3.Scope]
        SCOPE_CHANGED: _ClassVar[Cvssv3.Scope]
    SCOPE_UNSPECIFIED: Cvssv3.Scope
    SCOPE_UNCHANGED: Cvssv3.Scope
    SCOPE_CHANGED: Cvssv3.Scope

    class Impact(int, metaclass=_enum_type_wrapper.EnumTypeWrapper):
        __slots__ = ()
        IMPACT_UNSPECIFIED: _ClassVar[Cvssv3.Impact]
        IMPACT_HIGH: _ClassVar[Cvssv3.Impact]
        IMPACT_LOW: _ClassVar[Cvssv3.Impact]
        IMPACT_NONE: _ClassVar[Cvssv3.Impact]
    IMPACT_UNSPECIFIED: Cvssv3.Impact
    IMPACT_HIGH: Cvssv3.Impact
    IMPACT_LOW: Cvssv3.Impact
    IMPACT_NONE: Cvssv3.Impact
    BASE_SCORE_FIELD_NUMBER: _ClassVar[int]
    ATTACK_VECTOR_FIELD_NUMBER: _ClassVar[int]
    ATTACK_COMPLEXITY_FIELD_NUMBER: _ClassVar[int]
    PRIVILEGES_REQUIRED_FIELD_NUMBER: _ClassVar[int]
    USER_INTERACTION_FIELD_NUMBER: _ClassVar[int]
    SCOPE_FIELD_NUMBER: _ClassVar[int]
    CONFIDENTIALITY_IMPACT_FIELD_NUMBER: _ClassVar[int]
    INTEGRITY_IMPACT_FIELD_NUMBER: _ClassVar[int]
    AVAILABILITY_IMPACT_FIELD_NUMBER: _ClassVar[int]
    base_score: float
    attack_vector: Cvssv3.AttackVector
    attack_complexity: Cvssv3.AttackComplexity
    privileges_required: Cvssv3.PrivilegesRequired
    user_interaction: Cvssv3.UserInteraction
    scope: Cvssv3.Scope
    confidentiality_impact: Cvssv3.Impact
    integrity_impact: Cvssv3.Impact
    availability_impact: Cvssv3.Impact

    def __init__(self, base_score: _Optional[float]=..., attack_vector: _Optional[_Union[Cvssv3.AttackVector, str]]=..., attack_complexity: _Optional[_Union[Cvssv3.AttackComplexity, str]]=..., privileges_required: _Optional[_Union[Cvssv3.PrivilegesRequired, str]]=..., user_interaction: _Optional[_Union[Cvssv3.UserInteraction, str]]=..., scope: _Optional[_Union[Cvssv3.Scope, str]]=..., confidentiality_impact: _Optional[_Union[Cvssv3.Impact, str]]=..., integrity_impact: _Optional[_Union[Cvssv3.Impact, str]]=..., availability_impact: _Optional[_Union[Cvssv3.Impact, str]]=...) -> None:
        ...

class Package(_message.Message):
    __slots__ = ('package_name', 'cpe_uri', 'package_type', 'package_version')
    PACKAGE_NAME_FIELD_NUMBER: _ClassVar[int]
    CPE_URI_FIELD_NUMBER: _ClassVar[int]
    PACKAGE_TYPE_FIELD_NUMBER: _ClassVar[int]
    PACKAGE_VERSION_FIELD_NUMBER: _ClassVar[int]
    package_name: str
    cpe_uri: str
    package_type: str
    package_version: str

    def __init__(self, package_name: _Optional[str]=..., cpe_uri: _Optional[str]=..., package_type: _Optional[str]=..., package_version: _Optional[str]=...) -> None:
        ...

class SecurityBulletin(_message.Message):
    __slots__ = ('bulletin_id', 'submission_time', 'suggested_upgrade_version')
    BULLETIN_ID_FIELD_NUMBER: _ClassVar[int]
    SUBMISSION_TIME_FIELD_NUMBER: _ClassVar[int]
    SUGGESTED_UPGRADE_VERSION_FIELD_NUMBER: _ClassVar[int]
    bulletin_id: str
    submission_time: _timestamp_pb2.Timestamp
    suggested_upgrade_version: str

    def __init__(self, bulletin_id: _Optional[str]=..., submission_time: _Optional[_Union[_timestamp_pb2.Timestamp, _Mapping]]=..., suggested_upgrade_version: _Optional[str]=...) -> None:
        ...