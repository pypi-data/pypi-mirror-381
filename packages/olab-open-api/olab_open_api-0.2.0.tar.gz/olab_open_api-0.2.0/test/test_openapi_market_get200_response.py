# coding: utf-8

"""
    Prediction Market OpenAPI

    Prediction Market REST API for trading and market operations

    The version of the OpenAPI document: 1.0
    Contact: support@polymarket.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from olab_open_api.models.openapi_market_get200_response import OpenapiMarketGet200Response

class TestOpenapiMarketGet200Response(unittest.TestCase):
    """OpenapiMarketGet200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OpenapiMarketGet200Response:
        """Test OpenapiMarketGet200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OpenapiMarketGet200Response`
        """
        model = OpenapiMarketGet200Response()
        if include_optional:
            return OpenapiMarketGet200Response(
                errmsg = '',
                errno = 56,
                result = olab_open_api.models.openapi/market_list_resp_open_api.openapi.MarketListRespOpenAPI(
                    list = [
                        olab_open_api.models.openapi/market_data_open_api.openapi.MarketDataOpenAPI(
                            chain_id = '', 
                            child_markets = [
                                olab_open_api.models.openapi/child_market_data_open_api.openapi.ChildMarketDataOpenAPI(
                                    chain_id = '', 
                                    condition_id = '', 
                                    created_at = 56, 
                                    cutoff_at = 56, 
                                    market_id = 56, 
                                    market_title = '', 
                                    no_label = '', 
                                    no_token_id = '', 
                                    question_id = '', 
                                    quote_token = '', 
                                    resolved_at = 56, 
                                    result_token_id = '', 
                                    rules = '', 
                                    status = 0, 
                                    status_enum = '', 
                                    volume = '', 
                                    yes_label = '', 
                                    yes_token_id = '', )
                                ], 
                            condition_id = '', 
                            created_at = 56, 
                            cutoff_at = 56, 
                            market_id = 56, 
                            market_title = '', 
                            no_label = '', 
                            no_token_id = '', 
                            question_id = '', 
                            quote_token = '', 
                            resolved_at = 56, 
                            result_token_id = '', 
                            rules = '', 
                            status = 0, 
                            status_enum = '', 
                            volume = '', 
                            yes_label = '', 
                            yes_token_id = '', )
                        ], 
                    total = 56, )
            )
        else:
            return OpenapiMarketGet200Response(
        )
        """

    def testOpenapiMarketGet200Response(self):
        """Test OpenapiMarketGet200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
