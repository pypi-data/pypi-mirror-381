# coding: utf-8

"""
    Prediction Market OpenAPI

    Prediction Market REST API for trading and market operations

    The version of the OpenAPI document: 1.0
    Contact: support@polymarket.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from olab_open_api.models.v2_add_order_req import V2AddOrderReq

class TestV2AddOrderReq(unittest.TestCase):
    """V2AddOrderReq unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V2AddOrderReq:
        """Test V2AddOrderReq
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V2AddOrderReq`
        """
        model = V2AddOrderReq()
        if include_optional:
            return V2AddOrderReq(
                contract_address = '',
                currency_address = '',
                expiration = '',
                fee_rate_bps = '',
                maker = '',
                maker_amount = '',
                nonce = '',
                order_exp_time = '',
                origin = '',
                price = '',
                safe_rate = '',
                salt = '',
                side = '',
                sign = '',
                signature = '',
                signature_type = '',
                signer = '',
                taker = '',
                taker_amount = '',
                timestamp = 56,
                token_id = '',
                topic_id = 56,
                trading_method = 56
            )
        else:
            return V2AddOrderReq(
        )
        """

    def testV2AddOrderReq(self):
        """Test V2AddOrderReq"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
