# coding: utf-8

"""
    Prediction Market OpenAPI

    Prediction Market REST API for trading and market operations

    The version of the OpenAPI document: 1.0
    Contact: support@polymarket.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from olab_open_api.models.openapi_order_get200_response import OpenapiOrderGet200Response

class TestOpenapiOrderGet200Response(unittest.TestCase):
    """OpenapiOrderGet200Response unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> OpenapiOrderGet200Response:
        """Test OpenapiOrderGet200Response
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `OpenapiOrderGet200Response`
        """
        model = OpenapiOrderGet200Response()
        if include_optional:
            return OpenapiOrderGet200Response(
                errmsg = '',
                errno = 56,
                result = olab_open_api.models.openapi/order_list_resp_open_api.openapi.OrderListRespOpenAPI(
                    list = [
                        olab_open_api.models.openapi/order_data_open_api.openapi.OrderDataOpenAPI(
                            created_at = 56, 
                            expires_at = 56, 
                            filled_amount = '', 
                            filled_shares = '', 
                            market_id = 56, 
                            market_title = '', 
                            order_amount = '', 
                            order_id = 56, 
                            order_shares = '', 
                            outcome = '', 
                            outcome_side = 56, 
                            outcome_side_enum = '', 
                            price = '', 
                            profit = '', 
                            quote_token = '', 
                            root_market_id = 56, 
                            root_market_title = '', 
                            side = 56, 
                            side_enum = '', 
                            status = 56, 
                            status_enum = '', 
                            trading_method = 56, 
                            trading_method_enum = '', )
                        ], 
                    total = 56, )
            )
        else:
            return OpenapiOrderGet200Response(
        )
        """

    def testOpenapiOrderGet200Response(self):
        """Test OpenapiOrderGet200Response"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
