# coding: utf-8

"""
    Prediction Market OpenAPI

    Prediction Market REST API for trading and market operations

    The version of the OpenAPI document: 1.0
    Contact: support@polymarket.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from olab_open_api.models.v2_add_order_resp import V2AddOrderResp

class TestV2AddOrderResp(unittest.TestCase):
    """V2AddOrderResp unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> V2AddOrderResp:
        """Test V2AddOrderResp
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `V2AddOrderResp`
        """
        model = V2AddOrderResp()
        if include_optional:
            return V2AddOrderResp(
                order_data = olab_open_api.models.v2/order_data.v2.OrderData(
                    amount = '', 
                    created_at = 56, 
                    currency_address = '', 
                    expiration = 56, 
                    filled = '', 
                    mutil_title = '', 
                    mutil_topic_id = 56, 
                    order_id = 56, 
                    outcome = '', 
                    outcome_side = 56, 
                    price = '', 
                    profit = '', 
                    side = 56, 
                    status = 56, 
                    topic_id = 56, 
                    topic_title = '', 
                    total_price = '', 
                    trading_method = 56, 
                    trans_no = '', )
            )
        else:
            return V2AddOrderResp(
        )
        """

    def testV2AddOrderResp(self):
        """Test V2AddOrderResp"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
