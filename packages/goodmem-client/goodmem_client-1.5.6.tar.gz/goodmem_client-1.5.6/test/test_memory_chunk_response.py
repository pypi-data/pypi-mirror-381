# coding: utf-8

"""
    GoodMem API

    API for interacting with the GoodMem service, providing vector-based memory storage and retrieval with multiple embedder support. The service enables creation of memory spaces, storing memories with vector representations, and efficient similarity-based retrieval.

    The version of the OpenAPI document: v1
    Contact: support@goodmem.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from goodmem_client.models.memory_chunk_response import MemoryChunkResponse

class TestMemoryChunkResponse(unittest.TestCase):
    """MemoryChunkResponse unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> MemoryChunkResponse:
        """Test MemoryChunkResponse
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `MemoryChunkResponse`
        """
        model = MemoryChunkResponse()
        if include_optional:
            return MemoryChunkResponse(
                chunk_id = '550e8400-e29b-41d4-a716-446655440000',
                memory_id = '550e8400-e29b-41d4-a716-446655440001',
                chunk_sequence_number = 1,
                chunk_text = 'This is a chunk of text from the memory content.',
                vector_status = 'COMPLETE',
                start_offset = 0,
                end_offset = 150,
                created_at = 1617293472000,
                updated_at = 1617293472000,
                created_by_id = '550e8400-e29b-41d4-a716-446655440000',
                updated_by_id = '550e8400-e29b-41d4-a716-446655440000'
            )
        else:
            return MemoryChunkResponse(
                chunk_id = '550e8400-e29b-41d4-a716-446655440000',
                memory_id = '550e8400-e29b-41d4-a716-446655440001',
                chunk_sequence_number = 1,
                chunk_text = 'This is a chunk of text from the memory content.',
                vector_status = 'COMPLETE',
                created_at = 1617293472000,
                updated_at = 1617293472000,
                created_by_id = '550e8400-e29b-41d4-a716-446655440000',
                updated_by_id = '550e8400-e29b-41d4-a716-446655440000',
        )
        """

    def testMemoryChunkResponse(self):
        """Test MemoryChunkResponse"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
