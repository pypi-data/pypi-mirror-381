# coding: utf-8

"""
    GoodMem API

    API for interacting with the GoodMem service, providing vector-based memory storage and retrieval with multiple embedder support. The service enables creation of memory spaces, storing memories with vector representations, and efficient similarity-based retrieval.

    The version of the OpenAPI document: v1
    Contact: support@goodmem.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from goodmem_client.models.good_mem_status import GoodMemStatus

class TestGoodMemStatus(unittest.TestCase):
    """GoodMemStatus unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> GoodMemStatus:
        """Test GoodMemStatus
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `GoodMemStatus`
        """
        model = GoodMemStatus()
        if include_optional:
            return GoodMemStatus(
                code = 'PARTIAL_RESULTS',
                message = 'Some embedders were unavailable, returning partial results'
            )
        else:
            return GoodMemStatus(
                code = 'PARTIAL_RESULTS',
                message = 'Some embedders were unavailable, returning partial results',
        )
        """

    def testGoodMemStatus(self):
        """Test GoodMemStatus"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
