# coding: utf-8

"""
    GoodMem API

    API for interacting with the GoodMem service, providing vector-based memory storage and retrieval with multiple embedder support. The service enables creation of memory spaces, storing memories with vector representations, and efficient similarity-based retrieval.

    The version of the OpenAPI document: v1
    Contact: support@goodmem.io
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from goodmem_client.models.retrieved_item import RetrievedItem

class TestRetrievedItem(unittest.TestCase):
    """RetrievedItem unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> RetrievedItem:
        """Test RetrievedItem
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `RetrievedItem`
        """
        model = RetrievedItem()
        if include_optional:
            return RetrievedItem(
                memory = {"memoryId": "550e8400-e29b-41d4-a716-446655440000", "spaceId": "550e8400-e29b-41d4-a716-446655440001", "contentType": "text/plain"},
                chunk = goodmem_client.models.chunk_reference.ChunkReference(
                    result_set_id = '550e8400-e29b-41d4-a716-446655440000', 
                    chunk = {"chunkId": "550e8400-e29b-41d4-a716-446655440000", "memoryId": "550e8400-e29b-41d4-a716-446655440001", "chunkText": "This is a chunk of text from the memory."}, 
                    memory_index = 2, 
                    relevance_score = 0.92, )
            )
        else:
            return RetrievedItem(
        )
        """

    def testRetrievedItem(self):
        """Test RetrievedItem"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
