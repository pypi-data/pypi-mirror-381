[build-system]
requires = [
    "pdm-backend",
]
build-backend = "pdm.backend"

[project]
authors = [
    { name = "Erick Friis", email = "erick@langchain.dev" },
]
requires-python = ">=3.10.0,<4.0.0"
dependencies = [
    "typer>=0.17.0,<1.0.0",
    "gitpython>=3.0.0,<4.0.0",
    "langserve[all]>=0.0.51,<1.0.0",
    "uvicorn>=0.23.0,<1.0.0",
    "tomlkit>=0.12.0,<1.0.0",
    "gritql>=0.2.0,<1.0.0",
]
name = "langchain-cli"
version = "1.0.0a1"
description = "CLI for interacting with LangChain"
readme = "README.md"

[project.license]
text = "MIT"

[project.urls]
"Source Code" = "https://github.com/langchain-ai/langchain/tree/master/libs/cli"
"Release Notes" = "https://github.com/langchain-ai/langchain/releases?q=tag%3A%22langchain-cli%3D%3D0%22&expanded=true"
repository = "https://github.com/langchain-ai/langchain"

[project.scripts]
langchain = "langchain_cli.cli:app"
langchain-cli = "langchain_cli.cli:app"

[dependency-groups]
dev = [
    "pytest>=7.4.2,<9.0.0",
    "pytest-watcher>=0.3.4,<1.0.0",
]
lint = [
    "ruff>=0.13.1,<0.14",
    "mypy>=1.18.1,<1.19",
]
test = [
    "langchain-core",
    "langchain",
]
typing = [
    "langchain",
]
test_integration = []

[tool.uv.sources.langchain-core]
path = "../core"
editable = true

[tool.uv.sources.langchain]
path = "../langchain"
editable = true

[tool.ruff.format]
docstring-code-format = true

[tool.ruff.lint]
select = [
    "ALL",
]
ignore = [
    "C90",
    "COM812",
    "CPY",
    "FIX002",
    "PERF203",
    "PLR09",
    "RUF012",
    "TC001",
    "TC002",
    "TC003",
    "TD002",
    "TD003",
    "BLE",
]
unfixable = [
    "B028",
    "PLW1510",
]

[tool.ruff.lint.flake8-annotations]
allow-star-arg-any = true
mypy-init-return = true

[tool.ruff.lint.flake8-type-checking]
runtime-evaluated-base-classes = [
    "pydantic.BaseModel",
    "langchain_core.load.serializable.Serializable",
    "langchain_core.runnables.base.RunnableSerializable",
]

[tool.ruff.lint.pep8-naming]
classmethod-decorators = [
    "classmethod",
    "langchain_core.utils.pydantic.pre_init",
    "pydantic.field_validator",
    "pydantic.v1.root_validator",
]

[tool.ruff.lint.pyupgrade]
keep-runtime-typing = true

[tool.ruff.lint.pydocstyle]
convention = "google"
ignore-var-parameters = true

[tool.ruff.lint.per-file-ignores]
"tests/**" = [
    "D1",
    "S",
    "SLF",
]
"scripts/**" = [
    "INP",
    "S",
]

[tool.pytest.ini_options]
addopts = "--strict-markers --strict-config --durations=5"
markers = [
    "compile: mark placeholder test used to compile integration tests without running them",
]

[tool.mypy]
plugins = [
    "pydantic.mypy",
]
strict = true
enable_error_code = "deprecated"
warn_unreachable = true
exclude = [
    "langchain_cli/integration_template",
    "langchain_cli/package_template",
]
