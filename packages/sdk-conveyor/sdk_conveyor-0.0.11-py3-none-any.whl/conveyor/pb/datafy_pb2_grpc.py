# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import conveyor.pb.common_pb2 as common__pb2
import conveyor.pb.datafy_pb2 as datafy__pb2
from google.api import httpbody_pb2 as google_dot_api_dot_httpbody__pb2
from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2

GRPC_GENERATED_VERSION = '1.74.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in datafy_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class ManagementServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListTenants = channel.unary_unary(
                '/cloud.datafy.api.proto.ManagementService/ListTenants',
                request_serializer=datafy__pb2.ListTenantsRequest.SerializeToString,
                response_deserializer=datafy__pb2.TenantList.FromString,
                _registered_method=True)
        self.GetTenant = channel.unary_unary(
                '/cloud.datafy.api.proto.ManagementService/GetTenant',
                request_serializer=datafy__pb2.GetTenantRequest.SerializeToString,
                response_deserializer=datafy__pb2.Tenant.FromString,
                _registered_method=True)
        self.CreateTenant = channel.unary_unary(
                '/cloud.datafy.api.proto.ManagementService/CreateTenant',
                request_serializer=datafy__pb2.CreateTenantRequest.SerializeToString,
                response_deserializer=datafy__pb2.Tenant.FromString,
                _registered_method=True)
        self.DeleteTenant = channel.unary_unary(
                '/cloud.datafy.api.proto.ManagementService/DeleteTenant',
                request_serializer=datafy__pb2.DeleteTenantRequest.SerializeToString,
                response_deserializer=datafy__pb2.DeleteTenantResponse.FromString,
                _registered_method=True)
        self.UpdateTenant = channel.unary_unary(
                '/cloud.datafy.api.proto.ManagementService/UpdateTenant',
                request_serializer=datafy__pb2.UpdateTenantRequest.SerializeToString,
                response_deserializer=datafy__pb2.Tenant.FromString,
                _registered_method=True)
        self.TenantVersion = channel.unary_unary(
                '/cloud.datafy.api.proto.ManagementService/TenantVersion',
                request_serializer=datafy__pb2.GetTenantVersionsRequest.SerializeToString,
                response_deserializer=datafy__pb2.GetTenantVersionsResponse.FromString,
                _registered_method=True)
        self.PendulumUpgradeCheck = channel.unary_unary(
                '/cloud.datafy.api.proto.ManagementService/PendulumUpgradeCheck',
                request_serializer=datafy__pb2.PendulumUpgradeCheckRequest.SerializeToString,
                response_deserializer=datafy__pb2.PendulumUpgradeCheckResponse.FromString,
                _registered_method=True)
        self.AddUserToAdminRoleForTenant = channel.unary_unary(
                '/cloud.datafy.api.proto.ManagementService/AddUserToAdminRoleForTenant',
                request_serializer=datafy__pb2.AddUserToAdminRoleForTenantRequest.SerializeToString,
                response_deserializer=datafy__pb2.AddUserToAdminRoleForTenantResponse.FromString,
                _registered_method=True)
        self.RemoveUserFromAdminRoleForTenant = channel.unary_unary(
                '/cloud.datafy.api.proto.ManagementService/RemoveUserFromAdminRoleForTenant',
                request_serializer=datafy__pb2.RemoveUserFromAdminRoleForTenantRequest.SerializeToString,
                response_deserializer=datafy__pb2.RemoveUserFromAdminRoleForTenantResponse.FromString,
                _registered_method=True)
        self.ListUsersForTenant = channel.unary_unary(
                '/cloud.datafy.api.proto.ManagementService/ListUsersForTenant',
                request_serializer=datafy__pb2.ListUsersForTenantRequest.SerializeToString,
                response_deserializer=datafy__pb2.ListUsersForTenantResponse.FromString,
                _registered_method=True)
        self.ListClustersForTenant = channel.unary_unary(
                '/cloud.datafy.api.proto.ManagementService/ListClustersForTenant',
                request_serializer=datafy__pb2.ListClustersForTenantRequest.SerializeToString,
                response_deserializer=datafy__pb2.ListClustersResponse.FromString,
                _registered_method=True)
        self.UpdateClusterForTenant = channel.unary_unary(
                '/cloud.datafy.api.proto.ManagementService/UpdateClusterForTenant',
                request_serializer=datafy__pb2.UpdateClusterForTenantRequest.SerializeToString,
                response_deserializer=datafy__pb2.Cluster.FromString,
                _registered_method=True)


class ManagementServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ListTenants(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTenant(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateTenant(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteTenant(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateTenant(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TenantVersion(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PendulumUpgradeCheck(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddUserToAdminRoleForTenant(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveUserFromAdminRoleForTenant(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListUsersForTenant(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListClustersForTenant(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateClusterForTenant(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ManagementServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListTenants': grpc.unary_unary_rpc_method_handler(
                    servicer.ListTenants,
                    request_deserializer=datafy__pb2.ListTenantsRequest.FromString,
                    response_serializer=datafy__pb2.TenantList.SerializeToString,
            ),
            'GetTenant': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTenant,
                    request_deserializer=datafy__pb2.GetTenantRequest.FromString,
                    response_serializer=datafy__pb2.Tenant.SerializeToString,
            ),
            'CreateTenant': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateTenant,
                    request_deserializer=datafy__pb2.CreateTenantRequest.FromString,
                    response_serializer=datafy__pb2.Tenant.SerializeToString,
            ),
            'DeleteTenant': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteTenant,
                    request_deserializer=datafy__pb2.DeleteTenantRequest.FromString,
                    response_serializer=datafy__pb2.DeleteTenantResponse.SerializeToString,
            ),
            'UpdateTenant': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateTenant,
                    request_deserializer=datafy__pb2.UpdateTenantRequest.FromString,
                    response_serializer=datafy__pb2.Tenant.SerializeToString,
            ),
            'TenantVersion': grpc.unary_unary_rpc_method_handler(
                    servicer.TenantVersion,
                    request_deserializer=datafy__pb2.GetTenantVersionsRequest.FromString,
                    response_serializer=datafy__pb2.GetTenantVersionsResponse.SerializeToString,
            ),
            'PendulumUpgradeCheck': grpc.unary_unary_rpc_method_handler(
                    servicer.PendulumUpgradeCheck,
                    request_deserializer=datafy__pb2.PendulumUpgradeCheckRequest.FromString,
                    response_serializer=datafy__pb2.PendulumUpgradeCheckResponse.SerializeToString,
            ),
            'AddUserToAdminRoleForTenant': grpc.unary_unary_rpc_method_handler(
                    servicer.AddUserToAdminRoleForTenant,
                    request_deserializer=datafy__pb2.AddUserToAdminRoleForTenantRequest.FromString,
                    response_serializer=datafy__pb2.AddUserToAdminRoleForTenantResponse.SerializeToString,
            ),
            'RemoveUserFromAdminRoleForTenant': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveUserFromAdminRoleForTenant,
                    request_deserializer=datafy__pb2.RemoveUserFromAdminRoleForTenantRequest.FromString,
                    response_serializer=datafy__pb2.RemoveUserFromAdminRoleForTenantResponse.SerializeToString,
            ),
            'ListUsersForTenant': grpc.unary_unary_rpc_method_handler(
                    servicer.ListUsersForTenant,
                    request_deserializer=datafy__pb2.ListUsersForTenantRequest.FromString,
                    response_serializer=datafy__pb2.ListUsersForTenantResponse.SerializeToString,
            ),
            'ListClustersForTenant': grpc.unary_unary_rpc_method_handler(
                    servicer.ListClustersForTenant,
                    request_deserializer=datafy__pb2.ListClustersForTenantRequest.FromString,
                    response_serializer=datafy__pb2.ListClustersResponse.SerializeToString,
            ),
            'UpdateClusterForTenant': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateClusterForTenant,
                    request_deserializer=datafy__pb2.UpdateClusterForTenantRequest.FromString,
                    response_serializer=datafy__pb2.Cluster.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cloud.datafy.api.proto.ManagementService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('cloud.datafy.api.proto.ManagementService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ManagementService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ListTenants(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.ManagementService/ListTenants',
            datafy__pb2.ListTenantsRequest.SerializeToString,
            datafy__pb2.TenantList.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetTenant(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.ManagementService/GetTenant',
            datafy__pb2.GetTenantRequest.SerializeToString,
            datafy__pb2.Tenant.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateTenant(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.ManagementService/CreateTenant',
            datafy__pb2.CreateTenantRequest.SerializeToString,
            datafy__pb2.Tenant.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteTenant(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.ManagementService/DeleteTenant',
            datafy__pb2.DeleteTenantRequest.SerializeToString,
            datafy__pb2.DeleteTenantResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateTenant(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.ManagementService/UpdateTenant',
            datafy__pb2.UpdateTenantRequest.SerializeToString,
            datafy__pb2.Tenant.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def TenantVersion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.ManagementService/TenantVersion',
            datafy__pb2.GetTenantVersionsRequest.SerializeToString,
            datafy__pb2.GetTenantVersionsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PendulumUpgradeCheck(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.ManagementService/PendulumUpgradeCheck',
            datafy__pb2.PendulumUpgradeCheckRequest.SerializeToString,
            datafy__pb2.PendulumUpgradeCheckResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AddUserToAdminRoleForTenant(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.ManagementService/AddUserToAdminRoleForTenant',
            datafy__pb2.AddUserToAdminRoleForTenantRequest.SerializeToString,
            datafy__pb2.AddUserToAdminRoleForTenantResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RemoveUserFromAdminRoleForTenant(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.ManagementService/RemoveUserFromAdminRoleForTenant',
            datafy__pb2.RemoveUserFromAdminRoleForTenantRequest.SerializeToString,
            datafy__pb2.RemoveUserFromAdminRoleForTenantResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListUsersForTenant(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.ManagementService/ListUsersForTenant',
            datafy__pb2.ListUsersForTenantRequest.SerializeToString,
            datafy__pb2.ListUsersForTenantResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListClustersForTenant(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.ManagementService/ListClustersForTenant',
            datafy__pb2.ListClustersForTenantRequest.SerializeToString,
            datafy__pb2.ListClustersResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateClusterForTenant(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.ManagementService/UpdateClusterForTenant',
            datafy__pb2.UpdateClusterForTenantRequest.SerializeToString,
            datafy__pb2.Cluster.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class MonitoringServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.InspectPodDetails = channel.unary_unary(
                '/cloud.datafy.api.proto.MonitoringService/InspectPodDetails',
                request_serializer=datafy__pb2.InspectPodDetailsRequest.SerializeToString,
                response_deserializer=datafy__pb2.InspectPodDetailsResponse.FromString,
                _registered_method=True)


class MonitoringServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def InspectPodDetails(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MonitoringServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'InspectPodDetails': grpc.unary_unary_rpc_method_handler(
                    servicer.InspectPodDetails,
                    request_deserializer=datafy__pb2.InspectPodDetailsRequest.FromString,
                    response_serializer=datafy__pb2.InspectPodDetailsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cloud.datafy.api.proto.MonitoringService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('cloud.datafy.api.proto.MonitoringService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class MonitoringService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def InspectPodDetails(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.MonitoringService/InspectPodDetails',
            datafy__pb2.InspectPodDetailsRequest.SerializeToString,
            datafy__pb2.InspectPodDetailsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class RegistrationServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.InitializeTenantWithUser = channel.unary_unary(
                '/cloud.datafy.api.proto.RegistrationService/InitializeTenantWithUser',
                request_serializer=datafy__pb2.InitializeTenantWithUserRequest.SerializeToString,
                response_deserializer=datafy__pb2.InitializeTenantWithUserResponse.FromString,
                _registered_method=True)


class RegistrationServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def InitializeTenantWithUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RegistrationServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'InitializeTenantWithUser': grpc.unary_unary_rpc_method_handler(
                    servicer.InitializeTenantWithUser,
                    request_deserializer=datafy__pb2.InitializeTenantWithUserRequest.FromString,
                    response_serializer=datafy__pb2.InitializeTenantWithUserResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cloud.datafy.api.proto.RegistrationService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('cloud.datafy.api.proto.RegistrationService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class RegistrationService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def InitializeTenantWithUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.RegistrationService/InitializeTenantWithUser',
            datafy__pb2.InitializeTenantWithUserRequest.SerializeToString,
            datafy__pb2.InitializeTenantWithUserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class TenantServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetTenant = channel.unary_unary(
                '/cloud.datafy.api.proto.TenantService/GetTenant',
                request_serializer=datafy__pb2.GetCurrentTenantRequest.SerializeToString,
                response_deserializer=datafy__pb2.Tenant.FromString,
                _registered_method=True)
        self.CurrentAwsTenant = channel.unary_unary(
                '/cloud.datafy.api.proto.TenantService/CurrentAwsTenant',
                request_serializer=datafy__pb2.GetCurrentTenantRequest.SerializeToString,
                response_deserializer=datafy__pb2.Tenant.FromString,
                _registered_method=True)
        self.GetCICDToken = channel.unary_unary(
                '/cloud.datafy.api.proto.TenantService/GetCICDToken',
                request_serializer=datafy__pb2.GetCICDTokenRequest.SerializeToString,
                response_deserializer=datafy__pb2.GetCICDTokenResponse.FromString,
                _registered_method=True)
        self.UpdateTenantIntegrations = channel.unary_unary(
                '/cloud.datafy.api.proto.TenantService/UpdateTenantIntegrations',
                request_serializer=datafy__pb2.UpdateTenantIntegrationRequest.SerializeToString,
                response_deserializer=datafy__pb2.Tenant.FromString,
                _registered_method=True)
        self.UpdateTenantState = channel.unary_unary(
                '/cloud.datafy.api.proto.TenantService/UpdateTenantState',
                request_serializer=datafy__pb2.UpdateTenantStateRequest.SerializeToString,
                response_deserializer=datafy__pb2.Tenant.FromString,
                _registered_method=True)
        self.CheckCanAWSRoleBeAssumed = channel.unary_unary(
                '/cloud.datafy.api.proto.TenantService/CheckCanAWSRoleBeAssumed',
                request_serializer=datafy__pb2.CheckCanAWSRoleBeAssumedRequest.SerializeToString,
                response_deserializer=datafy__pb2.CheckCanAWSRoleBeAssumedResponse.FromString,
                _registered_method=True)


class TenantServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetTenant(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CurrentAwsTenant(self, request, context):
        """This call is still here for backwards compatibility with older clients.
        All new functionality should use the GetTenant call.
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCICDToken(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateTenantIntegrations(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateTenantState(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CheckCanAWSRoleBeAssumed(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TenantServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetTenant': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTenant,
                    request_deserializer=datafy__pb2.GetCurrentTenantRequest.FromString,
                    response_serializer=datafy__pb2.Tenant.SerializeToString,
            ),
            'CurrentAwsTenant': grpc.unary_unary_rpc_method_handler(
                    servicer.CurrentAwsTenant,
                    request_deserializer=datafy__pb2.GetCurrentTenantRequest.FromString,
                    response_serializer=datafy__pb2.Tenant.SerializeToString,
            ),
            'GetCICDToken': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCICDToken,
                    request_deserializer=datafy__pb2.GetCICDTokenRequest.FromString,
                    response_serializer=datafy__pb2.GetCICDTokenResponse.SerializeToString,
            ),
            'UpdateTenantIntegrations': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateTenantIntegrations,
                    request_deserializer=datafy__pb2.UpdateTenantIntegrationRequest.FromString,
                    response_serializer=datafy__pb2.Tenant.SerializeToString,
            ),
            'UpdateTenantState': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateTenantState,
                    request_deserializer=datafy__pb2.UpdateTenantStateRequest.FromString,
                    response_serializer=datafy__pb2.Tenant.SerializeToString,
            ),
            'CheckCanAWSRoleBeAssumed': grpc.unary_unary_rpc_method_handler(
                    servicer.CheckCanAWSRoleBeAssumed,
                    request_deserializer=datafy__pb2.CheckCanAWSRoleBeAssumedRequest.FromString,
                    response_serializer=datafy__pb2.CheckCanAWSRoleBeAssumedResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cloud.datafy.api.proto.TenantService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('cloud.datafy.api.proto.TenantService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class TenantService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetTenant(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.TenantService/GetTenant',
            datafy__pb2.GetCurrentTenantRequest.SerializeToString,
            datafy__pb2.Tenant.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CurrentAwsTenant(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.TenantService/CurrentAwsTenant',
            datafy__pb2.GetCurrentTenantRequest.SerializeToString,
            datafy__pb2.Tenant.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetCICDToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.TenantService/GetCICDToken',
            datafy__pb2.GetCICDTokenRequest.SerializeToString,
            datafy__pb2.GetCICDTokenResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateTenantIntegrations(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.TenantService/UpdateTenantIntegrations',
            datafy__pb2.UpdateTenantIntegrationRequest.SerializeToString,
            datafy__pb2.Tenant.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateTenantState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.TenantService/UpdateTenantState',
            datafy__pb2.UpdateTenantStateRequest.SerializeToString,
            datafy__pb2.Tenant.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CheckCanAWSRoleBeAssumed(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.TenantService/CheckCanAWSRoleBeAssumed',
            datafy__pb2.CheckCanAWSRoleBeAssumedRequest.SerializeToString,
            datafy__pb2.CheckCanAWSRoleBeAssumedResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class TenantDataPlaneServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetTenantVersion = channel.unary_unary(
                '/cloud.datafy.api.proto.TenantDataPlaneService/GetTenantVersion',
                request_serializer=datafy__pb2.GetTenantVersionsRequest.SerializeToString,
                response_deserializer=datafy__pb2.TenantVersion.FromString,
                _registered_method=True)


class TenantDataPlaneServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetTenantVersion(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TenantDataPlaneServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetTenantVersion': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTenantVersion,
                    request_deserializer=datafy__pb2.GetTenantVersionsRequest.FromString,
                    response_serializer=datafy__pb2.TenantVersion.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cloud.datafy.api.proto.TenantDataPlaneService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('cloud.datafy.api.proto.TenantDataPlaneService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class TenantDataPlaneService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetTenantVersion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.TenantDataPlaneService/GetTenantVersion',
            datafy__pb2.GetTenantVersionsRequest.SerializeToString,
            datafy__pb2.TenantVersion.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class ProjectServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateProject = channel.unary_unary(
                '/cloud.datafy.api.proto.ProjectService/CreateProject',
                request_serializer=datafy__pb2.CreateProjectRequest.SerializeToString,
                response_deserializer=datafy__pb2.Project.FromString,
                _registered_method=True)
        self.GetProject = channel.unary_unary(
                '/cloud.datafy.api.proto.ProjectService/GetProject',
                request_serializer=datafy__pb2.GetProjectRequest.SerializeToString,
                response_deserializer=datafy__pb2.Project.FromString,
                _registered_method=True)
        self.UpdateProjectInfo = channel.unary_unary(
                '/cloud.datafy.api.proto.ProjectService/UpdateProjectInfo',
                request_serializer=datafy__pb2.UpdateProjectInfoRequest.SerializeToString,
                response_deserializer=datafy__pb2.Project.FromString,
                _registered_method=True)
        self.DeleteProject = channel.unary_unary(
                '/cloud.datafy.api.proto.ProjectService/DeleteProject',
                request_serializer=datafy__pb2.DeleteProjectRequest.SerializeToString,
                response_deserializer=datafy__pb2.DeleteProjectResponse.FromString,
                _registered_method=True)
        self.GetProjectEvents = channel.unary_unary(
                '/cloud.datafy.api.proto.ProjectService/GetProjectEvents',
                request_serializer=datafy__pb2.GetProjectEventsRequest.SerializeToString,
                response_deserializer=datafy__pb2.GetProjectEventsResponse.FromString,
                _registered_method=True)
        self.GetProjectCredentials = channel.unary_unary(
                '/cloud.datafy.api.proto.ProjectService/GetProjectCredentials',
                request_serializer=datafy__pb2.GetProjectCredentialsRequest.SerializeToString,
                response_deserializer=datafy__pb2.GetProjectCredentialsResponse.FromString,
                _registered_method=True)
        self.ListProjects = channel.unary_unary(
                '/cloud.datafy.api.proto.ProjectService/ListProjects',
                request_serializer=datafy__pb2.ListProjectsRequest.SerializeToString,
                response_deserializer=datafy__pb2.ListProjectsResponse.FromString,
                _registered_method=True)
        self.CreateBuild = channel.unary_unary(
                '/cloud.datafy.api.proto.ProjectService/CreateBuild',
                request_serializer=datafy__pb2.CreateBuildRequest.SerializeToString,
                response_deserializer=datafy__pb2.Build.FromString,
                _registered_method=True)
        self.ValidateStreamingSpec = channel.unary_unary(
                '/cloud.datafy.api.proto.ProjectService/ValidateStreamingSpec',
                request_serializer=datafy__pb2.ValidateStreamingSpecRequest.SerializeToString,
                response_deserializer=datafy__pb2.ValidateStreamingSpecResult.FromString,
                _registered_method=True)
        self.GetBuild = channel.unary_unary(
                '/cloud.datafy.api.proto.ProjectService/GetBuild',
                request_serializer=datafy__pb2.GetBuildRequest.SerializeToString,
                response_deserializer=datafy__pb2.Build.FromString,
                _registered_method=True)
        self.GetLatestBuildsForGitCommit = channel.unary_unary(
                '/cloud.datafy.api.proto.ProjectService/GetLatestBuildsForGitCommit',
                request_serializer=datafy__pb2.GetLatestBuildForGitCommitRequest.SerializeToString,
                response_deserializer=datafy__pb2.GetLatestBuildsForGitCommitResponse.FromString,
                _registered_method=True)
        self.ListBuilds = channel.unary_unary(
                '/cloud.datafy.api.proto.ProjectService/ListBuilds',
                request_serializer=datafy__pb2.ListBuildsRequest.SerializeToString,
                response_deserializer=datafy__pb2.ListBuildsResponse.FromString,
                _registered_method=True)
        self.UpdateBuild = channel.unary_unary(
                '/cloud.datafy.api.proto.ProjectService/UpdateBuild',
                request_serializer=datafy__pb2.UpdateBuildRequest.SerializeToString,
                response_deserializer=datafy__pb2.Build.FromString,
                _registered_method=True)
        self.ListProjectDeployments = channel.unary_unary(
                '/cloud.datafy.api.proto.ProjectService/ListProjectDeployments',
                request_serializer=datafy__pb2.ListProjectDeploymentsRequest.SerializeToString,
                response_deserializer=datafy__pb2.ListProjectDeploymentsResponse.FromString,
                _registered_method=True)
        self.ListProjectUsers = channel.unary_unary(
                '/cloud.datafy.api.proto.ProjectService/ListProjectUsers',
                request_serializer=datafy__pb2.ListProjectUsersRequest.SerializeToString,
                response_deserializer=datafy__pb2.ListProjectUsersResponse.FromString,
                _registered_method=True)
        self.AddUserToProject = channel.unary_unary(
                '/cloud.datafy.api.proto.ProjectService/AddUserToProject',
                request_serializer=datafy__pb2.AddUserToProjectRequest.SerializeToString,
                response_deserializer=datafy__pb2.AddUserToProjectResponse.FromString,
                _registered_method=True)
        self.RemoveUserFromProject = channel.unary_unary(
                '/cloud.datafy.api.proto.ProjectService/RemoveUserFromProject',
                request_serializer=datafy__pb2.RemoveUserFromProjectRequest.SerializeToString,
                response_deserializer=datafy__pb2.RemoveUserFromProjectResponse.FromString,
                _registered_method=True)
        self.ListProjectTeams = channel.unary_unary(
                '/cloud.datafy.api.proto.ProjectService/ListProjectTeams',
                request_serializer=datafy__pb2.ListProjectTeamsRequest.SerializeToString,
                response_deserializer=datafy__pb2.ListProjectTeamsResponse.FromString,
                _registered_method=True)
        self.AddTeamToProject = channel.unary_unary(
                '/cloud.datafy.api.proto.ProjectService/AddTeamToProject',
                request_serializer=datafy__pb2.AddTeamToProjectRequest.SerializeToString,
                response_deserializer=datafy__pb2.AddTeamToProjectResponse.FromString,
                _registered_method=True)
        self.RemoveTeamFromProject = channel.unary_unary(
                '/cloud.datafy.api.proto.ProjectService/RemoveTeamFromProject',
                request_serializer=datafy__pb2.RemoveTeamFromProjectRequest.SerializeToString,
                response_deserializer=datafy__pb2.RemoveTeamFromProjectResponse.FromString,
                _registered_method=True)
        self.CopyImage = channel.unary_stream(
                '/cloud.datafy.api.proto.ProjectService/CopyImage',
                request_serializer=datafy__pb2.CopyImageRequest.SerializeToString,
                response_deserializer=datafy__pb2.CopyImageResponse.FromString,
                _registered_method=True)
        self.GetConveyorRegistryCredentials = channel.unary_unary(
                '/cloud.datafy.api.proto.ProjectService/GetConveyorRegistryCredentials',
                request_serializer=datafy__pb2.GetConveyorRegistryCredentialsRequest.SerializeToString,
                response_deserializer=datafy__pb2.GetConveyorRegistryCredentialsResponse.FromString,
                _registered_method=True)
        self.UpdateProjectTags = channel.unary_unary(
                '/cloud.datafy.api.proto.ProjectService/UpdateProjectTags',
                request_serializer=datafy__pb2.UpdateProjectTagsRequest.SerializeToString,
                response_deserializer=datafy__pb2.UpdateProjectTagsResponse.FromString,
                _registered_method=True)
        self.RenderDefaultIamIdentity = channel.unary_unary(
                '/cloud.datafy.api.proto.ProjectService/RenderDefaultIamIdentity',
                request_serializer=datafy__pb2.RenderDefaultIamIdentityRequest.SerializeToString,
                response_deserializer=datafy__pb2.RenderDefaultIamIdentityResponse.FromString,
                _registered_method=True)
        self.CreateAlertConfig = channel.unary_unary(
                '/cloud.datafy.api.proto.ProjectService/CreateAlertConfig',
                request_serializer=datafy__pb2.CreateAlertConfigRequest.SerializeToString,
                response_deserializer=datafy__pb2.AlertConfig.FromString,
                _registered_method=True)
        self.GetAlertConfig = channel.unary_unary(
                '/cloud.datafy.api.proto.ProjectService/GetAlertConfig',
                request_serializer=datafy__pb2.GetAlertConfigRequest.SerializeToString,
                response_deserializer=datafy__pb2.AlertConfig.FromString,
                _registered_method=True)
        self.UpdateAlertConfig = channel.unary_unary(
                '/cloud.datafy.api.proto.ProjectService/UpdateAlertConfig',
                request_serializer=datafy__pb2.UpdateAlertConfigRequest.SerializeToString,
                response_deserializer=datafy__pb2.AlertConfig.FromString,
                _registered_method=True)
        self.GetProjectAlertConfigs = channel.unary_unary(
                '/cloud.datafy.api.proto.ProjectService/GetProjectAlertConfigs',
                request_serializer=datafy__pb2.GetProjectAlertConfigsRequest.SerializeToString,
                response_deserializer=datafy__pb2.GetProjectAlertConfigsResponse.FromString,
                _registered_method=True)
        self.DeleteAlertConfig = channel.unary_unary(
                '/cloud.datafy.api.proto.ProjectService/DeleteAlertConfig',
                request_serializer=datafy__pb2.DeleteAlertConfigRequest.SerializeToString,
                response_deserializer=datafy__pb2.DeleteAlertConfigResponse.FromString,
                _registered_method=True)
        self.GetProjectLinks = channel.unary_unary(
                '/cloud.datafy.api.proto.ProjectService/GetProjectLinks',
                request_serializer=datafy__pb2.GetProjectLinksRequest.SerializeToString,
                response_deserializer=datafy__pb2.GetProjectLinksResponse.FromString,
                _registered_method=True)
        self.UpdateProjectLinks = channel.unary_unary(
                '/cloud.datafy.api.proto.ProjectService/UpdateProjectLinks',
                request_serializer=datafy__pb2.UpdateProjectLinksRequest.SerializeToString,
                response_deserializer=datafy__pb2.UpdateProjectLinksResponse.FromString,
                _registered_method=True)


class ProjectServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateProject(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProject(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateProjectInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteProject(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProjectEvents(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProjectCredentials(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListProjects(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateBuild(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ValidateStreamingSpec(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBuild(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLatestBuildsForGitCommit(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListBuilds(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateBuild(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListProjectDeployments(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListProjectUsers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddUserToProject(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveUserFromProject(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListProjectTeams(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddTeamToProject(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveTeamFromProject(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CopyImage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetConveyorRegistryCredentials(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateProjectTags(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RenderDefaultIamIdentity(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateAlertConfig(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAlertConfig(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateAlertConfig(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProjectAlertConfigs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteAlertConfig(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProjectLinks(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateProjectLinks(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ProjectServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateProject': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateProject,
                    request_deserializer=datafy__pb2.CreateProjectRequest.FromString,
                    response_serializer=datafy__pb2.Project.SerializeToString,
            ),
            'GetProject': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProject,
                    request_deserializer=datafy__pb2.GetProjectRequest.FromString,
                    response_serializer=datafy__pb2.Project.SerializeToString,
            ),
            'UpdateProjectInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateProjectInfo,
                    request_deserializer=datafy__pb2.UpdateProjectInfoRequest.FromString,
                    response_serializer=datafy__pb2.Project.SerializeToString,
            ),
            'DeleteProject': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteProject,
                    request_deserializer=datafy__pb2.DeleteProjectRequest.FromString,
                    response_serializer=datafy__pb2.DeleteProjectResponse.SerializeToString,
            ),
            'GetProjectEvents': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProjectEvents,
                    request_deserializer=datafy__pb2.GetProjectEventsRequest.FromString,
                    response_serializer=datafy__pb2.GetProjectEventsResponse.SerializeToString,
            ),
            'GetProjectCredentials': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProjectCredentials,
                    request_deserializer=datafy__pb2.GetProjectCredentialsRequest.FromString,
                    response_serializer=datafy__pb2.GetProjectCredentialsResponse.SerializeToString,
            ),
            'ListProjects': grpc.unary_unary_rpc_method_handler(
                    servicer.ListProjects,
                    request_deserializer=datafy__pb2.ListProjectsRequest.FromString,
                    response_serializer=datafy__pb2.ListProjectsResponse.SerializeToString,
            ),
            'CreateBuild': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateBuild,
                    request_deserializer=datafy__pb2.CreateBuildRequest.FromString,
                    response_serializer=datafy__pb2.Build.SerializeToString,
            ),
            'ValidateStreamingSpec': grpc.unary_unary_rpc_method_handler(
                    servicer.ValidateStreamingSpec,
                    request_deserializer=datafy__pb2.ValidateStreamingSpecRequest.FromString,
                    response_serializer=datafy__pb2.ValidateStreamingSpecResult.SerializeToString,
            ),
            'GetBuild': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBuild,
                    request_deserializer=datafy__pb2.GetBuildRequest.FromString,
                    response_serializer=datafy__pb2.Build.SerializeToString,
            ),
            'GetLatestBuildsForGitCommit': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLatestBuildsForGitCommit,
                    request_deserializer=datafy__pb2.GetLatestBuildForGitCommitRequest.FromString,
                    response_serializer=datafy__pb2.GetLatestBuildsForGitCommitResponse.SerializeToString,
            ),
            'ListBuilds': grpc.unary_unary_rpc_method_handler(
                    servicer.ListBuilds,
                    request_deserializer=datafy__pb2.ListBuildsRequest.FromString,
                    response_serializer=datafy__pb2.ListBuildsResponse.SerializeToString,
            ),
            'UpdateBuild': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateBuild,
                    request_deserializer=datafy__pb2.UpdateBuildRequest.FromString,
                    response_serializer=datafy__pb2.Build.SerializeToString,
            ),
            'ListProjectDeployments': grpc.unary_unary_rpc_method_handler(
                    servicer.ListProjectDeployments,
                    request_deserializer=datafy__pb2.ListProjectDeploymentsRequest.FromString,
                    response_serializer=datafy__pb2.ListProjectDeploymentsResponse.SerializeToString,
            ),
            'ListProjectUsers': grpc.unary_unary_rpc_method_handler(
                    servicer.ListProjectUsers,
                    request_deserializer=datafy__pb2.ListProjectUsersRequest.FromString,
                    response_serializer=datafy__pb2.ListProjectUsersResponse.SerializeToString,
            ),
            'AddUserToProject': grpc.unary_unary_rpc_method_handler(
                    servicer.AddUserToProject,
                    request_deserializer=datafy__pb2.AddUserToProjectRequest.FromString,
                    response_serializer=datafy__pb2.AddUserToProjectResponse.SerializeToString,
            ),
            'RemoveUserFromProject': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveUserFromProject,
                    request_deserializer=datafy__pb2.RemoveUserFromProjectRequest.FromString,
                    response_serializer=datafy__pb2.RemoveUserFromProjectResponse.SerializeToString,
            ),
            'ListProjectTeams': grpc.unary_unary_rpc_method_handler(
                    servicer.ListProjectTeams,
                    request_deserializer=datafy__pb2.ListProjectTeamsRequest.FromString,
                    response_serializer=datafy__pb2.ListProjectTeamsResponse.SerializeToString,
            ),
            'AddTeamToProject': grpc.unary_unary_rpc_method_handler(
                    servicer.AddTeamToProject,
                    request_deserializer=datafy__pb2.AddTeamToProjectRequest.FromString,
                    response_serializer=datafy__pb2.AddTeamToProjectResponse.SerializeToString,
            ),
            'RemoveTeamFromProject': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveTeamFromProject,
                    request_deserializer=datafy__pb2.RemoveTeamFromProjectRequest.FromString,
                    response_serializer=datafy__pb2.RemoveTeamFromProjectResponse.SerializeToString,
            ),
            'CopyImage': grpc.unary_stream_rpc_method_handler(
                    servicer.CopyImage,
                    request_deserializer=datafy__pb2.CopyImageRequest.FromString,
                    response_serializer=datafy__pb2.CopyImageResponse.SerializeToString,
            ),
            'GetConveyorRegistryCredentials': grpc.unary_unary_rpc_method_handler(
                    servicer.GetConveyorRegistryCredentials,
                    request_deserializer=datafy__pb2.GetConveyorRegistryCredentialsRequest.FromString,
                    response_serializer=datafy__pb2.GetConveyorRegistryCredentialsResponse.SerializeToString,
            ),
            'UpdateProjectTags': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateProjectTags,
                    request_deserializer=datafy__pb2.UpdateProjectTagsRequest.FromString,
                    response_serializer=datafy__pb2.UpdateProjectTagsResponse.SerializeToString,
            ),
            'RenderDefaultIamIdentity': grpc.unary_unary_rpc_method_handler(
                    servicer.RenderDefaultIamIdentity,
                    request_deserializer=datafy__pb2.RenderDefaultIamIdentityRequest.FromString,
                    response_serializer=datafy__pb2.RenderDefaultIamIdentityResponse.SerializeToString,
            ),
            'CreateAlertConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateAlertConfig,
                    request_deserializer=datafy__pb2.CreateAlertConfigRequest.FromString,
                    response_serializer=datafy__pb2.AlertConfig.SerializeToString,
            ),
            'GetAlertConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAlertConfig,
                    request_deserializer=datafy__pb2.GetAlertConfigRequest.FromString,
                    response_serializer=datafy__pb2.AlertConfig.SerializeToString,
            ),
            'UpdateAlertConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateAlertConfig,
                    request_deserializer=datafy__pb2.UpdateAlertConfigRequest.FromString,
                    response_serializer=datafy__pb2.AlertConfig.SerializeToString,
            ),
            'GetProjectAlertConfigs': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProjectAlertConfigs,
                    request_deserializer=datafy__pb2.GetProjectAlertConfigsRequest.FromString,
                    response_serializer=datafy__pb2.GetProjectAlertConfigsResponse.SerializeToString,
            ),
            'DeleteAlertConfig': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteAlertConfig,
                    request_deserializer=datafy__pb2.DeleteAlertConfigRequest.FromString,
                    response_serializer=datafy__pb2.DeleteAlertConfigResponse.SerializeToString,
            ),
            'GetProjectLinks': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProjectLinks,
                    request_deserializer=datafy__pb2.GetProjectLinksRequest.FromString,
                    response_serializer=datafy__pb2.GetProjectLinksResponse.SerializeToString,
            ),
            'UpdateProjectLinks': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateProjectLinks,
                    request_deserializer=datafy__pb2.UpdateProjectLinksRequest.FromString,
                    response_serializer=datafy__pb2.UpdateProjectLinksResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cloud.datafy.api.proto.ProjectService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('cloud.datafy.api.proto.ProjectService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ProjectService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateProject(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.ProjectService/CreateProject',
            datafy__pb2.CreateProjectRequest.SerializeToString,
            datafy__pb2.Project.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetProject(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.ProjectService/GetProject',
            datafy__pb2.GetProjectRequest.SerializeToString,
            datafy__pb2.Project.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateProjectInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.ProjectService/UpdateProjectInfo',
            datafy__pb2.UpdateProjectInfoRequest.SerializeToString,
            datafy__pb2.Project.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteProject(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.ProjectService/DeleteProject',
            datafy__pb2.DeleteProjectRequest.SerializeToString,
            datafy__pb2.DeleteProjectResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetProjectEvents(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.ProjectService/GetProjectEvents',
            datafy__pb2.GetProjectEventsRequest.SerializeToString,
            datafy__pb2.GetProjectEventsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetProjectCredentials(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.ProjectService/GetProjectCredentials',
            datafy__pb2.GetProjectCredentialsRequest.SerializeToString,
            datafy__pb2.GetProjectCredentialsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListProjects(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.ProjectService/ListProjects',
            datafy__pb2.ListProjectsRequest.SerializeToString,
            datafy__pb2.ListProjectsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateBuild(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.ProjectService/CreateBuild',
            datafy__pb2.CreateBuildRequest.SerializeToString,
            datafy__pb2.Build.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ValidateStreamingSpec(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.ProjectService/ValidateStreamingSpec',
            datafy__pb2.ValidateStreamingSpecRequest.SerializeToString,
            datafy__pb2.ValidateStreamingSpecResult.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetBuild(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.ProjectService/GetBuild',
            datafy__pb2.GetBuildRequest.SerializeToString,
            datafy__pb2.Build.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetLatestBuildsForGitCommit(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.ProjectService/GetLatestBuildsForGitCommit',
            datafy__pb2.GetLatestBuildForGitCommitRequest.SerializeToString,
            datafy__pb2.GetLatestBuildsForGitCommitResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListBuilds(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.ProjectService/ListBuilds',
            datafy__pb2.ListBuildsRequest.SerializeToString,
            datafy__pb2.ListBuildsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateBuild(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.ProjectService/UpdateBuild',
            datafy__pb2.UpdateBuildRequest.SerializeToString,
            datafy__pb2.Build.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListProjectDeployments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.ProjectService/ListProjectDeployments',
            datafy__pb2.ListProjectDeploymentsRequest.SerializeToString,
            datafy__pb2.ListProjectDeploymentsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListProjectUsers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.ProjectService/ListProjectUsers',
            datafy__pb2.ListProjectUsersRequest.SerializeToString,
            datafy__pb2.ListProjectUsersResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AddUserToProject(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.ProjectService/AddUserToProject',
            datafy__pb2.AddUserToProjectRequest.SerializeToString,
            datafy__pb2.AddUserToProjectResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RemoveUserFromProject(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.ProjectService/RemoveUserFromProject',
            datafy__pb2.RemoveUserFromProjectRequest.SerializeToString,
            datafy__pb2.RemoveUserFromProjectResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListProjectTeams(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.ProjectService/ListProjectTeams',
            datafy__pb2.ListProjectTeamsRequest.SerializeToString,
            datafy__pb2.ListProjectTeamsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AddTeamToProject(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.ProjectService/AddTeamToProject',
            datafy__pb2.AddTeamToProjectRequest.SerializeToString,
            datafy__pb2.AddTeamToProjectResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RemoveTeamFromProject(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.ProjectService/RemoveTeamFromProject',
            datafy__pb2.RemoveTeamFromProjectRequest.SerializeToString,
            datafy__pb2.RemoveTeamFromProjectResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CopyImage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/cloud.datafy.api.proto.ProjectService/CopyImage',
            datafy__pb2.CopyImageRequest.SerializeToString,
            datafy__pb2.CopyImageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetConveyorRegistryCredentials(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.ProjectService/GetConveyorRegistryCredentials',
            datafy__pb2.GetConveyorRegistryCredentialsRequest.SerializeToString,
            datafy__pb2.GetConveyorRegistryCredentialsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateProjectTags(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.ProjectService/UpdateProjectTags',
            datafy__pb2.UpdateProjectTagsRequest.SerializeToString,
            datafy__pb2.UpdateProjectTagsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RenderDefaultIamIdentity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.ProjectService/RenderDefaultIamIdentity',
            datafy__pb2.RenderDefaultIamIdentityRequest.SerializeToString,
            datafy__pb2.RenderDefaultIamIdentityResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateAlertConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.ProjectService/CreateAlertConfig',
            datafy__pb2.CreateAlertConfigRequest.SerializeToString,
            datafy__pb2.AlertConfig.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetAlertConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.ProjectService/GetAlertConfig',
            datafy__pb2.GetAlertConfigRequest.SerializeToString,
            datafy__pb2.AlertConfig.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateAlertConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.ProjectService/UpdateAlertConfig',
            datafy__pb2.UpdateAlertConfigRequest.SerializeToString,
            datafy__pb2.AlertConfig.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetProjectAlertConfigs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.ProjectService/GetProjectAlertConfigs',
            datafy__pb2.GetProjectAlertConfigsRequest.SerializeToString,
            datafy__pb2.GetProjectAlertConfigsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteAlertConfig(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.ProjectService/DeleteAlertConfig',
            datafy__pb2.DeleteAlertConfigRequest.SerializeToString,
            datafy__pb2.DeleteAlertConfigResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetProjectLinks(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.ProjectService/GetProjectLinks',
            datafy__pb2.GetProjectLinksRequest.SerializeToString,
            datafy__pb2.GetProjectLinksResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateProjectLinks(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.ProjectService/UpdateProjectLinks',
            datafy__pb2.UpdateProjectLinksRequest.SerializeToString,
            datafy__pb2.UpdateProjectLinksResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class ProjectDataPlaneServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetProjectCredentials = channel.unary_unary(
                '/cloud.datafy.api.proto.ProjectDataPlaneService/GetProjectCredentials',
                request_serializer=datafy__pb2.GetProjectCredentialsDataPlaneRequest.SerializeToString,
                response_deserializer=datafy__pb2.GetProjectCredentialsResponse.FromString,
                _registered_method=True)
        self.GetConveyorRegistryCredentials = channel.unary_unary(
                '/cloud.datafy.api.proto.ProjectDataPlaneService/GetConveyorRegistryCredentials',
                request_serializer=datafy__pb2.GetConveyorRegistryCredentialsDataPlaneRequest.SerializeToString,
                response_deserializer=datafy__pb2.GetConveyorRegistryCredentialsDataPlaneResponse.FromString,
                _registered_method=True)
        self.CopyImage = channel.unary_stream(
                '/cloud.datafy.api.proto.ProjectDataPlaneService/CopyImage',
                request_serializer=datafy__pb2.CopyImageRequest.SerializeToString,
                response_deserializer=datafy__pb2.CopyImageResponse.FromString,
                _registered_method=True)
        self.GetImageDetails = channel.unary_unary(
                '/cloud.datafy.api.proto.ProjectDataPlaneService/GetImageDetails',
                request_serializer=datafy__pb2.GetImageDetailsDataPlaneRequest.SerializeToString,
                response_deserializer=datafy__pb2.GetImageDetailsDataPlaneResponse.FromString,
                _registered_method=True)
        self.CleanupBuild = channel.unary_unary(
                '/cloud.datafy.api.proto.ProjectDataPlaneService/CleanupBuild',
                request_serializer=datafy__pb2.CleanupBuildRequest.SerializeToString,
                response_deserializer=datafy__pb2.CleanupBuildResponse.FromString,
                _registered_method=True)
        self.UpdateProjectConfigCRD = channel.unary_unary(
                '/cloud.datafy.api.proto.ProjectDataPlaneService/UpdateProjectConfigCRD',
                request_serializer=datafy__pb2.UpdateProjectConfigCRDRequest.SerializeToString,
                response_deserializer=datafy__pb2.UpdateProjectConfigCRDResponse.FromString,
                _registered_method=True)
        self.DeleteProjectConfigCRD = channel.unary_unary(
                '/cloud.datafy.api.proto.ProjectDataPlaneService/DeleteProjectConfigCRD',
                request_serializer=datafy__pb2.DeleteProjectConfigCRDRequest.SerializeToString,
                response_deserializer=datafy__pb2.DeleteProjectConfigCRDResponse.FromString,
                _registered_method=True)


class ProjectDataPlaneServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetProjectCredentials(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetConveyorRegistryCredentials(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CopyImage(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetImageDetails(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CleanupBuild(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateProjectConfigCRD(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteProjectConfigCRD(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ProjectDataPlaneServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetProjectCredentials': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProjectCredentials,
                    request_deserializer=datafy__pb2.GetProjectCredentialsDataPlaneRequest.FromString,
                    response_serializer=datafy__pb2.GetProjectCredentialsResponse.SerializeToString,
            ),
            'GetConveyorRegistryCredentials': grpc.unary_unary_rpc_method_handler(
                    servicer.GetConveyorRegistryCredentials,
                    request_deserializer=datafy__pb2.GetConveyorRegistryCredentialsDataPlaneRequest.FromString,
                    response_serializer=datafy__pb2.GetConveyorRegistryCredentialsDataPlaneResponse.SerializeToString,
            ),
            'CopyImage': grpc.unary_stream_rpc_method_handler(
                    servicer.CopyImage,
                    request_deserializer=datafy__pb2.CopyImageRequest.FromString,
                    response_serializer=datafy__pb2.CopyImageResponse.SerializeToString,
            ),
            'GetImageDetails': grpc.unary_unary_rpc_method_handler(
                    servicer.GetImageDetails,
                    request_deserializer=datafy__pb2.GetImageDetailsDataPlaneRequest.FromString,
                    response_serializer=datafy__pb2.GetImageDetailsDataPlaneResponse.SerializeToString,
            ),
            'CleanupBuild': grpc.unary_unary_rpc_method_handler(
                    servicer.CleanupBuild,
                    request_deserializer=datafy__pb2.CleanupBuildRequest.FromString,
                    response_serializer=datafy__pb2.CleanupBuildResponse.SerializeToString,
            ),
            'UpdateProjectConfigCRD': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateProjectConfigCRD,
                    request_deserializer=datafy__pb2.UpdateProjectConfigCRDRequest.FromString,
                    response_serializer=datafy__pb2.UpdateProjectConfigCRDResponse.SerializeToString,
            ),
            'DeleteProjectConfigCRD': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteProjectConfigCRD,
                    request_deserializer=datafy__pb2.DeleteProjectConfigCRDRequest.FromString,
                    response_serializer=datafy__pb2.DeleteProjectConfigCRDResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cloud.datafy.api.proto.ProjectDataPlaneService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('cloud.datafy.api.proto.ProjectDataPlaneService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ProjectDataPlaneService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetProjectCredentials(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.ProjectDataPlaneService/GetProjectCredentials',
            datafy__pb2.GetProjectCredentialsDataPlaneRequest.SerializeToString,
            datafy__pb2.GetProjectCredentialsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetConveyorRegistryCredentials(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.ProjectDataPlaneService/GetConveyorRegistryCredentials',
            datafy__pb2.GetConveyorRegistryCredentialsDataPlaneRequest.SerializeToString,
            datafy__pb2.GetConveyorRegistryCredentialsDataPlaneResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CopyImage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/cloud.datafy.api.proto.ProjectDataPlaneService/CopyImage',
            datafy__pb2.CopyImageRequest.SerializeToString,
            datafy__pb2.CopyImageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetImageDetails(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.ProjectDataPlaneService/GetImageDetails',
            datafy__pb2.GetImageDetailsDataPlaneRequest.SerializeToString,
            datafy__pb2.GetImageDetailsDataPlaneResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CleanupBuild(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.ProjectDataPlaneService/CleanupBuild',
            datafy__pb2.CleanupBuildRequest.SerializeToString,
            datafy__pb2.CleanupBuildResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateProjectConfigCRD(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.ProjectDataPlaneService/UpdateProjectConfigCRD',
            datafy__pb2.UpdateProjectConfigCRDRequest.SerializeToString,
            datafy__pb2.UpdateProjectConfigCRDResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteProjectConfigCRD(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.ProjectDataPlaneService/DeleteProjectConfigCRD',
            datafy__pb2.DeleteProjectConfigCRDRequest.SerializeToString,
            datafy__pb2.DeleteProjectConfigCRDResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class EnvironmentServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateEnvironment = channel.unary_unary(
                '/cloud.datafy.api.proto.EnvironmentService/CreateEnvironment',
                request_serializer=datafy__pb2.CreateEnvironmentRequest.SerializeToString,
                response_deserializer=datafy__pb2.Environment.FromString,
                _registered_method=True)
        self.UpdateEnvironment = channel.unary_unary(
                '/cloud.datafy.api.proto.EnvironmentService/UpdateEnvironment',
                request_serializer=datafy__pb2.UpdateEnvironmentRequest.SerializeToString,
                response_deserializer=datafy__pb2.Environment.FromString,
                _registered_method=True)
        self.UpdateEnvironmentInfo = channel.unary_unary(
                '/cloud.datafy.api.proto.EnvironmentService/UpdateEnvironmentInfo',
                request_serializer=datafy__pb2.UpdateEnvironmentInfoRequest.SerializeToString,
                response_deserializer=datafy__pb2.Environment.FromString,
                _registered_method=True)
        self.GetEnvironment = channel.unary_unary(
                '/cloud.datafy.api.proto.EnvironmentService/GetEnvironment',
                request_serializer=datafy__pb2.GetEnvironmentRequest.SerializeToString,
                response_deserializer=datafy__pb2.Environment.FromString,
                _registered_method=True)
        self.UnlockEnvironment = channel.unary_unary(
                '/cloud.datafy.api.proto.EnvironmentService/UnlockEnvironment',
                request_serializer=datafy__pb2.UnlockEnvironmentRequest.SerializeToString,
                response_deserializer=datafy__pb2.Environment.FromString,
                _registered_method=True)
        self.DeleteEnvironment = channel.unary_unary(
                '/cloud.datafy.api.proto.EnvironmentService/DeleteEnvironment',
                request_serializer=datafy__pb2.DeleteEnvironmentRequest.SerializeToString,
                response_deserializer=datafy__pb2.Environment.FromString,
                _registered_method=True)
        self.GetEnvironmentEvents = channel.unary_unary(
                '/cloud.datafy.api.proto.EnvironmentService/GetEnvironmentEvents',
                request_serializer=datafy__pb2.GetEnvironmentEventsRequest.SerializeToString,
                response_deserializer=datafy__pb2.GetEnvironmentEventsResponse.FromString,
                _registered_method=True)
        self.ListEnvironments = channel.unary_unary(
                '/cloud.datafy.api.proto.EnvironmentService/ListEnvironments',
                request_serializer=datafy__pb2.ListEnvironmentsRequest.SerializeToString,
                response_deserializer=datafy__pb2.ListEnvironmentsResponse.FromString,
                _registered_method=True)
        self.CreateDeployment = channel.unary_unary(
                '/cloud.datafy.api.proto.EnvironmentService/CreateDeployment',
                request_serializer=datafy__pb2.CreateDeploymentRequest.SerializeToString,
                response_deserializer=datafy__pb2.CreateDeploymentResponse.FromString,
                _registered_method=True)
        self.DeactivateDeployment = channel.unary_unary(
                '/cloud.datafy.api.proto.EnvironmentService/DeactivateDeployment',
                request_serializer=datafy__pb2.DeactivateDeploymentRequest.SerializeToString,
                response_deserializer=datafy__pb2.DeactivateDeploymentResponse.FromString,
                _registered_method=True)
        self.GetActiveDeployment = channel.unary_unary(
                '/cloud.datafy.api.proto.EnvironmentService/GetActiveDeployment',
                request_serializer=datafy__pb2.GetActiveDeploymentRequest.SerializeToString,
                response_deserializer=datafy__pb2.GetActiveDeploymentResponse.FromString,
                _registered_method=True)
        self.ListEnvironmentDeployments = channel.unary_unary(
                '/cloud.datafy.api.proto.EnvironmentService/ListEnvironmentDeployments',
                request_serializer=datafy__pb2.ListEnvironmentDeploymentsRequest.SerializeToString,
                response_deserializer=datafy__pb2.ListEnvironmentDeploymentsResponse.FromString,
                _registered_method=True)
        self.UpdateAllEnvironments = channel.unary_unary(
                '/cloud.datafy.api.proto.EnvironmentService/UpdateAllEnvironments',
                request_serializer=datafy__pb2.UpdateAllEnvironmentsRequest.SerializeToString,
                response_deserializer=datafy__pb2.UpdateAllEnvironmentsResponse.FromString,
                _registered_method=True)
        self.RunApplication = channel.unary_unary(
                '/cloud.datafy.api.proto.EnvironmentService/RunApplication',
                request_serializer=datafy__pb2.RunApplicationRequest.SerializeToString,
                response_deserializer=datafy__pb2.RunApplicationResponse.FromString,
                _registered_method=True)
        self.CancelApplication = channel.unary_unary(
                '/cloud.datafy.api.proto.EnvironmentService/CancelApplication',
                request_serializer=datafy__pb2.CancelApplicationRequest.SerializeToString,
                response_deserializer=datafy__pb2.CancelApplicationResponse.FromString,
                _registered_method=True)
        self.GetApplicationLogs = channel.unary_stream(
                '/cloud.datafy.api.proto.EnvironmentService/GetApplicationLogs',
                request_serializer=datafy__pb2.RunApplicationLogsRequest.SerializeToString,
                response_deserializer=common__pb2.ContainerLogsResponse.FromString,
                _registered_method=True)
        self.ListEnvironmentUsers = channel.unary_unary(
                '/cloud.datafy.api.proto.EnvironmentService/ListEnvironmentUsers',
                request_serializer=datafy__pb2.ListEnvironmentUsersRequest.SerializeToString,
                response_deserializer=datafy__pb2.ListEnvironmentUsersResponse.FromString,
                _registered_method=True)
        self.AddUserToEnvironment = channel.unary_unary(
                '/cloud.datafy.api.proto.EnvironmentService/AddUserToEnvironment',
                request_serializer=datafy__pb2.AddUserToEnvironmentsRequest.SerializeToString,
                response_deserializer=datafy__pb2.AddUserToEnvironmentResponse.FromString,
                _registered_method=True)
        self.RemoveUserFromEnvironment = channel.unary_unary(
                '/cloud.datafy.api.proto.EnvironmentService/RemoveUserFromEnvironment',
                request_serializer=datafy__pb2.RemoveUserFromEnvironmentRequest.SerializeToString,
                response_deserializer=datafy__pb2.RemoveUserFromEnvironmentResponse.FromString,
                _registered_method=True)
        self.ListEnvironmentTeams = channel.unary_unary(
                '/cloud.datafy.api.proto.EnvironmentService/ListEnvironmentTeams',
                request_serializer=datafy__pb2.ListEnvironmentTeamsRequest.SerializeToString,
                response_deserializer=datafy__pb2.ListEnvironmentTeamsResponse.FromString,
                _registered_method=True)
        self.AddTeamToEnvironment = channel.unary_unary(
                '/cloud.datafy.api.proto.EnvironmentService/AddTeamToEnvironment',
                request_serializer=datafy__pb2.AddTeamToEnvironmentsRequest.SerializeToString,
                response_deserializer=datafy__pb2.AddTeamToEnvironmentResponse.FromString,
                _registered_method=True)
        self.RemoveTeamFromEnvironment = channel.unary_unary(
                '/cloud.datafy.api.proto.EnvironmentService/RemoveTeamFromEnvironment',
                request_serializer=datafy__pb2.RemoveTeamFromEnvironmentRequest.SerializeToString,
                response_deserializer=datafy__pb2.RemoveTeamFromEnvironmentResponse.FromString,
                _registered_method=True)
        self.GetPipelines = channel.unary_unary(
                '/cloud.datafy.api.proto.EnvironmentService/GetPipelines',
                request_serializer=datafy__pb2.GetPipelinesRequest.SerializeToString,
                response_deserializer=datafy__pb2.GetPipelinesResponse.FromString,
                _registered_method=True)
        self.GetProjectEnvironmentStatus = channel.unary_unary(
                '/cloud.datafy.api.proto.EnvironmentService/GetProjectEnvironmentStatus',
                request_serializer=datafy__pb2.GetProjectEnvironmentStatusRequest.SerializeToString,
                response_deserializer=datafy__pb2.GetProjectEnvironmentStatusResponse.FromString,
                _registered_method=True)
        self.GetPipelinesExecutions = channel.unary_unary(
                '/cloud.datafy.api.proto.EnvironmentService/GetPipelinesExecutions',
                request_serializer=datafy__pb2.GetPipelinesExecutionsRequest.SerializeToString,
                response_deserializer=datafy__pb2.GetPipelineExecutionsResponse.FromString,
                _registered_method=True)
        self.RerunTaskInstance = channel.unary_unary(
                '/cloud.datafy.api.proto.EnvironmentService/RerunTaskInstance',
                request_serializer=datafy__pb2.RerunTaskInstanceRequest.SerializeToString,
                response_deserializer=datafy__pb2.RerunTaskInstanceResponse.FromString,
                _registered_method=True)
        self.GetAirflowLogsForTask = channel.unary_unary(
                '/cloud.datafy.api.proto.EnvironmentService/GetAirflowLogsForTask',
                request_serializer=datafy__pb2.GetAirflowLogsForTaskRequest.SerializeToString,
                response_deserializer=datafy__pb2.GetAirflowLogsForTaskResponse.FromString,
                _registered_method=True)
        self.GetAirflowTaskInstanceInfo = channel.unary_unary(
                '/cloud.datafy.api.proto.EnvironmentService/GetAirflowTaskInstanceInfo',
                request_serializer=datafy__pb2.GetAirflowTaskInstanceRequest.SerializeToString,
                response_deserializer=common__pb2.AirflowTaskInstance.FromString,
                _registered_method=True)


class EnvironmentServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CreateEnvironment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateEnvironment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateEnvironmentInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetEnvironment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UnlockEnvironment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteEnvironment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetEnvironmentEvents(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListEnvironments(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateDeployment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeactivateDeployment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetActiveDeployment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListEnvironmentDeployments(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateAllEnvironments(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RunApplication(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelApplication(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetApplicationLogs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListEnvironmentUsers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddUserToEnvironment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveUserFromEnvironment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListEnvironmentTeams(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddTeamToEnvironment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveTeamFromEnvironment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPipelines(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProjectEnvironmentStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPipelinesExecutions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RerunTaskInstance(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAirflowLogsForTask(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAirflowTaskInstanceInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_EnvironmentServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateEnvironment': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateEnvironment,
                    request_deserializer=datafy__pb2.CreateEnvironmentRequest.FromString,
                    response_serializer=datafy__pb2.Environment.SerializeToString,
            ),
            'UpdateEnvironment': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateEnvironment,
                    request_deserializer=datafy__pb2.UpdateEnvironmentRequest.FromString,
                    response_serializer=datafy__pb2.Environment.SerializeToString,
            ),
            'UpdateEnvironmentInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateEnvironmentInfo,
                    request_deserializer=datafy__pb2.UpdateEnvironmentInfoRequest.FromString,
                    response_serializer=datafy__pb2.Environment.SerializeToString,
            ),
            'GetEnvironment': grpc.unary_unary_rpc_method_handler(
                    servicer.GetEnvironment,
                    request_deserializer=datafy__pb2.GetEnvironmentRequest.FromString,
                    response_serializer=datafy__pb2.Environment.SerializeToString,
            ),
            'UnlockEnvironment': grpc.unary_unary_rpc_method_handler(
                    servicer.UnlockEnvironment,
                    request_deserializer=datafy__pb2.UnlockEnvironmentRequest.FromString,
                    response_serializer=datafy__pb2.Environment.SerializeToString,
            ),
            'DeleteEnvironment': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteEnvironment,
                    request_deserializer=datafy__pb2.DeleteEnvironmentRequest.FromString,
                    response_serializer=datafy__pb2.Environment.SerializeToString,
            ),
            'GetEnvironmentEvents': grpc.unary_unary_rpc_method_handler(
                    servicer.GetEnvironmentEvents,
                    request_deserializer=datafy__pb2.GetEnvironmentEventsRequest.FromString,
                    response_serializer=datafy__pb2.GetEnvironmentEventsResponse.SerializeToString,
            ),
            'ListEnvironments': grpc.unary_unary_rpc_method_handler(
                    servicer.ListEnvironments,
                    request_deserializer=datafy__pb2.ListEnvironmentsRequest.FromString,
                    response_serializer=datafy__pb2.ListEnvironmentsResponse.SerializeToString,
            ),
            'CreateDeployment': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateDeployment,
                    request_deserializer=datafy__pb2.CreateDeploymentRequest.FromString,
                    response_serializer=datafy__pb2.CreateDeploymentResponse.SerializeToString,
            ),
            'DeactivateDeployment': grpc.unary_unary_rpc_method_handler(
                    servicer.DeactivateDeployment,
                    request_deserializer=datafy__pb2.DeactivateDeploymentRequest.FromString,
                    response_serializer=datafy__pb2.DeactivateDeploymentResponse.SerializeToString,
            ),
            'GetActiveDeployment': grpc.unary_unary_rpc_method_handler(
                    servicer.GetActiveDeployment,
                    request_deserializer=datafy__pb2.GetActiveDeploymentRequest.FromString,
                    response_serializer=datafy__pb2.GetActiveDeploymentResponse.SerializeToString,
            ),
            'ListEnvironmentDeployments': grpc.unary_unary_rpc_method_handler(
                    servicer.ListEnvironmentDeployments,
                    request_deserializer=datafy__pb2.ListEnvironmentDeploymentsRequest.FromString,
                    response_serializer=datafy__pb2.ListEnvironmentDeploymentsResponse.SerializeToString,
            ),
            'UpdateAllEnvironments': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateAllEnvironments,
                    request_deserializer=datafy__pb2.UpdateAllEnvironmentsRequest.FromString,
                    response_serializer=datafy__pb2.UpdateAllEnvironmentsResponse.SerializeToString,
            ),
            'RunApplication': grpc.unary_unary_rpc_method_handler(
                    servicer.RunApplication,
                    request_deserializer=datafy__pb2.RunApplicationRequest.FromString,
                    response_serializer=datafy__pb2.RunApplicationResponse.SerializeToString,
            ),
            'CancelApplication': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelApplication,
                    request_deserializer=datafy__pb2.CancelApplicationRequest.FromString,
                    response_serializer=datafy__pb2.CancelApplicationResponse.SerializeToString,
            ),
            'GetApplicationLogs': grpc.unary_stream_rpc_method_handler(
                    servicer.GetApplicationLogs,
                    request_deserializer=datafy__pb2.RunApplicationLogsRequest.FromString,
                    response_serializer=common__pb2.ContainerLogsResponse.SerializeToString,
            ),
            'ListEnvironmentUsers': grpc.unary_unary_rpc_method_handler(
                    servicer.ListEnvironmentUsers,
                    request_deserializer=datafy__pb2.ListEnvironmentUsersRequest.FromString,
                    response_serializer=datafy__pb2.ListEnvironmentUsersResponse.SerializeToString,
            ),
            'AddUserToEnvironment': grpc.unary_unary_rpc_method_handler(
                    servicer.AddUserToEnvironment,
                    request_deserializer=datafy__pb2.AddUserToEnvironmentsRequest.FromString,
                    response_serializer=datafy__pb2.AddUserToEnvironmentResponse.SerializeToString,
            ),
            'RemoveUserFromEnvironment': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveUserFromEnvironment,
                    request_deserializer=datafy__pb2.RemoveUserFromEnvironmentRequest.FromString,
                    response_serializer=datafy__pb2.RemoveUserFromEnvironmentResponse.SerializeToString,
            ),
            'ListEnvironmentTeams': grpc.unary_unary_rpc_method_handler(
                    servicer.ListEnvironmentTeams,
                    request_deserializer=datafy__pb2.ListEnvironmentTeamsRequest.FromString,
                    response_serializer=datafy__pb2.ListEnvironmentTeamsResponse.SerializeToString,
            ),
            'AddTeamToEnvironment': grpc.unary_unary_rpc_method_handler(
                    servicer.AddTeamToEnvironment,
                    request_deserializer=datafy__pb2.AddTeamToEnvironmentsRequest.FromString,
                    response_serializer=datafy__pb2.AddTeamToEnvironmentResponse.SerializeToString,
            ),
            'RemoveTeamFromEnvironment': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveTeamFromEnvironment,
                    request_deserializer=datafy__pb2.RemoveTeamFromEnvironmentRequest.FromString,
                    response_serializer=datafy__pb2.RemoveTeamFromEnvironmentResponse.SerializeToString,
            ),
            'GetPipelines': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPipelines,
                    request_deserializer=datafy__pb2.GetPipelinesRequest.FromString,
                    response_serializer=datafy__pb2.GetPipelinesResponse.SerializeToString,
            ),
            'GetProjectEnvironmentStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProjectEnvironmentStatus,
                    request_deserializer=datafy__pb2.GetProjectEnvironmentStatusRequest.FromString,
                    response_serializer=datafy__pb2.GetProjectEnvironmentStatusResponse.SerializeToString,
            ),
            'GetPipelinesExecutions': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPipelinesExecutions,
                    request_deserializer=datafy__pb2.GetPipelinesExecutionsRequest.FromString,
                    response_serializer=datafy__pb2.GetPipelineExecutionsResponse.SerializeToString,
            ),
            'RerunTaskInstance': grpc.unary_unary_rpc_method_handler(
                    servicer.RerunTaskInstance,
                    request_deserializer=datafy__pb2.RerunTaskInstanceRequest.FromString,
                    response_serializer=datafy__pb2.RerunTaskInstanceResponse.SerializeToString,
            ),
            'GetAirflowLogsForTask': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAirflowLogsForTask,
                    request_deserializer=datafy__pb2.GetAirflowLogsForTaskRequest.FromString,
                    response_serializer=datafy__pb2.GetAirflowLogsForTaskResponse.SerializeToString,
            ),
            'GetAirflowTaskInstanceInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAirflowTaskInstanceInfo,
                    request_deserializer=datafy__pb2.GetAirflowTaskInstanceRequest.FromString,
                    response_serializer=common__pb2.AirflowTaskInstance.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cloud.datafy.api.proto.EnvironmentService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('cloud.datafy.api.proto.EnvironmentService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class EnvironmentService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CreateEnvironment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.EnvironmentService/CreateEnvironment',
            datafy__pb2.CreateEnvironmentRequest.SerializeToString,
            datafy__pb2.Environment.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateEnvironment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.EnvironmentService/UpdateEnvironment',
            datafy__pb2.UpdateEnvironmentRequest.SerializeToString,
            datafy__pb2.Environment.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateEnvironmentInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.EnvironmentService/UpdateEnvironmentInfo',
            datafy__pb2.UpdateEnvironmentInfoRequest.SerializeToString,
            datafy__pb2.Environment.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetEnvironment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.EnvironmentService/GetEnvironment',
            datafy__pb2.GetEnvironmentRequest.SerializeToString,
            datafy__pb2.Environment.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UnlockEnvironment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.EnvironmentService/UnlockEnvironment',
            datafy__pb2.UnlockEnvironmentRequest.SerializeToString,
            datafy__pb2.Environment.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteEnvironment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.EnvironmentService/DeleteEnvironment',
            datafy__pb2.DeleteEnvironmentRequest.SerializeToString,
            datafy__pb2.Environment.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetEnvironmentEvents(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.EnvironmentService/GetEnvironmentEvents',
            datafy__pb2.GetEnvironmentEventsRequest.SerializeToString,
            datafy__pb2.GetEnvironmentEventsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListEnvironments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.EnvironmentService/ListEnvironments',
            datafy__pb2.ListEnvironmentsRequest.SerializeToString,
            datafy__pb2.ListEnvironmentsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateDeployment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.EnvironmentService/CreateDeployment',
            datafy__pb2.CreateDeploymentRequest.SerializeToString,
            datafy__pb2.CreateDeploymentResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeactivateDeployment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.EnvironmentService/DeactivateDeployment',
            datafy__pb2.DeactivateDeploymentRequest.SerializeToString,
            datafy__pb2.DeactivateDeploymentResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetActiveDeployment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.EnvironmentService/GetActiveDeployment',
            datafy__pb2.GetActiveDeploymentRequest.SerializeToString,
            datafy__pb2.GetActiveDeploymentResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListEnvironmentDeployments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.EnvironmentService/ListEnvironmentDeployments',
            datafy__pb2.ListEnvironmentDeploymentsRequest.SerializeToString,
            datafy__pb2.ListEnvironmentDeploymentsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateAllEnvironments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.EnvironmentService/UpdateAllEnvironments',
            datafy__pb2.UpdateAllEnvironmentsRequest.SerializeToString,
            datafy__pb2.UpdateAllEnvironmentsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RunApplication(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.EnvironmentService/RunApplication',
            datafy__pb2.RunApplicationRequest.SerializeToString,
            datafy__pb2.RunApplicationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CancelApplication(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.EnvironmentService/CancelApplication',
            datafy__pb2.CancelApplicationRequest.SerializeToString,
            datafy__pb2.CancelApplicationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetApplicationLogs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/cloud.datafy.api.proto.EnvironmentService/GetApplicationLogs',
            datafy__pb2.RunApplicationLogsRequest.SerializeToString,
            common__pb2.ContainerLogsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListEnvironmentUsers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.EnvironmentService/ListEnvironmentUsers',
            datafy__pb2.ListEnvironmentUsersRequest.SerializeToString,
            datafy__pb2.ListEnvironmentUsersResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AddUserToEnvironment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.EnvironmentService/AddUserToEnvironment',
            datafy__pb2.AddUserToEnvironmentsRequest.SerializeToString,
            datafy__pb2.AddUserToEnvironmentResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RemoveUserFromEnvironment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.EnvironmentService/RemoveUserFromEnvironment',
            datafy__pb2.RemoveUserFromEnvironmentRequest.SerializeToString,
            datafy__pb2.RemoveUserFromEnvironmentResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListEnvironmentTeams(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.EnvironmentService/ListEnvironmentTeams',
            datafy__pb2.ListEnvironmentTeamsRequest.SerializeToString,
            datafy__pb2.ListEnvironmentTeamsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AddTeamToEnvironment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.EnvironmentService/AddTeamToEnvironment',
            datafy__pb2.AddTeamToEnvironmentsRequest.SerializeToString,
            datafy__pb2.AddTeamToEnvironmentResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RemoveTeamFromEnvironment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.EnvironmentService/RemoveTeamFromEnvironment',
            datafy__pb2.RemoveTeamFromEnvironmentRequest.SerializeToString,
            datafy__pb2.RemoveTeamFromEnvironmentResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetPipelines(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.EnvironmentService/GetPipelines',
            datafy__pb2.GetPipelinesRequest.SerializeToString,
            datafy__pb2.GetPipelinesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetProjectEnvironmentStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.EnvironmentService/GetProjectEnvironmentStatus',
            datafy__pb2.GetProjectEnvironmentStatusRequest.SerializeToString,
            datafy__pb2.GetProjectEnvironmentStatusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetPipelinesExecutions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.EnvironmentService/GetPipelinesExecutions',
            datafy__pb2.GetPipelinesExecutionsRequest.SerializeToString,
            datafy__pb2.GetPipelineExecutionsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RerunTaskInstance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.EnvironmentService/RerunTaskInstance',
            datafy__pb2.RerunTaskInstanceRequest.SerializeToString,
            datafy__pb2.RerunTaskInstanceResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetAirflowLogsForTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.EnvironmentService/GetAirflowLogsForTask',
            datafy__pb2.GetAirflowLogsForTaskRequest.SerializeToString,
            datafy__pb2.GetAirflowLogsForTaskResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetAirflowTaskInstanceInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.EnvironmentService/GetAirflowTaskInstanceInfo',
            datafy__pb2.GetAirflowTaskInstanceRequest.SerializeToString,
            common__pb2.AirflowTaskInstance.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class EnvironmentDataPlaneServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.RunApplication = channel.unary_unary(
                '/cloud.datafy.api.proto.EnvironmentDataPlaneService/RunApplication',
                request_serializer=datafy__pb2.RunApplicationDataPlaneRequest.SerializeToString,
                response_deserializer=datafy__pb2.RunApplicationResponse.FromString,
                _registered_method=True)
        self.RunApplicationLogs = channel.unary_stream(
                '/cloud.datafy.api.proto.EnvironmentDataPlaneService/RunApplicationLogs',
                request_serializer=datafy__pb2.RunApplicationLogsRequest.SerializeToString,
                response_deserializer=common__pb2.ContainerLogsResponse.FromString,
                _registered_method=True)
        self.CancelApplication = channel.unary_unary(
                '/cloud.datafy.api.proto.EnvironmentDataPlaneService/CancelApplication',
                request_serializer=datafy__pb2.CancelApplicationRequest.SerializeToString,
                response_deserializer=datafy__pb2.CancelApplicationResponse.FromString,
                _registered_method=True)
        self.InspectPodDetails = channel.unary_unary(
                '/cloud.datafy.api.proto.EnvironmentDataPlaneService/InspectPodDetails',
                request_serializer=datafy__pb2.InspectPodDetailsRequest.SerializeToString,
                response_deserializer=datafy__pb2.InspectPodDetailsResponse.FromString,
                _registered_method=True)
        self.GetBatchPipelines = channel.unary_unary(
                '/cloud.datafy.api.proto.EnvironmentDataPlaneService/GetBatchPipelines',
                request_serializer=datafy__pb2.GetPipelinesDataPlaneRequest.SerializeToString,
                response_deserializer=datafy__pb2.GetPipelinesResponse.FromString,
                _registered_method=True)
        self.GetProjectEnvironmentStatus = channel.unary_unary(
                '/cloud.datafy.api.proto.EnvironmentDataPlaneService/GetProjectEnvironmentStatus',
                request_serializer=datafy__pb2.GetProjectEnvironmentStatusDataPlaneRequest.SerializeToString,
                response_deserializer=datafy__pb2.GetProjectEnvironmentStatusResponse.FromString,
                _registered_method=True)
        self.GetPipelineExecutions = channel.unary_unary(
                '/cloud.datafy.api.proto.EnvironmentDataPlaneService/GetPipelineExecutions',
                request_serializer=datafy__pb2.GetPipelineExecutionsDataPlaneRequest.SerializeToString,
                response_deserializer=datafy__pb2.GetPipelineExecutionsResponse.FromString,
                _registered_method=True)
        self.GetRecentlyFailedTasks = channel.unary_unary(
                '/cloud.datafy.api.proto.EnvironmentDataPlaneService/GetRecentlyFailedTasks',
                request_serializer=datafy__pb2.GetRecentlyFailedTasksDataPlaneRequest.SerializeToString,
                response_deserializer=datafy__pb2.GetRecentlyFailedTasksDataPlaneResponse.FromString,
                _registered_method=True)
        self.GetTasksForDagRun = channel.unary_unary(
                '/cloud.datafy.api.proto.EnvironmentDataPlaneService/GetTasksForDagRun',
                request_serializer=datafy__pb2.GetTasksForDagRunDataPlaneRequest.SerializeToString,
                response_deserializer=datafy__pb2.GetTasksForDagRunDataPlaneResponse.FromString,
                _registered_method=True)
        self.PendulumEnvironmentUpgradeCheck = channel.unary_unary(
                '/cloud.datafy.api.proto.EnvironmentDataPlaneService/PendulumEnvironmentUpgradeCheck',
                request_serializer=datafy__pb2.PendulumUpgradeCheckDataPlaneRequest.SerializeToString,
                response_deserializer=datafy__pb2.PendulumUpgradeCheck.FromString,
                _registered_method=True)
        self.RerunTaskInstance = channel.unary_unary(
                '/cloud.datafy.api.proto.EnvironmentDataPlaneService/RerunTaskInstance',
                request_serializer=datafy__pb2.RerunTaskInstanceDataPlaneRequest.SerializeToString,
                response_deserializer=datafy__pb2.RerunTaskInstanceResponse.FromString,
                _registered_method=True)
        self.GetAirflowLogsForTask = channel.unary_unary(
                '/cloud.datafy.api.proto.EnvironmentDataPlaneService/GetAirflowLogsForTask',
                request_serializer=datafy__pb2.GetAirflowLogsForTaskDataPlaneRequest.SerializeToString,
                response_deserializer=datafy__pb2.GetAirflowLogsForTaskResponse.FromString,
                _registered_method=True)
        self.GetAirflowTaskInstanceInfo = channel.unary_unary(
                '/cloud.datafy.api.proto.EnvironmentDataPlaneService/GetAirflowTaskInstanceInfo',
                request_serializer=datafy__pb2.GetAirflowTaskInstanceInfoDataPlaneRequest.SerializeToString,
                response_deserializer=common__pb2.AirflowTaskInstance.FromString,
                _registered_method=True)


class EnvironmentDataPlaneServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def RunApplication(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RunApplicationLogs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CancelApplication(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def InspectPodDetails(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetBatchPipelines(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProjectEnvironmentStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPipelineExecutions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRecentlyFailedTasks(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTasksForDagRun(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def PendulumEnvironmentUpgradeCheck(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RerunTaskInstance(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAirflowLogsForTask(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetAirflowTaskInstanceInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_EnvironmentDataPlaneServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'RunApplication': grpc.unary_unary_rpc_method_handler(
                    servicer.RunApplication,
                    request_deserializer=datafy__pb2.RunApplicationDataPlaneRequest.FromString,
                    response_serializer=datafy__pb2.RunApplicationResponse.SerializeToString,
            ),
            'RunApplicationLogs': grpc.unary_stream_rpc_method_handler(
                    servicer.RunApplicationLogs,
                    request_deserializer=datafy__pb2.RunApplicationLogsRequest.FromString,
                    response_serializer=common__pb2.ContainerLogsResponse.SerializeToString,
            ),
            'CancelApplication': grpc.unary_unary_rpc_method_handler(
                    servicer.CancelApplication,
                    request_deserializer=datafy__pb2.CancelApplicationRequest.FromString,
                    response_serializer=datafy__pb2.CancelApplicationResponse.SerializeToString,
            ),
            'InspectPodDetails': grpc.unary_unary_rpc_method_handler(
                    servicer.InspectPodDetails,
                    request_deserializer=datafy__pb2.InspectPodDetailsRequest.FromString,
                    response_serializer=datafy__pb2.InspectPodDetailsResponse.SerializeToString,
            ),
            'GetBatchPipelines': grpc.unary_unary_rpc_method_handler(
                    servicer.GetBatchPipelines,
                    request_deserializer=datafy__pb2.GetPipelinesDataPlaneRequest.FromString,
                    response_serializer=datafy__pb2.GetPipelinesResponse.SerializeToString,
            ),
            'GetProjectEnvironmentStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProjectEnvironmentStatus,
                    request_deserializer=datafy__pb2.GetProjectEnvironmentStatusDataPlaneRequest.FromString,
                    response_serializer=datafy__pb2.GetProjectEnvironmentStatusResponse.SerializeToString,
            ),
            'GetPipelineExecutions': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPipelineExecutions,
                    request_deserializer=datafy__pb2.GetPipelineExecutionsDataPlaneRequest.FromString,
                    response_serializer=datafy__pb2.GetPipelineExecutionsResponse.SerializeToString,
            ),
            'GetRecentlyFailedTasks': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRecentlyFailedTasks,
                    request_deserializer=datafy__pb2.GetRecentlyFailedTasksDataPlaneRequest.FromString,
                    response_serializer=datafy__pb2.GetRecentlyFailedTasksDataPlaneResponse.SerializeToString,
            ),
            'GetTasksForDagRun': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTasksForDagRun,
                    request_deserializer=datafy__pb2.GetTasksForDagRunDataPlaneRequest.FromString,
                    response_serializer=datafy__pb2.GetTasksForDagRunDataPlaneResponse.SerializeToString,
            ),
            'PendulumEnvironmentUpgradeCheck': grpc.unary_unary_rpc_method_handler(
                    servicer.PendulumEnvironmentUpgradeCheck,
                    request_deserializer=datafy__pb2.PendulumUpgradeCheckDataPlaneRequest.FromString,
                    response_serializer=datafy__pb2.PendulumUpgradeCheck.SerializeToString,
            ),
            'RerunTaskInstance': grpc.unary_unary_rpc_method_handler(
                    servicer.RerunTaskInstance,
                    request_deserializer=datafy__pb2.RerunTaskInstanceDataPlaneRequest.FromString,
                    response_serializer=datafy__pb2.RerunTaskInstanceResponse.SerializeToString,
            ),
            'GetAirflowLogsForTask': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAirflowLogsForTask,
                    request_deserializer=datafy__pb2.GetAirflowLogsForTaskDataPlaneRequest.FromString,
                    response_serializer=datafy__pb2.GetAirflowLogsForTaskResponse.SerializeToString,
            ),
            'GetAirflowTaskInstanceInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetAirflowTaskInstanceInfo,
                    request_deserializer=datafy__pb2.GetAirflowTaskInstanceInfoDataPlaneRequest.FromString,
                    response_serializer=common__pb2.AirflowTaskInstance.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cloud.datafy.api.proto.EnvironmentDataPlaneService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('cloud.datafy.api.proto.EnvironmentDataPlaneService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class EnvironmentDataPlaneService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def RunApplication(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.EnvironmentDataPlaneService/RunApplication',
            datafy__pb2.RunApplicationDataPlaneRequest.SerializeToString,
            datafy__pb2.RunApplicationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RunApplicationLogs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/cloud.datafy.api.proto.EnvironmentDataPlaneService/RunApplicationLogs',
            datafy__pb2.RunApplicationLogsRequest.SerializeToString,
            common__pb2.ContainerLogsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CancelApplication(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.EnvironmentDataPlaneService/CancelApplication',
            datafy__pb2.CancelApplicationRequest.SerializeToString,
            datafy__pb2.CancelApplicationResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def InspectPodDetails(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.EnvironmentDataPlaneService/InspectPodDetails',
            datafy__pb2.InspectPodDetailsRequest.SerializeToString,
            datafy__pb2.InspectPodDetailsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetBatchPipelines(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.EnvironmentDataPlaneService/GetBatchPipelines',
            datafy__pb2.GetPipelinesDataPlaneRequest.SerializeToString,
            datafy__pb2.GetPipelinesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetProjectEnvironmentStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.EnvironmentDataPlaneService/GetProjectEnvironmentStatus',
            datafy__pb2.GetProjectEnvironmentStatusDataPlaneRequest.SerializeToString,
            datafy__pb2.GetProjectEnvironmentStatusResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetPipelineExecutions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.EnvironmentDataPlaneService/GetPipelineExecutions',
            datafy__pb2.GetPipelineExecutionsDataPlaneRequest.SerializeToString,
            datafy__pb2.GetPipelineExecutionsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetRecentlyFailedTasks(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.EnvironmentDataPlaneService/GetRecentlyFailedTasks',
            datafy__pb2.GetRecentlyFailedTasksDataPlaneRequest.SerializeToString,
            datafy__pb2.GetRecentlyFailedTasksDataPlaneResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetTasksForDagRun(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.EnvironmentDataPlaneService/GetTasksForDagRun',
            datafy__pb2.GetTasksForDagRunDataPlaneRequest.SerializeToString,
            datafy__pb2.GetTasksForDagRunDataPlaneResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def PendulumEnvironmentUpgradeCheck(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.EnvironmentDataPlaneService/PendulumEnvironmentUpgradeCheck',
            datafy__pb2.PendulumUpgradeCheckDataPlaneRequest.SerializeToString,
            datafy__pb2.PendulumUpgradeCheck.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RerunTaskInstance(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.EnvironmentDataPlaneService/RerunTaskInstance',
            datafy__pb2.RerunTaskInstanceDataPlaneRequest.SerializeToString,
            datafy__pb2.RerunTaskInstanceResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetAirflowLogsForTask(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.EnvironmentDataPlaneService/GetAirflowLogsForTask',
            datafy__pb2.GetAirflowLogsForTaskDataPlaneRequest.SerializeToString,
            datafy__pb2.GetAirflowLogsForTaskResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetAirflowTaskInstanceInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.EnvironmentDataPlaneService/GetAirflowTaskInstanceInfo',
            datafy__pb2.GetAirflowTaskInstanceInfoDataPlaneRequest.SerializeToString,
            common__pb2.AirflowTaskInstance.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class InfoControllerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CliVersion = channel.unary_unary(
                '/cloud.datafy.api.proto.InfoController/CliVersion',
                request_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
                response_deserializer=google_dot_api_dot_httpbody__pb2.HttpBody.FromString,
                _registered_method=True)


class InfoControllerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def CliVersion(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_InfoControllerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CliVersion': grpc.unary_unary_rpc_method_handler(
                    servicer.CliVersion,
                    request_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                    response_serializer=google_dot_api_dot_httpbody__pb2.HttpBody.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cloud.datafy.api.proto.InfoController', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('cloud.datafy.api.proto.InfoController', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class InfoController(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def CliVersion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.InfoController/CliVersion',
            google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            google_dot_api_dot_httpbody__pb2.HttpBody.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class ClusterServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListClusters = channel.unary_unary(
                '/cloud.datafy.api.proto.ClusterService/ListClusters',
                request_serializer=datafy__pb2.ListClustersRequest.SerializeToString,
                response_deserializer=datafy__pb2.ListClustersResponse.FromString,
                _registered_method=True)
        self.GetCluster = channel.unary_unary(
                '/cloud.datafy.api.proto.ClusterService/GetCluster',
                request_serializer=datafy__pb2.GetClusterRequest.SerializeToString,
                response_deserializer=datafy__pb2.Cluster.FromString,
                _registered_method=True)
        self.GetDefaultCluster = channel.unary_unary(
                '/cloud.datafy.api.proto.ClusterService/GetDefaultCluster',
                request_serializer=datafy__pb2.GetDefaultClusterRequest.SerializeToString,
                response_deserializer=datafy__pb2.Cluster.FromString,
                _registered_method=True)
        self.CreateCluster = channel.unary_unary(
                '/cloud.datafy.api.proto.ClusterService/CreateCluster',
                request_serializer=datafy__pb2.CreateClusterRequest.SerializeToString,
                response_deserializer=datafy__pb2.Cluster.FromString,
                _registered_method=True)
        self.UpdateCluster = channel.unary_unary(
                '/cloud.datafy.api.proto.ClusterService/UpdateCluster',
                request_serializer=datafy__pb2.UpdateClusterRequest.SerializeToString,
                response_deserializer=datafy__pb2.Cluster.FromString,
                _registered_method=True)
        self.DeleteCluster = channel.unary_unary(
                '/cloud.datafy.api.proto.ClusterService/DeleteCluster',
                request_serializer=datafy__pb2.DeleteClusterRequest.SerializeToString,
                response_deserializer=datafy__pb2.DeleteClusterResponse.FromString,
                _registered_method=True)


class ClusterServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ListClusters(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCluster(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDefaultCluster(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateCluster(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateCluster(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteCluster(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ClusterServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListClusters': grpc.unary_unary_rpc_method_handler(
                    servicer.ListClusters,
                    request_deserializer=datafy__pb2.ListClustersRequest.FromString,
                    response_serializer=datafy__pb2.ListClustersResponse.SerializeToString,
            ),
            'GetCluster': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCluster,
                    request_deserializer=datafy__pb2.GetClusterRequest.FromString,
                    response_serializer=datafy__pb2.Cluster.SerializeToString,
            ),
            'GetDefaultCluster': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDefaultCluster,
                    request_deserializer=datafy__pb2.GetDefaultClusterRequest.FromString,
                    response_serializer=datafy__pb2.Cluster.SerializeToString,
            ),
            'CreateCluster': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateCluster,
                    request_deserializer=datafy__pb2.CreateClusterRequest.FromString,
                    response_serializer=datafy__pb2.Cluster.SerializeToString,
            ),
            'UpdateCluster': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateCluster,
                    request_deserializer=datafy__pb2.UpdateClusterRequest.FromString,
                    response_serializer=datafy__pb2.Cluster.SerializeToString,
            ),
            'DeleteCluster': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteCluster,
                    request_deserializer=datafy__pb2.DeleteClusterRequest.FromString,
                    response_serializer=datafy__pb2.DeleteClusterResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cloud.datafy.api.proto.ClusterService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('cloud.datafy.api.proto.ClusterService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ClusterService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ListClusters(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.ClusterService/ListClusters',
            datafy__pb2.ListClustersRequest.SerializeToString,
            datafy__pb2.ListClustersResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetCluster(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.ClusterService/GetCluster',
            datafy__pb2.GetClusterRequest.SerializeToString,
            datafy__pb2.Cluster.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetDefaultCluster(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.ClusterService/GetDefaultCluster',
            datafy__pb2.GetDefaultClusterRequest.SerializeToString,
            datafy__pb2.Cluster.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateCluster(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.ClusterService/CreateCluster',
            datafy__pb2.CreateClusterRequest.SerializeToString,
            datafy__pb2.Cluster.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateCluster(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.ClusterService/UpdateCluster',
            datafy__pb2.UpdateClusterRequest.SerializeToString,
            datafy__pb2.Cluster.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteCluster(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.ClusterService/DeleteCluster',
            datafy__pb2.DeleteClusterRequest.SerializeToString,
            datafy__pb2.DeleteClusterResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class TeamsServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListTeams = channel.unary_unary(
                '/cloud.datafy.api.proto.TeamsService/ListTeams',
                request_serializer=datafy__pb2.ListTeamsRequest.SerializeToString,
                response_deserializer=datafy__pb2.ListTeamsResponse.FromString,
                _registered_method=True)
        self.CreateTeam = channel.unary_unary(
                '/cloud.datafy.api.proto.TeamsService/CreateTeam',
                request_serializer=datafy__pb2.CreateTeamRequest.SerializeToString,
                response_deserializer=datafy__pb2.Team.FromString,
                _registered_method=True)
        self.UpdateTeam = channel.unary_unary(
                '/cloud.datafy.api.proto.TeamsService/UpdateTeam',
                request_serializer=datafy__pb2.UpdateTeamRequest.SerializeToString,
                response_deserializer=datafy__pb2.Team.FromString,
                _registered_method=True)
        self.GetTeam = channel.unary_unary(
                '/cloud.datafy.api.proto.TeamsService/GetTeam',
                request_serializer=datafy__pb2.GetTeamRequest.SerializeToString,
                response_deserializer=datafy__pb2.Team.FromString,
                _registered_method=True)
        self.DeleteTeam = channel.unary_unary(
                '/cloud.datafy.api.proto.TeamsService/DeleteTeam',
                request_serializer=datafy__pb2.DeleteTeamRequest.SerializeToString,
                response_deserializer=datafy__pb2.DeleteTeamResponse.FromString,
                _registered_method=True)
        self.TeamAddUser = channel.unary_unary(
                '/cloud.datafy.api.proto.TeamsService/TeamAddUser',
                request_serializer=datafy__pb2.TeamAddUserRequest.SerializeToString,
                response_deserializer=datafy__pb2.Team.FromString,
                _registered_method=True)
        self.TeamRemoveUser = channel.unary_unary(
                '/cloud.datafy.api.proto.TeamsService/TeamRemoveUser',
                request_serializer=datafy__pb2.TeamRemoveUserRequest.SerializeToString,
                response_deserializer=datafy__pb2.Team.FromString,
                _registered_method=True)
        self.AddProjectsToTeam = channel.unary_unary(
                '/cloud.datafy.api.proto.TeamsService/AddProjectsToTeam',
                request_serializer=datafy__pb2.AddProjectsToTeamRequest.SerializeToString,
                response_deserializer=datafy__pb2.AddProjectsToTeamResponse.FromString,
                _registered_method=True)
        self.AddEnvironmentsToTeam = channel.unary_unary(
                '/cloud.datafy.api.proto.TeamsService/AddEnvironmentsToTeam',
                request_serializer=datafy__pb2.AddEnvironmentsToTeamRequest.SerializeToString,
                response_deserializer=datafy__pb2.AddEnvironmentsToTeamResponse.FromString,
                _registered_method=True)


class TeamsServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ListTeams(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateTeam(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateTeam(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTeam(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteTeam(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TeamAddUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def TeamRemoveUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddProjectsToTeam(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddEnvironmentsToTeam(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TeamsServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListTeams': grpc.unary_unary_rpc_method_handler(
                    servicer.ListTeams,
                    request_deserializer=datafy__pb2.ListTeamsRequest.FromString,
                    response_serializer=datafy__pb2.ListTeamsResponse.SerializeToString,
            ),
            'CreateTeam': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateTeam,
                    request_deserializer=datafy__pb2.CreateTeamRequest.FromString,
                    response_serializer=datafy__pb2.Team.SerializeToString,
            ),
            'UpdateTeam': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateTeam,
                    request_deserializer=datafy__pb2.UpdateTeamRequest.FromString,
                    response_serializer=datafy__pb2.Team.SerializeToString,
            ),
            'GetTeam': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTeam,
                    request_deserializer=datafy__pb2.GetTeamRequest.FromString,
                    response_serializer=datafy__pb2.Team.SerializeToString,
            ),
            'DeleteTeam': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteTeam,
                    request_deserializer=datafy__pb2.DeleteTeamRequest.FromString,
                    response_serializer=datafy__pb2.DeleteTeamResponse.SerializeToString,
            ),
            'TeamAddUser': grpc.unary_unary_rpc_method_handler(
                    servicer.TeamAddUser,
                    request_deserializer=datafy__pb2.TeamAddUserRequest.FromString,
                    response_serializer=datafy__pb2.Team.SerializeToString,
            ),
            'TeamRemoveUser': grpc.unary_unary_rpc_method_handler(
                    servicer.TeamRemoveUser,
                    request_deserializer=datafy__pb2.TeamRemoveUserRequest.FromString,
                    response_serializer=datafy__pb2.Team.SerializeToString,
            ),
            'AddProjectsToTeam': grpc.unary_unary_rpc_method_handler(
                    servicer.AddProjectsToTeam,
                    request_deserializer=datafy__pb2.AddProjectsToTeamRequest.FromString,
                    response_serializer=datafy__pb2.AddProjectsToTeamResponse.SerializeToString,
            ),
            'AddEnvironmentsToTeam': grpc.unary_unary_rpc_method_handler(
                    servicer.AddEnvironmentsToTeam,
                    request_deserializer=datafy__pb2.AddEnvironmentsToTeamRequest.FromString,
                    response_serializer=datafy__pb2.AddEnvironmentsToTeamResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cloud.datafy.api.proto.TeamsService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('cloud.datafy.api.proto.TeamsService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class TeamsService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ListTeams(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.TeamsService/ListTeams',
            datafy__pb2.ListTeamsRequest.SerializeToString,
            datafy__pb2.ListTeamsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateTeam(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.TeamsService/CreateTeam',
            datafy__pb2.CreateTeamRequest.SerializeToString,
            datafy__pb2.Team.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateTeam(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.TeamsService/UpdateTeam',
            datafy__pb2.UpdateTeamRequest.SerializeToString,
            datafy__pb2.Team.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetTeam(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.TeamsService/GetTeam',
            datafy__pb2.GetTeamRequest.SerializeToString,
            datafy__pb2.Team.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteTeam(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.TeamsService/DeleteTeam',
            datafy__pb2.DeleteTeamRequest.SerializeToString,
            datafy__pb2.DeleteTeamResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def TeamAddUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.TeamsService/TeamAddUser',
            datafy__pb2.TeamAddUserRequest.SerializeToString,
            datafy__pb2.Team.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def TeamRemoveUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.TeamsService/TeamRemoveUser',
            datafy__pb2.TeamRemoveUserRequest.SerializeToString,
            datafy__pb2.Team.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AddProjectsToTeam(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.TeamsService/AddProjectsToTeam',
            datafy__pb2.AddProjectsToTeamRequest.SerializeToString,
            datafy__pb2.AddProjectsToTeamResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AddEnvironmentsToTeam(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.TeamsService/AddEnvironmentsToTeam',
            datafy__pb2.AddEnvironmentsToTeamRequest.SerializeToString,
            datafy__pb2.AddEnvironmentsToTeamResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class UserServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListUsers = channel.unary_unary(
                '/cloud.datafy.api.proto.UserService/ListUsers',
                request_serializer=datafy__pb2.ListUsersRequest.SerializeToString,
                response_deserializer=datafy__pb2.ListUsersResponse.FromString,
                _registered_method=True)
        self.GetCurrentUser = channel.unary_unary(
                '/cloud.datafy.api.proto.UserService/GetCurrentUser',
                request_serializer=datafy__pb2.GetCurrentUserRequest.SerializeToString,
                response_deserializer=datafy__pb2.GetCurrentUserResponse.FromString,
                _registered_method=True)
        self.GetCurrentUserSettings = channel.unary_unary(
                '/cloud.datafy.api.proto.UserService/GetCurrentUserSettings',
                request_serializer=datafy__pb2.GetCurrentUserSettingsRequest.SerializeToString,
                response_deserializer=datafy__pb2.CurrentUserSettingsResponse.FromString,
                _registered_method=True)
        self.UpdateCurrentUserSettings = channel.unary_unary(
                '/cloud.datafy.api.proto.UserService/UpdateCurrentUserSettings',
                request_serializer=datafy__pb2.SetCurrentUserSettingsRequest.SerializeToString,
                response_deserializer=datafy__pb2.CurrentUserSettingsResponse.FromString,
                _registered_method=True)
        self.UpdateCurrentUserLastLoginDate = channel.unary_unary(
                '/cloud.datafy.api.proto.UserService/UpdateCurrentUserLastLoginDate',
                request_serializer=datafy__pb2.SetCurrentUserLastLoginDateRequest.SerializeToString,
                response_deserializer=datafy__pb2.SetCurrentUserLastLoginDateResponse.FromString,
                _registered_method=True)
        self.AddUserToAdminRole = channel.unary_unary(
                '/cloud.datafy.api.proto.UserService/AddUserToAdminRole',
                request_serializer=datafy__pb2.AddUserToAdminRoleRequest.SerializeToString,
                response_deserializer=datafy__pb2.AddUserToAdminRoleResponse.FromString,
                _registered_method=True)
        self.RemoveUserFromAdminRole = channel.unary_unary(
                '/cloud.datafy.api.proto.UserService/RemoveUserFromAdminRole',
                request_serializer=datafy__pb2.RemoveUserFromAdminRoleRequest.SerializeToString,
                response_deserializer=datafy__pb2.RemoveUserFromAdminRoleResponse.FromString,
                _registered_method=True)
        self.GetUserRoles = channel.unary_unary(
                '/cloud.datafy.api.proto.UserService/GetUserRoles',
                request_serializer=datafy__pb2.GetUserRolesRequest.SerializeToString,
                response_deserializer=datafy__pb2.GetUserRolesResponse.FromString,
                _registered_method=True)
        self.AddProjectsToUser = channel.unary_unary(
                '/cloud.datafy.api.proto.UserService/AddProjectsToUser',
                request_serializer=datafy__pb2.AddProjectsToUserRequest.SerializeToString,
                response_deserializer=datafy__pb2.AddProjectsToUserResponse.FromString,
                _registered_method=True)
        self.AddEnvironmentsToUser = channel.unary_unary(
                '/cloud.datafy.api.proto.UserService/AddEnvironmentsToUser',
                request_serializer=datafy__pb2.AddEnvironmentsToUserRequest.SerializeToString,
                response_deserializer=datafy__pb2.AddEnvironmentsToUserResponse.FromString,
                _registered_method=True)
        self.CreateUser = channel.unary_unary(
                '/cloud.datafy.api.proto.UserService/CreateUser',
                request_serializer=datafy__pb2.CreateUserRequest.SerializeToString,
                response_deserializer=datafy__pb2.CreateUserResponse.FromString,
                _registered_method=True)
        self.DeleteUser = channel.unary_unary(
                '/cloud.datafy.api.proto.UserService/DeleteUser',
                request_serializer=datafy__pb2.DeleteUserRequest.SerializeToString,
                response_deserializer=datafy__pb2.DeleteUserResponse.FromString,
                _registered_method=True)
        self.VerifyCurrentUserEmail = channel.unary_unary(
                '/cloud.datafy.api.proto.UserService/VerifyCurrentUserEmail',
                request_serializer=datafy__pb2.VerifyCurrentUserEmailRequest.SerializeToString,
                response_deserializer=datafy__pb2.VerifyCurrentUserEmailResponse.FromString,
                _registered_method=True)
        self.GenerateCurrentUserLoginCode = channel.unary_unary(
                '/cloud.datafy.api.proto.UserService/GenerateCurrentUserLoginCode',
                request_serializer=datafy__pb2.GenerateCurrentUserLoginCodeRequest.SerializeToString,
                response_deserializer=datafy__pb2.GenerateCurrentUserLoginCodeResponse.FromString,
                _registered_method=True)
        self.ListProjectAccessForUser = channel.unary_unary(
                '/cloud.datafy.api.proto.UserService/ListProjectAccessForUser',
                request_serializer=datafy__pb2.ListProjectsForUserAccessRequest.SerializeToString,
                response_deserializer=datafy__pb2.ListProjectsForUserAccessResponse.FromString,
                _registered_method=True)


class UserServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ListUsers(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCurrentUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCurrentUserSettings(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateCurrentUserSettings(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateCurrentUserLastLoginDate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddUserToAdminRole(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RemoveUserFromAdminRole(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetUserRoles(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddProjectsToUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddEnvironmentsToUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VerifyCurrentUserEmail(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GenerateCurrentUserLoginCode(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListProjectAccessForUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_UserServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListUsers': grpc.unary_unary_rpc_method_handler(
                    servicer.ListUsers,
                    request_deserializer=datafy__pb2.ListUsersRequest.FromString,
                    response_serializer=datafy__pb2.ListUsersResponse.SerializeToString,
            ),
            'GetCurrentUser': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCurrentUser,
                    request_deserializer=datafy__pb2.GetCurrentUserRequest.FromString,
                    response_serializer=datafy__pb2.GetCurrentUserResponse.SerializeToString,
            ),
            'GetCurrentUserSettings': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCurrentUserSettings,
                    request_deserializer=datafy__pb2.GetCurrentUserSettingsRequest.FromString,
                    response_serializer=datafy__pb2.CurrentUserSettingsResponse.SerializeToString,
            ),
            'UpdateCurrentUserSettings': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateCurrentUserSettings,
                    request_deserializer=datafy__pb2.SetCurrentUserSettingsRequest.FromString,
                    response_serializer=datafy__pb2.CurrentUserSettingsResponse.SerializeToString,
            ),
            'UpdateCurrentUserLastLoginDate': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateCurrentUserLastLoginDate,
                    request_deserializer=datafy__pb2.SetCurrentUserLastLoginDateRequest.FromString,
                    response_serializer=datafy__pb2.SetCurrentUserLastLoginDateResponse.SerializeToString,
            ),
            'AddUserToAdminRole': grpc.unary_unary_rpc_method_handler(
                    servicer.AddUserToAdminRole,
                    request_deserializer=datafy__pb2.AddUserToAdminRoleRequest.FromString,
                    response_serializer=datafy__pb2.AddUserToAdminRoleResponse.SerializeToString,
            ),
            'RemoveUserFromAdminRole': grpc.unary_unary_rpc_method_handler(
                    servicer.RemoveUserFromAdminRole,
                    request_deserializer=datafy__pb2.RemoveUserFromAdminRoleRequest.FromString,
                    response_serializer=datafy__pb2.RemoveUserFromAdminRoleResponse.SerializeToString,
            ),
            'GetUserRoles': grpc.unary_unary_rpc_method_handler(
                    servicer.GetUserRoles,
                    request_deserializer=datafy__pb2.GetUserRolesRequest.FromString,
                    response_serializer=datafy__pb2.GetUserRolesResponse.SerializeToString,
            ),
            'AddProjectsToUser': grpc.unary_unary_rpc_method_handler(
                    servicer.AddProjectsToUser,
                    request_deserializer=datafy__pb2.AddProjectsToUserRequest.FromString,
                    response_serializer=datafy__pb2.AddProjectsToUserResponse.SerializeToString,
            ),
            'AddEnvironmentsToUser': grpc.unary_unary_rpc_method_handler(
                    servicer.AddEnvironmentsToUser,
                    request_deserializer=datafy__pb2.AddEnvironmentsToUserRequest.FromString,
                    response_serializer=datafy__pb2.AddEnvironmentsToUserResponse.SerializeToString,
            ),
            'CreateUser': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateUser,
                    request_deserializer=datafy__pb2.CreateUserRequest.FromString,
                    response_serializer=datafy__pb2.CreateUserResponse.SerializeToString,
            ),
            'DeleteUser': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteUser,
                    request_deserializer=datafy__pb2.DeleteUserRequest.FromString,
                    response_serializer=datafy__pb2.DeleteUserResponse.SerializeToString,
            ),
            'VerifyCurrentUserEmail': grpc.unary_unary_rpc_method_handler(
                    servicer.VerifyCurrentUserEmail,
                    request_deserializer=datafy__pb2.VerifyCurrentUserEmailRequest.FromString,
                    response_serializer=datafy__pb2.VerifyCurrentUserEmailResponse.SerializeToString,
            ),
            'GenerateCurrentUserLoginCode': grpc.unary_unary_rpc_method_handler(
                    servicer.GenerateCurrentUserLoginCode,
                    request_deserializer=datafy__pb2.GenerateCurrentUserLoginCodeRequest.FromString,
                    response_serializer=datafy__pb2.GenerateCurrentUserLoginCodeResponse.SerializeToString,
            ),
            'ListProjectAccessForUser': grpc.unary_unary_rpc_method_handler(
                    servicer.ListProjectAccessForUser,
                    request_deserializer=datafy__pb2.ListProjectsForUserAccessRequest.FromString,
                    response_serializer=datafy__pb2.ListProjectsForUserAccessResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cloud.datafy.api.proto.UserService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('cloud.datafy.api.proto.UserService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class UserService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ListUsers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.UserService/ListUsers',
            datafy__pb2.ListUsersRequest.SerializeToString,
            datafy__pb2.ListUsersResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetCurrentUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.UserService/GetCurrentUser',
            datafy__pb2.GetCurrentUserRequest.SerializeToString,
            datafy__pb2.GetCurrentUserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetCurrentUserSettings(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.UserService/GetCurrentUserSettings',
            datafy__pb2.GetCurrentUserSettingsRequest.SerializeToString,
            datafy__pb2.CurrentUserSettingsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateCurrentUserSettings(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.UserService/UpdateCurrentUserSettings',
            datafy__pb2.SetCurrentUserSettingsRequest.SerializeToString,
            datafy__pb2.CurrentUserSettingsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateCurrentUserLastLoginDate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.UserService/UpdateCurrentUserLastLoginDate',
            datafy__pb2.SetCurrentUserLastLoginDateRequest.SerializeToString,
            datafy__pb2.SetCurrentUserLastLoginDateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AddUserToAdminRole(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.UserService/AddUserToAdminRole',
            datafy__pb2.AddUserToAdminRoleRequest.SerializeToString,
            datafy__pb2.AddUserToAdminRoleResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RemoveUserFromAdminRole(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.UserService/RemoveUserFromAdminRole',
            datafy__pb2.RemoveUserFromAdminRoleRequest.SerializeToString,
            datafy__pb2.RemoveUserFromAdminRoleResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetUserRoles(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.UserService/GetUserRoles',
            datafy__pb2.GetUserRolesRequest.SerializeToString,
            datafy__pb2.GetUserRolesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AddProjectsToUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.UserService/AddProjectsToUser',
            datafy__pb2.AddProjectsToUserRequest.SerializeToString,
            datafy__pb2.AddProjectsToUserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AddEnvironmentsToUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.UserService/AddEnvironmentsToUser',
            datafy__pb2.AddEnvironmentsToUserRequest.SerializeToString,
            datafy__pb2.AddEnvironmentsToUserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.UserService/CreateUser',
            datafy__pb2.CreateUserRequest.SerializeToString,
            datafy__pb2.CreateUserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.UserService/DeleteUser',
            datafy__pb2.DeleteUserRequest.SerializeToString,
            datafy__pb2.DeleteUserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def VerifyCurrentUserEmail(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.UserService/VerifyCurrentUserEmail',
            datafy__pb2.VerifyCurrentUserEmailRequest.SerializeToString,
            datafy__pb2.VerifyCurrentUserEmailResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GenerateCurrentUserLoginCode(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.UserService/GenerateCurrentUserLoginCode',
            datafy__pb2.GenerateCurrentUserLoginCodeRequest.SerializeToString,
            datafy__pb2.GenerateCurrentUserLoginCodeResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListProjectAccessForUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.UserService/ListProjectAccessForUser',
            datafy__pb2.ListProjectsForUserAccessRequest.SerializeToString,
            datafy__pb2.ListProjectsForUserAccessResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class LoginServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ExchangeCodeForToken = channel.unary_unary(
                '/cloud.datafy.api.proto.LoginService/ExchangeCodeForToken',
                request_serializer=datafy__pb2.ExchangeCodeForTokenRequest.SerializeToString,
                response_deserializer=datafy__pb2.ExchangeCodeForTokenResponse.FromString,
                _registered_method=True)
        self.GetPlaygroundUser = channel.unary_unary(
                '/cloud.datafy.api.proto.LoginService/GetPlaygroundUser',
                request_serializer=datafy__pb2.PlaygroundUserRequest.SerializeToString,
                response_deserializer=datafy__pb2.PlaygroundUserResponse.FromString,
                _registered_method=True)


class LoginServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ExchangeCodeForToken(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetPlaygroundUser(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_LoginServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ExchangeCodeForToken': grpc.unary_unary_rpc_method_handler(
                    servicer.ExchangeCodeForToken,
                    request_deserializer=datafy__pb2.ExchangeCodeForTokenRequest.FromString,
                    response_serializer=datafy__pb2.ExchangeCodeForTokenResponse.SerializeToString,
            ),
            'GetPlaygroundUser': grpc.unary_unary_rpc_method_handler(
                    servicer.GetPlaygroundUser,
                    request_deserializer=datafy__pb2.PlaygroundUserRequest.FromString,
                    response_serializer=datafy__pb2.PlaygroundUserResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cloud.datafy.api.proto.LoginService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('cloud.datafy.api.proto.LoginService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class LoginService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ExchangeCodeForToken(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.LoginService/ExchangeCodeForToken',
            datafy__pb2.ExchangeCodeForTokenRequest.SerializeToString,
            datafy__pb2.ExchangeCodeForTokenResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetPlaygroundUser(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.LoginService/GetPlaygroundUser',
            datafy__pb2.PlaygroundUserRequest.SerializeToString,
            datafy__pb2.PlaygroundUserResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class SparkMetricServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetSparkMetrics = channel.unary_unary(
                '/cloud.datafy.api.proto.SparkMetricService/GetSparkMetrics',
                request_serializer=datafy__pb2.GetSparkMetricsRequest.SerializeToString,
                response_deserializer=datafy__pb2.GetSparkMetricsResponse.FromString,
                _registered_method=True)
        self.CalculateSparkMetric = channel.unary_unary(
                '/cloud.datafy.api.proto.SparkMetricService/CalculateSparkMetric',
                request_serializer=datafy__pb2.CalculateSparkMetricRequest.SerializeToString,
                response_deserializer=datafy__pb2.SparkMetric.FromString,
                _registered_method=True)
        self.GetSparkMetricsForApplicationRun = channel.unary_unary(
                '/cloud.datafy.api.proto.SparkMetricService/GetSparkMetricsForApplicationRun',
                request_serializer=datafy__pb2.GetSparkMetricsRequest.SerializeToString,
                response_deserializer=datafy__pb2.SparkMetric.FromString,
                _registered_method=True)
        self.GetSparkMetricsForApplicationRuns = channel.unary_unary(
                '/cloud.datafy.api.proto.SparkMetricService/GetSparkMetricsForApplicationRuns',
                request_serializer=datafy__pb2.GetSparkMetricsForApplicationRunsRequest.SerializeToString,
                response_deserializer=datafy__pb2.GetSparkMetricsForApplicationRunsResponse.FromString,
                _registered_method=True)
        self.GetSparkMetricsAggregate = channel.unary_unary(
                '/cloud.datafy.api.proto.SparkMetricService/GetSparkMetricsAggregate',
                request_serializer=datafy__pb2.GetSparkMetricsAggregateRequest.SerializeToString,
                response_deserializer=datafy__pb2.GetSparkMetricsAggregateResponse.FromString,
                _registered_method=True)


class SparkMetricServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetSparkMetrics(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CalculateSparkMetric(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSparkMetricsForApplicationRun(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSparkMetricsForApplicationRuns(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSparkMetricsAggregate(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_SparkMetricServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetSparkMetrics': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSparkMetrics,
                    request_deserializer=datafy__pb2.GetSparkMetricsRequest.FromString,
                    response_serializer=datafy__pb2.GetSparkMetricsResponse.SerializeToString,
            ),
            'CalculateSparkMetric': grpc.unary_unary_rpc_method_handler(
                    servicer.CalculateSparkMetric,
                    request_deserializer=datafy__pb2.CalculateSparkMetricRequest.FromString,
                    response_serializer=datafy__pb2.SparkMetric.SerializeToString,
            ),
            'GetSparkMetricsForApplicationRun': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSparkMetricsForApplicationRun,
                    request_deserializer=datafy__pb2.GetSparkMetricsRequest.FromString,
                    response_serializer=datafy__pb2.SparkMetric.SerializeToString,
            ),
            'GetSparkMetricsForApplicationRuns': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSparkMetricsForApplicationRuns,
                    request_deserializer=datafy__pb2.GetSparkMetricsForApplicationRunsRequest.FromString,
                    response_serializer=datafy__pb2.GetSparkMetricsForApplicationRunsResponse.SerializeToString,
            ),
            'GetSparkMetricsAggregate': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSparkMetricsAggregate,
                    request_deserializer=datafy__pb2.GetSparkMetricsAggregateRequest.FromString,
                    response_serializer=datafy__pb2.GetSparkMetricsAggregateResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cloud.datafy.api.proto.SparkMetricService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('cloud.datafy.api.proto.SparkMetricService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class SparkMetricService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetSparkMetrics(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.SparkMetricService/GetSparkMetrics',
            datafy__pb2.GetSparkMetricsRequest.SerializeToString,
            datafy__pb2.GetSparkMetricsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CalculateSparkMetric(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.SparkMetricService/CalculateSparkMetric',
            datafy__pb2.CalculateSparkMetricRequest.SerializeToString,
            datafy__pb2.SparkMetric.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetSparkMetricsForApplicationRun(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.SparkMetricService/GetSparkMetricsForApplicationRun',
            datafy__pb2.GetSparkMetricsRequest.SerializeToString,
            datafy__pb2.SparkMetric.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetSparkMetricsForApplicationRuns(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.SparkMetricService/GetSparkMetricsForApplicationRuns',
            datafy__pb2.GetSparkMetricsForApplicationRunsRequest.SerializeToString,
            datafy__pb2.GetSparkMetricsForApplicationRunsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetSparkMetricsAggregate(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.SparkMetricService/GetSparkMetricsAggregate',
            datafy__pb2.GetSparkMetricsAggregateRequest.SerializeToString,
            datafy__pb2.GetSparkMetricsAggregateResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class NodeDataPlaneServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetNodes = channel.unary_unary(
                '/cloud.datafy.api.proto.NodeDataPlaneService/GetNodes',
                request_serializer=datafy__pb2.GetNodesDataPlaneRequest.SerializeToString,
                response_deserializer=datafy__pb2.GetNodeDataPlaneResponse.FromString,
                _registered_method=True)


class NodeDataPlaneServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetNodes(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_NodeDataPlaneServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetNodes': grpc.unary_unary_rpc_method_handler(
                    servicer.GetNodes,
                    request_deserializer=datafy__pb2.GetNodesDataPlaneRequest.FromString,
                    response_serializer=datafy__pb2.GetNodeDataPlaneResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cloud.datafy.api.proto.NodeDataPlaneService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('cloud.datafy.api.proto.NodeDataPlaneService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class NodeDataPlaneService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetNodes(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.api.proto.NodeDataPlaneService/GetNodes',
            datafy__pb2.GetNodesDataPlaneRequest.SerializeToString,
            datafy__pb2.GetNodeDataPlaneResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
