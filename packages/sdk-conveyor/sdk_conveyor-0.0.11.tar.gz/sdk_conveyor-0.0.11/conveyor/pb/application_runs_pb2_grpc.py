# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import conveyor.pb.application_runs_pb2 as application__runs__pb2
from google.api import httpbody_pb2 as google_dot_api_dot_httpbody__pb2

GRPC_GENERATED_VERSION = '1.74.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in application_runs_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class ApplicationRunsLogsDownloadServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.DownloadApplicationRunLogsByApplicationId = channel.unary_stream(
                '/cloud.datafy.applicationruns.proto.ApplicationRunsLogsDownloadService/DownloadApplicationRunLogsByApplicationId',
                request_serializer=application__runs__pb2.DownloadApplicationRunLogsByApplicationIdRequest.SerializeToString,
                response_deserializer=google_dot_api_dot_httpbody__pb2.HttpBody.FromString,
                _registered_method=True)


class ApplicationRunsLogsDownloadServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def DownloadApplicationRunLogsByApplicationId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ApplicationRunsLogsDownloadServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'DownloadApplicationRunLogsByApplicationId': grpc.unary_stream_rpc_method_handler(
                    servicer.DownloadApplicationRunLogsByApplicationId,
                    request_deserializer=application__runs__pb2.DownloadApplicationRunLogsByApplicationIdRequest.FromString,
                    response_serializer=google_dot_api_dot_httpbody__pb2.HttpBody.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cloud.datafy.applicationruns.proto.ApplicationRunsLogsDownloadService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('cloud.datafy.applicationruns.proto.ApplicationRunsLogsDownloadService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ApplicationRunsLogsDownloadService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def DownloadApplicationRunLogsByApplicationId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/cloud.datafy.applicationruns.proto.ApplicationRunsLogsDownloadService/DownloadApplicationRunLogsByApplicationId',
            application__runs__pb2.DownloadApplicationRunLogsByApplicationIdRequest.SerializeToString,
            google_dot_api_dot_httpbody__pb2.HttpBody.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class ApplicationRunsServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetApplicationRunsForEnvironment = channel.unary_unary(
                '/cloud.datafy.applicationruns.proto.ApplicationRunsService/GetApplicationRunsForEnvironment',
                request_serializer=application__runs__pb2.GetApplicationRunsRequest.SerializeToString,
                response_deserializer=application__runs__pb2.ApplicationRuns.FromString,
                _registered_method=True)
        self.GetApplicationRunsForProject = channel.unary_unary(
                '/cloud.datafy.applicationruns.proto.ApplicationRunsService/GetApplicationRunsForProject',
                request_serializer=application__runs__pb2.GetApplicationRunsRequest.SerializeToString,
                response_deserializer=application__runs__pb2.ApplicationRuns.FromString,
                _registered_method=True)
        self.GetApplicationRunByApplicationId = channel.unary_unary(
                '/cloud.datafy.applicationruns.proto.ApplicationRunsService/GetApplicationRunByApplicationId',
                request_serializer=application__runs__pb2.GetApplicationRunRequest.SerializeToString,
                response_deserializer=application__runs__pb2.ApplicationRun.FromString,
                _registered_method=True)
        self.GetSparkEventLogUrlByApplicationId = channel.unary_unary(
                '/cloud.datafy.applicationruns.proto.ApplicationRunsService/GetSparkEventLogUrlByApplicationId',
                request_serializer=application__runs__pb2.GetSparkEventLogUrlRequest.SerializeToString,
                response_deserializer=application__runs__pb2.GetSparkEventLogUrlResponse.FromString,
                _registered_method=True)
        self.GetSparkExecutorInfoByApplicationId = channel.unary_unary(
                '/cloud.datafy.applicationruns.proto.ApplicationRunsService/GetSparkExecutorInfoByApplicationId',
                request_serializer=application__runs__pb2.GetSparkExecutorInfoRequest.SerializeToString,
                response_deserializer=application__runs__pb2.GetSparkExecutorInfoRequestResponse.FromString,
                _registered_method=True)
        self.GetApplicationRunMetricsByApplicationId = channel.unary_unary(
                '/cloud.datafy.applicationruns.proto.ApplicationRunsService/GetApplicationRunMetricsByApplicationId',
                request_serializer=application__runs__pb2.GetApplicationRunMetricsRequest.SerializeToString,
                response_deserializer=application__runs__pb2.GetApplicationRunMetricsResponse.FromString,
                _registered_method=True)
        self.GetApplicationRunLogsByApplicationId = channel.unary_unary(
                '/cloud.datafy.applicationruns.proto.ApplicationRunsService/GetApplicationRunLogsByApplicationId',
                request_serializer=application__runs__pb2.GetApplicationRunLogsRequest.SerializeToString,
                response_deserializer=application__runs__pb2.GetApplicationRunLogsResponse.FromString,
                _registered_method=True)
        self.GetApplicationRunAnalyzedByAiByApplicationId = channel.unary_stream(
                '/cloud.datafy.applicationruns.proto.ApplicationRunsService/GetApplicationRunAnalyzedByAiByApplicationId',
                request_serializer=application__runs__pb2.GetApplicationRunAnalyzedByAiByApplicationIdRequest.SerializeToString,
                response_deserializer=application__runs__pb2.GetApplicationRunAnalyzedByAiByApplicationIdResponse.FromString,
                _registered_method=True)
        self.GetDownloadApplicationRunLogsByApplicationIdUrl = channel.unary_unary(
                '/cloud.datafy.applicationruns.proto.ApplicationRunsService/GetDownloadApplicationRunLogsByApplicationIdUrl',
                request_serializer=application__runs__pb2.GetDownloadApplicationRunLogsByApplicationIdUrlRequest.SerializeToString,
                response_deserializer=application__runs__pb2.GetDownloadApplicationRunLogsByApplicationIdUrlResponse.FromString,
                _registered_method=True)
        self.GetSparkExecutorLogs = channel.unary_unary(
                '/cloud.datafy.applicationruns.proto.ApplicationRunsService/GetSparkExecutorLogs',
                request_serializer=application__runs__pb2.GetSparkExecutorLogsRequest.SerializeToString,
                response_deserializer=application__runs__pb2.GetSparkExecutorLogsResponse.FromString,
                _registered_method=True)
        self.GetStreamingApplications = channel.unary_unary(
                '/cloud.datafy.applicationruns.proto.ApplicationRunsService/GetStreamingApplications',
                request_serializer=application__runs__pb2.GetStreamingApplicationsRequest.SerializeToString,
                response_deserializer=application__runs__pb2.GetStreamingApplicationsResponse.FromString,
                _registered_method=True)
        self.GetStreamingApplicationsForEnvironment = channel.unary_unary(
                '/cloud.datafy.applicationruns.proto.ApplicationRunsService/GetStreamingApplicationsForEnvironment',
                request_serializer=application__runs__pb2.GetStreamingApplicationsRequest.SerializeToString,
                response_deserializer=application__runs__pb2.GetStreamingApplicationsResponse.FromString,
                _registered_method=True)
        self.GetStreamingApplicationsForProject = channel.unary_unary(
                '/cloud.datafy.applicationruns.proto.ApplicationRunsService/GetStreamingApplicationsForProject',
                request_serializer=application__runs__pb2.GetStreamingApplicationsRequest.SerializeToString,
                response_deserializer=application__runs__pb2.GetStreamingApplicationsResponse.FromString,
                _registered_method=True)
        self.GetStreamingApplication = channel.unary_unary(
                '/cloud.datafy.applicationruns.proto.ApplicationRunsService/GetStreamingApplication',
                request_serializer=application__runs__pb2.GetStreamingApplicationRequest.SerializeToString,
                response_deserializer=application__runs__pb2.StreamingApplication.FromString,
                _registered_method=True)
        self.GetStreamingSparkApplicationRuns = channel.unary_unary(
                '/cloud.datafy.applicationruns.proto.ApplicationRunsService/GetStreamingSparkApplicationRuns',
                request_serializer=application__runs__pb2.GetStreamingSparkApplicationRunsRequest.SerializeToString,
                response_deserializer=application__runs__pb2.GetStreamingSparkApplicationRunsResponse.FromString,
                _registered_method=True)
        self.GetStreamingSparkApplicationLogs = channel.unary_unary(
                '/cloud.datafy.applicationruns.proto.ApplicationRunsService/GetStreamingSparkApplicationLogs',
                request_serializer=application__runs__pb2.GetStreamingSparkApplicationLogsRequest.SerializeToString,
                response_deserializer=application__runs__pb2.GetStreamingSparkApplicationLogsResponse.FromString,
                _registered_method=True)
        self.GetStreamingSparkApplicationRunExecutor = channel.unary_unary(
                '/cloud.datafy.applicationruns.proto.ApplicationRunsService/GetStreamingSparkApplicationRunExecutor',
                request_serializer=application__runs__pb2.GetStreamingSparkApplicationRunExecutorRequest.SerializeToString,
                response_deserializer=application__runs__pb2.GetStreamingSparkApplicationRunExecutorResponse.FromString,
                _registered_method=True)
        self.GetStreamingSparkApplicationRunMetrics = channel.unary_unary(
                '/cloud.datafy.applicationruns.proto.ApplicationRunsService/GetStreamingSparkApplicationRunMetrics',
                request_serializer=application__runs__pb2.GetStreamingSparkApplicationRunMetricsRequest.SerializeToString,
                response_deserializer=application__runs__pb2.GetApplicationRunMetricsResponse.FromString,
                _registered_method=True)
        self.GetRecentlyFailedTasks = channel.unary_unary(
                '/cloud.datafy.applicationruns.proto.ApplicationRunsService/GetRecentlyFailedTasks',
                request_serializer=application__runs__pb2.GetRecentlyFailedTasksRequest.SerializeToString,
                response_deserializer=application__runs__pb2.GetRecentlyFailedTasksResponse.FromString,
                _registered_method=True)
        self.GetTasksForDagRun = channel.unary_unary(
                '/cloud.datafy.applicationruns.proto.ApplicationRunsService/GetTasksForDagRun',
                request_serializer=application__runs__pb2.GetTasksForDagRunRequest.SerializeToString,
                response_deserializer=application__runs__pb2.GetTasksForDagRunResponse.FromString,
                _registered_method=True)


class ApplicationRunsServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetApplicationRunsForEnvironment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetApplicationRunsForProject(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetApplicationRunByApplicationId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSparkEventLogUrlByApplicationId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSparkExecutorInfoByApplicationId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetApplicationRunMetricsByApplicationId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetApplicationRunLogsByApplicationId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetApplicationRunAnalyzedByAiByApplicationId(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDownloadApplicationRunLogsByApplicationIdUrl(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSparkExecutorLogs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStreamingApplications(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStreamingApplicationsForEnvironment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStreamingApplicationsForProject(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStreamingApplication(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStreamingSparkApplicationRuns(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStreamingSparkApplicationLogs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStreamingSparkApplicationRunExecutor(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStreamingSparkApplicationRunMetrics(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRecentlyFailedTasks(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTasksForDagRun(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ApplicationRunsServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetApplicationRunsForEnvironment': grpc.unary_unary_rpc_method_handler(
                    servicer.GetApplicationRunsForEnvironment,
                    request_deserializer=application__runs__pb2.GetApplicationRunsRequest.FromString,
                    response_serializer=application__runs__pb2.ApplicationRuns.SerializeToString,
            ),
            'GetApplicationRunsForProject': grpc.unary_unary_rpc_method_handler(
                    servicer.GetApplicationRunsForProject,
                    request_deserializer=application__runs__pb2.GetApplicationRunsRequest.FromString,
                    response_serializer=application__runs__pb2.ApplicationRuns.SerializeToString,
            ),
            'GetApplicationRunByApplicationId': grpc.unary_unary_rpc_method_handler(
                    servicer.GetApplicationRunByApplicationId,
                    request_deserializer=application__runs__pb2.GetApplicationRunRequest.FromString,
                    response_serializer=application__runs__pb2.ApplicationRun.SerializeToString,
            ),
            'GetSparkEventLogUrlByApplicationId': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSparkEventLogUrlByApplicationId,
                    request_deserializer=application__runs__pb2.GetSparkEventLogUrlRequest.FromString,
                    response_serializer=application__runs__pb2.GetSparkEventLogUrlResponse.SerializeToString,
            ),
            'GetSparkExecutorInfoByApplicationId': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSparkExecutorInfoByApplicationId,
                    request_deserializer=application__runs__pb2.GetSparkExecutorInfoRequest.FromString,
                    response_serializer=application__runs__pb2.GetSparkExecutorInfoRequestResponse.SerializeToString,
            ),
            'GetApplicationRunMetricsByApplicationId': grpc.unary_unary_rpc_method_handler(
                    servicer.GetApplicationRunMetricsByApplicationId,
                    request_deserializer=application__runs__pb2.GetApplicationRunMetricsRequest.FromString,
                    response_serializer=application__runs__pb2.GetApplicationRunMetricsResponse.SerializeToString,
            ),
            'GetApplicationRunLogsByApplicationId': grpc.unary_unary_rpc_method_handler(
                    servicer.GetApplicationRunLogsByApplicationId,
                    request_deserializer=application__runs__pb2.GetApplicationRunLogsRequest.FromString,
                    response_serializer=application__runs__pb2.GetApplicationRunLogsResponse.SerializeToString,
            ),
            'GetApplicationRunAnalyzedByAiByApplicationId': grpc.unary_stream_rpc_method_handler(
                    servicer.GetApplicationRunAnalyzedByAiByApplicationId,
                    request_deserializer=application__runs__pb2.GetApplicationRunAnalyzedByAiByApplicationIdRequest.FromString,
                    response_serializer=application__runs__pb2.GetApplicationRunAnalyzedByAiByApplicationIdResponse.SerializeToString,
            ),
            'GetDownloadApplicationRunLogsByApplicationIdUrl': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDownloadApplicationRunLogsByApplicationIdUrl,
                    request_deserializer=application__runs__pb2.GetDownloadApplicationRunLogsByApplicationIdUrlRequest.FromString,
                    response_serializer=application__runs__pb2.GetDownloadApplicationRunLogsByApplicationIdUrlResponse.SerializeToString,
            ),
            'GetSparkExecutorLogs': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSparkExecutorLogs,
                    request_deserializer=application__runs__pb2.GetSparkExecutorLogsRequest.FromString,
                    response_serializer=application__runs__pb2.GetSparkExecutorLogsResponse.SerializeToString,
            ),
            'GetStreamingApplications': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStreamingApplications,
                    request_deserializer=application__runs__pb2.GetStreamingApplicationsRequest.FromString,
                    response_serializer=application__runs__pb2.GetStreamingApplicationsResponse.SerializeToString,
            ),
            'GetStreamingApplicationsForEnvironment': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStreamingApplicationsForEnvironment,
                    request_deserializer=application__runs__pb2.GetStreamingApplicationsRequest.FromString,
                    response_serializer=application__runs__pb2.GetStreamingApplicationsResponse.SerializeToString,
            ),
            'GetStreamingApplicationsForProject': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStreamingApplicationsForProject,
                    request_deserializer=application__runs__pb2.GetStreamingApplicationsRequest.FromString,
                    response_serializer=application__runs__pb2.GetStreamingApplicationsResponse.SerializeToString,
            ),
            'GetStreamingApplication': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStreamingApplication,
                    request_deserializer=application__runs__pb2.GetStreamingApplicationRequest.FromString,
                    response_serializer=application__runs__pb2.StreamingApplication.SerializeToString,
            ),
            'GetStreamingSparkApplicationRuns': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStreamingSparkApplicationRuns,
                    request_deserializer=application__runs__pb2.GetStreamingSparkApplicationRunsRequest.FromString,
                    response_serializer=application__runs__pb2.GetStreamingSparkApplicationRunsResponse.SerializeToString,
            ),
            'GetStreamingSparkApplicationLogs': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStreamingSparkApplicationLogs,
                    request_deserializer=application__runs__pb2.GetStreamingSparkApplicationLogsRequest.FromString,
                    response_serializer=application__runs__pb2.GetStreamingSparkApplicationLogsResponse.SerializeToString,
            ),
            'GetStreamingSparkApplicationRunExecutor': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStreamingSparkApplicationRunExecutor,
                    request_deserializer=application__runs__pb2.GetStreamingSparkApplicationRunExecutorRequest.FromString,
                    response_serializer=application__runs__pb2.GetStreamingSparkApplicationRunExecutorResponse.SerializeToString,
            ),
            'GetStreamingSparkApplicationRunMetrics': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStreamingSparkApplicationRunMetrics,
                    request_deserializer=application__runs__pb2.GetStreamingSparkApplicationRunMetricsRequest.FromString,
                    response_serializer=application__runs__pb2.GetApplicationRunMetricsResponse.SerializeToString,
            ),
            'GetRecentlyFailedTasks': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRecentlyFailedTasks,
                    request_deserializer=application__runs__pb2.GetRecentlyFailedTasksRequest.FromString,
                    response_serializer=application__runs__pb2.GetRecentlyFailedTasksResponse.SerializeToString,
            ),
            'GetTasksForDagRun': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTasksForDagRun,
                    request_deserializer=application__runs__pb2.GetTasksForDagRunRequest.FromString,
                    response_serializer=application__runs__pb2.GetTasksForDagRunResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cloud.datafy.applicationruns.proto.ApplicationRunsService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('cloud.datafy.applicationruns.proto.ApplicationRunsService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ApplicationRunsService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetApplicationRunsForEnvironment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.applicationruns.proto.ApplicationRunsService/GetApplicationRunsForEnvironment',
            application__runs__pb2.GetApplicationRunsRequest.SerializeToString,
            application__runs__pb2.ApplicationRuns.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetApplicationRunsForProject(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.applicationruns.proto.ApplicationRunsService/GetApplicationRunsForProject',
            application__runs__pb2.GetApplicationRunsRequest.SerializeToString,
            application__runs__pb2.ApplicationRuns.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetApplicationRunByApplicationId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.applicationruns.proto.ApplicationRunsService/GetApplicationRunByApplicationId',
            application__runs__pb2.GetApplicationRunRequest.SerializeToString,
            application__runs__pb2.ApplicationRun.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetSparkEventLogUrlByApplicationId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.applicationruns.proto.ApplicationRunsService/GetSparkEventLogUrlByApplicationId',
            application__runs__pb2.GetSparkEventLogUrlRequest.SerializeToString,
            application__runs__pb2.GetSparkEventLogUrlResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetSparkExecutorInfoByApplicationId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.applicationruns.proto.ApplicationRunsService/GetSparkExecutorInfoByApplicationId',
            application__runs__pb2.GetSparkExecutorInfoRequest.SerializeToString,
            application__runs__pb2.GetSparkExecutorInfoRequestResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetApplicationRunMetricsByApplicationId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.applicationruns.proto.ApplicationRunsService/GetApplicationRunMetricsByApplicationId',
            application__runs__pb2.GetApplicationRunMetricsRequest.SerializeToString,
            application__runs__pb2.GetApplicationRunMetricsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetApplicationRunLogsByApplicationId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.applicationruns.proto.ApplicationRunsService/GetApplicationRunLogsByApplicationId',
            application__runs__pb2.GetApplicationRunLogsRequest.SerializeToString,
            application__runs__pb2.GetApplicationRunLogsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetApplicationRunAnalyzedByAiByApplicationId(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/cloud.datafy.applicationruns.proto.ApplicationRunsService/GetApplicationRunAnalyzedByAiByApplicationId',
            application__runs__pb2.GetApplicationRunAnalyzedByAiByApplicationIdRequest.SerializeToString,
            application__runs__pb2.GetApplicationRunAnalyzedByAiByApplicationIdResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetDownloadApplicationRunLogsByApplicationIdUrl(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.applicationruns.proto.ApplicationRunsService/GetDownloadApplicationRunLogsByApplicationIdUrl',
            application__runs__pb2.GetDownloadApplicationRunLogsByApplicationIdUrlRequest.SerializeToString,
            application__runs__pb2.GetDownloadApplicationRunLogsByApplicationIdUrlResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetSparkExecutorLogs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.applicationruns.proto.ApplicationRunsService/GetSparkExecutorLogs',
            application__runs__pb2.GetSparkExecutorLogsRequest.SerializeToString,
            application__runs__pb2.GetSparkExecutorLogsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetStreamingApplications(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.applicationruns.proto.ApplicationRunsService/GetStreamingApplications',
            application__runs__pb2.GetStreamingApplicationsRequest.SerializeToString,
            application__runs__pb2.GetStreamingApplicationsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetStreamingApplicationsForEnvironment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.applicationruns.proto.ApplicationRunsService/GetStreamingApplicationsForEnvironment',
            application__runs__pb2.GetStreamingApplicationsRequest.SerializeToString,
            application__runs__pb2.GetStreamingApplicationsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetStreamingApplicationsForProject(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.applicationruns.proto.ApplicationRunsService/GetStreamingApplicationsForProject',
            application__runs__pb2.GetStreamingApplicationsRequest.SerializeToString,
            application__runs__pb2.GetStreamingApplicationsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetStreamingApplication(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.applicationruns.proto.ApplicationRunsService/GetStreamingApplication',
            application__runs__pb2.GetStreamingApplicationRequest.SerializeToString,
            application__runs__pb2.StreamingApplication.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetStreamingSparkApplicationRuns(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.applicationruns.proto.ApplicationRunsService/GetStreamingSparkApplicationRuns',
            application__runs__pb2.GetStreamingSparkApplicationRunsRequest.SerializeToString,
            application__runs__pb2.GetStreamingSparkApplicationRunsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetStreamingSparkApplicationLogs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.applicationruns.proto.ApplicationRunsService/GetStreamingSparkApplicationLogs',
            application__runs__pb2.GetStreamingSparkApplicationLogsRequest.SerializeToString,
            application__runs__pb2.GetStreamingSparkApplicationLogsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetStreamingSparkApplicationRunExecutor(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.applicationruns.proto.ApplicationRunsService/GetStreamingSparkApplicationRunExecutor',
            application__runs__pb2.GetStreamingSparkApplicationRunExecutorRequest.SerializeToString,
            application__runs__pb2.GetStreamingSparkApplicationRunExecutorResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetStreamingSparkApplicationRunMetrics(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.applicationruns.proto.ApplicationRunsService/GetStreamingSparkApplicationRunMetrics',
            application__runs__pb2.GetStreamingSparkApplicationRunMetricsRequest.SerializeToString,
            application__runs__pb2.GetApplicationRunMetricsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetRecentlyFailedTasks(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.applicationruns.proto.ApplicationRunsService/GetRecentlyFailedTasks',
            application__runs__pb2.GetRecentlyFailedTasksRequest.SerializeToString,
            application__runs__pb2.GetRecentlyFailedTasksResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetTasksForDagRun(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.applicationruns.proto.ApplicationRunsService/GetTasksForDagRun',
            application__runs__pb2.GetTasksForDagRunRequest.SerializeToString,
            application__runs__pb2.GetTasksForDagRunResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class ApplicationRunsDataPlaneServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetApplicationRunLogs = channel.unary_unary(
                '/cloud.datafy.applicationruns.proto.ApplicationRunsDataPlaneService/GetApplicationRunLogs',
                request_serializer=application__runs__pb2.GetApplicationRunDataPlaneLogsRequest.SerializeToString,
                response_deserializer=application__runs__pb2.GetApplicationRunDataPlaneLogsResponse.FromString,
                _registered_method=True)
        self.GetLatestLogs = channel.unary_unary(
                '/cloud.datafy.applicationruns.proto.ApplicationRunsDataPlaneService/GetLatestLogs',
                request_serializer=application__runs__pb2.GetLatestDataPlaneLogsRequest.SerializeToString,
                response_deserializer=application__runs__pb2.GetLatestDataPlaneLogsResponse.FromString,
                _registered_method=True)
        self.DownloadApplicationRunLogs = channel.unary_stream(
                '/cloud.datafy.applicationruns.proto.ApplicationRunsDataPlaneService/DownloadApplicationRunLogs',
                request_serializer=application__runs__pb2.DownloadApplicationRunDataPlaneLogsRequest.SerializeToString,
                response_deserializer=google_dot_api_dot_httpbody__pb2.HttpBody.FromString,
                _registered_method=True)
        self.GetApplicationRunMetrics = channel.unary_unary(
                '/cloud.datafy.applicationruns.proto.ApplicationRunsDataPlaneService/GetApplicationRunMetrics',
                request_serializer=application__runs__pb2.GetApplicationRunDataPlaneMetricsRequest.SerializeToString,
                response_deserializer=application__runs__pb2.GetApplicationRunDataPlaneMetricsResponse.FromString,
                _registered_method=True)
        self.GetSparkExecutorMetrics = channel.unary_unary(
                '/cloud.datafy.applicationruns.proto.ApplicationRunsDataPlaneService/GetSparkExecutorMetrics',
                request_serializer=application__runs__pb2.GetSparkExecutorRunDataPlaneMetricsRequest.SerializeToString,
                response_deserializer=application__runs__pb2.GetSparkExecutorDataPlaneMetricsResponse.FromString,
                _registered_method=True)
        self.GetSparkEventLogUrl = channel.unary_unary(
                '/cloud.datafy.applicationruns.proto.ApplicationRunsDataPlaneService/GetSparkEventLogUrl',
                request_serializer=application__runs__pb2.GetSparkEventLogUrlDataPlaneMetricsRequest.SerializeToString,
                response_deserializer=application__runs__pb2.GetSparkEventLogUrlResponse.FromString,
                _registered_method=True)
        self.ProcessSparkMetrics = channel.unary_unary(
                '/cloud.datafy.applicationruns.proto.ApplicationRunsDataPlaneService/ProcessSparkMetrics',
                request_serializer=application__runs__pb2.ProcessSparkMetricsRequest.SerializeToString,
                response_deserializer=application__runs__pb2.ProcessSparkMetricsResponse.FromString,
                _registered_method=True)
        self.CalculateSparkMetric = channel.unary_unary(
                '/cloud.datafy.applicationruns.proto.ApplicationRunsDataPlaneService/CalculateSparkMetric',
                request_serializer=application__runs__pb2.CalculateSparkMetricDataPlaneRequest.SerializeToString,
                response_deserializer=application__runs__pb2.ProcessSparkMetricsResponse.FromString,
                _registered_method=True)


class ApplicationRunsDataPlaneServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetApplicationRunLogs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLatestLogs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DownloadApplicationRunLogs(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetApplicationRunMetrics(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSparkExecutorMetrics(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSparkEventLogUrl(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ProcessSparkMetrics(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CalculateSparkMetric(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ApplicationRunsDataPlaneServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetApplicationRunLogs': grpc.unary_unary_rpc_method_handler(
                    servicer.GetApplicationRunLogs,
                    request_deserializer=application__runs__pb2.GetApplicationRunDataPlaneLogsRequest.FromString,
                    response_serializer=application__runs__pb2.GetApplicationRunDataPlaneLogsResponse.SerializeToString,
            ),
            'GetLatestLogs': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLatestLogs,
                    request_deserializer=application__runs__pb2.GetLatestDataPlaneLogsRequest.FromString,
                    response_serializer=application__runs__pb2.GetLatestDataPlaneLogsResponse.SerializeToString,
            ),
            'DownloadApplicationRunLogs': grpc.unary_stream_rpc_method_handler(
                    servicer.DownloadApplicationRunLogs,
                    request_deserializer=application__runs__pb2.DownloadApplicationRunDataPlaneLogsRequest.FromString,
                    response_serializer=google_dot_api_dot_httpbody__pb2.HttpBody.SerializeToString,
            ),
            'GetApplicationRunMetrics': grpc.unary_unary_rpc_method_handler(
                    servicer.GetApplicationRunMetrics,
                    request_deserializer=application__runs__pb2.GetApplicationRunDataPlaneMetricsRequest.FromString,
                    response_serializer=application__runs__pb2.GetApplicationRunDataPlaneMetricsResponse.SerializeToString,
            ),
            'GetSparkExecutorMetrics': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSparkExecutorMetrics,
                    request_deserializer=application__runs__pb2.GetSparkExecutorRunDataPlaneMetricsRequest.FromString,
                    response_serializer=application__runs__pb2.GetSparkExecutorDataPlaneMetricsResponse.SerializeToString,
            ),
            'GetSparkEventLogUrl': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSparkEventLogUrl,
                    request_deserializer=application__runs__pb2.GetSparkEventLogUrlDataPlaneMetricsRequest.FromString,
                    response_serializer=application__runs__pb2.GetSparkEventLogUrlResponse.SerializeToString,
            ),
            'ProcessSparkMetrics': grpc.unary_unary_rpc_method_handler(
                    servicer.ProcessSparkMetrics,
                    request_deserializer=application__runs__pb2.ProcessSparkMetricsRequest.FromString,
                    response_serializer=application__runs__pb2.ProcessSparkMetricsResponse.SerializeToString,
            ),
            'CalculateSparkMetric': grpc.unary_unary_rpc_method_handler(
                    servicer.CalculateSparkMetric,
                    request_deserializer=application__runs__pb2.CalculateSparkMetricDataPlaneRequest.FromString,
                    response_serializer=application__runs__pb2.ProcessSparkMetricsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cloud.datafy.applicationruns.proto.ApplicationRunsDataPlaneService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('cloud.datafy.applicationruns.proto.ApplicationRunsDataPlaneService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ApplicationRunsDataPlaneService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetApplicationRunLogs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.applicationruns.proto.ApplicationRunsDataPlaneService/GetApplicationRunLogs',
            application__runs__pb2.GetApplicationRunDataPlaneLogsRequest.SerializeToString,
            application__runs__pb2.GetApplicationRunDataPlaneLogsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetLatestLogs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.applicationruns.proto.ApplicationRunsDataPlaneService/GetLatestLogs',
            application__runs__pb2.GetLatestDataPlaneLogsRequest.SerializeToString,
            application__runs__pb2.GetLatestDataPlaneLogsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DownloadApplicationRunLogs(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/cloud.datafy.applicationruns.proto.ApplicationRunsDataPlaneService/DownloadApplicationRunLogs',
            application__runs__pb2.DownloadApplicationRunDataPlaneLogsRequest.SerializeToString,
            google_dot_api_dot_httpbody__pb2.HttpBody.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetApplicationRunMetrics(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.applicationruns.proto.ApplicationRunsDataPlaneService/GetApplicationRunMetrics',
            application__runs__pb2.GetApplicationRunDataPlaneMetricsRequest.SerializeToString,
            application__runs__pb2.GetApplicationRunDataPlaneMetricsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetSparkExecutorMetrics(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.applicationruns.proto.ApplicationRunsDataPlaneService/GetSparkExecutorMetrics',
            application__runs__pb2.GetSparkExecutorRunDataPlaneMetricsRequest.SerializeToString,
            application__runs__pb2.GetSparkExecutorDataPlaneMetricsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetSparkEventLogUrl(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.applicationruns.proto.ApplicationRunsDataPlaneService/GetSparkEventLogUrl',
            application__runs__pb2.GetSparkEventLogUrlDataPlaneMetricsRequest.SerializeToString,
            application__runs__pb2.GetSparkEventLogUrlResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ProcessSparkMetrics(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.applicationruns.proto.ApplicationRunsDataPlaneService/ProcessSparkMetrics',
            application__runs__pb2.ProcessSparkMetricsRequest.SerializeToString,
            application__runs__pb2.ProcessSparkMetricsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CalculateSparkMetric(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.applicationruns.proto.ApplicationRunsDataPlaneService/CalculateSparkMetric',
            application__runs__pb2.CalculateSparkMetricDataPlaneRequest.SerializeToString,
            application__runs__pb2.ProcessSparkMetricsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class CostControlServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetCostsForProject = channel.unary_unary(
                '/cloud.datafy.applicationruns.proto.CostControlService/GetCostsForProject',
                request_serializer=application__runs__pb2.GetCostsForProjectRequest.SerializeToString,
                response_deserializer=application__runs__pb2.GetCostsForProjectResponse.FromString,
                _registered_method=True)
        self.GetCostsForEnvironment = channel.unary_unary(
                '/cloud.datafy.applicationruns.proto.CostControlService/GetCostsForEnvironment',
                request_serializer=application__runs__pb2.GetCostsForEnvironmentRequest.SerializeToString,
                response_deserializer=application__runs__pb2.GetCostsForEnvironmentResponse.FromString,
                _registered_method=True)
        self.GetGlobalCostsPerDay = channel.unary_unary(
                '/cloud.datafy.applicationruns.proto.CostControlService/GetGlobalCostsPerDay',
                request_serializer=application__runs__pb2.GetGlobalCostsPerDayRequest.SerializeToString,
                response_deserializer=application__runs__pb2.GetGlobalCostsPerDayResponse.FromString,
                _registered_method=True)
        self.GetTopMostExpensiveProjects = channel.unary_unary(
                '/cloud.datafy.applicationruns.proto.CostControlService/GetTopMostExpensiveProjects',
                request_serializer=application__runs__pb2.GetTopMostExpensiveProjectsRequest.SerializeToString,
                response_deserializer=application__runs__pb2.GetTopMostExpensiveProjectsResponse.FromString,
                _registered_method=True)
        self.GetTopMostExpensiveEnvironments = channel.unary_unary(
                '/cloud.datafy.applicationruns.proto.CostControlService/GetTopMostExpensiveEnvironments',
                request_serializer=application__runs__pb2.GetTopMostExpensiveEnvironmentsRequest.SerializeToString,
                response_deserializer=application__runs__pb2.GetTopMostExpensiveEnvironmentsResponse.FromString,
                _registered_method=True)
        self.GetTopMostChangedProjects = channel.unary_unary(
                '/cloud.datafy.applicationruns.proto.CostControlService/GetTopMostChangedProjects',
                request_serializer=application__runs__pb2.GetTopMostChangedProjectsRequest.SerializeToString,
                response_deserializer=application__runs__pb2.GetTopMostChangedProjectsResponse.FromString,
                _registered_method=True)


class CostControlServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetCostsForProject(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCostsForEnvironment(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetGlobalCostsPerDay(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTopMostExpensiveProjects(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTopMostExpensiveEnvironments(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetTopMostChangedProjects(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_CostControlServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetCostsForProject': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCostsForProject,
                    request_deserializer=application__runs__pb2.GetCostsForProjectRequest.FromString,
                    response_serializer=application__runs__pb2.GetCostsForProjectResponse.SerializeToString,
            ),
            'GetCostsForEnvironment': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCostsForEnvironment,
                    request_deserializer=application__runs__pb2.GetCostsForEnvironmentRequest.FromString,
                    response_serializer=application__runs__pb2.GetCostsForEnvironmentResponse.SerializeToString,
            ),
            'GetGlobalCostsPerDay': grpc.unary_unary_rpc_method_handler(
                    servicer.GetGlobalCostsPerDay,
                    request_deserializer=application__runs__pb2.GetGlobalCostsPerDayRequest.FromString,
                    response_serializer=application__runs__pb2.GetGlobalCostsPerDayResponse.SerializeToString,
            ),
            'GetTopMostExpensiveProjects': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTopMostExpensiveProjects,
                    request_deserializer=application__runs__pb2.GetTopMostExpensiveProjectsRequest.FromString,
                    response_serializer=application__runs__pb2.GetTopMostExpensiveProjectsResponse.SerializeToString,
            ),
            'GetTopMostExpensiveEnvironments': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTopMostExpensiveEnvironments,
                    request_deserializer=application__runs__pb2.GetTopMostExpensiveEnvironmentsRequest.FromString,
                    response_serializer=application__runs__pb2.GetTopMostExpensiveEnvironmentsResponse.SerializeToString,
            ),
            'GetTopMostChangedProjects': grpc.unary_unary_rpc_method_handler(
                    servicer.GetTopMostChangedProjects,
                    request_deserializer=application__runs__pb2.GetTopMostChangedProjectsRequest.FromString,
                    response_serializer=application__runs__pb2.GetTopMostChangedProjectsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'cloud.datafy.applicationruns.proto.CostControlService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('cloud.datafy.applicationruns.proto.CostControlService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class CostControlService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetCostsForProject(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.applicationruns.proto.CostControlService/GetCostsForProject',
            application__runs__pb2.GetCostsForProjectRequest.SerializeToString,
            application__runs__pb2.GetCostsForProjectResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetCostsForEnvironment(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.applicationruns.proto.CostControlService/GetCostsForEnvironment',
            application__runs__pb2.GetCostsForEnvironmentRequest.SerializeToString,
            application__runs__pb2.GetCostsForEnvironmentResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetGlobalCostsPerDay(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.applicationruns.proto.CostControlService/GetGlobalCostsPerDay',
            application__runs__pb2.GetGlobalCostsPerDayRequest.SerializeToString,
            application__runs__pb2.GetGlobalCostsPerDayResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetTopMostExpensiveProjects(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.applicationruns.proto.CostControlService/GetTopMostExpensiveProjects',
            application__runs__pb2.GetTopMostExpensiveProjectsRequest.SerializeToString,
            application__runs__pb2.GetTopMostExpensiveProjectsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetTopMostExpensiveEnvironments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.applicationruns.proto.CostControlService/GetTopMostExpensiveEnvironments',
            application__runs__pb2.GetTopMostExpensiveEnvironmentsRequest.SerializeToString,
            application__runs__pb2.GetTopMostExpensiveEnvironmentsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetTopMostChangedProjects(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/cloud.datafy.applicationruns.proto.CostControlService/GetTopMostChangedProjects',
            application__runs__pb2.GetTopMostChangedProjectsRequest.SerializeToString,
            application__runs__pb2.GetTopMostChangedProjectsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
