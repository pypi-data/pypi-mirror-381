[build-system]
requires = ["setuptools>=45", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "brain_sdk"
version = "0.1.20"
description = "Python SDK for authorized users"
readme = "README.md"
license = {text = "Proprietary"}
authors = [
    {name = "SDK Team"}
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: Other/Proprietary License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
requires-python = ">=3.8"
dependencies = [
    "fastapi",
    "uvicorn",
    "requests>=2.28",
    "pydantic>=2.0",
    "litellm",
    "psutil",
    "PyYAML>=6.0",
    "aiohttp>=3.8",
    "websockets"
]
keywords = ["sdk", "authorized"]

[tool.setuptools.packages.find]
where = ["."]
include = ["brain_sdk*"]
exclude = ["tests*", "examples*"]

[project.optional-dependencies]
dev = [
    "pytest>=7.4,<9",
    "pytest-asyncio>=0.21,<0.24",
    "pytest-cov>=4.1,<5",
    "responses>=0.23,<0.26",
    "respx>=0.20,<0.22",
    "freezegun>=1.2,<2",
    "syrupy>=4,<5",
    "hypothesis>=6.88,<7",
    "pytest-socket>=0.6,<0.8",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "smoke: fast sanity checks",
    "functional: end-to-end behavior within SDK boundaries",
    "contract: API/interface stability tests",
    "unit: isolated unit tests",
    "integration: tests that can touch network/services",
    "mcp: tests that exercise MCP/network interactions"
]
addopts = "-ra -q -m \"not mcp\" --strict-markers --strict-config --cov=brain_sdk.client --cov=brain_sdk.agent_brain --cov=brain_sdk.execution_context --cov=brain_sdk.execution_state --cov=brain_sdk.memory --cov=brain_sdk.rate_limiter --cov=brain_sdk.result_cache --cov-report=term-missing:skip-covered"
asyncio_mode = "auto"

[tool.coverage.run]
source = ["brain_sdk"]
omit = [
    "brain_sdk/agent_mcp.py",
    "brain_sdk/dynamic_skills.py",
    "brain_sdk/mcp_client.py",
    "brain_sdk/mcp_manager.py",
    "brain_sdk/mcp_stdio_bridge.py",
    "brain_sdk/logger.py",
    "brain_sdk/types.py",
]
