[project]
name = "Fringes"
version = "1.2.0"
description = "Phase shifting algorithms for encoding and decoding sinusoidal fringe patterns."
authors = [{name="Christian Kludt"}]
readme = "README.md"
license = "CC-BY-NC-SA-4.0"  # todo: GPL-3.0-only
license-files = ["LICEN[CS]E.*"]
keywords = [
    "phase shifting",
    "phase unwrapping",
    "fringe analysis",
    "fringe projection",
    "deflectometry",
    "computational imaging"
]
classifiers = [
    "Topic :: Scientific/Engineering :: Image Processing",
    "Intended Audience :: Education",
    "Intended Audience :: Science/Research"
]
requires-python = ">=3.10"  # added in python 3.10: Allow writing union types as X | Y
dependencies = [
    "numba>=0.55",  # 0.55 is first version to support python>=3.10
    "numpy>=1.21.2",  # 1.21.2 is first version to support python>=3.10; in 1.21 the Mypy plugin was introduced
    "opencv-contrib-python>=4.5.4.58",  # 4.5.4.58 is first version to support python>=3.10
    "pyyaml>=6.0.2",
    "scikit-image>=0.19",  # 0.19 is first version to support python>=3.10
    "scipy>=1.7",  # 1.7 is first version to support python>=3.10
    "sympy>=1.13.3",
]

[project.optional-dependencies]
#cli = [
#    "rich>=10.12",  # 10.12 if official Py3.10 release
#    "rich-argparse",
#]
#gui = [
#    "asdf>=3",  # requires python>=3.9
#    "pyside6>=6.0.4",  # 6.0.4 is first version to only the Qt 6.0+ frameworksince 6.2 support for: QImage::Format_RGBX16FPx4, QImage::Format_RGBA16FPx4, QImage::Format_RGBX32FPx4, QImage::Format_RGBA32FPx4
#    "pyqtgraph>=0.13",
#    "qdarktheme",
#    "textual>=4",
#]

[dependency-groups]
dev = [
#    "jupyter>=1.1.1",
    "matplotlib>=3.10", # 3.10 is first version to support python>=3.10
    "pyside6>=6.0.4", # 6.0.4 is first version to only the Qt 6.0+ frameworksince 6.2 support for: QImage::Format_RGBX16FPx4, QImage::Format_RGBA16FPx4, QImage::Format_RGBX32FPx4, QImage::Format_RGBA32FPx4
    "pyqtgraph>=0.13",
    {include-group = "docs"},
    {include-group = "lint"},
    {include-group = "test"}
]
docs = [
    "imageio>=2",
    "sphinx>=7.4.7",
    "sphinx-copybutton>=0.5.2",
    "sphinx-design>=0.6.1",
    "sphinx-rtd-theme>=3.0.2",
    "tomli>=1.1.0 ; python_version < '3.11'", # https://pypi.org/project/tomli/
]  # ensure the "docs" group is mentioned in ".readthedocs.yml"
lint = [
    "black>=25",  # 25 is the latest major version
]
test = [
    "coverage>=7.10.6",  # 7 is latest major version
    "pytest>=8", # 8 is the latest major version
    "pytest-cov>=6", # 6 is the latest major version
    "matplotlib>=3.10", # 3.10 is first version to support python>=3.10 (pyplot is required for testing the examples)
]

[project.scripts]  # https://realpython.com/python-pyproject-toml/
fringes = "fringes.__main__:main"

#[project.gui-scripts]
#fgui = "fringes.gui:main"

[tool.black]
line-length = 120

[tool.pytest.ini_options]
pythonpath = "examples"


[tool.uv]
package = true

[project.urls]  # https://docs.pypi.org/project_metadata/
Documentation = "https://fringes.readthedocs.io"
Repository = "https://github.com/comimag/fringes"
#Changelog = "https://github.com/comimag/Fringes/commits/main/"
Donate = "https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=EHBGZ229DKUC4"
# JOSS
# ZENODO
