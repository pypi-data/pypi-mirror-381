[tool.poetry]
name = "validio-sdk"
# This version does not represent the released version or any tag. For each
# release we automatically bump this before building and publishing so this
# should be kept at 0.0.1dev1
version = "7.0.0"
description = "SDK to interact with the Validio platform"
authors = ["Validio <support@validio.io>"]
license = "Apache-2.0"
homepage = "https://validio.io/"
documentation = "https://dev.validio.io/sdk-docs"
packages = [{ include = "validio_sdk" }]
exclude = [
    "./validio_sdk/bin/pull_graphql.py",
    "./schema/**",
    "./plugins/**",
    "./examples/**",
]
readme = "README_PUBLIC.md"

[tool.poetry.dependencies]
python = "^3.10"
camel-converter = "^3.0.0"
platformdirs = "^3.5.0"
gql = { extras = ["all"], version = "^3.5.0" }
rich = "13.9.4"

[tool.poetry.group.dev.dependencies]
licensecheck = "^2025.1.0"
mypy = "^1.2.0"
pytest = "^7.3.1"
pytest-asyncio = "^0.21.0"
ruff = "^0.9.6"
sphinx = "^6.2.1"           # We use <7 because most themes only work with that.
sphinx-rtd-theme = "^1.2.1"
tqdm = "^4.65.0"
types-tqdm = "^4.65.0.1"
python-dotenv = "^1.0.0"
deepdiff = "^6.5.0"
furo = "^2024.8.6"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
example-config = "examples.use_config:run"
pull-graphql = "validio_sdk.bin.pull_graphql:run"
graphql-client = "examples.graphql_client:run"

[tool.ruff]
fix = true

exclude = [
    # Generated code
    "validio_sdk/graphql_client/*",
    # Docs (mostly generated)
    "docs/*",
]

[tool.ruff.lint]
select = [
    "ARG", # flake8-unused-argument
    "C4",  # flake8-comprehension
    "D",   # pydocstyle
    "E",   # pycodestyle error
    "F",   # pyflakes
    "I",   # isort
    "N",   # pep8-naming
    "PIE", # flake8-pie
    "PL",  # pylint
    "PT",  # flake8-pytest-style
    "PTH", # flake8-use-pathlib
    "RET", # flake8-ret
    "RUF", # ruff specific rules
    "SIM", # flake8-simplify
    "UP",  # pyupgrade
    "W",   # pycodestyle warning
]

ignore = [
    "D203",    # `one-blank-line-before-class` Incompatible with D211
    "D212",    # `multi-line-summary-first-line` Incompatible with D213
    "D205",    #  blank line required between summary line and description
    "PLR0913", # Too many arguments to function call (named arguments take care of this)
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = [
    # We don't need docstrings in __init__
    "D104",
]

# Raw error handling for testing purposes
# No need for documentation in binaries, examples or generated code
"*/bin/*.py" = ["D"]
"examples/*.py" = ["D", "E"]
"*/graphql_client/*.py" = ["D"]
"*/tests/*.py" = ["D"]

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.mypy]
ignore_missing_imports = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
exclude = "examples"

[tool.licensecheck]
license = "Apache-2.0"
ignore_packages = [
    # Does not provide any license but uses same as mypy (MIT)
    # https://github.com/python/mypy_extensions/issues/67
    "MYPY-EXTENSIONS"
]
zero = true
