@base <https://mustrd.org/triplestore/> .
@prefix : <https://mustrd.org/triplestore/> .
@prefix dc: <http://purl.org/dc/elements/1.1/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix xml: <http://www.w3.org/XML/1998/namespace> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix foaf: <http://xmlns.com/foaf/spec/> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
# 
# 
# #################################################################
# #
# #    Data properties
# #
# #################################################################
# 
# 
# https://mustrd.org/triplestore/gqeURI
# 
# https://mustrd.org/triplestore/inputGraph
# 
# https://mustrd.org/triplestore/outputGraph
# 
# https://mustrd.org/triplestore/password
# 
# https://mustrd.org/triplestore/repository
# 
# https://mustrd.org/triplestore/url
# 
# https://mustrd.org/triplestore/username
# 
# 
# 
# #################################################################
# #
# #    Classes
# #
# #################################################################
# 
# 
# https://mustrd.org/triplestore/Anzo
# 
# https://mustrd.org/triplestore/ExternalTripleStore
# 
# https://mustrd.org/triplestore/GraphDb
# 
# https://mustrd.org/triplestore/InternalTripleStore
# 
# https://mustrd.org/triplestore/RdfLib
# 
# https://mustrd.org/triplestore/TripleStore
# 
# Generated by the OWL API (version 4.5.26.2023-07-17T20:34:13Z) https://github.com/owlcs/owlapi

<> a owl:Ontology;
  rdfs:label "triple store ontology" .

:gqeURI a owl:DatatypeProperty;
  rdfs:domain :Anzo;
  rdfs:range xsd:string;
  rdfs:label "gqeURI" .

:inputGraph a owl:DatatypeProperty;
  rdfs:domain :TripleStore;
  rdfs:range xsd:string;
  rdfs:label "inputGraph" .

:outputGraph a owl:DatatypeProperty;
  rdfs:domain :TripleStore;
  rdfs:range xsd:string;
  rdfs:comment """Uri of the graph where to insert/delete the triples

In some triple stores there is a default insert graph like in graphDB: 
In graphDB the default insert graph is called: <http://www.openrdf.org/schema/sesame#nil>
or
<http://rdf4j.org/schema/rdf4j#nil>

Other triple stores do not define default insert graph like anzograph.
For those triple stores, this property must be mandatory""";
  rdfs:label "outputGraph" .

:password a owl:DatatypeProperty;
  rdfs:domain :ExternalTripleStore;
  rdfs:range xsd:string;
  rdfs:label "password" .

:repository a owl:DatatypeProperty;
  rdfs:domain :GraphDb;
  rdfs:range xsd:string;
  rdfs:label "repository" .

:url a owl:DatatypeProperty;
  rdfs:domain :ExternalTripleStore;
  rdfs:range xsd:string;
  rdfs:comment "triple store URL";
  rdfs:label "url" .

:username a owl:DatatypeProperty;
  rdfs:domain :ExternalTripleStore;
  rdfs:range xsd:string;
  rdfs:label "username" .

:Anzo a owl:Class;
  rdfs:subClassOf :ExternalTripleStore;
  rdfs:comment """TODO: model this:

definition of RDF dataset:

default graph=
RDF merge of default-graph-uri if exists
else RDF merge of FROM if exists
else all graphs in anzo graph (if you query a graphmart, default-graph-uri will be automatically set to the layers of the graphmart), if you are not sysadmin and you do not define the default graph, then the query will fail since you don't have permissions on all graphs
if default-graph-uri is defined then FROM clauses are ignored

default named graph = 
RDF merge of named-graph-uri if exists
else RDF merge of FROM NAMED if exists
else default graph if exists
all graphs in anzo graph (if you query a graphmart, default-graph-uri will be automatically set to the layers of the graphmart), if you are not sysadmin and you do not define the default graph, then the query will fail since you don't have permissions on all graphs
if named-graph-uri is defined then FROM NAMED clauses are ignored

There is no default insert graph. If you try to insert/delete without graph clause, your query will fail.""";
  rdfs:label "Anzo" .

:ExternalTripleStore a owl:Class;
  rdfs:subClassOf :TripleStore .

:GraphDb a owl:Class;
  rdfs:subClassOf :ExternalTripleStore;
  rdfs:comment """TODO: model this:

Definition of RDF dataset in graphDB:

default graph (in the sense of W3C, called default dataset in graphDB) = 
Virtual graph that exist only for a query and represent all triples accessible outside of a graph clause in a sparql query =
RDF merge of default-graph-uri if exists
else RDF merge of FROM if exists
else all graphs in the repository, including default insert graph
you can query default insert graph by including it (<http://www.openrdf.org/schema/sesame#nil> or <http://rdf4j.org/schema/rdf4j#nil>) in a default-graph-uri parameter or a FROM clause
If default-graph-uri is defined, then FROM clause is ignored

default named graph = 
All triples accessible inside a graph clause:
RDF merge of named-graph-uri if exists
else RDF merge of FROM NAMED if exist
else all graphs in the repository, EXCLUDING default insert graph
(To be exact you can query the default insert graph only if you name it GRAPH <http://www.openrdf.org/schema/sesame#nil> or GRAPH <http://rdf4j.org/schema/rdf4j#nil>, but you won't query it with GRAPH ?graph)
default insert graph can be added to named-graph-uri or FROM NAMED
If a default-graph-uri is defined but no named-graph-uri, then default named graph = void

default insert graph (called \"The default graph\" in graphDB) =
Graph where triples are inserted / deleted when no graph clause is given in an INSERT or DELETE clause""";
  rdfs:label "GraphDb" .

:InternalTripleStore a owl:Class;
  rdfs:subClassOf :TripleStore .

:RdfLib a owl:Class;
  rdfs:subClassOf :InternalTripleStore;
  rdfs:label "RdfLib" .

:TripleStore a owl:Class;
  rdfs:label "TripleStore" .
