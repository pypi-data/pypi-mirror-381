# This file was auto-generated by Fern from our API Definition.

# isort: skip_file

import typing
from importlib import import_module

if typing.TYPE_CHECKING:
    from .analysis_score import AnalysisScore
    from .clarity_category import ClarityCategory
    from .clarity_score import ClarityScore
    from .config_options import ConfigOptions
    from .consistency_category import ConsistencyCategory
    from .consistency_score import ConsistencyScore
    from .dialects import Dialects
    from .error_response import ErrorResponse
    from .grammar_category import GrammarCategory
    from .grammar_score import GrammarScore
    from .issue import Issue
    from .issue_category import IssueCategory
    from .original_content import OriginalContent
    from .position import Position
    from .quality_score import QualityScore
    from .rewrite_content import RewriteContent
    from .rewrite_response import RewriteResponse
    from .score_output import ScoreOutput
    from .style_check_response import StyleCheckResponse
    from .style_guide import StyleGuide
    from .style_guide_response import StyleGuideResponse
    from .style_guide_status import StyleGuideStatus
    from .style_guides import StyleGuides
    from .subcategory import Subcategory
    from .suggestion import Suggestion
    from .suggestion_original_content import SuggestionOriginalContent
    from .suggestion_response import SuggestionResponse
    from .term_replace_category import TermReplaceCategory
    from .terminology_score import TerminologyScore
    from .tone_category import ToneCategory
    from .tone_score import ToneScore
    from .tones import Tones
    from .webhook_response import WebhookResponse
    from .workflow_info import WorkflowInfo
    from .workflow_response import WorkflowResponse
    from .workflow_status import WorkflowStatus
_dynamic_imports: typing.Dict[str, str] = {
    "AnalysisScore": ".analysis_score",
    "ClarityCategory": ".clarity_category",
    "ClarityScore": ".clarity_score",
    "ConfigOptions": ".config_options",
    "ConsistencyCategory": ".consistency_category",
    "ConsistencyScore": ".consistency_score",
    "Dialects": ".dialects",
    "ErrorResponse": ".error_response",
    "GrammarCategory": ".grammar_category",
    "GrammarScore": ".grammar_score",
    "Issue": ".issue",
    "IssueCategory": ".issue_category",
    "OriginalContent": ".original_content",
    "Position": ".position",
    "QualityScore": ".quality_score",
    "RewriteContent": ".rewrite_content",
    "RewriteResponse": ".rewrite_response",
    "ScoreOutput": ".score_output",
    "StyleCheckResponse": ".style_check_response",
    "StyleGuide": ".style_guide",
    "StyleGuideResponse": ".style_guide_response",
    "StyleGuideStatus": ".style_guide_status",
    "StyleGuides": ".style_guides",
    "Subcategory": ".subcategory",
    "Suggestion": ".suggestion",
    "SuggestionOriginalContent": ".suggestion_original_content",
    "SuggestionResponse": ".suggestion_response",
    "TermReplaceCategory": ".term_replace_category",
    "TerminologyScore": ".terminology_score",
    "ToneCategory": ".tone_category",
    "ToneScore": ".tone_score",
    "Tones": ".tones",
    "WebhookResponse": ".webhook_response",
    "WorkflowInfo": ".workflow_info",
    "WorkflowResponse": ".workflow_response",
    "WorkflowStatus": ".workflow_status",
}


def __getattr__(attr_name: str) -> typing.Any:
    module_name = _dynamic_imports.get(attr_name)
    if module_name is None:
        raise AttributeError(f"No {attr_name} found in _dynamic_imports for module name -> {__name__}")
    try:
        module = import_module(module_name, __package__)
        result = getattr(module, attr_name)
        return result
    except ImportError as e:
        raise ImportError(f"Failed to import {attr_name} from {module_name}: {e}") from e
    except AttributeError as e:
        raise AttributeError(f"Failed to get {attr_name} from {module_name}: {e}") from e


def __dir__():
    lazy_attrs = list(_dynamic_imports.keys())
    return sorted(lazy_attrs)


__all__ = [
    "AnalysisScore",
    "ClarityCategory",
    "ClarityScore",
    "ConfigOptions",
    "ConsistencyCategory",
    "ConsistencyScore",
    "Dialects",
    "ErrorResponse",
    "GrammarCategory",
    "GrammarScore",
    "Issue",
    "IssueCategory",
    "OriginalContent",
    "Position",
    "QualityScore",
    "RewriteContent",
    "RewriteResponse",
    "ScoreOutput",
    "StyleCheckResponse",
    "StyleGuide",
    "StyleGuideResponse",
    "StyleGuideStatus",
    "StyleGuides",
    "Subcategory",
    "Suggestion",
    "SuggestionOriginalContent",
    "SuggestionResponse",
    "TermReplaceCategory",
    "TerminologyScore",
    "ToneCategory",
    "ToneScore",
    "Tones",
    "WebhookResponse",
    "WorkflowInfo",
    "WorkflowResponse",
    "WorkflowStatus",
]
