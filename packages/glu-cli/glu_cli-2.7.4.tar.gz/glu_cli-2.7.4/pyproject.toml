[project]
name = "glu-cli"
version = "2.7.4"
description = "A CLI tool to facilitate the developer workflow"
readme = "README.md"
requires-python = ">=3.10"
dependencies = [
    "gitpython>=3.1.44",
    "glean-api-client>=0.5.1",
    "httpx>=0.28.1",
    "inquirerpy>=0.3.4",
    "jira>=3.10.5",
    "langchain-anthropic>=0.3.14",
    "langchain-glean>=0.3.1",
    "langchain-google-genai>=2.1.5",
    "langchain-ollama>=0.3.3",
    "langchain-openai>=0.3.18",
    "langchain-xai>=0.2.4",
    "pydantic>=2.11.5",
    "pygithub>=2.6.1",
    "python-dotenv>=1.1.0",
    "thefuzz>=0.22.1",
    "tiktoken>=0.9.0",
    "toml>=0.10.2",
    "typer>=0.15.4",
]

[dependency-groups]
dev = [
    "build>=1.2.2.post1",
    "mypy>=1.15.0",
    "pexpect>=4.9.0",
    "pytest>=8.4.0",
    "python-semantic-release>=10.0.2",
    "ruff>=0.11.11",
    "types-toml>=0.10.8.20240310",
]

[project.scripts]
glu = "glu.cli.main:app"

[build-system]
requires = ["hatchling>=1.0"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["glu"]

[tool.semantic_release]
version_toml = ["pyproject.toml:project.version"]
version_variables = ["glu/__init__.py:__version__"]
commit_message = "chore(release): v{version} [skip ci]"

[tool.ruff]
line-length = 100  # due to comments, this may be longer
lint.select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "C",  # flake8-comprehensions
    "B",  # flake8-bugbear
    "ARG001",  # unused-function-argument
    "ARG002",  # unused-method-argument
    "F841",    # unused-variable (catches args too)
    "T201",    # flake8-print
]
target-version = "py310"
