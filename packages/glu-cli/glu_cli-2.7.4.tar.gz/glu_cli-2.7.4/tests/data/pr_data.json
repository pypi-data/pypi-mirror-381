{
  "body": "### Description\n\n- **Jira Ticket**: [TEST-20]  \n- **Summary**:  \n  This PR adds support for detecting Jira ticket placeholders in PR templates and ensures the AI\u2010generated description includes the placeholder. It refactors the description generation logic to post\u2010process and replace any placeholder markers, simplifies CLI options by dropping the `jira_project` argument, and updates the Jira\u2010key injection helper to use a single placeholder constant.  \n- **Implementation details**:  \n  - Introduce a `TICKET_PLACEHOLDER` constant in `glu/models.py`.  \n  - In `generate_description` (glu/ai.py):  \n    \u2022 Import `re` and detect a Jira\u2010style placeholder (`[TEST-20]`) in the PR template.  \n    \u2022 After obtaining the AI response, replace any matched pattern with `TICKET_PLACEHOLDER`.  \n    \u2022 Remove the now\u2010unused `jira_project` parameter.  \n    \u2022 Update the prompt instructions to skip describing testing changes unless they are the main purpose.  \n  - In the CLI (`glu/cli/pr.py`):  \n    \u2022 Drop the `jira_project` argument from `generate_description` calls.  \n    \u2022 Immediately print out the generated description.  \n    \u2022 Refactor `_add_jira_key_to_description` to replace `TICKET_PLACEHOLDER` with the real Jira key instead of running a regex on arbitrary patterns.\n\n### Changes\n\n- glu/models.py  \n  \u2022 Add `TICKET_PLACEHOLDER = \"[TEST-20]\"`.  \n- glu/ai.py  \n  \u2022 Import `re` and `TICKET_PLACEHOLDER`.  \n  \u2022 Detect placeholder usage in the template via regex.  \n  \u2022 Post\u2010process the AI response to inject the placeholder.  \n  \u2022 Remove `jira_project` substitution logic.  \n- glu/cli/pr.py  \n  \u2022 Remove `jira_project` from the PR creation flow.  \n  \u2022 Print the AI\u2010generated PR description to STDOUT.  \n  \u2022 Simplify `_add_jira_key_to_description` to swap out `TICKET_PLACEHOLDER`.  \n\n### Test Plan\n\n1. Create a PR template containing a Jira spot like `[TEST-20]` and run `glu pr create`.  \n   - Verify the AI prompt includes the template.  \n   - Ensure the generated description retains the placeholder.  \n2. After assigning or generating a Jira key, confirm `_add_jira_key_to_description` replaces the placeholder correctly.  \n3. Run existing unit tests to catch regressions in description and ticket\u2010generation flows.\n\n### Dependencies\n\n- No new external dependencies introduced.  \n- `re` is part of Python\u2019s standard library.\n\n### Future Enhancements / Open questions / Risks / Technical Debt\n\n- The retry logic for regenerating descriptions when the placeholder is missing is noted in commit messaging but not yet implemented\u2014implementing exponential backoff or looped retries may be beneficial.  \n- Consider parameterizing the retry count and backoff strategy in `generate_description`.  \n\n### Checklist\n\n- [ ] Code has been linted and adheres to the project's coding style guidelines.  \n- [ ] Tests have been added or modified for all new features and bug fixes.  \n- [ ] All FIXMEs have been addressed.  \n- [ ] Code changes or additions do not introduce significant performance issues.  \n- [ ] If necessary, documentation has been updated.  \n- [ ] I have sufficiently commented my code, either within this PR or the code itself.  \n- [ ] I have selected reviewers who are knowledgeable about the code changes and the associated domain.  \n- [ ] Breaking changes: if checked, code is backward compatible or sufficient steps have been taken to not necessitate backward compatibility.\n\n[TEST-20]: https://brightnight.atlassian.net/browse/TEST-20?atlOrigin=eyJpIjoiNWRkNTljNzYxNjVmNDY3MDlhMDU5Y2ZhYzA5YTRkZjUiLCJwIjoiZ2l0aHViLWNvbS1KU1cifQ",
  "changed_files": 6,
  "created_at": "2025-06-14T13:44:20+00:00",
  "id": 2592588844,
  "mergeable": true,
  "merged": false,
  "number": 34,
  "mergeable_state": "clean",
  "updated_at": "2025-06-14T17:33:41+00:00",
  "title": "fix: fix ticket not being properly added to pr descriptions",
  "state": "open",
  "draft": false
}