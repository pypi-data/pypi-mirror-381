[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "datax-py"
version = "1.0.0"
description = "Advanced Data Analytics Package with cleaning, statistics, and visualization"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Amirbek Azimov", email = "amirbekazimov7@gmail.com"}
]
maintainers = [
    {name = "Amirbek Azimov", email = "amirbekazimov7@gmail.com"}
]
keywords = ["data", "analytics", "cleaning", "statistics", "visualization", "cli", "machine learning"]
classifiers = [
    "Development Status :: 5 - Production/Stable",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Information Analysis",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Scientific/Engineering :: Visualization",
]
requires-python = ">=3.8"
dependencies = [
    "pandas>=1.3.0",
    "numpy>=1.21.0",
    "matplotlib>=3.5.0",
    "seaborn>=0.11.0",
    "scipy>=1.7.0",
    "scikit-learn>=1.0.0",
    "plotly>=5.0.0",
    "openpyxl>=3.0.0",
    "pyarrow>=5.0.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0.0",
    "pytest-cov>=2.12.0",
    "pytest-mock>=3.6.0",
    "black>=21.0.0",
    "flake8>=3.9.0",
    "mypy>=0.910",
    "isort>=5.9.0",
    "pre-commit>=2.15.0",
]
docs = [
    "sphinx>=4.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "myst-parser>=0.15.0",
    "sphinx-autodoc-typehints>=1.12.0",
]
jupyter = [
    "jupyter>=1.0.0",
    "ipywidgets>=7.6.0",
    "notebook>=6.4.0",
]
all = [
    "datax[dev,docs,jupyter]"
]

[project.urls]
Homepage = "https://github.com/amirbekazimov/datax-py"
Documentation = "https://datax-py.readthedocs.io"
Repository = "https://github.com/amirbekazimov/datax-py.git"
"Bug Tracker" = "https://github.com/amirbekazimov/datax-py/issues"
"Source Code" = "https://github.com/amirbekazimov/datax-py"
"Download" = "https://github.com/amirbekazimov/datax-py/archive/v1.0.0.tar.gz"

[project.scripts]
datax = "datax.cli:main"

[project.gui-scripts]
datax-gui = "datax.gui:main"

[tool.setuptools]
packages = ["datax"]
include-package-data = true

[tool.setuptools.package-data]
datax = ["*.txt", "*.md", "*.yml", "*.yaml", "*.json"]

[tool.setuptools.package-dir]
"" = "."

# Black configuration
[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311', 'py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["datax"]
known_third_party = ["pandas", "numpy", "matplotlib", "seaborn", "scipy", "sklearn", "plotly"]

# MyPy configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "matplotlib.*",
    "seaborn.*",
    "plotly.*",
    "sklearn.*",
]
ignore_missing_imports = true

# Pytest configuration
[tool.pytest.ini_options]
minversion = "6.0"
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=datax",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=70",
]
testpaths = ["tests"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]

# Coverage configuration
[tool.coverage.run]
source = ["datax"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
    "setup.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# Flake8 configuration
[tool.flake8]
max-line-length = 88
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".venv",
    ".eggs",
    "*.egg",
]

# Sphinx configuration
[tool.sphinx]
source_dir = "docs"
build_dir = "docs/_build"
