# coding: utf-8

"""
    wst-api

    Api which exposes data about the current status of the Westerschelde tunnel

    The version of the OpenAPI document: 0.0.1
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from wst_api_client.models.inline_object1_nl import InlineObject1Nl

class TestInlineObject1Nl(unittest.TestCase):
    """InlineObject1Nl unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> InlineObject1Nl:
        """Test InlineObject1Nl
            include_optional is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `InlineObject1Nl`
        """
        model = InlineObject1Nl()
        if include_optional:
            return InlineObject1Nl(
                widget = wst_api_client.models.inline_object_1_nl_widget.inline_object_1_nl_widget(
                    current_traffic_information = '', 
                    more_information = '', ),
                incidents = wst_api_client.models.inline_object_1_nl_incidents.inline_object_1_nl_incidents(
                    expected_duration = '', 
                    extra_travel_time = wst_api_client.models.inline_object_1_nl_incidents_extra_travel_time.inline_object_1_nl_incidents_extra_travel_time(
                        prefix = '', 
                        north = '', 
                        south = '', ), 
                    no_incidents = wst_api_client.models.inline_object_1_nl_incidents_no_incidents.inline_object_1_nl_incidents_no_incidents(
                        heading = '', 
                        heading_mobile = '', 
                        cta_planned_maintenance = '', ), ),
                road = wst_api_client.models.inline_object_1_nl_road.inline_object_1_nl_road(
                    westerscheldetunnel_to_toll_square = '', 
                    westerscheldetunnel_east = '', 
                    axelsche_gat_to_westerscheldetunnel = '', 
                    sluiskiltunnel_north = '', 
                    toll_square_to_westerscheldetunnel = '', 
                    westerscheldetunnel_west = '', 
                    westerscheldetunnel_to_axelsche_gat = '', 
                    sluiskiltunnel_south = '', ),
                status = wst_api_client.models.inline_object_1_nl_status.inline_object_1_nl_status(
                    state = wst_api_client.models.inline_object_1_nl_status_state.inline_object_1_nl_status_state(
                        closed = '', 
                        detour = '', 
                        single_lane = '', 
                        two_way_traffic = '', 
                        speed_limit_30 = '', 
                        speed_limit_50 = '', 
                        speed_limit_70 = '', 
                        speed_limit_80 = '', 
                        slippery_road_surface = '', 
                        fog_likely = '', 
                        snow_or_ice = '', 
                        traffic_queues = '', 
                        maximum_width = '', 
                        maximum_width_200 = '', 
                        maximum_width_300 = '', 
                        metering_light = '', 
                        roadworks = '', 
                        other = '', ), ),
                direction = wst_api_client.models.inline_object_1_nl_direction.inline_object_1_nl_direction(
                    north = '', 
                    south = '', 
                    prefix = '', 
                    both_directions = '', ),
                alternative = wst_api_client.models.inline_object_1_nl_alternative.inline_object_1_nl_alternative(
                    u21a = '', 
                    u21b = '', 
                    u07a = '', 
                    u07b = '', 
                    u07_u64 = '', 
                    u10s = '', 
                    u64a = '', 
                    u64b = '', 
                    u09a = '', 
                    u09b = '', 
                    u08a = '', 
                    u08b = '', 
                    u08_u65 = '', 
                    u10n = '', 
                    u65a = '', 
                    u65b = '', 
                    from = wst_api_client.models.inline_object_1_nl_alternative_from.inline_object_1_nl_alternative_from(
                        u21a = '', 
                        u21b = '', 
                        u07a = '', 
                        u07b = '', 
                        u07_u64 = '', 
                        u10s = '', 
                        u64a = '', 
                        u64b = '', 
                        u09a = '', 
                        u09b = '', 
                        u08a = '', 
                        u08b = '', 
                        u08_u65 = '', 
                        u10n = '', 
                        u65a = '', 
                        u65b = '', ), 
                    to = wst_api_client.models.inline_object_1_nl_alternative_from.inline_object_1_nl_alternative_from(
                        u21a = '', 
                        u21b = '', 
                        u07a = '', 
                        u07b = '', 
                        u07_u64 = '', 
                        u10s = '', 
                        u64a = '', 
                        u64b = '', 
                        u09a = '', 
                        u09b = '', 
                        u08a = '', 
                        u08b = '', 
                        u08_u65 = '', 
                        u10n = '', 
                        u65a = '', 
                        u65b = '', ), ),
                subscription_group = wst_api_client.models.inline_object_1_nl_subscription_group.inline_object_1_nl_subscription_group(
                    wst_north_short = '', 
                    wst_north_long = '', 
                    wst_south_short = '', 
                    wst_south_long = '', 
                    wst_twitter = '', 
                    skt_twitter = '', ),
                channel = wst_api_client.models.inline_object_1_nl_channel.inline_object_1_nl_channel(
                    twitter = '', 
                    sms = '', 
                    email = '', ),
                extra_travel_time = wst_api_client.models.inline_object_1_nl_extra_travel_time.inline_object_1_nl_extra_travel_time(
                    no_delay = '', 
                    a_few_minutes = '', 
                    up_to_30_minutes = '', 
                    more_than_30_minutes = '', )
            )
        else:
            return InlineObject1Nl(
        )
        """

    def testInlineObject1Nl(self):
        """Test InlineObject1Nl"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
