Metadata-Version: 2.4
Name: dio-bank-app
Version: 3.0.0
Summary: Aplicativo banc√°rio em Python (CLI), evoluindo desde v1 at√© v3 (POO), com m√∫ltiplos usu√°rios, contas e persist√™ncia em JSON.
Author: Padula, Diego A.
License: MIT
Project-URL: Homepage, https://github.com/paduladiego/DIO_bank_app
Project-URL: Source, https://github.com/paduladiego/DIO_bank_app/issues
Keywords: bank,cli,dio,educational,finances,Suzano
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3.12
Classifier: License :: OSI Approved :: MIT License
Classifier: Environment :: Console
Classifier: Intended Audience :: Education
Classifier: Topic :: Office/Business :: Financial
Requires-Python: >=3.10
Description-Content-Type: text/markdown

# Sistema Banc√°rio em Python Desafio DIO

<details>
  <summary><b>Bank Application v1</b></summary>

# Bank Application v1

Este projeto √© uma aplica√ß√£o banc√°ria simples desenvolvida em **Python**, com foco em opera√ß√µes b√°sicas para um √∫nico usu√°rio.  
A vers√£o 1 implementa as seguintes funcionalidades:

---

## Funcionalidades

### Dep√≥sito
- Permite ao usu√°rio realizar dep√≥sitos de valores positivos, que s√£o registrados no extrato.

### Saque
- O usu√°rio pode realizar at√© **3 saques di√°rios**, com limite m√°ximo de **R$ 500,00** por saque.  
- Caso o limite di√°rio seja excedido, √© oferecida a op√ß√£o de saque adicional com uma taxa extra de **R$ 0,50**.  
- Saques s√≥ s√£o permitidos se houver saldo suficiente e o valor for positivo.

### Extrato
- Exibe todas as movimenta√ß√µes (dep√≥sitos e saques) realizadas, mostrando o saldo atual.  
- Se n√£o houver movimenta√ß√µes, informa ao usu√°rio.

---

## Regras de Neg√≥cio
- Apenas valores **positivos** e com at√© **duas casas decimais** s√£o aceitos para dep√≥sito e saque.  
- O sistema trabalha com apenas **um usu√°rio**, sem necessidade de ag√™ncia ou n√∫mero de conta.  
- Todas as opera√ß√µes s√£o registradas em **mem√≥ria** (n√£o h√° persist√™ncia em banco de dados).

---

## Estrutura do C√≥digo
- Utiliza o m√≥dulo **decimal** para garantir precis√£o nos valores monet√°rios.  
- Fun√ß√µes separadas para cada opera√ß√£o: **dep√≥sito, saque, extrato e valida√ß√£o de valores**.  
- Interface simples via terminal, com **menu interativo**.

---

## Testes
- Testes automatizados com **pytest** garantem o funcionamento correto das opera√ß√µes de dep√≥sito e saque, incluindo casos de erro e valida√ß√£o de regras.  

---

**Bank Application v1** √© uma base s√≥lida para evoluir o sistema, permitindo futuras melhorias como m√∫ltiplos usu√°rios, persist√™ncia de dados e interface gr√°fica.

</details>

<details>
  <summary><b>Bank Application v2</b></summary>

# Bank Application v2

Esta vers√£o aprimora a aplica√ß√£o banc√°ria simples desenvolvida em **Python**, trazendo novas regras, persist√™ncia de dados e corre√ß√µes importantes em rela√ß√£o √† **v1**.  
Agora o sistema mant√©m o hist√≥rico mesmo ap√≥s reiniciar, calcula dinamicamente os limites de opera√ß√µes e garante estabilidade em todas as fun√ß√µes.

---

## Novidades da v2

- Implementado c√°lculo din√¢mico de opera√ß√µes di√°rias com `operacoes_diarias_totais()` que considera `transacao_plus`.
- Persist√™ncia em **JSON** (`state.json`) para salvar e carregar saldo, extrato e contadores de forma confi√°vel.
- Corre√ß√£o cr√≠tica no carregamento do `extrato`: sempre inicializado como **lista mut√°vel**, evitando erros em `.append()`.
- Fun√ß√£o `carregar_dados_de_entrada()` agora atualiza diretamente as vari√°veis globais (`saldo`, `extrato`, `numero_operacoes`, etc.).
- Incremento de `numero_operacoes` revisado em `depositar`, `sacar` e `exibir_extrato`.
- Registro adicional no extrato para opera√ß√µes especiais:
  - `Transa√ß√£o Plus` (expans√£o do limite de opera√ß√µes por R$ 0,50).
  - `Saque Plus` (saque al√©m do limite di√°rio de 3 opera√ß√µes, tamb√©m com taxa de R$ 0,50).
  - `Exibir Extrato` (consulta registrada no hist√≥rico).
- Padroniza√ß√£o de fun√ß√µes (`limpar_tela`, `formatar_brl`, `checar_valor`) e nomes de vari√°veis (`valor_sacar_plus`, `valor_transacao_plus`).

---

## Funcionalidades

### Dep√≥sito
- Permite ao usu√°rio realizar dep√≥sitos de valores positivos, registrados no extrato e salvos em JSON.
- Valida entradas com at√© duas casas decimais.

### Saque
- O usu√°rio pode realizar at√© **3 saques di√°rios**, com limite m√°ximo de **R$ 500,00** por saque.
- Se o limite de saques for atingido, √© oferecido o `Saque Plus` com taxa de **R$ 0,50**.
- Caso o valor seja maior que o saldo, o saque √© recusado.

### Transa√ß√µes di√°rias
- O sistema limita a **10 opera√ß√µes di√°rias**, mas o usu√°rio pode comprar uma `Transa√ß√£o Plus` por **R$ 0,50**, aumentando esse limite.
- As opera√ß√µes v√°lidas que contam para o limite incluem dep√≥sito, saque e consulta ao extrato.

### Extrato
- Exibe todas as movimenta√ß√µes registradas (`Dep√≥sito`, `Saque`, `Saque Plus`, `Transa√ß√£o Plus`, `Exibir Extrato`).
- Informa o saldo atual, n√∫mero de opera√ß√µes realizadas e n√∫mero de saques feitos.
- Se n√£o houver movimenta√ß√µes, informa ao usu√°rio.

---

## Regras de Neg√≥cio
- Apenas valores **positivos** e com at√© duas casas decimais s√£o aceitos para dep√≥sito e saque.
- O sistema funciona para **um √∫nico usu√°rio** (n√£o h√° m√∫ltiplas contas).
- Todas as opera√ß√µes s√£o registradas em **JSON** para garantir hist√≥rico ap√≥s rein√≠cio.
- Consultar o extrato tamb√©m conta como uma opera√ß√£o di√°ria.

---

## Estrutura do C√≥digo
- Uso de `Decimal` para precis√£o monet√°ria.
- Fun√ß√µes principais:
  - `depositar(valor)`
  - `sacar(valor)`
  - `exibir_extrato()`
  - `registrar_opera√ß√µes(opcao)`
  - `transacao_alem_limite_diario()`
  - `sacar_alem_limite_diario(valor)`
- Fun√ß√µes auxiliares:
  - `carregar_dados_de_entrada()` (atualiza globais)
  - `armazenar_dados_de_saida()`
  - `limpar_tela()`
  - `formatar_brl(valor)`
  - `tem_duas_casas(valor)`
  - `checar_valor(mensagem)`
- Menu interativo via terminal.

---

**Bank Application v2** traz robustez, persist√™ncia e flexibilidade ao sistema, preparando o terreno para futuras melhorias como suporte a m√∫ltiplos usu√°rios e banco de dados.

</details>

<details>
  <summary><b>Bank Application v2.2</b></summary>

# Bank Application v2_2

Vers√£o mais completa at√© agora: **suporte a m√∫ltiplos usu√°rios, m√∫ltiplas contas por CPF, transa√ß√µes isoladas por conta e rollback seguro em JSON**.  

## üöÄ Novidades do v2_2

- **Multiusu√°rio e m√∫ltiplas contas**:  
  - Usu√°rios armazenados em `contas_bancarias.json`.  
  - Cada CPF pode ter v√°rias contas, com ag√™ncia fixa `"0001"`.  
- **Persist√™ncia por conta**:  
  - Transa√ß√µes registradas em `transacoes_bancarias.json`, usando chave `cpf-agencia-conta`.  
  - Cada conta mant√©m saldo, extrato e contadores independentes.  
- **Rollback seguro**:  
  - Antes de salvar, gera backup `.bkp`.  
  - Se falhar, restaura o arquivo anterior automaticamente.  
- **Fluxo de acesso revisado**:  
  - `acessar_conta`: exige CPF v√°lido, lista contas e valida ag√™ncia/n¬∫ de conta.  
  - `listar_contas`: mostra todas as contas atreladas a um CPF.  
  - `criar_conta`: adiciona nova conta sequencialmente ao CPF.  
- **Valida√ß√£o robusta de CPF**:  
  - `checar_limpar_cpf`: remove caracteres inv√°lidos, exige 11 d√≠gitos, for√ßa loop de entrada at√© acerto.  
- **Corre√ß√µes**:  
  - `carregar_dados_bancarios`: loop de contas movido para dentro do loop de usu√°rios.  
  - `menu_conta`: corrigida chamada de `resetar_contadores_diarios` (sem par√¢metros inv√°lidos).  
- **UX improvements**:  
  - Mensagens padronizadas de sucesso/erro.  
  - CPF formatado (`xxx.xxx.xxx-xx`) ao exibir dados.  
  - Extrato mais claro com timestamps.  

### ‚öôÔ∏è Funcionalidades
- **Dep√≥sito / Saque** (inclui `Saque Plus`).  
- **Exibir extrato** (view-only).  
- **Imprimir extrato** (consome opera√ß√£o e registra no hist√≥rico).  
- **Transa√ß√£o Plus** (expans√£o do limite di√°rio de opera√ß√µes).  
- **Listagem de contas** por CPF.  
- **Cria√ß√£o de contas e usu√°rios** com persist√™ncia imediata.  

### üìÇ Estrutura de arquivos
- `bank_app_v2_2.py` ‚Üí c√≥digo principal.  
- `contas_bancarias.json` ‚Üí usu√°rios e contas.  
- `transacoes_bancarias.json` ‚Üí dados de transa√ß√µes por conta.  
- `.bkp` ‚Üí arquivos de rollback em caso de erro de grava√ß√£o.  

### ‚ñ∂Ô∏è Execu√ß√£o
```bash
python bank_app_v2_2.py
```
## Menu inicial:
```csharp
[ac] Acessar conta
[lc] Listar contas
[nc] Nova conta
[nu] Novo usu√°rio
[q]  Sair
```
Bank Application v2_2 representa um sistema banc√°rio funcional, com m√∫ltiplos usu√°rios e contas, persist√™ncia em JSON robusta e valida√ß√µes de entrada confi√°veis.
</details>


<details>
  <summary><b>Bank Application v3_0</b></summary>

# Bank Application v3_0

A vers√£o 3 marca a migra√ß√£o completa do sistema para um **modelo orientado a objetos (POO)**, trazendo maior organiza√ß√£o, reuso e manuten√ß√£o do c√≥digo.  
Todas as funcionalidades do **v2_2** foram preservadas e aprimoradas dentro de classes e m√©todos.

---

## üöÄ Novidades da v3_0

- **Arquitetura orientada a objetos**:
  - `ConfigBanco`: centraliza constantes, limites, valores de taxas e arquivos JSON.
  - `Transacao` (abstrata) e subclasses (`Deposito`, `Saque`, `SaquePlus`, `TransacaoPlus`) encapsulam regras de cada opera√ß√£o.
  - `Conta`: representa uma conta banc√°ria, com m√©todos para saldo, transa√ß√µes, extrato e persist√™ncia em JSON (com rollback seguro).
  - `Usuario`: armazena dados pessoais e lista de contas associadas.
  - `DadosBanco`: gerencia m√∫ltiplos usu√°rios, cadastro de contas e acesso √†s informa√ß√µes.

- **Persist√™ncia organizada**:
  - Arquivo `contas_bancarias.json` ‚Üí usu√°rios e suas contas.
  - Arquivo `transacoes_bancarias.json` ‚Üí hist√≥rico detalhado de cada conta (`cpf-agencia-conta`).
  - Rotinas autom√°ticas de **backup `.bkp`** e recupera√ß√£o em caso de falha.

- **Melhorias no fluxo de opera√ß√µes**:
  - Reset autom√°tico de contadores di√°rios ao virar o dia.
  - Extrato em formato tabular com colunas alinhadas.
  - `imprimir_extrato` consome opera√ß√£o e gera registro no hist√≥rico.
  - Controle claro de **limites de opera√ß√µes e saques**, com op√ß√£o de ativar `Plus`.

- **Valida√ß√£o aprimorada**:
  - `ValidadorValor`: garante que todo valor seja `Decimal`, positivo e com at√© duas casas decimais.
  - `checar_limpar_cpf` e `formatar_cpf`: padronizam entrada e exibi√ß√£o de CPFs.

---

## ‚öôÔ∏è Funcionalidades
- **Dep√≥sito / Saque** (inclui `Saque Plus`).  
- **Transa√ß√£o Plus** (expans√£o do limite de opera√ß√µes).  
- **Extrato**: exibir ou imprimir, com saldo e contadores.  
- **Cadastro de usu√°rios e contas** (multiusu√°rio, multicontas).  
- **Persist√™ncia autom√°tica** em JSON com rollback.  

---

## üìÇ Estrutura de arquivos
- `bank_app_v3_0.py` ‚Üí c√≥digo principal (POO).  
- `contas_bancarias.json` ‚Üí usu√°rios e contas.  
- `transacoes_bancarias.json` ‚Üí transa√ß√µes de cada conta.  
- `.bkp` ‚Üí backups autom√°ticos.  

---

## ‚ñ∂Ô∏è Execu√ß√£o
```bash
python bank_app_v3_0.py
```

### Menu inicial:
```bash
[nu] Novo usu√°rio
[nc] Nova conta
[lc] Listar contas
[ac] Acessar conta
[q]  Sair
```

### Menu da conta:
``` bash
[d] Depositar
[s] Sacar
[e] Exibir extrato
[i] Imprimir extrato
[v] Voltar
```
Bank Application v3_0 entrega um sistema robusto, modular e orientado a objetos, preparando a base para futuras integra√ß√µes (ex.: banco de dados, APIs, interface gr√°fica).

</details>

<details>
  <summary><b>Bank Application v4_0</b></summary>

em breve

</details>
