# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs

__all__ = [
    'GetSwsWafRuleSetDescriptorResult',
    'AwaitableGetSwsWafRuleSetDescriptorResult',
    'get_sws_waf_rule_set_descriptor',
    'get_sws_waf_rule_set_descriptor_output',
]

@pulumi.output_type
class GetSwsWafRuleSetDescriptorResult:
    """
    A collection of values returned by getSwsWafRuleSetDescriptor.
    """
    def __init__(__self__, id=None, name=None, rule_set_descriptor_id=None, rules=None, version=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if rule_set_descriptor_id and not isinstance(rule_set_descriptor_id, str):
            raise TypeError("Expected argument 'rule_set_descriptor_id' to be a str")
        pulumi.set(__self__, "rule_set_descriptor_id", rule_set_descriptor_id)
        if rules and not isinstance(rules, list):
            raise TypeError("Expected argument 'rules' to be a list")
        pulumi.set(__self__, "rules", rules)
        if version and not isinstance(version, str):
            raise TypeError("Expected argument 'version' to be a str")
        pulumi.set(__self__, "version", version)

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="ruleSetDescriptorId")
    def rule_set_descriptor_id(self) -> Optional[_builtins.str]:
        return pulumi.get(self, "rule_set_descriptor_id")

    @_builtins.property
    @pulumi.getter
    def rules(self) -> Sequence['outputs.GetSwsWafRuleSetDescriptorRuleResult']:
        return pulumi.get(self, "rules")

    @_builtins.property
    @pulumi.getter
    def version(self) -> _builtins.str:
        return pulumi.get(self, "version")


class AwaitableGetSwsWafRuleSetDescriptorResult(GetSwsWafRuleSetDescriptorResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetSwsWafRuleSetDescriptorResult(
            id=self.id,
            name=self.name,
            rule_set_descriptor_id=self.rule_set_descriptor_id,
            rules=self.rules,
            version=self.version)


def get_sws_waf_rule_set_descriptor(name: Optional[_builtins.str] = None,
                                    rule_set_descriptor_id: Optional[_builtins.str] = None,
                                    version: Optional[_builtins.str] = None,
                                    opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetSwsWafRuleSetDescriptorResult:
    """
    Get information about WAF rule sets. For more information, see [the official documentation](https://yandex.cloud/docs/smartwebsecurity/concepts/waf#rules-set).

    This data source is used to get list of rules that can be used by `SwsWafProfile`.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_yandex as yandex

    #
    # Get information about existing SWS WAF Rule Descriptor
    #
    owasp4 = yandex.get_sws_waf_rule_set_descriptor(name="OWASP Core Ruleset",
        version="4.0.0")
    ```
    """
    __args__ = dict()
    __args__['name'] = name
    __args__['ruleSetDescriptorId'] = rule_set_descriptor_id
    __args__['version'] = version
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('yandex:index/getSwsWafRuleSetDescriptor:getSwsWafRuleSetDescriptor', __args__, opts=opts, typ=GetSwsWafRuleSetDescriptorResult).value

    return AwaitableGetSwsWafRuleSetDescriptorResult(
        id=pulumi.get(__ret__, 'id'),
        name=pulumi.get(__ret__, 'name'),
        rule_set_descriptor_id=pulumi.get(__ret__, 'rule_set_descriptor_id'),
        rules=pulumi.get(__ret__, 'rules'),
        version=pulumi.get(__ret__, 'version'))
def get_sws_waf_rule_set_descriptor_output(name: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                           rule_set_descriptor_id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                           version: Optional[pulumi.Input[_builtins.str]] = None,
                                           opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetSwsWafRuleSetDescriptorResult]:
    """
    Get information about WAF rule sets. For more information, see [the official documentation](https://yandex.cloud/docs/smartwebsecurity/concepts/waf#rules-set).

    This data source is used to get list of rules that can be used by `SwsWafProfile`.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_yandex as yandex

    #
    # Get information about existing SWS WAF Rule Descriptor
    #
    owasp4 = yandex.get_sws_waf_rule_set_descriptor(name="OWASP Core Ruleset",
        version="4.0.0")
    ```
    """
    __args__ = dict()
    __args__['name'] = name
    __args__['ruleSetDescriptorId'] = rule_set_descriptor_id
    __args__['version'] = version
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('yandex:index/getSwsWafRuleSetDescriptor:getSwsWafRuleSetDescriptor', __args__, opts=opts, typ=GetSwsWafRuleSetDescriptorResult)
    return __ret__.apply(lambda __response__: GetSwsWafRuleSetDescriptorResult(
        id=pulumi.get(__response__, 'id'),
        name=pulumi.get(__response__, 'name'),
        rule_set_descriptor_id=pulumi.get(__response__, 'rule_set_descriptor_id'),
        rules=pulumi.get(__response__, 'rules'),
        version=pulumi.get(__response__, 'version')))
