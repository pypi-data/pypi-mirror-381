# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs

__all__ = [
    'GetOrganizationmanagerSamlFederationResult',
    'AwaitableGetOrganizationmanagerSamlFederationResult',
    'get_organizationmanager_saml_federation',
    'get_organizationmanager_saml_federation_output',
]

@pulumi.output_type
class GetOrganizationmanagerSamlFederationResult:
    """
    A collection of values returned by getOrganizationmanagerSamlFederation.
    """
    def __init__(__self__, auto_create_account_on_login=None, case_insensitive_name_ids=None, cookie_max_age=None, created_at=None, description=None, federation_id=None, id=None, issuer=None, labels=None, name=None, organization_id=None, security_settings=None, sso_binding=None, sso_url=None):
        if auto_create_account_on_login and not isinstance(auto_create_account_on_login, bool):
            raise TypeError("Expected argument 'auto_create_account_on_login' to be a bool")
        pulumi.set(__self__, "auto_create_account_on_login", auto_create_account_on_login)
        if case_insensitive_name_ids and not isinstance(case_insensitive_name_ids, bool):
            raise TypeError("Expected argument 'case_insensitive_name_ids' to be a bool")
        pulumi.set(__self__, "case_insensitive_name_ids", case_insensitive_name_ids)
        if cookie_max_age and not isinstance(cookie_max_age, str):
            raise TypeError("Expected argument 'cookie_max_age' to be a str")
        pulumi.set(__self__, "cookie_max_age", cookie_max_age)
        if created_at and not isinstance(created_at, str):
            raise TypeError("Expected argument 'created_at' to be a str")
        pulumi.set(__self__, "created_at", created_at)
        if description and not isinstance(description, str):
            raise TypeError("Expected argument 'description' to be a str")
        pulumi.set(__self__, "description", description)
        if federation_id and not isinstance(federation_id, str):
            raise TypeError("Expected argument 'federation_id' to be a str")
        pulumi.set(__self__, "federation_id", federation_id)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if issuer and not isinstance(issuer, str):
            raise TypeError("Expected argument 'issuer' to be a str")
        pulumi.set(__self__, "issuer", issuer)
        if labels and not isinstance(labels, dict):
            raise TypeError("Expected argument 'labels' to be a dict")
        pulumi.set(__self__, "labels", labels)
        if name and not isinstance(name, str):
            raise TypeError("Expected argument 'name' to be a str")
        pulumi.set(__self__, "name", name)
        if organization_id and not isinstance(organization_id, str):
            raise TypeError("Expected argument 'organization_id' to be a str")
        pulumi.set(__self__, "organization_id", organization_id)
        if security_settings and not isinstance(security_settings, list):
            raise TypeError("Expected argument 'security_settings' to be a list")
        pulumi.set(__self__, "security_settings", security_settings)
        if sso_binding and not isinstance(sso_binding, str):
            raise TypeError("Expected argument 'sso_binding' to be a str")
        pulumi.set(__self__, "sso_binding", sso_binding)
        if sso_url and not isinstance(sso_url, str):
            raise TypeError("Expected argument 'sso_url' to be a str")
        pulumi.set(__self__, "sso_url", sso_url)

    @_builtins.property
    @pulumi.getter(name="autoCreateAccountOnLogin")
    def auto_create_account_on_login(self) -> _builtins.bool:
        """
        Add new users automatically on successful authentication. The user will get the `resource-manager.clouds.member` role automatically, but you need to grant other roles to them. If the value is `false`, users who aren't added to the cloud can't log in, even if they have authenticated on your server.
        """
        return pulumi.get(self, "auto_create_account_on_login")

    @_builtins.property
    @pulumi.getter(name="caseInsensitiveNameIds")
    def case_insensitive_name_ids(self) -> _builtins.bool:
        """
        Use case-insensitive name IDs.
        """
        return pulumi.get(self, "case_insensitive_name_ids")

    @_builtins.property
    @pulumi.getter(name="cookieMaxAge")
    def cookie_max_age(self) -> _builtins.str:
        """
        The lifetime of a Browser cookie in seconds. If the cookie is still valid, the management console authenticates the user immediately and redirects them to the home page. The default value is `8h`.
        """
        return pulumi.get(self, "cookie_max_age")

    @_builtins.property
    @pulumi.getter(name="createdAt")
    def created_at(self) -> _builtins.str:
        """
        The creation timestamp of the resource.
        """
        return pulumi.get(self, "created_at")

    @_builtins.property
    @pulumi.getter
    def description(self) -> _builtins.str:
        """
        The resource description.
        """
        return pulumi.get(self, "description")

    @_builtins.property
    @pulumi.getter(name="federationId")
    def federation_id(self) -> _builtins.str:
        """
        ID of a SAML Federation.
        """
        return pulumi.get(self, "federation_id")

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter
    def issuer(self) -> _builtins.str:
        """
        The ID of the IdP server to be used for authentication. The IdP server also responds to IAM with this ID after the user authenticates.
        """
        return pulumi.get(self, "issuer")

    @_builtins.property
    @pulumi.getter
    def labels(self) -> Optional[Mapping[str, _builtins.str]]:
        """
        A set of key/value label pairs which assigned to resource.
        """
        return pulumi.get(self, "labels")

    @_builtins.property
    @pulumi.getter
    def name(self) -> _builtins.str:
        """
        The resource name.
        """
        return pulumi.get(self, "name")

    @_builtins.property
    @pulumi.getter(name="organizationId")
    def organization_id(self) -> Optional[_builtins.str]:
        """
        Organization that the federation belongs to. If value is omitted, the default provider organization is used.
        """
        return pulumi.get(self, "organization_id")

    @_builtins.property
    @pulumi.getter(name="securitySettings")
    def security_settings(self) -> Sequence['outputs.GetOrganizationmanagerSamlFederationSecuritySettingResult']:
        return pulumi.get(self, "security_settings")

    @_builtins.property
    @pulumi.getter(name="ssoBinding")
    def sso_binding(self) -> _builtins.str:
        """
        Single sign-on endpoint binding type. Most Identity Providers support the `POST` binding type. SAML Binding is a mapping of a SAML protocol message onto standard messaging formats and/or communications protocols.
        """
        return pulumi.get(self, "sso_binding")

    @_builtins.property
    @pulumi.getter(name="ssoUrl")
    def sso_url(self) -> _builtins.str:
        """
        Single sign-on (SSO) endpoint URL. Specify the link to the IdP login page here.
        """
        return pulumi.get(self, "sso_url")


class AwaitableGetOrganizationmanagerSamlFederationResult(GetOrganizationmanagerSamlFederationResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetOrganizationmanagerSamlFederationResult(
            auto_create_account_on_login=self.auto_create_account_on_login,
            case_insensitive_name_ids=self.case_insensitive_name_ids,
            cookie_max_age=self.cookie_max_age,
            created_at=self.created_at,
            description=self.description,
            federation_id=self.federation_id,
            id=self.id,
            issuer=self.issuer,
            labels=self.labels,
            name=self.name,
            organization_id=self.organization_id,
            security_settings=self.security_settings,
            sso_binding=self.sso_binding,
            sso_url=self.sso_url)


def get_organizationmanager_saml_federation(federation_id: Optional[_builtins.str] = None,
                                            labels: Optional[Mapping[str, _builtins.str]] = None,
                                            name: Optional[_builtins.str] = None,
                                            organization_id: Optional[_builtins.str] = None,
                                            opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetOrganizationmanagerSamlFederationResult:
    """
    Get information about a Yandex SAML Federation. For more information, see [the official documentation](https://yandex.cloud/docs/organization/add-federation).

    > One of `federation_id` or `name` should be specified.


    :param _builtins.str federation_id: ID of a SAML Federation.
    :param Mapping[str, _builtins.str] labels: A set of key/value label pairs which assigned to resource.
    :param _builtins.str name: The resource name.
    :param _builtins.str organization_id: Organization that the federation belongs to. If value is omitted, the default provider organization is used.
    """
    __args__ = dict()
    __args__['federationId'] = federation_id
    __args__['labels'] = labels
    __args__['name'] = name
    __args__['organizationId'] = organization_id
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('yandex:index/getOrganizationmanagerSamlFederation:getOrganizationmanagerSamlFederation', __args__, opts=opts, typ=GetOrganizationmanagerSamlFederationResult).value

    return AwaitableGetOrganizationmanagerSamlFederationResult(
        auto_create_account_on_login=pulumi.get(__ret__, 'auto_create_account_on_login'),
        case_insensitive_name_ids=pulumi.get(__ret__, 'case_insensitive_name_ids'),
        cookie_max_age=pulumi.get(__ret__, 'cookie_max_age'),
        created_at=pulumi.get(__ret__, 'created_at'),
        description=pulumi.get(__ret__, 'description'),
        federation_id=pulumi.get(__ret__, 'federation_id'),
        id=pulumi.get(__ret__, 'id'),
        issuer=pulumi.get(__ret__, 'issuer'),
        labels=pulumi.get(__ret__, 'labels'),
        name=pulumi.get(__ret__, 'name'),
        organization_id=pulumi.get(__ret__, 'organization_id'),
        security_settings=pulumi.get(__ret__, 'security_settings'),
        sso_binding=pulumi.get(__ret__, 'sso_binding'),
        sso_url=pulumi.get(__ret__, 'sso_url'))
def get_organizationmanager_saml_federation_output(federation_id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                                   labels: Optional[pulumi.Input[Optional[Mapping[str, _builtins.str]]]] = None,
                                                   name: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                                   organization_id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                                   opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetOrganizationmanagerSamlFederationResult]:
    """
    Get information about a Yandex SAML Federation. For more information, see [the official documentation](https://yandex.cloud/docs/organization/add-federation).

    > One of `federation_id` or `name` should be specified.


    :param _builtins.str federation_id: ID of a SAML Federation.
    :param Mapping[str, _builtins.str] labels: A set of key/value label pairs which assigned to resource.
    :param _builtins.str name: The resource name.
    :param _builtins.str organization_id: Organization that the federation belongs to. If value is omitted, the default provider organization is used.
    """
    __args__ = dict()
    __args__['federationId'] = federation_id
    __args__['labels'] = labels
    __args__['name'] = name
    __args__['organizationId'] = organization_id
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('yandex:index/getOrganizationmanagerSamlFederation:getOrganizationmanagerSamlFederation', __args__, opts=opts, typ=GetOrganizationmanagerSamlFederationResult)
    return __ret__.apply(lambda __response__: GetOrganizationmanagerSamlFederationResult(
        auto_create_account_on_login=pulumi.get(__response__, 'auto_create_account_on_login'),
        case_insensitive_name_ids=pulumi.get(__response__, 'case_insensitive_name_ids'),
        cookie_max_age=pulumi.get(__response__, 'cookie_max_age'),
        created_at=pulumi.get(__response__, 'created_at'),
        description=pulumi.get(__response__, 'description'),
        federation_id=pulumi.get(__response__, 'federation_id'),
        id=pulumi.get(__response__, 'id'),
        issuer=pulumi.get(__response__, 'issuer'),
        labels=pulumi.get(__response__, 'labels'),
        name=pulumi.get(__response__, 'name'),
        organization_id=pulumi.get(__response__, 'organization_id'),
        security_settings=pulumi.get(__response__, 'security_settings'),
        sso_binding=pulumi.get(__response__, 'sso_binding'),
        sso_url=pulumi.get(__response__, 'sso_url')))
