# coding=utf-8
# *** WARNING: this file was generated by pulumi-language-python. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import builtins as _builtins
import warnings
import sys
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
if sys.version_info >= (3, 11):
    from typing import NotRequired, TypedDict, TypeAlias
else:
    from typing_extensions import NotRequired, TypedDict, TypeAlias
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = [
    'GetOrganizationmanagerOsLoginSettingsResult',
    'AwaitableGetOrganizationmanagerOsLoginSettingsResult',
    'get_organizationmanager_os_login_settings',
    'get_organizationmanager_os_login_settings_output',
]

@pulumi.output_type
class GetOrganizationmanagerOsLoginSettingsResult:
    """
    A collection of values returned by getOrganizationmanagerOsLoginSettings.
    """
    def __init__(__self__, id=None, organization_id=None, ssh_certificate_settings=None, user_ssh_key_settings=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if organization_id and not isinstance(organization_id, str):
            raise TypeError("Expected argument 'organization_id' to be a str")
        pulumi.set(__self__, "organization_id", organization_id)
        if ssh_certificate_settings and not isinstance(ssh_certificate_settings, dict):
            raise TypeError("Expected argument 'ssh_certificate_settings' to be a dict")
        pulumi.set(__self__, "ssh_certificate_settings", ssh_certificate_settings)
        if user_ssh_key_settings and not isinstance(user_ssh_key_settings, dict):
            raise TypeError("Expected argument 'user_ssh_key_settings' to be a dict")
        pulumi.set(__self__, "user_ssh_key_settings", user_ssh_key_settings)

    @_builtins.property
    @pulumi.getter
    def id(self) -> _builtins.str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @_builtins.property
    @pulumi.getter(name="organizationId")
    def organization_id(self) -> _builtins.str:
        """
        ID of the organization.
        """
        return pulumi.get(self, "organization_id")

    @_builtins.property
    @pulumi.getter(name="sshCertificateSettings")
    def ssh_certificate_settings(self) -> Optional['outputs.GetOrganizationmanagerOsLoginSettingsSshCertificateSettingsResult']:
        return pulumi.get(self, "ssh_certificate_settings")

    @_builtins.property
    @pulumi.getter(name="userSshKeySettings")
    def user_ssh_key_settings(self) -> Optional['outputs.GetOrganizationmanagerOsLoginSettingsUserSshKeySettingsResult']:
        return pulumi.get(self, "user_ssh_key_settings")


class AwaitableGetOrganizationmanagerOsLoginSettingsResult(GetOrganizationmanagerOsLoginSettingsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetOrganizationmanagerOsLoginSettingsResult(
            id=self.id,
            organization_id=self.organization_id,
            ssh_certificate_settings=self.ssh_certificate_settings,
            user_ssh_key_settings=self.user_ssh_key_settings)


def get_organizationmanager_os_login_settings(organization_id: Optional[_builtins.str] = None,
                                              ssh_certificate_settings: Optional[Union['GetOrganizationmanagerOsLoginSettingsSshCertificateSettingsArgs', 'GetOrganizationmanagerOsLoginSettingsSshCertificateSettingsArgsDict']] = None,
                                              user_ssh_key_settings: Optional[Union['GetOrganizationmanagerOsLoginSettingsUserSshKeySettingsArgs', 'GetOrganizationmanagerOsLoginSettingsUserSshKeySettingsArgsDict']] = None,
                                              opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetOrganizationmanagerOsLoginSettingsResult:
    """
    Get information about a Yandex Cloud OS Login Settings.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_yandex as yandex

    #
    # Get information about existing OrganizationManager OS Login Settings.
    #
    my_os_login_settings_settings = yandex.get_organizationmanager_os_login_settings(organization_id="some_organization_id")
    pulumi.export("myOrganizationSshCertificatesEnabled", "data.yandex_organizationmanager_os_login_settings.my_os_login_settings.ssh_certificate_settings.0.enabled")
    ```


    :param _builtins.str organization_id: ID of the organization.
    """
    __args__ = dict()
    __args__['organizationId'] = organization_id
    __args__['sshCertificateSettings'] = ssh_certificate_settings
    __args__['userSshKeySettings'] = user_ssh_key_settings
    opts = pulumi.InvokeOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke('yandex:index/getOrganizationmanagerOsLoginSettings:getOrganizationmanagerOsLoginSettings', __args__, opts=opts, typ=GetOrganizationmanagerOsLoginSettingsResult).value

    return AwaitableGetOrganizationmanagerOsLoginSettingsResult(
        id=pulumi.get(__ret__, 'id'),
        organization_id=pulumi.get(__ret__, 'organization_id'),
        ssh_certificate_settings=pulumi.get(__ret__, 'ssh_certificate_settings'),
        user_ssh_key_settings=pulumi.get(__ret__, 'user_ssh_key_settings'))
def get_organizationmanager_os_login_settings_output(organization_id: Optional[pulumi.Input[Optional[_builtins.str]]] = None,
                                                     ssh_certificate_settings: Optional[pulumi.Input[Optional[Union['GetOrganizationmanagerOsLoginSettingsSshCertificateSettingsArgs', 'GetOrganizationmanagerOsLoginSettingsSshCertificateSettingsArgsDict']]]] = None,
                                                     user_ssh_key_settings: Optional[pulumi.Input[Optional[Union['GetOrganizationmanagerOsLoginSettingsUserSshKeySettingsArgs', 'GetOrganizationmanagerOsLoginSettingsUserSshKeySettingsArgsDict']]]] = None,
                                                     opts: Optional[Union[pulumi.InvokeOptions, pulumi.InvokeOutputOptions]] = None) -> pulumi.Output[GetOrganizationmanagerOsLoginSettingsResult]:
    """
    Get information about a Yandex Cloud OS Login Settings.

    ## Example Usage

    ```python
    import pulumi
    import pulumi_yandex as yandex

    #
    # Get information about existing OrganizationManager OS Login Settings.
    #
    my_os_login_settings_settings = yandex.get_organizationmanager_os_login_settings(organization_id="some_organization_id")
    pulumi.export("myOrganizationSshCertificatesEnabled", "data.yandex_organizationmanager_os_login_settings.my_os_login_settings.ssh_certificate_settings.0.enabled")
    ```


    :param _builtins.str organization_id: ID of the organization.
    """
    __args__ = dict()
    __args__['organizationId'] = organization_id
    __args__['sshCertificateSettings'] = ssh_certificate_settings
    __args__['userSshKeySettings'] = user_ssh_key_settings
    opts = pulumi.InvokeOutputOptions.merge(_utilities.get_invoke_opts_defaults(), opts)
    __ret__ = pulumi.runtime.invoke_output('yandex:index/getOrganizationmanagerOsLoginSettings:getOrganizationmanagerOsLoginSettings', __args__, opts=opts, typ=GetOrganizationmanagerOsLoginSettingsResult)
    return __ret__.apply(lambda __response__: GetOrganizationmanagerOsLoginSettingsResult(
        id=pulumi.get(__response__, 'id'),
        organization_id=pulumi.get(__response__, 'organization_id'),
        ssh_certificate_settings=pulumi.get(__response__, 'ssh_certificate_settings'),
        user_ssh_key_settings=pulumi.get(__response__, 'user_ssh_key_settings')))
