name: CI

on:
  push:
    branches: [ master ]
  workflow_dispatch:
    inputs:
      release:
        description: 'Set to true for official release, false for dev build'
        required: true
        default: 'false'

defaults:
  run:
    shell: bash

jobs:
  lint:
    runs-on: ubuntu-latest
    container:
      image: python:3.11
    steps:
      - uses: actions/checkout@v4

      - name: Install ruff
        run: pip install ruff

      - name: Run linter
        run: ruff check .

  test:
    runs-on: ubuntu-latest
    container:
      image: python:3.11
    needs: lint
    steps:
      - uses: actions/checkout@v4

      - name: Install package
        run: |
          pip install .

      - name: Run tests
        run: python -m pytest tests/unit --junitxml=report.xml

      - name: Upload test results
        uses: actions/upload-artifact@v4
        with:
          name: junit-report
          path: report.xml
          retention-days: 14

  deploy:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4

      - name: Install build tools
        run: |
          python -m pip install --upgrade pip
          pip install build twine

      - name: Set version
        id: set_version
        run: |
          BASE_VERSION=$(cat VERSION.txt)
          
          if [ "${{ github.event_name }}" == "workflow_dispatch" ] && [ "${{ github.event.inputs.release }}" == "true" ]; then
              FULL_VERSION=$BASE_VERSION
          else
              LOCAL_VERSION_LABEL=$(date "+%Y%m%d%H%M%S")
              FULL_VERSION="${BASE_VERSION}.dev${LOCAL_VERSION_LABEL}"
          fi
          
          # Write to VERSION.txt so build uses it          
          echo "$FULL_VERSION" > VERSION.txt

      - name: Build package
        run: python -m build

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          password: ${{ secrets.PYPI_API_TOKEN }}
