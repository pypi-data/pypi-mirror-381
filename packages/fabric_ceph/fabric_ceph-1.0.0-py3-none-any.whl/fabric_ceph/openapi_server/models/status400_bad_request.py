from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from fabric_ceph.openapi_server.models.base_model import Model
from fabric_ceph.openapi_server.models.status400_bad_request_errors import Status400BadRequestErrors
from fabric_ceph.openapi_server import util

from fabric_ceph.openapi_server.models.status400_bad_request_errors import Status400BadRequestErrors  # noqa: E501

class Status400BadRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, errors=None):  # noqa: E501
        """Status400BadRequest - a model defined in OpenAPI

        :param errors: The errors of this Status400BadRequest.  # noqa: E501
        :type errors: List[Status400BadRequestErrors]
        """
        self.openapi_types = {
            'errors': List[Status400BadRequestErrors]
        }

        self.attribute_map = {
            'errors': 'errors'
        }

        self._errors = errors

    @classmethod
    def from_dict(cls, dikt) -> 'Status400BadRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The status_400_bad_request of this Status400BadRequest.  # noqa: E501
        :rtype: Status400BadRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def errors(self) -> List[Status400BadRequestErrors]:
        """Gets the errors of this Status400BadRequest.


        :return: The errors of this Status400BadRequest.
        :rtype: List[Status400BadRequestErrors]
        """
        return self._errors

    @errors.setter
    def errors(self, errors: List[Status400BadRequestErrors]):
        """Sets the errors of this Status400BadRequest.


        :param errors: The errors of this Status400BadRequest.
        :type errors: List[Status400BadRequestErrors]
        """

        self._errors = errors
