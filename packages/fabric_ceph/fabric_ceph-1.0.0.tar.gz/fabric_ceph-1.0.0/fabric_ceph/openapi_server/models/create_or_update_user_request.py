from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from fabric_ceph.openapi_server.models.base_model import Model
from fabric_ceph.openapi_server.models.capability import Capability
from fabric_ceph.openapi_server import util

from fabric_ceph.openapi_server.models.capability import Capability  # noqa: E501

class CreateOrUpdateUserRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, user_entity=None, capabilities=None):  # noqa: E501
        """CreateOrUpdateUserRequest - a model defined in OpenAPI

        :param user_entity: The user_entity of this CreateOrUpdateUserRequest.  # noqa: E501
        :type user_entity: str
        :param capabilities: The capabilities of this CreateOrUpdateUserRequest.  # noqa: E501
        :type capabilities: List[Capability]
        """
        self.openapi_types = {
            'user_entity': str,
            'capabilities': List[Capability]
        }

        self.attribute_map = {
            'user_entity': 'user_entity',
            'capabilities': 'capabilities'
        }

        self._user_entity = user_entity
        self._capabilities = capabilities

    @classmethod
    def from_dict(cls, dikt) -> 'CreateOrUpdateUserRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The CreateOrUpdateUserRequest of this CreateOrUpdateUserRequest.  # noqa: E501
        :rtype: CreateOrUpdateUserRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def user_entity(self) -> str:
        """Gets the user_entity of this CreateOrUpdateUserRequest.

        CephX entity name (e.g., `client.demo`)  # noqa: E501

        :return: The user_entity of this CreateOrUpdateUserRequest.
        :rtype: str
        """
        return self._user_entity

    @user_entity.setter
    def user_entity(self, user_entity: str):
        """Sets the user_entity of this CreateOrUpdateUserRequest.

        CephX entity name (e.g., `client.demo`)  # noqa: E501

        :param user_entity: The user_entity of this CreateOrUpdateUserRequest.
        :type user_entity: str
        """
        if user_entity is None:
            raise ValueError("Invalid value for `user_entity`, must not be `None`")  # noqa: E501

        self._user_entity = user_entity

    @property
    def capabilities(self) -> List[Capability]:
        """Gets the capabilities of this CreateOrUpdateUserRequest.


        :return: The capabilities of this CreateOrUpdateUserRequest.
        :rtype: List[Capability]
        """
        return self._capabilities

    @capabilities.setter
    def capabilities(self, capabilities: List[Capability]):
        """Sets the capabilities of this CreateOrUpdateUserRequest.


        :param capabilities: The capabilities of this CreateOrUpdateUserRequest.
        :type capabilities: List[Capability]
        """
        if capabilities is None:
            raise ValueError("Invalid value for `capabilities`, must not be `None`")  # noqa: E501

        self._capabilities = capabilities
