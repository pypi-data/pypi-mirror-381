from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from fabric_ceph.openapi_server.models.base_model import Model
from fabric_ceph.openapi_server import util


class SubvolumeGroupCreateRequest(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, vol_name=None, group_name=None):  # noqa: E501
        """SubvolumeGroupCreateRequest - a model defined in OpenAPI

        :param vol_name: The vol_name of this SubvolumeGroupCreateRequest.  # noqa: E501
        :type vol_name: str
        :param group_name: The group_name of this SubvolumeGroupCreateRequest.  # noqa: E501
        :type group_name: str
        """
        self.openapi_types = {
            'vol_name': str,
            'group_name': str
        }

        self.attribute_map = {
            'vol_name': 'vol_name',
            'group_name': 'group_name'
        }

        self._vol_name = vol_name
        self._group_name = group_name

    @classmethod
    def from_dict(cls, dikt) -> 'SubvolumeGroupCreateRequest':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The SubvolumeGroupCreateRequest of this SubvolumeGroupCreateRequest.  # noqa: E501
        :rtype: SubvolumeGroupCreateRequest
        """
        return util.deserialize_model(dikt, cls)

    @property
    def vol_name(self) -> str:
        """Gets the vol_name of this SubvolumeGroupCreateRequest.

        CephFS volume name (filesystem), e.g. `CEPH-FS-01`  # noqa: E501

        :return: The vol_name of this SubvolumeGroupCreateRequest.
        :rtype: str
        """
        return self._vol_name

    @vol_name.setter
    def vol_name(self, vol_name: str):
        """Sets the vol_name of this SubvolumeGroupCreateRequest.

        CephFS volume name (filesystem), e.g. `CEPH-FS-01`  # noqa: E501

        :param vol_name: The vol_name of this SubvolumeGroupCreateRequest.
        :type vol_name: str
        """
        if vol_name is None:
            raise ValueError("Invalid value for `vol_name`, must not be `None`")  # noqa: E501

        self._vol_name = vol_name

    @property
    def group_name(self) -> str:
        """Gets the group_name of this SubvolumeGroupCreateRequest.

        Subvolume group name  # noqa: E501

        :return: The group_name of this SubvolumeGroupCreateRequest.
        :rtype: str
        """
        return self._group_name

    @group_name.setter
    def group_name(self, group_name: str):
        """Sets the group_name of this SubvolumeGroupCreateRequest.

        Subvolume group name  # noqa: E501

        :param group_name: The group_name of this SubvolumeGroupCreateRequest.
        :type group_name: str
        """
        if group_name is None:
            raise ValueError("Invalid value for `group_name`, must not be `None`")  # noqa: E501

        self._group_name = group_name
